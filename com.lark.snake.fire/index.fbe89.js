window.__require = function t(e, i, n) {
    function a(o, s) {
        if (!i[o]) {
            if (!e[o]) {
                var c = o.split("/");
                c = c[c.length - 1];
                if (!e[c]) {
                    var l = "function" == typeof __require && __require;
                    if (!s && l) return l(c, !0);
                    if (r) return r(c, !0);
                    throw new Error("Cannot find module '" + o + "'");
                }
                o = c;
            }
            var h = i[o] = {
                exports: {}
            };
            e[o][0].call(h.exports, function (t) {
                return a(e[o][1][t] || t);
            }, h, h.exports, t, e, i, n);
        }
        return i[o].exports;
    }
    for (var r = "function" == typeof __require && __require, o = 0; o < n.length; o++) a(n[o]);
    return a;
}({
    1: [function (t, e, i) {
        "use strict";
        const n = i;
        n.bignum = t("bn.js");
        n.define = t("./asn1/api").define;
        n.base = t("./asn1/base");
        n.constants = t("./asn1/constants");
        n.decoders = t("./asn1/decoders");
        n.encoders = t("./asn1/encoders");
    }, {
        "./asn1/api": 2,
        "./asn1/base": 4,
        "./asn1/constants": 8,
        "./asn1/decoders": 10,
        "./asn1/encoders": 13,
        "bn.js": 15
    }],
    2: [function (t, e, i) {
        "use strict";
        const n = t("./encoders"), a = t("./decoders"), r = t("inherits");
        i.define = function (t, e) {
            return new o(t, e);
        };
        function o(t, e) {
            this.name = t;
            this.body = e;
            this.decoders = {};
            this.encoders = {};
        }
        o.prototype._createNamed = function (t) {
            const e = this.name;
            function i(t) {
                this._initNamed(t, e);
            }
            r(i, t);
            i.prototype._initNamed = function (e, i) {
                t.call(this, e, i);
            };
            return new i(this);
        };
        o.prototype._getDecoder = function (t) {
            t = t || "der";
            this.decoders.hasOwnProperty(t) || (this.decoders[t] = this._createNamed(a[t]));
            return this.decoders[t];
        };
        o.prototype.decode = function (t, e, i) {
            return this._getDecoder(e).decode(t, i);
        };
        o.prototype._getEncoder = function (t) {
            t = t || "der";
            this.encoders.hasOwnProperty(t) || (this.encoders[t] = this._createNamed(n[t]));
            return this.encoders[t];
        };
        o.prototype.encode = function (t, e, i) {
            return this._getEncoder(e).encode(t, i);
        };
    }, {
        "./decoders": 10,
        "./encoders": 13,
        inherits: 138
    }],
    3: [function (t, e, i) {
        "use strict";
        const n = t("inherits"), a = t("../base/reporter").Reporter, r = t("safer-buffer").Buffer;
        function o(t, e) {
            a.call(this, e);
            if (r.isBuffer(t)) {
                this.base = t;
                this.offset = 0;
                this.length = t.length;
            } else this.error("Input not Buffer");
        }
        n(o, a);
        i.DecoderBuffer = o;
        o.isDecoderBuffer = function (t) {
            return t instanceof o || "object" == typeof t && r.isBuffer(t.base) && "DecoderBuffer" === t.constructor.name && "number" == typeof t.offset && "number" == typeof t.length && "function" == typeof t.save && "function" == typeof t.restore && "function" == typeof t.isEmpty && "function" == typeof t.readUInt8 && "function" == typeof t.skip && "function" == typeof t.raw;
        };
        o.prototype.save = function () {
            return {
                offset: this.offset,
                reporter: a.prototype.save.call(this)
            };
        };
        o.prototype.restore = function (t) {
            const e = new o(this.base);
            e.offset = t.offset;
            e.length = this.offset;
            this.offset = t.offset;
            a.prototype.restore.call(this, t.reporter);
            return e;
        };
        o.prototype.isEmpty = function () {
            return this.offset === this.length;
        };
        o.prototype.readUInt8 = function (t) {
            return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, !0) : this.error(t || "DecoderBuffer overrun");
        };
        o.prototype.skip = function (t, e) {
            if (!(this.offset + t <= this.length)) return this.error(e || "DecoderBuffer overrun");
            const i = new o(this.base);
            i._reporterState = this._reporterState;
            i.offset = this.offset;
            i.length = this.offset + t;
            this.offset += t;
            return i;
        };
        o.prototype.raw = function (t) {
            return this.base.slice(t ? t.offset : this.offset, this.length);
        };
        function s(t, e) {
            if (Array.isArray(t)) {
                this.length = 0;
                this.value = t.map(function (t) {
                    s.isEncoderBuffer(t) || (t = new s(t, e));
                    this.length += t.length;
                    return t;
                }, this);
            } else if ("number" == typeof t) {
                if (!(0 <= t && t <= 255)) return e.error("non-byte EncoderBuffer value");
                this.value = t;
                this.length = 1;
            } else if ("string" == typeof t) {
                this.value = t;
                this.length = r.byteLength(t);
            } else {
                if (!r.isBuffer(t)) return e.error("Unsupported type: " + typeof t);
                this.value = t;
                this.length = t.length;
            }
        }
        i.EncoderBuffer = s;
        s.isEncoderBuffer = function (t) {
            return t instanceof s || "object" == typeof t && "EncoderBuffer" === t.constructor.name && "number" == typeof t.length && "function" == typeof t.join;
        };
        s.prototype.join = function (t, e) {
            t || (t = r.alloc(this.length));
            e || (e = 0);
            if (0 === this.length) return t;
            if (Array.isArray(this.value)) this.value.forEach(function (i) {
                i.join(t, e);
                e += i.length;
            }); else {
                "number" == typeof this.value ? t[e] = this.value : "string" == typeof this.value ? t.write(this.value, e) : r.isBuffer(this.value) && this.value.copy(t, e);
                e += this.length;
            }
            return t;
        };
    }, {
        "../base/reporter": 6,
        inherits: 138,
        "safer-buffer": 177
    }],
    4: [function (t, e, i) {
        "use strict";
        const n = i;
        n.Reporter = t("./reporter").Reporter;
        n.DecoderBuffer = t("./buffer").DecoderBuffer;
        n.EncoderBuffer = t("./buffer").EncoderBuffer;
        n.Node = t("./node");
    }, {
        "./buffer": 3,
        "./node": 5,
        "./reporter": 6
    }],
    5: [function (t, e) {
        "use strict";
        const i = t("../base/reporter").Reporter, n = t("../base/buffer").EncoderBuffer, a = t("../base/buffer").DecoderBuffer, r = t("minimalistic-assert"), o = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"], s = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(o);
        function c(t, e, i) {
            const n = {};
            this._baseState = n;
            n.name = i;
            n.enc = t;
            n.parent = e || null;
            n.children = null;
            n.tag = null;
            n.args = null;
            n.reverseArgs = null;
            n.choice = null;
            n.optional = !1;
            n.any = !1;
            n.obj = !1;
            n.use = null;
            n.useDecoder = null;
            n.key = null;
            n.default = null;
            n.explicit = null;
            n.implicit = null;
            n.contains = null;
            if (!n.parent) {
                n.children = [];
                this._wrap();
            }
        }
        e.exports = c;
        const l = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
        c.prototype.clone = function () {
            const t = this._baseState, e = {};
            l.forEach(function (i) {
                e[i] = t[i];
            });
            const i = new this.constructor(e.parent);
            i._baseState = e;
            return i;
        };
        c.prototype._wrap = function () {
            const t = this._baseState;
            s.forEach(function (e) {
                this[e] = function () {
                    const i = new this.constructor(this);
                    t.children.push(i);
                    return i[e].apply(i, arguments);
                };
            }, this);
        };
        c.prototype._init = function (t) {
            const e = this._baseState;
            r(null === e.parent);
            t.call(this);
            e.children = e.children.filter(function (t) {
                return t._baseState.parent === this;
            }, this);
            r.equal(e.children.length, 1, "Root node can have only one child");
        };
        c.prototype._useArgs = function (t) {
            const e = this._baseState, i = t.filter(function (t) {
                return t instanceof this.constructor;
            }, this);
            t = t.filter(function (t) {
                return !(t instanceof this.constructor);
            }, this);
            if (0 !== i.length) {
                r(null === e.children);
                e.children = i;
                i.forEach(function (t) {
                    t._baseState.parent = this;
                }, this);
            }
            if (0 !== t.length) {
                r(null === e.args);
                e.args = t;
                e.reverseArgs = t.map(function (t) {
                    if ("object" != typeof t || t.constructor !== Object) return t;
                    const e = {};
                    Object.keys(t).forEach(function (i) {
                        i == (0 | i) && (i |= 0);
                        const n = t[i];
                        e[n] = i;
                    });
                    return e;
                });
            }
        };
        ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"].forEach(function (t) {
            c.prototype[t] = function () {
                const e = this._baseState;
                throw new Error(t + " not implemented for encoding: " + e.enc);
            };
        });
        o.forEach(function (t) {
            c.prototype[t] = function () {
                const e = this._baseState, i = Array.prototype.slice.call(arguments);
                r(null === e.tag);
                e.tag = t;
                this._useArgs(i);
                return this;
            };
        });
        c.prototype.use = function (t) {
            r(t);
            const e = this._baseState;
            r(null === e.use);
            e.use = t;
            return this;
        };
        c.prototype.optional = function () {
            this._baseState.optional = !0;
            return this;
        };
        c.prototype.def = function (t) {
            const e = this._baseState;
            r(null === e.default);
            e.default = t;
            e.optional = !0;
            return this;
        };
        c.prototype.explicit = function (t) {
            const e = this._baseState;
            r(null === e.explicit && null === e.implicit);
            e.explicit = t;
            return this;
        };
        c.prototype.implicit = function (t) {
            const e = this._baseState;
            r(null === e.explicit && null === e.implicit);
            e.implicit = t;
            return this;
        };
        c.prototype.obj = function () {
            const t = this._baseState, e = Array.prototype.slice.call(arguments);
            t.obj = !0;
            0 !== e.length && this._useArgs(e);
            return this;
        };
        c.prototype.key = function (t) {
            const e = this._baseState;
            r(null === e.key);
            e.key = t;
            return this;
        };
        c.prototype.any = function () {
            this._baseState.any = !0;
            return this;
        };
        c.prototype.choice = function (t) {
            const e = this._baseState;
            r(null === e.choice);
            e.choice = t;
            this._useArgs(Object.keys(t).map(function (e) {
                return t[e];
            }));
            return this;
        };
        c.prototype.contains = function (t) {
            const e = this._baseState;
            r(null === e.use);
            e.contains = t;
            return this;
        };
        c.prototype._decode = function (t, e) {
            const i = this._baseState;
            if (null === i.parent) return t.wrapResult(i.children[0]._decode(t, e));
            let n, r = i.default, o = !0, s = null;
            null !== i.key && (s = t.enterKey(i.key));
            if (i.optional) {
                let n = null;
                null !== i.explicit ? n = i.explicit : null !== i.implicit ? n = i.implicit : null !== i.tag && (n = i.tag);
                if (null !== n || i.any) {
                    o = this._peekTag(t, n, i.any);
                    if (t.isError(o)) return o;
                } else {
                    const n = t.save();
                    try {
                        null === i.choice ? this._decodeGeneric(i.tag, t, e) : this._decodeChoice(t, e);
                        o = !0;
                    } catch (t) {
                        o = !1;
                    }
                    t.restore(n);
                }
            }
            i.obj && o && (n = t.enterObject());
            if (o) {
                if (null !== i.explicit) {
                    const e = this._decodeTag(t, i.explicit);
                    if (t.isError(e)) return e;
                    t = e;
                }
                const n = t.offset;
                if (null === i.use && null === i.choice) {
                    let e;
                    i.any && (e = t.save());
                    const n = this._decodeTag(t, null !== i.implicit ? i.implicit : i.tag, i.any);
                    if (t.isError(n)) return n;
                    i.any ? r = t.raw(e) : t = n;
                }
                e && e.track && null !== i.tag && e.track(t.path(), n, t.length, "tagged");
                e && e.track && null !== i.tag && e.track(t.path(), t.offset, t.length, "content");
                i.any || (r = null === i.choice ? this._decodeGeneric(i.tag, t, e) : this._decodeChoice(t, e));
                if (t.isError(r)) return r;
                i.any || null !== i.choice || null === i.children || i.children.forEach(function (i) {
                    i._decode(t, e);
                });
                if (i.contains && ("octstr" === i.tag || "bitstr" === i.tag)) {
                    const n = new a(r);
                    r = this._getUse(i.contains, t._reporterState.obj)._decode(n, e);
                }
            }
            i.obj && o && (r = t.leaveObject(n));
            null === i.key || null === r && !0 !== o ? null !== s && t.exitKey(s) : t.leaveKey(s, i.key, r);
            return r;
        };
        c.prototype._decodeGeneric = function (t, e, i) {
            const n = this._baseState;
            return "seq" === t || "set" === t ? null : "seqof" === t || "setof" === t ? this._decodeList(e, t, n.args[0], i) : /str$/.test(t) ? this._decodeStr(e, t, i) : "objid" === t && n.args ? this._decodeObjid(e, n.args[0], n.args[1], i) : "objid" === t ? this._decodeObjid(e, null, null, i) : "gentime" === t || "utctime" === t ? this._decodeTime(e, t, i) : "null_" === t ? this._decodeNull(e, i) : "bool" === t ? this._decodeBool(e, i) : "objDesc" === t ? this._decodeStr(e, t, i) : "int" === t || "enum" === t ? this._decodeInt(e, n.args && n.args[0], i) : null !== n.use ? this._getUse(n.use, e._reporterState.obj)._decode(e, i) : e.error("unknown tag: " + t);
        };
        c.prototype._getUse = function (t, e) {
            const i = this._baseState;
            i.useDecoder = this._use(t, e);
            r(null === i.useDecoder._baseState.parent);
            i.useDecoder = i.useDecoder._baseState.children[0];
            if (i.implicit !== i.useDecoder._baseState.implicit) {
                i.useDecoder = i.useDecoder.clone();
                i.useDecoder._baseState.implicit = i.implicit;
            }
            return i.useDecoder;
        };
        c.prototype._decodeChoice = function (t, e) {
            const i = this._baseState;
            let n = null, a = !1;
            Object.keys(i.choice).some(function (r) {
                const o = t.save(), s = i.choice[r];
                try {
                    const i = s._decode(t, e);
                    if (t.isError(i)) return !1;
                    n = {
                        type: r,
                        value: i
                    };
                    a = !0;
                } catch (e) {
                    t.restore(o);
                    return !1;
                }
                return !0;
            }, this);
            return a ? n : t.error("Choice not matched");
        };
        c.prototype._createEncoderBuffer = function (t) {
            return new n(t, this.reporter);
        };
        c.prototype._encode = function (t, e, i) {
            const n = this._baseState;
            if (null !== n.default && n.default === t) return;
            const a = this._encodeValue(t, e, i);
            return void 0 === a || this._skipDefault(a, e, i) ? void 0 : a;
        };
        c.prototype._encodeValue = function (t, e, n) {
            const a = this._baseState;
            if (null === a.parent) return a.children[0]._encode(t, e || new i());
            let r = null;
            this.reporter = e;
            if (a.optional && void 0 === t) {
                if (null === a.default) return;
                t = a.default;
            }
            let o = null, s = !1;
            if (a.any) r = this._createEncoderBuffer(t); else if (a.choice) r = this._encodeChoice(t, e); else if (a.contains) {
                o = this._getUse(a.contains, n)._encode(t, e);
                s = !0;
            } else if (a.children) {
                o = a.children.map(function (i) {
                    if ("null_" === i._baseState.tag) return i._encode(null, e, t);
                    if (null === i._baseState.key) return e.error("Child should have a key");
                    const n = e.enterKey(i._baseState.key);
                    if ("object" != typeof t) return e.error("Child expected, but input is not object");
                    const a = i._encode(t[i._baseState.key], e, t);
                    e.leaveKey(n);
                    return a;
                }, this).filter(function (t) {
                    return t;
                });
                o = this._createEncoderBuffer(o);
            } else if ("seqof" === a.tag || "setof" === a.tag) {
                if (!a.args || 1 !== a.args.length) return e.error("Too many args for : " + a.tag);
                if (!Array.isArray(t)) return e.error("seqof/setof, but data is not Array");
                const i = this.clone();
                i._baseState.implicit = null;
                o = this._createEncoderBuffer(t.map(function (i) {
                    const n = this._baseState;
                    return this._getUse(n.args[0], t)._encode(i, e);
                }, i));
            } else if (null !== a.use) r = this._getUse(a.use, n)._encode(t, e); else {
                o = this._encodePrimitive(a.tag, t);
                s = !0;
            }
            if (!a.any && null === a.choice) {
                const t = null !== a.implicit ? a.implicit : a.tag, i = null === a.implicit ? "universal" : "context";
                null === t ? null === a.use && e.error("Tag could be omitted only for .use()") : null === a.use && (r = this._encodeComposite(t, s, i, o));
            }
            null !== a.explicit && (r = this._encodeComposite(a.explicit, !1, "context", r));
            return r;
        };
        c.prototype._encodeChoice = function (t, e) {
            const i = this._baseState, n = i.choice[t.type];
            n || r(!1, t.type + " not found in " + JSON.stringify(Object.keys(i.choice)));
            return n._encode(t.value, e);
        };
        c.prototype._encodePrimitive = function (t, e) {
            const i = this._baseState;
            if (/str$/.test(t)) return this._encodeStr(e, t);
            if ("objid" === t && i.args) return this._encodeObjid(e, i.reverseArgs[0], i.args[1]);
            if ("objid" === t) return this._encodeObjid(e, null, null);
            if ("gentime" === t || "utctime" === t) return this._encodeTime(e, t);
            if ("null_" === t) return this._encodeNull();
            if ("int" === t || "enum" === t) return this._encodeInt(e, i.args && i.reverseArgs[0]);
            if ("bool" === t) return this._encodeBool(e);
            if ("objDesc" === t) return this._encodeStr(e, t);
            throw new Error("Unsupported tag: " + t);
        };
        c.prototype._isNumstr = function (t) {
            return /^[0-9 ]*$/.test(t);
        };
        c.prototype._isPrintstr = function (t) {
            return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(t);
        };
    }, {
        "../base/buffer": 3,
        "../base/reporter": 6,
        "minimalistic-assert": 143
    }],
    6: [function (t, e, i) {
        "use strict";
        const n = t("inherits");
        function a(t) {
            this._reporterState = {
                obj: null,
                path: [],
                options: t || {},
                errors: []
            };
        }
        i.Reporter = a;
        a.prototype.isError = function (t) {
            return t instanceof r;
        };
        a.prototype.save = function () {
            const t = this._reporterState;
            return {
                obj: t.obj,
                pathLen: t.path.length
            };
        };
        a.prototype.restore = function (t) {
            const e = this._reporterState;
            e.obj = t.obj;
            e.path = e.path.slice(0, t.pathLen);
        };
        a.prototype.enterKey = function (t) {
            return this._reporterState.path.push(t);
        };
        a.prototype.exitKey = function (t) {
            const e = this._reporterState;
            e.path = e.path.slice(0, t - 1);
        };
        a.prototype.leaveKey = function (t, e, i) {
            const n = this._reporterState;
            this.exitKey(t);
            null !== n.obj && (n.obj[e] = i);
        };
        a.prototype.path = function () {
            return this._reporterState.path.join("/");
        };
        a.prototype.enterObject = function () {
            const t = this._reporterState, e = t.obj;
            t.obj = {};
            return e;
        };
        a.prototype.leaveObject = function (t) {
            const e = this._reporterState, i = e.obj;
            e.obj = t;
            return i;
        };
        a.prototype.error = function (t) {
            let e;
            const i = this._reporterState, n = t instanceof r;
            e = n ? t : new r(i.path.map(function (t) {
                return "[" + JSON.stringify(t) + "]";
            }).join(""), t.message || t, t.stack);
            if (!i.options.partial) throw e;
            n || i.errors.push(e);
            return e;
        };
        a.prototype.wrapResult = function (t) {
            const e = this._reporterState;
            return e.options.partial ? {
                result: this.isError(t) ? null : t,
                errors: e.errors
            } : t;
        };
        function r(t, e) {
            this.path = t;
            this.rethrow(e);
        }
        n(r, Error);
        r.prototype.rethrow = function (t) {
            this.message = t + " at: " + (this.path || "(shallow)");
            Error.captureStackTrace && Error.captureStackTrace(this, r);
            if (!this.stack) try {
                throw new Error(this.message);
            } catch (t) {
                this.stack = t.stack;
            }
            return this;
        };
    }, {
        inherits: 138
    }],
    7: [function (t, e, i) {
        "use strict";
        function n(t) {
            const e = {};
            Object.keys(t).forEach(function (i) {
                (0 | i) == i && (i |= 0);
                const n = t[i];
                e[n] = i;
            });
            return e;
        }
        i.tagClass = {
            0: "universal",
            1: "application",
            2: "context",
            3: "private"
        };
        i.tagClassByName = n(i.tagClass);
        i.tag = {
            0: "end",
            1: "bool",
            2: "int",
            3: "bitstr",
            4: "octstr",
            5: "null_",
            6: "objid",
            7: "objDesc",
            8: "external",
            9: "real",
            10: "enum",
            11: "embed",
            12: "utf8str",
            13: "relativeOid",
            16: "seq",
            17: "set",
            18: "numstr",
            19: "printstr",
            20: "t61str",
            21: "videostr",
            22: "ia5str",
            23: "utctime",
            24: "gentime",
            25: "graphstr",
            26: "iso646str",
            27: "genstr",
            28: "unistr",
            29: "charstr",
            30: "bmpstr"
        };
        i.tagByName = n(i.tag);
    }, {}],
    8: [function (t, e, i) {
        "use strict";
        const n = i;
        n._reverse = function (t) {
            const e = {};
            Object.keys(t).forEach(function (i) {
                (0 | i) == i && (i |= 0);
                const n = t[i];
                e[n] = i;
            });
            return e;
        };
        n.der = t("./der");
    }, {
        "./der": 7
    }],
    9: [function (t, e) {
        "use strict";
        const i = t("inherits"), n = t("bn.js"), a = t("../base/buffer").DecoderBuffer, r = t("../base/node"), o = t("../constants/der");
        function s(t) {
            this.enc = "der";
            this.name = t.name;
            this.entity = t;
            this.tree = new c();
            this.tree._init(t.body);
        }
        e.exports = s;
        s.prototype.decode = function (t, e) {
            a.isDecoderBuffer(t) || (t = new a(t, e));
            return this.tree._decode(t, e);
        };
        function c(t) {
            r.call(this, "der", t);
        }
        i(c, r);
        c.prototype._peekTag = function (t, e, i) {
            if (t.isEmpty()) return !1;
            const n = t.save(), a = l(t, 'Failed to peek tag: "' + e + '"');
            if (t.isError(a)) return a;
            t.restore(n);
            return a.tag === e || a.tagStr === e || a.tagStr + "of" === e || i;
        };
        c.prototype._decodeTag = function (t, e, i) {
            const n = l(t, 'Failed to decode tag of "' + e + '"');
            if (t.isError(n)) return n;
            let a = h(t, n.primitive, 'Failed to get length of "' + e + '"');
            if (t.isError(a)) return a;
            if (!i && n.tag !== e && n.tagStr !== e && n.tagStr + "of" !== e) return t.error('Failed to match tag: "' + e + '"');
            if (n.primitive || null !== a) return t.skip(a, 'Failed to match body of: "' + e + '"');
            const r = t.save(), o = this._skipUntilEnd(t, 'Failed to skip indefinite length body: "' + this.tag + '"');
            if (t.isError(o)) return o;
            a = t.offset - r.offset;
            t.restore(r);
            return t.skip(a, 'Failed to match body of: "' + e + '"');
        };
        c.prototype._skipUntilEnd = function (t, e) {
            for (; ;) {
                const i = l(t, e);
                if (t.isError(i)) return i;
                const n = h(t, i.primitive, e);
                if (t.isError(n)) return n;
                let a;
                a = i.primitive || null !== n ? t.skip(n) : this._skipUntilEnd(t, e);
                if (t.isError(a)) return a;
                if ("end" === i.tagStr) break;
            }
        };
        c.prototype._decodeList = function (t, e, i, n) {
            const a = [];
            for (; !t.isEmpty();) {
                const e = this._peekTag(t, "end");
                if (t.isError(e)) return e;
                const r = i.decode(t, "der", n);
                if (t.isError(r) && e) break;
                a.push(r);
            }
            return a;
        };
        c.prototype._decodeStr = function (t, e) {
            if ("bitstr" === e) {
                const e = t.readUInt8();
                return t.isError(e) ? e : {
                    unused: e,
                    data: t.raw()
                };
            }
            if ("bmpstr" === e) {
                const e = t.raw();
                if (e.length % 2 == 1) return t.error("Decoding of string type: bmpstr length mismatch");
                let i = "";
                for (let t = 0; t < e.length / 2; t++) i += String.fromCharCode(e.readUInt16BE(2 * t));
                return i;
            }
            if ("numstr" === e) {
                const e = t.raw().toString("ascii");
                return this._isNumstr(e) ? e : t.error("Decoding of string type: numstr unsupported characters");
            }
            if ("octstr" === e) return t.raw();
            if ("objDesc" === e) return t.raw();
            if ("printstr" === e) {
                const e = t.raw().toString("ascii");
                return this._isPrintstr(e) ? e : t.error("Decoding of string type: printstr unsupported characters");
            }
            return /str$/.test(e) ? t.raw().toString() : t.error("Decoding of string type: " + e + " unsupported");
        };
        c.prototype._decodeObjid = function (t, e, i) {
            let n;
            const a = [];
            let r = 0, o = 0;
            for (; !t.isEmpty();) {
                r <<= 7;
                r |= 127 & (o = t.readUInt8());
                if (0 == (128 & o)) {
                    a.push(r);
                    r = 0;
                }
            }
            128 & o && a.push(r);
            const s = a[0] / 40 | 0, c = a[0] % 40;
            n = i ? a : [s, c].concat(a.slice(1));
            if (e) {
                let t = e[n.join(" ")];
                void 0 === t && (t = e[n.join(".")]);
                void 0 !== t && (n = t);
            }
            return n;
        };
        c.prototype._decodeTime = function (t, e) {
            const i = t.raw().toString();
            let n, a, r, o, s, c;
            if ("gentime" === e) {
                n = 0 | i.slice(0, 4);
                a = 0 | i.slice(4, 6);
                r = 0 | i.slice(6, 8);
                o = 0 | i.slice(8, 10);
                s = 0 | i.slice(10, 12);
                c = 0 | i.slice(12, 14);
            } else {
                if ("utctime" !== e) return t.error("Decoding " + e + " time is not supported yet");
                n = 0 | i.slice(0, 2);
                a = 0 | i.slice(2, 4);
                r = 0 | i.slice(4, 6);
                o = 0 | i.slice(6, 8);
                s = 0 | i.slice(8, 10);
                c = 0 | i.slice(10, 12);
                n = n < 70 ? 2e3 + n : 1900 + n;
            }
            return Date.UTC(n, a - 1, r, o, s, c, 0);
        };
        c.prototype._decodeNull = function () {
            return null;
        };
        c.prototype._decodeBool = function (t) {
            const e = t.readUInt8();
            return t.isError(e) ? e : 0 !== e;
        };
        c.prototype._decodeInt = function (t, e) {
            const i = t.raw();
            let a = new n(i);
            e && (a = e[a.toString(10)] || a);
            return a;
        };
        c.prototype._use = function (t, e) {
            "function" == typeof t && (t = t(e));
            return t._getDecoder("der").tree;
        };
        function l(t, e) {
            let i = t.readUInt8(e);
            if (t.isError(i)) return i;
            const n = o.tagClass[i >> 6], a = 0 == (32 & i);
            if (31 == (31 & i)) {
                let n = i;
                i = 0;
                for (; 128 == (128 & n);) {
                    n = t.readUInt8(e);
                    if (t.isError(n)) return n;
                    i <<= 7;
                    i |= 127 & n;
                }
            } else i &= 31;
            return {
                cls: n,
                primitive: a,
                tag: i,
                tagStr: o.tag[i]
            };
        }
        function h(t, e, i) {
            let n = t.readUInt8(i);
            if (t.isError(n)) return n;
            if (!e && 128 === n) return null;
            if (0 == (128 & n)) return n;
            const a = 127 & n;
            if (a > 4) return t.error("length octect is too long");
            n = 0;
            for (let e = 0; e < a; e++) {
                n <<= 8;
                const e = t.readUInt8(i);
                if (t.isError(e)) return e;
                n |= e;
            }
            return n;
        }
    }, {
        "../base/buffer": 3,
        "../base/node": 5,
        "../constants/der": 7,
        "bn.js": 15,
        inherits: 138
    }],
    10: [function (t, e, i) {
        "use strict";
        const n = i;
        n.der = t("./der");
        n.pem = t("./pem");
    }, {
        "./der": 9,
        "./pem": 11
    }],
    11: [function (t, e) {
        "use strict";
        const i = t("inherits"), n = t("safer-buffer").Buffer, a = t("./der");
        function r(t) {
            a.call(this, t);
            this.enc = "pem";
        }
        i(r, a);
        e.exports = r;
        r.prototype.decode = function (t, e) {
            const i = t.toString().split(/[\r\n]+/g), r = e.label.toUpperCase(), o = /^-----(BEGIN|END) ([^-]+)-----$/;
            let s = -1, c = -1;
            for (let t = 0; t < i.length; t++) {
                const e = i[t].match(o);
                if (null !== e && e[2] === r) {
                    if (-1 !== s) {
                        if ("END" !== e[1]) break;
                        c = t;
                        break;
                    }
                    if ("BEGIN" !== e[1]) break;
                    s = t;
                }
            }
            if (-1 === s || -1 === c) throw new Error("PEM section not found for: " + r);
            const l = i.slice(s + 1, c).join("");
            l.replace(/[^a-z0-9+/=]+/gi, "");
            const h = n.from(l, "base64");
            return a.prototype.decode.call(this, h, e);
        };
    }, {
        "./der": 9,
        inherits: 138,
        "safer-buffer": 177
    }],
    12: [function (t, e) {
        "use strict";
        const i = t("inherits"), n = t("safer-buffer").Buffer, a = t("../base/node"), r = t("../constants/der");
        function o(t) {
            this.enc = "der";
            this.name = t.name;
            this.entity = t;
            this.tree = new s();
            this.tree._init(t.body);
        }
        e.exports = o;
        o.prototype.encode = function (t, e) {
            return this.tree._encode(t, e).join();
        };
        function s(t) {
            a.call(this, "der", t);
        }
        i(s, a);
        s.prototype._encodeComposite = function (t, e, i, a) {
            const r = l(t, e, i, this.reporter);
            if (a.length < 128) {
                const t = n.alloc(2);
                t[0] = r;
                t[1] = a.length;
                return this._createEncoderBuffer([t, a]);
            }
            let o = 1;
            for (let t = a.length; t >= 256; t >>= 8) o++;
            const s = n.alloc(2 + o);
            s[0] = r;
            s[1] = 128 | o;
            for (let t = 1 + o, e = a.length; e > 0; t--, e >>= 8) s[t] = 255 & e;
            return this._createEncoderBuffer([s, a]);
        };
        s.prototype._encodeStr = function (t, e) {
            if ("bitstr" === e) return this._createEncoderBuffer([0 | t.unused, t.data]);
            if ("bmpstr" === e) {
                const e = n.alloc(2 * t.length);
                for (let i = 0; i < t.length; i++) e.writeUInt16BE(t.charCodeAt(i), 2 * i);
                return this._createEncoderBuffer(e);
            }
            return "numstr" === e ? this._isNumstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : "printstr" === e ? this._isPrintstr(t) ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(e) ? this._createEncoderBuffer(t) : "objDesc" === e ? this._createEncoderBuffer(t) : this.reporter.error("Encoding of string type: " + e + " unsupported");
        };
        s.prototype._encodeObjid = function (t, e, i) {
            if ("string" == typeof t) {
                if (!e) return this.reporter.error("string objid given, but no values map found");
                if (!e.hasOwnProperty(t)) return this.reporter.error("objid not found in values map");
                t = e[t].split(/[\s.]+/g);
                for (let e = 0; e < t.length; e++) t[e] |= 0;
            } else if (Array.isArray(t)) {
                t = t.slice();
                for (let e = 0; e < t.length; e++) t[e] |= 0;
            }
            if (!Array.isArray(t)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(t));
            if (!i) {
                if (t[1] >= 40) return this.reporter.error("Second objid identifier OOB");
                t.splice(0, 2, 40 * t[0] + t[1]);
            }
            let a = 0;
            for (let e = 0; e < t.length; e++) {
                let i = t[e];
                for (a++; i >= 128; i >>= 7) a++;
            }
            const r = n.alloc(a);
            let o = r.length - 1;
            for (let e = t.length - 1; e >= 0; e--) {
                let i = t[e];
                r[o--] = 127 & i;
                for (; (i >>= 7) > 0;) r[o--] = 128 | 127 & i;
            }
            return this._createEncoderBuffer(r);
        };
        function c(t) {
            return t < 10 ? "0" + t : t;
        }
        s.prototype._encodeTime = function (t, e) {
            let i;
            const n = new Date(t);
            "gentime" === e ? i = [c(n.getUTCFullYear()), c(n.getUTCMonth() + 1), c(n.getUTCDate()), c(n.getUTCHours()), c(n.getUTCMinutes()), c(n.getUTCSeconds()), "Z"].join("") : "utctime" === e ? i = [c(n.getUTCFullYear() % 100), c(n.getUTCMonth() + 1), c(n.getUTCDate()), c(n.getUTCHours()), c(n.getUTCMinutes()), c(n.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + e + " time is not supported yet");
            return this._encodeStr(i, "octstr");
        };
        s.prototype._encodeNull = function () {
            return this._createEncoderBuffer("");
        };
        s.prototype._encodeInt = function (t, e) {
            if ("string" == typeof t) {
                if (!e) return this.reporter.error("String int or enum given, but no values map");
                if (!e.hasOwnProperty(t)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(t));
                t = e[t];
            }
            if ("number" != typeof t && !n.isBuffer(t)) {
                const e = t.toArray();
                !t.sign && 128 & e[0] && e.unshift(0);
                t = n.from(e);
            }
            if (n.isBuffer(t)) {
                let e = t.length;
                0 === t.length && e++;
                const i = n.alloc(e);
                t.copy(i);
                0 === t.length && (i[0] = 0);
                return this._createEncoderBuffer(i);
            }
            if (t < 128) return this._createEncoderBuffer(t);
            if (t < 256) return this._createEncoderBuffer([0, t]);
            let i = 1;
            for (let e = t; e >= 256; e >>= 8) i++;
            const a = new Array(i);
            for (let e = a.length - 1; e >= 0; e--) {
                a[e] = 255 & t;
                t >>= 8;
            }
            128 & a[0] && a.unshift(0);
            return this._createEncoderBuffer(n.from(a));
        };
        s.prototype._encodeBool = function (t) {
            return this._createEncoderBuffer(t ? 255 : 0);
        };
        s.prototype._use = function (t, e) {
            "function" == typeof t && (t = t(e));
            return t._getEncoder("der").tree;
        };
        s.prototype._skipDefault = function (t, e, i) {
            const n = this._baseState;
            let a;
            if (null === n.default) return !1;
            const r = t.join();
            void 0 === n.defaultBuffer && (n.defaultBuffer = this._encodeValue(n.default, e, i).join());
            if (r.length !== n.defaultBuffer.length) return !1;
            for (a = 0; a < r.length; a++) if (r[a] !== n.defaultBuffer[a]) return !1;
            return !0;
        };
        function l(t, e, i, n) {
            let a;
            "seqof" === t ? t = "seq" : "setof" === t && (t = "set");
            if (r.tagByName.hasOwnProperty(t)) a = r.tagByName[t]; else {
                if ("number" != typeof t || (0 | t) !== t) return n.error("Unknown tag: " + t);
                a = t;
            }
            if (a >= 31) return n.error("Multi-octet tag encoding unsupported");
            e || (a |= 32);
            return a | r.tagClassByName[i || "universal"] << 6;
        }
    }, {
        "../base/node": 5,
        "../constants/der": 7,
        inherits: 138,
        "safer-buffer": 177
    }],
    13: [function (t, e, i) {
        "use strict";
        const n = i;
        n.der = t("./der");
        n.pem = t("./pem");
    }, {
        "./der": 12,
        "./pem": 14
    }],
    14: [function (t, e) {
        "use strict";
        const i = t("inherits"), n = t("./der");
        function a(t) {
            n.call(this, t);
            this.enc = "pem";
        }
        i(a, n);
        e.exports = a;
        a.prototype.encode = function (t, e) {
            const i = n.prototype.encode.call(this, t).toString("base64"), a = ["-----BEGIN " + e.label + "-----"];
            for (let t = 0; t < i.length; t += 64) a.push(i.slice(t, t + 64));
            a.push("-----END " + e.label + "-----");
            return a.join("\n");
        };
    }, {
        "./der": 12,
        inherits: 138
    }],
    15: [function (t, e) {
        (function (e, i) {
            "use strict";
            function n(t, e) {
                if (!t) throw new Error(e || "Assertion failed");
            }
            function a(t, e) {
                t.super_ = e;
                var i = function () { };
                i.prototype = e.prototype;
                t.prototype = new i();
                t.prototype.constructor = t;
            }
            function r(t, e, i) {
                if (r.isBN(t)) return t;
                this.negative = 0;
                this.words = null;
                this.length = 0;
                this.red = null;
                if (null !== t) {
                    if ("le" === e || "be" === e) {
                        i = e;
                        e = 10;
                    }
                    this._init(t || 0, e || 10, i || "be");
                }
            }
            "object" == typeof e ? e.exports = r : i.BN = r;
            r.BN = r;
            r.wordSize = 26;
            var o;
            try {
                o = "undefined" != typeof window && "undefined" != typeof window.Buffer ? window.Buffer : t("buffer").Buffer;
            } catch (t) { }
            r.isBN = function (t) {
                return t instanceof r || null !== t && "object" == typeof t && t.constructor.wordSize === r.wordSize && Array.isArray(t.words);
            };
            r.max = function (t, e) {
                return t.cmp(e) > 0 ? t : e;
            };
            r.min = function (t, e) {
                return t.cmp(e) < 0 ? t : e;
            };
            r.prototype._init = function (t, e, i) {
                if ("number" == typeof t) return this._initNumber(t, e, i);
                if ("object" == typeof t) return this._initArray(t, e, i);
                "hex" === e && (e = 16);
                n(e === (0 | e) && e >= 2 && e <= 36);
                var a = 0;
                if ("-" === (t = t.toString().replace(/\s+/g, ""))[0]) {
                    a++;
                    this.negative = 1;
                }
                if (a < t.length) if (16 === e) this._parseHex(t, a, i); else {
                    this._parseBase(t, e, a);
                    "le" === i && this._initArray(this.toArray(), e, i);
                }
            };
            r.prototype._initNumber = function (t, e, i) {
                if (t < 0) {
                    this.negative = 1;
                    t = -t;
                }
                if (t < 67108864) {
                    this.words = [67108863 & t];
                    this.length = 1;
                } else if (t < 4503599627370496) {
                    this.words = [67108863 & t, t / 67108864 & 67108863];
                    this.length = 2;
                } else {
                    n(t < 9007199254740992);
                    this.words = [67108863 & t, t / 67108864 & 67108863, 1];
                    this.length = 3;
                }
                "le" === i && this._initArray(this.toArray(), e, i);
            };
            r.prototype._initArray = function (t, e, i) {
                n("number" == typeof t.length);
                if (t.length <= 0) {
                    this.words = [0];
                    this.length = 1;
                    return this;
                }
                this.length = Math.ceil(t.length / 3);
                this.words = new Array(this.length);
                for (var a = 0; a < this.length; a++) this.words[a] = 0;
                var r, o, s = 0;
                if ("be" === i) for (a = t.length - 1, r = 0; a >= 0; a -= 3) {
                    o = t[a] | t[a - 1] << 8 | t[a - 2] << 16;
                    this.words[r] |= o << s & 67108863;
                    this.words[r + 1] = o >>> 26 - s & 67108863;
                    if ((s += 24) >= 26) {
                        s -= 26;
                        r++;
                    }
                } else if ("le" === i) for (a = 0, r = 0; a < t.length; a += 3) {
                    o = t[a] | t[a + 1] << 8 | t[a + 2] << 16;
                    this.words[r] |= o << s & 67108863;
                    this.words[r + 1] = o >>> 26 - s & 67108863;
                    if ((s += 24) >= 26) {
                        s -= 26;
                        r++;
                    }
                }
                return this.strip();
            };
            function s(t, e) {
                var i = t.charCodeAt(e);
                return i >= 65 && i <= 70 ? i - 55 : i >= 97 && i <= 102 ? i - 87 : i - 48 & 15;
            }
            function c(t, e, i) {
                var n = s(t, i);
                i - 1 >= e && (n |= s(t, i - 1) << 4);
                return n;
            }
            r.prototype._parseHex = function (t, e, i) {
                this.length = Math.ceil((t.length - e) / 6);
                this.words = new Array(this.length);
                for (var n = 0; n < this.length; n++) this.words[n] = 0;
                var a, r = 0, o = 0;
                if ("be" === i) for (n = t.length - 1; n >= e; n -= 2) {
                    a = c(t, e, n) << r;
                    this.words[o] |= 67108863 & a;
                    if (r >= 18) {
                        r -= 18;
                        o += 1;
                        this.words[o] |= a >>> 26;
                    } else r += 8;
                } else for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) {
                    a = c(t, e, n) << r;
                    this.words[o] |= 67108863 & a;
                    if (r >= 18) {
                        r -= 18;
                        o += 1;
                        this.words[o] |= a >>> 26;
                    } else r += 8;
                }
                this.strip();
            };
            function l(t, e, i, n) {
                for (var a = 0, r = Math.min(t.length, i), o = e; o < r; o++) {
                    var s = t.charCodeAt(o) - 48;
                    a *= n;
                    a += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s;
                }
                return a;
            }
            r.prototype._parseBase = function (t, e, i) {
                this.words = [0];
                this.length = 1;
                for (var n = 0, a = 1; a <= 67108863; a *= e) n++;
                n--;
                a = a / e | 0;
                for (var r = t.length - i, o = r % n, s = Math.min(r, r - o) + i, c = 0, h = i; h < s; h += n) {
                    c = l(t, h, h + n, e);
                    this.imuln(a);
                    this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                }
                if (0 !== o) {
                    var u = 1;
                    c = l(t, h, t.length, e);
                    for (h = 0; h < o; h++) u *= e;
                    this.imuln(u);
                    this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                }
                this.strip();
            };
            r.prototype.copy = function (t) {
                t.words = new Array(this.length);
                for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                t.length = this.length;
                t.negative = this.negative;
                t.red = this.red;
            };
            r.prototype.clone = function () {
                var t = new r(null);
                this.copy(t);
                return t;
            };
            r.prototype._expand = function (t) {
                for (; this.length < t;) this.words[this.length++] = 0;
                return this;
            };
            r.prototype.strip = function () {
                for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                return this._normSign();
            };
            r.prototype._normSign = function () {
                1 === this.length && 0 === this.words[0] && (this.negative = 0);
                return this;
            };
            r.prototype.inspect = function () {
                return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            };
            var h = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], u = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], p = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            r.prototype.toString = function (t, e) {
                e = 0 | e || 1;
                var i;
                if (16 === (t = t || 10) || "hex" === t) {
                    i = "";
                    for (var a = 0, r = 0, o = 0; o < this.length; o++) {
                        var s = this.words[o], c = (16777215 & (s << a | r)).toString(16);
                        i = 0 != (r = s >>> 24 - a & 16777215) || o !== this.length - 1 ? h[6 - c.length] + c + i : c + i;
                        if ((a += 2) >= 26) {
                            a -= 26;
                            o--;
                        }
                    }
                    0 !== r && (i = r.toString(16) + i);
                    for (; i.length % e != 0;) i = "0" + i;
                    0 !== this.negative && (i = "-" + i);
                    return i;
                }
                if (t === (0 | t) && t >= 2 && t <= 36) {
                    var l = u[t], d = p[t];
                    i = "";
                    var f = this.clone();
                    f.negative = 0;
                    for (; !f.isZero();) {
                        var m = f.modn(d).toString(t);
                        i = (f = f.idivn(d)).isZero() ? m + i : h[l - m.length] + m + i;
                    }
                    this.isZero() && (i = "0" + i);
                    for (; i.length % e != 0;) i = "0" + i;
                    0 !== this.negative && (i = "-" + i);
                    return i;
                }
                n(!1, "Base should be between 2 and 36");
            };
            r.prototype.toNumber = function () {
                var t = this.words[0];
                2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits");
                return 0 !== this.negative ? -t : t;
            };
            r.prototype.toJSON = function () {
                return this.toString(16);
            };
            r.prototype.toBuffer = function (t, e) {
                n("undefined" != typeof o);
                return this.toArrayLike(o, t, e);
            };
            r.prototype.toArray = function (t, e) {
                return this.toArrayLike(Array, t, e);
            };
            r.prototype.toArrayLike = function (t, e, i) {
                var a = this.byteLength(), r = i || Math.max(1, a);
                n(a <= r, "byte array longer than desired length");
                n(r > 0, "Requested array length <= 0");
                this.strip();
                var o, s, c = "le" === e, l = new t(r), h = this.clone();
                if (c) {
                    for (s = 0; !h.isZero(); s++) {
                        o = h.andln(255);
                        h.iushrn(8);
                        l[s] = o;
                    }
                    for (; s < r; s++) l[s] = 0;
                } else {
                    for (s = 0; s < r - a; s++) l[s] = 0;
                    for (s = 0; !h.isZero(); s++) {
                        o = h.andln(255);
                        h.iushrn(8);
                        l[r - s - 1] = o;
                    }
                }
                return l;
            };
            Math.clz32 ? r.prototype._countBits = function (t) {
                return 32 - Math.clz32(t);
            } : r.prototype._countBits = function (t) {
                var e = t, i = 0;
                if (e >= 4096) {
                    i += 13;
                    e >>>= 13;
                }
                if (e >= 64) {
                    i += 7;
                    e >>>= 7;
                }
                if (e >= 8) {
                    i += 4;
                    e >>>= 4;
                }
                if (e >= 2) {
                    i += 2;
                    e >>>= 2;
                }
                return i + e;
            };
            r.prototype._zeroBits = function (t) {
                if (0 === t) return 26;
                var e = t, i = 0;
                if (0 == (8191 & e)) {
                    i += 13;
                    e >>>= 13;
                }
                if (0 == (127 & e)) {
                    i += 7;
                    e >>>= 7;
                }
                if (0 == (15 & e)) {
                    i += 4;
                    e >>>= 4;
                }
                if (0 == (3 & e)) {
                    i += 2;
                    e >>>= 2;
                }
                0 == (1 & e) && i++;
                return i;
            };
            r.prototype.bitLength = function () {
                var t = this.words[this.length - 1], e = this._countBits(t);
                return 26 * (this.length - 1) + e;
            };
            function d(t) {
                for (var e = new Array(t.bitLength()), i = 0; i < e.length; i++) {
                    var n = i / 26 | 0, a = i % 26;
                    e[i] = (t.words[n] & 1 << a) >>> a;
                }
                return e;
            }
            r.prototype.zeroBits = function () {
                if (this.isZero()) return 0;
                for (var t = 0, e = 0; e < this.length; e++) {
                    var i = this._zeroBits(this.words[e]);
                    t += i;
                    if (26 !== i) break;
                }
                return t;
            };
            r.prototype.byteLength = function () {
                return Math.ceil(this.bitLength() / 8);
            };
            r.prototype.toTwos = function (t) {
                return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
            };
            r.prototype.fromTwos = function (t) {
                return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
            };
            r.prototype.isNeg = function () {
                return 0 !== this.negative;
            };
            r.prototype.neg = function () {
                return this.clone().ineg();
            };
            r.prototype.ineg = function () {
                this.isZero() || (this.negative ^= 1);
                return this;
            };
            r.prototype.iuor = function (t) {
                for (; this.length < t.length;) this.words[this.length++] = 0;
                for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                return this.strip();
            };
            r.prototype.ior = function (t) {
                n(0 == (this.negative | t.negative));
                return this.iuor(t);
            };
            r.prototype.or = function (t) {
                return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
            };
            r.prototype.uor = function (t) {
                return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
            };
            r.prototype.iuand = function (t) {
                var e;
                e = this.length > t.length ? t : this;
                for (var i = 0; i < e.length; i++) this.words[i] = this.words[i] & t.words[i];
                this.length = e.length;
                return this.strip();
            };
            r.prototype.iand = function (t) {
                n(0 == (this.negative | t.negative));
                return this.iuand(t);
            };
            r.prototype.and = function (t) {
                return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
            };
            r.prototype.uand = function (t) {
                return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
            };
            r.prototype.iuxor = function (t) {
                var e, i;
                if (this.length > t.length) {
                    e = this;
                    i = t;
                } else {
                    e = t;
                    i = this;
                }
                for (var n = 0; n < i.length; n++) this.words[n] = e.words[n] ^ i.words[n];
                if (this !== e) for (; n < e.length; n++) this.words[n] = e.words[n];
                this.length = e.length;
                return this.strip();
            };
            r.prototype.ixor = function (t) {
                n(0 == (this.negative | t.negative));
                return this.iuxor(t);
            };
            r.prototype.xor = function (t) {
                return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
            };
            r.prototype.uxor = function (t) {
                return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
            };
            r.prototype.inotn = function (t) {
                n("number" == typeof t && t >= 0);
                var e = 0 | Math.ceil(t / 26), i = t % 26;
                this._expand(e);
                i > 0 && e--;
                for (var a = 0; a < e; a++) this.words[a] = 67108863 & ~this.words[a];
                i > 0 && (this.words[a] = ~this.words[a] & 67108863 >> 26 - i);
                return this.strip();
            };
            r.prototype.notn = function (t) {
                return this.clone().inotn(t);
            };
            r.prototype.setn = function (t, e) {
                n("number" == typeof t && t >= 0);
                var i = t / 26 | 0, a = t % 26;
                this._expand(i + 1);
                this.words[i] = e ? this.words[i] | 1 << a : this.words[i] & ~(1 << a);
                return this.strip();
            };
            r.prototype.iadd = function (t) {
                var e, i, n;
                if (0 !== this.negative && 0 === t.negative) {
                    this.negative = 0;
                    e = this.isub(t);
                    this.negative ^= 1;
                    return this._normSign();
                }
                if (0 === this.negative && 0 !== t.negative) {
                    t.negative = 0;
                    e = this.isub(t);
                    t.negative = 1;
                    return e._normSign();
                }
                if (this.length > t.length) {
                    i = this;
                    n = t;
                } else {
                    i = t;
                    n = this;
                }
                for (var a = 0, r = 0; r < n.length; r++) {
                    e = (0 | i.words[r]) + (0 | n.words[r]) + a;
                    this.words[r] = 67108863 & e;
                    a = e >>> 26;
                }
                for (; 0 !== a && r < i.length; r++) {
                    e = (0 | i.words[r]) + a;
                    this.words[r] = 67108863 & e;
                    a = e >>> 26;
                }
                this.length = i.length;
                if (0 !== a) {
                    this.words[this.length] = a;
                    this.length++;
                } else if (i !== this) for (; r < i.length; r++) this.words[r] = i.words[r];
                return this;
            };
            r.prototype.add = function (t) {
                var e;
                if (0 !== t.negative && 0 === this.negative) {
                    t.negative = 0;
                    e = this.sub(t);
                    t.negative ^= 1;
                    return e;
                }
                if (0 === t.negative && 0 !== this.negative) {
                    this.negative = 0;
                    e = t.sub(this);
                    this.negative = 1;
                    return e;
                }
                return this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
            };
            r.prototype.isub = function (t) {
                if (0 !== t.negative) {
                    t.negative = 0;
                    var e = this.iadd(t);
                    t.negative = 1;
                    return e._normSign();
                }
                if (0 !== this.negative) {
                    this.negative = 0;
                    this.iadd(t);
                    this.negative = 1;
                    return this._normSign();
                }
                var i, n, a = this.cmp(t);
                if (0 === a) {
                    this.negative = 0;
                    this.length = 1;
                    this.words[0] = 0;
                    return this;
                }
                if (a > 0) {
                    i = this;
                    n = t;
                } else {
                    i = t;
                    n = this;
                }
                for (var r = 0, o = 0; o < n.length; o++) {
                    r = (e = (0 | i.words[o]) - (0 | n.words[o]) + r) >> 26;
                    this.words[o] = 67108863 & e;
                }
                for (; 0 !== r && o < i.length; o++) {
                    r = (e = (0 | i.words[o]) + r) >> 26;
                    this.words[o] = 67108863 & e;
                }
                if (0 === r && o < i.length && i !== this) for (; o < i.length; o++) this.words[o] = i.words[o];
                this.length = Math.max(this.length, o);
                i !== this && (this.negative = 1);
                return this.strip();
            };
            r.prototype.sub = function (t) {
                return this.clone().isub(t);
            };
            function f(t, e, i) {
                i.negative = e.negative ^ t.negative;
                var n = t.length + e.length | 0;
                i.length = n;
                n = n - 1 | 0;
                var a = 0 | t.words[0], r = 0 | e.words[0], o = a * r, s = 67108863 & o, c = o / 67108864 | 0;
                i.words[0] = s;
                for (var l = 1; l < n; l++) {
                    for (var h = c >>> 26, u = 67108863 & c, p = Math.min(l, e.length - 1), d = Math.max(0, l - t.length + 1); d <= p; d++) {
                        var f = l - d | 0;
                        h += (o = (a = 0 | t.words[f]) * (r = 0 | e.words[d]) + u) / 67108864 | 0;
                        u = 67108863 & o;
                    }
                    i.words[l] = 0 | u;
                    c = 0 | h;
                }
                0 !== c ? i.words[l] = 0 | c : i.length--;
                return i.strip();
            }
            var m = function (t, e, i) {
                var n, a, r, o = t.words, s = e.words, c = i.words, l = 0, h = 0 | o[0], u = 8191 & h, p = h >>> 13, d = 0 | o[1], f = 8191 & d, m = d >>> 13, g = 0 | o[2], _ = 8191 & g, y = g >>> 13, v = 0 | o[3], b = 8191 & v, M = v >>> 13, S = 0 | o[4], k = 8191 & S, C = S >>> 13, w = 0 | o[5], A = 8191 & w, T = w >>> 13, D = 0 | o[6], P = 8191 & D, E = D >>> 13, B = 0 | o[7], F = 8191 & B, N = B >>> 13, x = 0 | o[8], R = 8191 & x, I = x >>> 13, G = 0 | o[9], O = 8191 & G, L = G >>> 13, j = 0 | s[0], U = 8191 & j, Y = j >>> 13, H = 0 | s[1], W = 8191 & H, V = H >>> 13, z = 0 | s[2], J = 8191 & z, X = z >>> 13, q = 0 | s[3], K = 8191 & q, Z = q >>> 13, Q = 0 | s[4], $ = 8191 & Q, tt = Q >>> 13, et = 0 | s[5], it = 8191 & et, nt = et >>> 13, at = 0 | s[6], rt = 8191 & at, ot = at >>> 13, st = 0 | s[7], ct = 8191 & st, lt = st >>> 13, ht = 0 | s[8], ut = 8191 & ht, pt = ht >>> 13, dt = 0 | s[9], ft = 8191 & dt, mt = dt >>> 13;
                i.negative = t.negative ^ e.negative;
                i.length = 19;
                var gt = (l + (n = Math.imul(u, U)) | 0) + ((8191 & (a = (a = Math.imul(u, Y)) + Math.imul(p, U) | 0)) << 13) | 0;
                l = ((r = Math.imul(p, Y)) + (a >>> 13) | 0) + (gt >>> 26) | 0;
                gt &= 67108863;
                n = Math.imul(f, U);
                a = (a = Math.imul(f, Y)) + Math.imul(m, U) | 0;
                r = Math.imul(m, Y);
                var _t = (l + (n = n + Math.imul(u, W) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, V) | 0) + Math.imul(p, W) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, V) | 0) + (a >>> 13) | 0) + (_t >>> 26) | 0;
                _t &= 67108863;
                n = Math.imul(_, U);
                a = (a = Math.imul(_, Y)) + Math.imul(y, U) | 0;
                r = Math.imul(y, Y);
                n = n + Math.imul(f, W) | 0;
                a = (a = a + Math.imul(f, V) | 0) + Math.imul(m, W) | 0;
                r = r + Math.imul(m, V) | 0;
                var yt = (l + (n = n + Math.imul(u, J) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, X) | 0) + Math.imul(p, J) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, X) | 0) + (a >>> 13) | 0) + (yt >>> 26) | 0;
                yt &= 67108863;
                n = Math.imul(b, U);
                a = (a = Math.imul(b, Y)) + Math.imul(M, U) | 0;
                r = Math.imul(M, Y);
                n = n + Math.imul(_, W) | 0;
                a = (a = a + Math.imul(_, V) | 0) + Math.imul(y, W) | 0;
                r = r + Math.imul(y, V) | 0;
                n = n + Math.imul(f, J) | 0;
                a = (a = a + Math.imul(f, X) | 0) + Math.imul(m, J) | 0;
                r = r + Math.imul(m, X) | 0;
                var vt = (l + (n = n + Math.imul(u, K) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, Z) | 0) + Math.imul(p, K) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, Z) | 0) + (a >>> 13) | 0) + (vt >>> 26) | 0;
                vt &= 67108863;
                n = Math.imul(k, U);
                a = (a = Math.imul(k, Y)) + Math.imul(C, U) | 0;
                r = Math.imul(C, Y);
                n = n + Math.imul(b, W) | 0;
                a = (a = a + Math.imul(b, V) | 0) + Math.imul(M, W) | 0;
                r = r + Math.imul(M, V) | 0;
                n = n + Math.imul(_, J) | 0;
                a = (a = a + Math.imul(_, X) | 0) + Math.imul(y, J) | 0;
                r = r + Math.imul(y, X) | 0;
                n = n + Math.imul(f, K) | 0;
                a = (a = a + Math.imul(f, Z) | 0) + Math.imul(m, K) | 0;
                r = r + Math.imul(m, Z) | 0;
                var bt = (l + (n = n + Math.imul(u, $) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, tt) | 0) + Math.imul(p, $) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, tt) | 0) + (a >>> 13) | 0) + (bt >>> 26) | 0;
                bt &= 67108863;
                n = Math.imul(A, U);
                a = (a = Math.imul(A, Y)) + Math.imul(T, U) | 0;
                r = Math.imul(T, Y);
                n = n + Math.imul(k, W) | 0;
                a = (a = a + Math.imul(k, V) | 0) + Math.imul(C, W) | 0;
                r = r + Math.imul(C, V) | 0;
                n = n + Math.imul(b, J) | 0;
                a = (a = a + Math.imul(b, X) | 0) + Math.imul(M, J) | 0;
                r = r + Math.imul(M, X) | 0;
                n = n + Math.imul(_, K) | 0;
                a = (a = a + Math.imul(_, Z) | 0) + Math.imul(y, K) | 0;
                r = r + Math.imul(y, Z) | 0;
                n = n + Math.imul(f, $) | 0;
                a = (a = a + Math.imul(f, tt) | 0) + Math.imul(m, $) | 0;
                r = r + Math.imul(m, tt) | 0;
                var Mt = (l + (n = n + Math.imul(u, it) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, nt) | 0) + Math.imul(p, it) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, nt) | 0) + (a >>> 13) | 0) + (Mt >>> 26) | 0;
                Mt &= 67108863;
                n = Math.imul(P, U);
                a = (a = Math.imul(P, Y)) + Math.imul(E, U) | 0;
                r = Math.imul(E, Y);
                n = n + Math.imul(A, W) | 0;
                a = (a = a + Math.imul(A, V) | 0) + Math.imul(T, W) | 0;
                r = r + Math.imul(T, V) | 0;
                n = n + Math.imul(k, J) | 0;
                a = (a = a + Math.imul(k, X) | 0) + Math.imul(C, J) | 0;
                r = r + Math.imul(C, X) | 0;
                n = n + Math.imul(b, K) | 0;
                a = (a = a + Math.imul(b, Z) | 0) + Math.imul(M, K) | 0;
                r = r + Math.imul(M, Z) | 0;
                n = n + Math.imul(_, $) | 0;
                a = (a = a + Math.imul(_, tt) | 0) + Math.imul(y, $) | 0;
                r = r + Math.imul(y, tt) | 0;
                n = n + Math.imul(f, it) | 0;
                a = (a = a + Math.imul(f, nt) | 0) + Math.imul(m, it) | 0;
                r = r + Math.imul(m, nt) | 0;
                var St = (l + (n = n + Math.imul(u, rt) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, ot) | 0) + Math.imul(p, rt) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, ot) | 0) + (a >>> 13) | 0) + (St >>> 26) | 0;
                St &= 67108863;
                n = Math.imul(F, U);
                a = (a = Math.imul(F, Y)) + Math.imul(N, U) | 0;
                r = Math.imul(N, Y);
                n = n + Math.imul(P, W) | 0;
                a = (a = a + Math.imul(P, V) | 0) + Math.imul(E, W) | 0;
                r = r + Math.imul(E, V) | 0;
                n = n + Math.imul(A, J) | 0;
                a = (a = a + Math.imul(A, X) | 0) + Math.imul(T, J) | 0;
                r = r + Math.imul(T, X) | 0;
                n = n + Math.imul(k, K) | 0;
                a = (a = a + Math.imul(k, Z) | 0) + Math.imul(C, K) | 0;
                r = r + Math.imul(C, Z) | 0;
                n = n + Math.imul(b, $) | 0;
                a = (a = a + Math.imul(b, tt) | 0) + Math.imul(M, $) | 0;
                r = r + Math.imul(M, tt) | 0;
                n = n + Math.imul(_, it) | 0;
                a = (a = a + Math.imul(_, nt) | 0) + Math.imul(y, it) | 0;
                r = r + Math.imul(y, nt) | 0;
                n = n + Math.imul(f, rt) | 0;
                a = (a = a + Math.imul(f, ot) | 0) + Math.imul(m, rt) | 0;
                r = r + Math.imul(m, ot) | 0;
                var kt = (l + (n = n + Math.imul(u, ct) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, lt) | 0) + Math.imul(p, ct) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, lt) | 0) + (a >>> 13) | 0) + (kt >>> 26) | 0;
                kt &= 67108863;
                n = Math.imul(R, U);
                a = (a = Math.imul(R, Y)) + Math.imul(I, U) | 0;
                r = Math.imul(I, Y);
                n = n + Math.imul(F, W) | 0;
                a = (a = a + Math.imul(F, V) | 0) + Math.imul(N, W) | 0;
                r = r + Math.imul(N, V) | 0;
                n = n + Math.imul(P, J) | 0;
                a = (a = a + Math.imul(P, X) | 0) + Math.imul(E, J) | 0;
                r = r + Math.imul(E, X) | 0;
                n = n + Math.imul(A, K) | 0;
                a = (a = a + Math.imul(A, Z) | 0) + Math.imul(T, K) | 0;
                r = r + Math.imul(T, Z) | 0;
                n = n + Math.imul(k, $) | 0;
                a = (a = a + Math.imul(k, tt) | 0) + Math.imul(C, $) | 0;
                r = r + Math.imul(C, tt) | 0;
                n = n + Math.imul(b, it) | 0;
                a = (a = a + Math.imul(b, nt) | 0) + Math.imul(M, it) | 0;
                r = r + Math.imul(M, nt) | 0;
                n = n + Math.imul(_, rt) | 0;
                a = (a = a + Math.imul(_, ot) | 0) + Math.imul(y, rt) | 0;
                r = r + Math.imul(y, ot) | 0;
                n = n + Math.imul(f, ct) | 0;
                a = (a = a + Math.imul(f, lt) | 0) + Math.imul(m, ct) | 0;
                r = r + Math.imul(m, lt) | 0;
                var Ct = (l + (n = n + Math.imul(u, ut) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, pt) | 0) + Math.imul(p, ut) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, pt) | 0) + (a >>> 13) | 0) + (Ct >>> 26) | 0;
                Ct &= 67108863;
                n = Math.imul(O, U);
                a = (a = Math.imul(O, Y)) + Math.imul(L, U) | 0;
                r = Math.imul(L, Y);
                n = n + Math.imul(R, W) | 0;
                a = (a = a + Math.imul(R, V) | 0) + Math.imul(I, W) | 0;
                r = r + Math.imul(I, V) | 0;
                n = n + Math.imul(F, J) | 0;
                a = (a = a + Math.imul(F, X) | 0) + Math.imul(N, J) | 0;
                r = r + Math.imul(N, X) | 0;
                n = n + Math.imul(P, K) | 0;
                a = (a = a + Math.imul(P, Z) | 0) + Math.imul(E, K) | 0;
                r = r + Math.imul(E, Z) | 0;
                n = n + Math.imul(A, $) | 0;
                a = (a = a + Math.imul(A, tt) | 0) + Math.imul(T, $) | 0;
                r = r + Math.imul(T, tt) | 0;
                n = n + Math.imul(k, it) | 0;
                a = (a = a + Math.imul(k, nt) | 0) + Math.imul(C, it) | 0;
                r = r + Math.imul(C, nt) | 0;
                n = n + Math.imul(b, rt) | 0;
                a = (a = a + Math.imul(b, ot) | 0) + Math.imul(M, rt) | 0;
                r = r + Math.imul(M, ot) | 0;
                n = n + Math.imul(_, ct) | 0;
                a = (a = a + Math.imul(_, lt) | 0) + Math.imul(y, ct) | 0;
                r = r + Math.imul(y, lt) | 0;
                n = n + Math.imul(f, ut) | 0;
                a = (a = a + Math.imul(f, pt) | 0) + Math.imul(m, ut) | 0;
                r = r + Math.imul(m, pt) | 0;
                var wt = (l + (n = n + Math.imul(u, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, mt) | 0) + Math.imul(p, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, mt) | 0) + (a >>> 13) | 0) + (wt >>> 26) | 0;
                wt &= 67108863;
                n = Math.imul(O, W);
                a = (a = Math.imul(O, V)) + Math.imul(L, W) | 0;
                r = Math.imul(L, V);
                n = n + Math.imul(R, J) | 0;
                a = (a = a + Math.imul(R, X) | 0) + Math.imul(I, J) | 0;
                r = r + Math.imul(I, X) | 0;
                n = n + Math.imul(F, K) | 0;
                a = (a = a + Math.imul(F, Z) | 0) + Math.imul(N, K) | 0;
                r = r + Math.imul(N, Z) | 0;
                n = n + Math.imul(P, $) | 0;
                a = (a = a + Math.imul(P, tt) | 0) + Math.imul(E, $) | 0;
                r = r + Math.imul(E, tt) | 0;
                n = n + Math.imul(A, it) | 0;
                a = (a = a + Math.imul(A, nt) | 0) + Math.imul(T, it) | 0;
                r = r + Math.imul(T, nt) | 0;
                n = n + Math.imul(k, rt) | 0;
                a = (a = a + Math.imul(k, ot) | 0) + Math.imul(C, rt) | 0;
                r = r + Math.imul(C, ot) | 0;
                n = n + Math.imul(b, ct) | 0;
                a = (a = a + Math.imul(b, lt) | 0) + Math.imul(M, ct) | 0;
                r = r + Math.imul(M, lt) | 0;
                n = n + Math.imul(_, ut) | 0;
                a = (a = a + Math.imul(_, pt) | 0) + Math.imul(y, ut) | 0;
                r = r + Math.imul(y, pt) | 0;
                var At = (l + (n = n + Math.imul(f, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(f, mt) | 0) + Math.imul(m, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(m, mt) | 0) + (a >>> 13) | 0) + (At >>> 26) | 0;
                At &= 67108863;
                n = Math.imul(O, J);
                a = (a = Math.imul(O, X)) + Math.imul(L, J) | 0;
                r = Math.imul(L, X);
                n = n + Math.imul(R, K) | 0;
                a = (a = a + Math.imul(R, Z) | 0) + Math.imul(I, K) | 0;
                r = r + Math.imul(I, Z) | 0;
                n = n + Math.imul(F, $) | 0;
                a = (a = a + Math.imul(F, tt) | 0) + Math.imul(N, $) | 0;
                r = r + Math.imul(N, tt) | 0;
                n = n + Math.imul(P, it) | 0;
                a = (a = a + Math.imul(P, nt) | 0) + Math.imul(E, it) | 0;
                r = r + Math.imul(E, nt) | 0;
                n = n + Math.imul(A, rt) | 0;
                a = (a = a + Math.imul(A, ot) | 0) + Math.imul(T, rt) | 0;
                r = r + Math.imul(T, ot) | 0;
                n = n + Math.imul(k, ct) | 0;
                a = (a = a + Math.imul(k, lt) | 0) + Math.imul(C, ct) | 0;
                r = r + Math.imul(C, lt) | 0;
                n = n + Math.imul(b, ut) | 0;
                a = (a = a + Math.imul(b, pt) | 0) + Math.imul(M, ut) | 0;
                r = r + Math.imul(M, pt) | 0;
                var Tt = (l + (n = n + Math.imul(_, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(_, mt) | 0) + Math.imul(y, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(y, mt) | 0) + (a >>> 13) | 0) + (Tt >>> 26) | 0;
                Tt &= 67108863;
                n = Math.imul(O, K);
                a = (a = Math.imul(O, Z)) + Math.imul(L, K) | 0;
                r = Math.imul(L, Z);
                n = n + Math.imul(R, $) | 0;
                a = (a = a + Math.imul(R, tt) | 0) + Math.imul(I, $) | 0;
                r = r + Math.imul(I, tt) | 0;
                n = n + Math.imul(F, it) | 0;
                a = (a = a + Math.imul(F, nt) | 0) + Math.imul(N, it) | 0;
                r = r + Math.imul(N, nt) | 0;
                n = n + Math.imul(P, rt) | 0;
                a = (a = a + Math.imul(P, ot) | 0) + Math.imul(E, rt) | 0;
                r = r + Math.imul(E, ot) | 0;
                n = n + Math.imul(A, ct) | 0;
                a = (a = a + Math.imul(A, lt) | 0) + Math.imul(T, ct) | 0;
                r = r + Math.imul(T, lt) | 0;
                n = n + Math.imul(k, ut) | 0;
                a = (a = a + Math.imul(k, pt) | 0) + Math.imul(C, ut) | 0;
                r = r + Math.imul(C, pt) | 0;
                var Dt = (l + (n = n + Math.imul(b, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(b, mt) | 0) + Math.imul(M, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(M, mt) | 0) + (a >>> 13) | 0) + (Dt >>> 26) | 0;
                Dt &= 67108863;
                n = Math.imul(O, $);
                a = (a = Math.imul(O, tt)) + Math.imul(L, $) | 0;
                r = Math.imul(L, tt);
                n = n + Math.imul(R, it) | 0;
                a = (a = a + Math.imul(R, nt) | 0) + Math.imul(I, it) | 0;
                r = r + Math.imul(I, nt) | 0;
                n = n + Math.imul(F, rt) | 0;
                a = (a = a + Math.imul(F, ot) | 0) + Math.imul(N, rt) | 0;
                r = r + Math.imul(N, ot) | 0;
                n = n + Math.imul(P, ct) | 0;
                a = (a = a + Math.imul(P, lt) | 0) + Math.imul(E, ct) | 0;
                r = r + Math.imul(E, lt) | 0;
                n = n + Math.imul(A, ut) | 0;
                a = (a = a + Math.imul(A, pt) | 0) + Math.imul(T, ut) | 0;
                r = r + Math.imul(T, pt) | 0;
                var Pt = (l + (n = n + Math.imul(k, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(k, mt) | 0) + Math.imul(C, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(C, mt) | 0) + (a >>> 13) | 0) + (Pt >>> 26) | 0;
                Pt &= 67108863;
                n = Math.imul(O, it);
                a = (a = Math.imul(O, nt)) + Math.imul(L, it) | 0;
                r = Math.imul(L, nt);
                n = n + Math.imul(R, rt) | 0;
                a = (a = a + Math.imul(R, ot) | 0) + Math.imul(I, rt) | 0;
                r = r + Math.imul(I, ot) | 0;
                n = n + Math.imul(F, ct) | 0;
                a = (a = a + Math.imul(F, lt) | 0) + Math.imul(N, ct) | 0;
                r = r + Math.imul(N, lt) | 0;
                n = n + Math.imul(P, ut) | 0;
                a = (a = a + Math.imul(P, pt) | 0) + Math.imul(E, ut) | 0;
                r = r + Math.imul(E, pt) | 0;
                var Et = (l + (n = n + Math.imul(A, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(A, mt) | 0) + Math.imul(T, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(T, mt) | 0) + (a >>> 13) | 0) + (Et >>> 26) | 0;
                Et &= 67108863;
                n = Math.imul(O, rt);
                a = (a = Math.imul(O, ot)) + Math.imul(L, rt) | 0;
                r = Math.imul(L, ot);
                n = n + Math.imul(R, ct) | 0;
                a = (a = a + Math.imul(R, lt) | 0) + Math.imul(I, ct) | 0;
                r = r + Math.imul(I, lt) | 0;
                n = n + Math.imul(F, ut) | 0;
                a = (a = a + Math.imul(F, pt) | 0) + Math.imul(N, ut) | 0;
                r = r + Math.imul(N, pt) | 0;
                var Bt = (l + (n = n + Math.imul(P, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(P, mt) | 0) + Math.imul(E, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(E, mt) | 0) + (a >>> 13) | 0) + (Bt >>> 26) | 0;
                Bt &= 67108863;
                n = Math.imul(O, ct);
                a = (a = Math.imul(O, lt)) + Math.imul(L, ct) | 0;
                r = Math.imul(L, lt);
                n = n + Math.imul(R, ut) | 0;
                a = (a = a + Math.imul(R, pt) | 0) + Math.imul(I, ut) | 0;
                r = r + Math.imul(I, pt) | 0;
                var Ft = (l + (n = n + Math.imul(F, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(F, mt) | 0) + Math.imul(N, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(N, mt) | 0) + (a >>> 13) | 0) + (Ft >>> 26) | 0;
                Ft &= 67108863;
                n = Math.imul(O, ut);
                a = (a = Math.imul(O, pt)) + Math.imul(L, ut) | 0;
                r = Math.imul(L, pt);
                var Nt = (l + (n = n + Math.imul(R, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(R, mt) | 0) + Math.imul(I, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(I, mt) | 0) + (a >>> 13) | 0) + (Nt >>> 26) | 0;
                Nt &= 67108863;
                var xt = (l + (n = Math.imul(O, ft)) | 0) + ((8191 & (a = (a = Math.imul(O, mt)) + Math.imul(L, ft) | 0)) << 13) | 0;
                l = ((r = Math.imul(L, mt)) + (a >>> 13) | 0) + (xt >>> 26) | 0;
                xt &= 67108863;
                c[0] = gt;
                c[1] = _t;
                c[2] = yt;
                c[3] = vt;
                c[4] = bt;
                c[5] = Mt;
                c[6] = St;
                c[7] = kt;
                c[8] = Ct;
                c[9] = wt;
                c[10] = At;
                c[11] = Tt;
                c[12] = Dt;
                c[13] = Pt;
                c[14] = Et;
                c[15] = Bt;
                c[16] = Ft;
                c[17] = Nt;
                c[18] = xt;
                if (0 !== l) {
                    c[19] = l;
                    i.length++;
                }
                return i;
            };
            Math.imul || (m = f);
            function g(t, e, i) {
                i.negative = e.negative ^ t.negative;
                i.length = t.length + e.length;
                for (var n = 0, a = 0, r = 0; r < i.length - 1; r++) {
                    var o = a;
                    a = 0;
                    for (var s = 67108863 & n, c = Math.min(r, e.length - 1), l = Math.max(0, r - t.length + 1); l <= c; l++) {
                        var h = r - l, u = (0 | t.words[h]) * (0 | e.words[l]), p = 67108863 & u;
                        s = 67108863 & (p = p + s | 0);
                        a += (o = (o = o + (u / 67108864 | 0) | 0) + (p >>> 26) | 0) >>> 26;
                        o &= 67108863;
                    }
                    i.words[r] = s;
                    n = o;
                    o = a;
                }
                0 !== n ? i.words[r] = n : i.length--;
                return i.strip();
            }
            function _(t, e, i) {
                return new y().mulp(t, e, i);
            }
            r.prototype.mulTo = function (t, e) {
                var i = this.length + t.length;
                return 10 === this.length && 10 === t.length ? m(this, t, e) : i < 63 ? f(this, t, e) : i < 1024 ? g(this, t, e) : _(this, t, e);
            };
            function y(t, e) {
                this.x = t;
                this.y = e;
            }
            y.prototype.makeRBT = function (t) {
                for (var e = new Array(t), i = r.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, i, t);
                return e;
            };
            y.prototype.revBin = function (t, e, i) {
                if (0 === t || t === i - 1) return t;
                for (var n = 0, a = 0; a < e; a++) {
                    n |= (1 & t) << e - a - 1;
                    t >>= 1;
                }
                return n;
            };
            y.prototype.permute = function (t, e, i, n, a, r) {
                for (var o = 0; o < r; o++) {
                    n[o] = e[t[o]];
                    a[o] = i[t[o]];
                }
            };
            y.prototype.transform = function (t, e, i, n, a, r) {
                this.permute(r, t, e, i, n, a);
                for (var o = 1; o < a; o <<= 1) for (var s = o << 1, c = Math.cos(2 * Math.PI / s), l = Math.sin(2 * Math.PI / s), h = 0; h < a; h += s) for (var u = c, p = l, d = 0; d < o; d++) {
                    var f = i[h + d], m = n[h + d], g = i[h + d + o], _ = n[h + d + o], y = u * g - p * _;
                    _ = u * _ + p * g;
                    g = y;
                    i[h + d] = f + g;
                    n[h + d] = m + _;
                    i[h + d + o] = f - g;
                    n[h + d + o] = m - _;
                    if (d !== s) {
                        y = c * u - l * p;
                        p = c * p + l * u;
                        u = y;
                    }
                }
            };
            y.prototype.guessLen13b = function (t, e) {
                var i = 1 | Math.max(e, t), n = 1 & i, a = 0;
                for (i = i / 2 | 0; i; i >>>= 1) a++;
                return 1 << a + 1 + n;
            };
            y.prototype.conjugate = function (t, e, i) {
                if (!(i <= 1)) for (var n = 0; n < i / 2; n++) {
                    var a = t[n];
                    t[n] = t[i - n - 1];
                    t[i - n - 1] = a;
                    a = e[n];
                    e[n] = -e[i - n - 1];
                    e[i - n - 1] = -a;
                }
            };
            y.prototype.normalize13b = function (t, e) {
                for (var i = 0, n = 0; n < e / 2; n++) {
                    var a = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + i;
                    t[n] = 67108863 & a;
                    i = a < 67108864 ? 0 : a / 67108864 | 0;
                }
                return t;
            };
            y.prototype.convert13b = function (t, e, i, a) {
                for (var r = 0, o = 0; o < e; o++) {
                    r += 0 | t[o];
                    i[2 * o] = 8191 & r;
                    r >>>= 13;
                    i[2 * o + 1] = 8191 & r;
                    r >>>= 13;
                }
                for (o = 2 * e; o < a; ++o) i[o] = 0;
                n(0 === r);
                n(0 == (-8192 & r));
            };
            y.prototype.stub = function (t) {
                for (var e = new Array(t), i = 0; i < t; i++) e[i] = 0;
                return e;
            };
            y.prototype.mulp = function (t, e, i) {
                var n = 2 * this.guessLen13b(t.length, e.length), a = this.makeRBT(n), r = this.stub(n), o = new Array(n), s = new Array(n), c = new Array(n), l = new Array(n), h = new Array(n), u = new Array(n), p = i.words;
                p.length = n;
                this.convert13b(t.words, t.length, o, n);
                this.convert13b(e.words, e.length, l, n);
                this.transform(o, r, s, c, n, a);
                this.transform(l, r, h, u, n, a);
                for (var d = 0; d < n; d++) {
                    var f = s[d] * h[d] - c[d] * u[d];
                    c[d] = s[d] * u[d] + c[d] * h[d];
                    s[d] = f;
                }
                this.conjugate(s, c, n);
                this.transform(s, c, p, r, n, a);
                this.conjugate(p, r, n);
                this.normalize13b(p, n);
                i.negative = t.negative ^ e.negative;
                i.length = t.length + e.length;
                return i.strip();
            };
            r.prototype.mul = function (t) {
                var e = new r(null);
                e.words = new Array(this.length + t.length);
                return this.mulTo(t, e);
            };
            r.prototype.mulf = function (t) {
                var e = new r(null);
                e.words = new Array(this.length + t.length);
                return _(this, t, e);
            };
            r.prototype.imul = function (t) {
                return this.clone().mulTo(t, this);
            };
            r.prototype.imuln = function (t) {
                n("number" == typeof t);
                n(t < 67108864);
                for (var e = 0, i = 0; i < this.length; i++) {
                    var a = (0 | this.words[i]) * t, r = (67108863 & a) + (67108863 & e);
                    e >>= 26;
                    e += a / 67108864 | 0;
                    e += r >>> 26;
                    this.words[i] = 67108863 & r;
                }
                if (0 !== e) {
                    this.words[i] = e;
                    this.length++;
                }
                return this;
            };
            r.prototype.muln = function (t) {
                return this.clone().imuln(t);
            };
            r.prototype.sqr = function () {
                return this.mul(this);
            };
            r.prototype.isqr = function () {
                return this.imul(this.clone());
            };
            r.prototype.pow = function (t) {
                var e = d(t);
                if (0 === e.length) return new r(1);
                for (var i = this, n = 0; n < e.length && 0 === e[n]; n++, i = i.sqr());
                if (++n < e.length) for (var a = i.sqr(); n < e.length; n++, a = a.sqr()) 0 !== e[n] && (i = i.mul(a));
                return i;
            };
            r.prototype.iushln = function (t) {
                n("number" == typeof t && t >= 0);
                var e, i = t % 26, a = (t - i) / 26, r = 67108863 >>> 26 - i << 26 - i;
                if (0 !== i) {
                    var o = 0;
                    for (e = 0; e < this.length; e++) {
                        var s = this.words[e] & r, c = (0 | this.words[e]) - s << i;
                        this.words[e] = c | o;
                        o = s >>> 26 - i;
                    }
                    if (o) {
                        this.words[e] = o;
                        this.length++;
                    }
                }
                if (0 !== a) {
                    for (e = this.length - 1; e >= 0; e--) this.words[e + a] = this.words[e];
                    for (e = 0; e < a; e++) this.words[e] = 0;
                    this.length += a;
                }
                return this.strip();
            };
            r.prototype.ishln = function (t) {
                n(0 === this.negative);
                return this.iushln(t);
            };
            r.prototype.iushrn = function (t, e, i) {
                n("number" == typeof t && t >= 0);
                var a;
                a = e ? (e - e % 26) / 26 : 0;
                var r = t % 26, o = Math.min((t - r) / 26, this.length), s = 67108863 ^ 67108863 >>> r << r, c = i;
                a -= o;
                a = Math.max(0, a);
                if (c) {
                    for (var l = 0; l < o; l++) c.words[l] = this.words[l];
                    c.length = o;
                }
                if (0 === o); else if (this.length > o) {
                    this.length -= o;
                    for (l = 0; l < this.length; l++) this.words[l] = this.words[l + o];
                } else {
                    this.words[0] = 0;
                    this.length = 1;
                }
                var h = 0;
                for (l = this.length - 1; l >= 0 && (0 !== h || l >= a); l--) {
                    var u = 0 | this.words[l];
                    this.words[l] = h << 26 - r | u >>> r;
                    h = u & s;
                }
                c && 0 !== h && (c.words[c.length++] = h);
                if (0 === this.length) {
                    this.words[0] = 0;
                    this.length = 1;
                }
                return this.strip();
            };
            r.prototype.ishrn = function (t, e, i) {
                n(0 === this.negative);
                return this.iushrn(t, e, i);
            };
            r.prototype.shln = function (t) {
                return this.clone().ishln(t);
            };
            r.prototype.ushln = function (t) {
                return this.clone().iushln(t);
            };
            r.prototype.shrn = function (t) {
                return this.clone().ishrn(t);
            };
            r.prototype.ushrn = function (t) {
                return this.clone().iushrn(t);
            };
            r.prototype.testn = function (t) {
                n("number" == typeof t && t >= 0);
                var e = t % 26, i = (t - e) / 26, a = 1 << e;
                return !(this.length <= i || !(this.words[i] & a));
            };
            r.prototype.imaskn = function (t) {
                n("number" == typeof t && t >= 0);
                var e = t % 26, i = (t - e) / 26;
                n(0 === this.negative, "imaskn works only with positive numbers");
                if (this.length <= i) return this;
                0 !== e && i++;
                this.length = Math.min(i, this.length);
                if (0 !== e) {
                    var a = 67108863 ^ 67108863 >>> e << e;
                    this.words[this.length - 1] &= a;
                }
                return this.strip();
            };
            r.prototype.maskn = function (t) {
                return this.clone().imaskn(t);
            };
            r.prototype.iaddn = function (t) {
                n("number" == typeof t);
                n(t < 67108864);
                if (t < 0) return this.isubn(-t);
                if (0 !== this.negative) {
                    if (1 === this.length && (0 | this.words[0]) < t) {
                        this.words[0] = t - (0 | this.words[0]);
                        this.negative = 0;
                        return this;
                    }
                    this.negative = 0;
                    this.isubn(t);
                    this.negative = 1;
                    return this;
                }
                return this._iaddn(t);
            };
            r.prototype._iaddn = function (t) {
                this.words[0] += t;
                for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) {
                    this.words[e] -= 67108864;
                    e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                }
                this.length = Math.max(this.length, e + 1);
                return this;
            };
            r.prototype.isubn = function (t) {
                n("number" == typeof t);
                n(t < 67108864);
                if (t < 0) return this.iaddn(-t);
                if (0 !== this.negative) {
                    this.negative = 0;
                    this.iaddn(t);
                    this.negative = 1;
                    return this;
                }
                this.words[0] -= t;
                if (1 === this.length && this.words[0] < 0) {
                    this.words[0] = -this.words[0];
                    this.negative = 1;
                } else for (var e = 0; e < this.length && this.words[e] < 0; e++) {
                    this.words[e] += 67108864;
                    this.words[e + 1] -= 1;
                }
                return this.strip();
            };
            r.prototype.addn = function (t) {
                return this.clone().iaddn(t);
            };
            r.prototype.subn = function (t) {
                return this.clone().isubn(t);
            };
            r.prototype.iabs = function () {
                this.negative = 0;
                return this;
            };
            r.prototype.abs = function () {
                return this.clone().iabs();
            };
            r.prototype._ishlnsubmul = function (t, e, i) {
                var a, r, o = t.length + i;
                this._expand(o);
                var s = 0;
                for (a = 0; a < t.length; a++) {
                    r = (0 | this.words[a + i]) + s;
                    var c = (0 | t.words[a]) * e;
                    s = ((r -= 67108863 & c) >> 26) - (c / 67108864 | 0);
                    this.words[a + i] = 67108863 & r;
                }
                for (; a < this.length - i; a++) {
                    s = (r = (0 | this.words[a + i]) + s) >> 26;
                    this.words[a + i] = 67108863 & r;
                }
                if (0 === s) return this.strip();
                n(-1 === s);
                s = 0;
                for (a = 0; a < this.length; a++) {
                    s = (r = -(0 | this.words[a]) + s) >> 26;
                    this.words[a] = 67108863 & r;
                }
                this.negative = 1;
                return this.strip();
            };
            r.prototype._wordDiv = function (t, e) {
                var i = (this.length, t.length), n = this.clone(), a = t, o = 0 | a.words[a.length - 1];
                if (0 != (i = 26 - this._countBits(o))) {
                    a = a.ushln(i);
                    n.iushln(i);
                    o = 0 | a.words[a.length - 1];
                }
                var s, c = n.length - a.length;
                if ("mod" !== e) {
                    (s = new r(null)).length = c + 1;
                    s.words = new Array(s.length);
                    for (var l = 0; l < s.length; l++) s.words[l] = 0;
                }
                var h = n.clone()._ishlnsubmul(a, 1, c);
                if (0 === h.negative) {
                    n = h;
                    s && (s.words[c] = 1);
                }
                for (var u = c - 1; u >= 0; u--) {
                    var p = 67108864 * (0 | n.words[a.length + u]) + (0 | n.words[a.length + u - 1]);
                    p = Math.min(p / o | 0, 67108863);
                    n._ishlnsubmul(a, p, u);
                    for (; 0 !== n.negative;) {
                        p--;
                        n.negative = 0;
                        n._ishlnsubmul(a, 1, u);
                        n.isZero() || (n.negative ^= 1);
                    }
                    s && (s.words[u] = p);
                }
                s && s.strip();
                n.strip();
                "div" !== e && 0 !== i && n.iushrn(i);
                return {
                    div: s || null,
                    mod: n
                };
            };
            r.prototype.divmod = function (t, e, i) {
                n(!t.isZero());
                if (this.isZero()) return {
                    div: new r(0),
                    mod: new r(0)
                };
                var a, o, s;
                if (0 !== this.negative && 0 === t.negative) {
                    s = this.neg().divmod(t, e);
                    "mod" !== e && (a = s.div.neg());
                    if ("div" !== e) {
                        o = s.mod.neg();
                        i && 0 !== o.negative && o.iadd(t);
                    }
                    return {
                        div: a,
                        mod: o
                    };
                }
                if (0 === this.negative && 0 !== t.negative) {
                    s = this.divmod(t.neg(), e);
                    "mod" !== e && (a = s.div.neg());
                    return {
                        div: a,
                        mod: s.mod
                    };
                }
                if (0 != (this.negative & t.negative)) {
                    s = this.neg().divmod(t.neg(), e);
                    if ("div" !== e) {
                        o = s.mod.neg();
                        i && 0 !== o.negative && o.isub(t);
                    }
                    return {
                        div: s.div,
                        mod: o
                    };
                }
                return t.length > this.length || this.cmp(t) < 0 ? {
                    div: new r(0),
                    mod: this
                } : 1 === t.length ? "div" === e ? {
                    div: this.divn(t.words[0]),
                    mod: null
                } : "mod" === e ? {
                    div: null,
                    mod: new r(this.modn(t.words[0]))
                } : {
                    div: this.divn(t.words[0]),
                    mod: new r(this.modn(t.words[0]))
                } : this._wordDiv(t, e);
            };
            r.prototype.div = function (t) {
                return this.divmod(t, "div", !1).div;
            };
            r.prototype.mod = function (t) {
                return this.divmod(t, "mod", !1).mod;
            };
            r.prototype.umod = function (t) {
                return this.divmod(t, "mod", !0).mod;
            };
            r.prototype.divRound = function (t) {
                var e = this.divmod(t);
                if (e.mod.isZero()) return e.div;
                var i = 0 !== e.div.negative ? e.mod.isub(t) : e.mod, n = t.ushrn(1), a = t.andln(1), r = i.cmp(n);
                return r < 0 || 1 === a && 0 === r ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
            };
            r.prototype.modn = function (t) {
                n(t <= 67108863);
                for (var e = (1 << 26) % t, i = 0, a = this.length - 1; a >= 0; a--) i = (e * i + (0 | this.words[a])) % t;
                return i;
            };
            r.prototype.idivn = function (t) {
                n(t <= 67108863);
                for (var e = 0, i = this.length - 1; i >= 0; i--) {
                    var a = (0 | this.words[i]) + 67108864 * e;
                    this.words[i] = a / t | 0;
                    e = a % t;
                }
                return this.strip();
            };
            r.prototype.divn = function (t) {
                return this.clone().idivn(t);
            };
            r.prototype.egcd = function (t) {
                n(0 === t.negative);
                n(!t.isZero());
                var e = this, i = t.clone();
                e = 0 !== e.negative ? e.umod(t) : e.clone();
                for (var a = new r(1), o = new r(0), s = new r(0), c = new r(1), l = 0; e.isEven() && i.isEven();) {
                    e.iushrn(1);
                    i.iushrn(1);
                    ++l;
                }
                for (var h = i.clone(), u = e.clone(); !e.isZero();) {
                    for (var p = 0, d = 1; 0 == (e.words[0] & d) && p < 26; ++p, d <<= 1);
                    if (p > 0) {
                        e.iushrn(p);
                        for (; p-- > 0;) {
                            if (a.isOdd() || o.isOdd()) {
                                a.iadd(h);
                                o.isub(u);
                            }
                            a.iushrn(1);
                            o.iushrn(1);
                        }
                    }
                    for (var f = 0, m = 1; 0 == (i.words[0] & m) && f < 26; ++f, m <<= 1);
                    if (f > 0) {
                        i.iushrn(f);
                        for (; f-- > 0;) {
                            if (s.isOdd() || c.isOdd()) {
                                s.iadd(h);
                                c.isub(u);
                            }
                            s.iushrn(1);
                            c.iushrn(1);
                        }
                    }
                    if (e.cmp(i) >= 0) {
                        e.isub(i);
                        a.isub(s);
                        o.isub(c);
                    } else {
                        i.isub(e);
                        s.isub(a);
                        c.isub(o);
                    }
                }
                return {
                    a: s,
                    b: c,
                    gcd: i.iushln(l)
                };
            };
            r.prototype._invmp = function (t) {
                n(0 === t.negative);
                n(!t.isZero());
                var e = this, i = t.clone();
                e = 0 !== e.negative ? e.umod(t) : e.clone();
                for (var a, o = new r(1), s = new r(0), c = i.clone(); e.cmpn(1) > 0 && i.cmpn(1) > 0;) {
                    for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                    if (l > 0) {
                        e.iushrn(l);
                        for (; l-- > 0;) {
                            o.isOdd() && o.iadd(c);
                            o.iushrn(1);
                        }
                    }
                    for (var u = 0, p = 1; 0 == (i.words[0] & p) && u < 26; ++u, p <<= 1);
                    if (u > 0) {
                        i.iushrn(u);
                        for (; u-- > 0;) {
                            s.isOdd() && s.iadd(c);
                            s.iushrn(1);
                        }
                    }
                    if (e.cmp(i) >= 0) {
                        e.isub(i);
                        o.isub(s);
                    } else {
                        i.isub(e);
                        s.isub(o);
                    }
                }
                (a = 0 === e.cmpn(1) ? o : s).cmpn(0) < 0 && a.iadd(t);
                return a;
            };
            r.prototype.gcd = function (t) {
                if (this.isZero()) return t.abs();
                if (t.isZero()) return this.abs();
                var e = this.clone(), i = t.clone();
                e.negative = 0;
                i.negative = 0;
                for (var n = 0; e.isEven() && i.isEven(); n++) {
                    e.iushrn(1);
                    i.iushrn(1);
                }
                for (; ;) {
                    for (; e.isEven();) e.iushrn(1);
                    for (; i.isEven();) i.iushrn(1);
                    var a = e.cmp(i);
                    if (a < 0) {
                        var r = e;
                        e = i;
                        i = r;
                    } else if (0 === a || 0 === i.cmpn(1)) break;
                    e.isub(i);
                }
                return i.iushln(n);
            };
            r.prototype.invm = function (t) {
                return this.egcd(t).a.umod(t);
            };
            r.prototype.isEven = function () {
                return 0 == (1 & this.words[0]);
            };
            r.prototype.isOdd = function () {
                return 1 == (1 & this.words[0]);
            };
            r.prototype.andln = function (t) {
                return this.words[0] & t;
            };
            r.prototype.bincn = function (t) {
                n("number" == typeof t);
                var e = t % 26, i = (t - e) / 26, a = 1 << e;
                if (this.length <= i) {
                    this._expand(i + 1);
                    this.words[i] |= a;
                    return this;
                }
                for (var r = a, o = i; 0 !== r && o < this.length; o++) {
                    var s = 0 | this.words[o];
                    r = (s += r) >>> 26;
                    s &= 67108863;
                    this.words[o] = s;
                }
                if (0 !== r) {
                    this.words[o] = r;
                    this.length++;
                }
                return this;
            };
            r.prototype.isZero = function () {
                return 1 === this.length && 0 === this.words[0];
            };
            r.prototype.cmpn = function (t) {
                var e, i = t < 0;
                if (0 !== this.negative && !i) return -1;
                if (0 === this.negative && i) return 1;
                this.strip();
                if (this.length > 1) e = 1; else {
                    i && (t = -t);
                    n(t <= 67108863, "Number is too big");
                    var a = 0 | this.words[0];
                    e = a === t ? 0 : a < t ? -1 : 1;
                }
                return 0 !== this.negative ? 0 | -e : e;
            };
            r.prototype.cmp = function (t) {
                if (0 !== this.negative && 0 === t.negative) return -1;
                if (0 === this.negative && 0 !== t.negative) return 1;
                var e = this.ucmp(t);
                return 0 !== this.negative ? 0 | -e : e;
            };
            r.prototype.ucmp = function (t) {
                if (this.length > t.length) return 1;
                if (this.length < t.length) return -1;
                for (var e = 0, i = this.length - 1; i >= 0; i--) {
                    var n = 0 | this.words[i], a = 0 | t.words[i];
                    if (n !== a) {
                        n < a ? e = -1 : n > a && (e = 1);
                        break;
                    }
                }
                return e;
            };
            r.prototype.gtn = function (t) {
                return 1 === this.cmpn(t);
            };
            r.prototype.gt = function (t) {
                return 1 === this.cmp(t);
            };
            r.prototype.gten = function (t) {
                return this.cmpn(t) >= 0;
            };
            r.prototype.gte = function (t) {
                return this.cmp(t) >= 0;
            };
            r.prototype.ltn = function (t) {
                return -1 === this.cmpn(t);
            };
            r.prototype.lt = function (t) {
                return -1 === this.cmp(t);
            };
            r.prototype.lten = function (t) {
                return this.cmpn(t) <= 0;
            };
            r.prototype.lte = function (t) {
                return this.cmp(t) <= 0;
            };
            r.prototype.eqn = function (t) {
                return 0 === this.cmpn(t);
            };
            r.prototype.eq = function (t) {
                return 0 === this.cmp(t);
            };
            r.red = function (t) {
                return new w(t);
            };
            r.prototype.toRed = function (t) {
                n(!this.red, "Already a number in reduction context");
                n(0 === this.negative, "red works only with positives");
                return t.convertTo(this)._forceRed(t);
            };
            r.prototype.fromRed = function () {
                n(this.red, "fromRed works only with numbers in reduction context");
                return this.red.convertFrom(this);
            };
            r.prototype._forceRed = function (t) {
                this.red = t;
                return this;
            };
            r.prototype.forceRed = function (t) {
                n(!this.red, "Already a number in reduction context");
                return this._forceRed(t);
            };
            r.prototype.redAdd = function (t) {
                n(this.red, "redAdd works only with red numbers");
                return this.red.add(this, t);
            };
            r.prototype.redIAdd = function (t) {
                n(this.red, "redIAdd works only with red numbers");
                return this.red.iadd(this, t);
            };
            r.prototype.redSub = function (t) {
                n(this.red, "redSub works only with red numbers");
                return this.red.sub(this, t);
            };
            r.prototype.redISub = function (t) {
                n(this.red, "redISub works only with red numbers");
                return this.red.isub(this, t);
            };
            r.prototype.redShl = function (t) {
                n(this.red, "redShl works only with red numbers");
                return this.red.shl(this, t);
            };
            r.prototype.redMul = function (t) {
                n(this.red, "redMul works only with red numbers");
                this.red._verify2(this, t);
                return this.red.mul(this, t);
            };
            r.prototype.redIMul = function (t) {
                n(this.red, "redMul works only with red numbers");
                this.red._verify2(this, t);
                return this.red.imul(this, t);
            };
            r.prototype.redSqr = function () {
                n(this.red, "redSqr works only with red numbers");
                this.red._verify1(this);
                return this.red.sqr(this);
            };
            r.prototype.redISqr = function () {
                n(this.red, "redISqr works only with red numbers");
                this.red._verify1(this);
                return this.red.isqr(this);
            };
            r.prototype.redSqrt = function () {
                n(this.red, "redSqrt works only with red numbers");
                this.red._verify1(this);
                return this.red.sqrt(this);
            };
            r.prototype.redInvm = function () {
                n(this.red, "redInvm works only with red numbers");
                this.red._verify1(this);
                return this.red.invm(this);
            };
            r.prototype.redNeg = function () {
                n(this.red, "redNeg works only with red numbers");
                this.red._verify1(this);
                return this.red.neg(this);
            };
            r.prototype.redPow = function (t) {
                n(this.red && !t.red, "redPow(normalNum)");
                this.red._verify1(this);
                return this.red.pow(this, t);
            };
            var v = {
                k256: null,
                p224: null,
                p192: null,
                p25519: null
            };
            function b(t, e) {
                this.name = t;
                this.p = new r(e, 16);
                this.n = this.p.bitLength();
                this.k = new r(1).iushln(this.n).isub(this.p);
                this.tmp = this._tmp();
            }
            b.prototype._tmp = function () {
                var t = new r(null);
                t.words = new Array(Math.ceil(this.n / 13));
                return t;
            };
            b.prototype.ireduce = function (t) {
                var e, i = t;
                do {
                    this.split(i, this.tmp);
                    e = (i = (i = this.imulK(i)).iadd(this.tmp)).bitLength();
                } while (e > this.n);
                var n = e < this.n ? -1 : i.ucmp(this.p);
                if (0 === n) {
                    i.words[0] = 0;
                    i.length = 1;
                } else n > 0 ? i.isub(this.p) : void 0 !== i.strip ? i.strip() : i._strip();
                return i;
            };
            b.prototype.split = function (t, e) {
                t.iushrn(this.n, 0, e);
            };
            b.prototype.imulK = function (t) {
                return t.imul(this.k);
            };
            function M() {
                b.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            a(M, b);
            M.prototype.split = function (t, e) {
                for (var i = Math.min(t.length, 9), n = 0; n < i; n++) e.words[n] = t.words[n];
                e.length = i;
                if (t.length <= 9) {
                    t.words[0] = 0;
                    t.length = 1;
                } else {
                    var a = t.words[9];
                    e.words[e.length++] = 4194303 & a;
                    for (n = 10; n < t.length; n++) {
                        var r = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & r) << 4 | a >>> 22;
                        a = r;
                    }
                    a >>>= 22;
                    t.words[n - 10] = a;
                    0 === a && t.length > 10 ? t.length -= 10 : t.length -= 9;
                }
            };
            M.prototype.imulK = function (t) {
                t.words[t.length] = 0;
                t.words[t.length + 1] = 0;
                t.length += 2;
                for (var e = 0, i = 0; i < t.length; i++) {
                    var n = 0 | t.words[i];
                    e += 977 * n;
                    t.words[i] = 67108863 & e;
                    e = 64 * n + (e / 67108864 | 0);
                }
                if (0 === t.words[t.length - 1]) {
                    t.length--;
                    0 === t.words[t.length - 1] && t.length--;
                }
                return t;
            };
            function S() {
                b.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            a(S, b);
            function k() {
                b.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            a(k, b);
            function C() {
                b.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            a(C, b);
            C.prototype.imulK = function (t) {
                for (var e = 0, i = 0; i < t.length; i++) {
                    var n = 19 * (0 | t.words[i]) + e, a = 67108863 & n;
                    n >>>= 26;
                    t.words[i] = a;
                    e = n;
                }
                0 !== e && (t.words[t.length++] = e);
                return t;
            };
            r._prime = function (t) {
                if (v[t]) return v[t];
                var e;
                if ("k256" === t) e = new M(); else if ("p224" === t) e = new S(); else if ("p192" === t) e = new k(); else {
                    if ("p25519" !== t) throw new Error("Unknown prime " + t);
                    e = new C();
                }
                v[t] = e;
                return e;
            };
            function w(t) {
                if ("string" == typeof t) {
                    var e = r._prime(t);
                    this.m = e.p;
                    this.prime = e;
                } else {
                    n(t.gtn(1), "modulus must be greater than 1");
                    this.m = t;
                    this.prime = null;
                }
            }
            w.prototype._verify1 = function (t) {
                n(0 === t.negative, "red works only with positives");
                n(t.red, "red works only with red numbers");
            };
            w.prototype._verify2 = function (t, e) {
                n(0 == (t.negative | e.negative), "red works only with positives");
                n(t.red && t.red === e.red, "red works only with red numbers");
            };
            w.prototype.imod = function (t) {
                return this.prime ? this.prime.ireduce(t)._forceRed(this) : t.umod(this.m)._forceRed(this);
            };
            w.prototype.neg = function (t) {
                return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
            };
            w.prototype.add = function (t, e) {
                this._verify2(t, e);
                var i = t.add(e);
                i.cmp(this.m) >= 0 && i.isub(this.m);
                return i._forceRed(this);
            };
            w.prototype.iadd = function (t, e) {
                this._verify2(t, e);
                var i = t.iadd(e);
                i.cmp(this.m) >= 0 && i.isub(this.m);
                return i;
            };
            w.prototype.sub = function (t, e) {
                this._verify2(t, e);
                var i = t.sub(e);
                i.cmpn(0) < 0 && i.iadd(this.m);
                return i._forceRed(this);
            };
            w.prototype.isub = function (t, e) {
                this._verify2(t, e);
                var i = t.isub(e);
                i.cmpn(0) < 0 && i.iadd(this.m);
                return i;
            };
            w.prototype.shl = function (t, e) {
                this._verify1(t);
                return this.imod(t.ushln(e));
            };
            w.prototype.imul = function (t, e) {
                this._verify2(t, e);
                return this.imod(t.imul(e));
            };
            w.prototype.mul = function (t, e) {
                this._verify2(t, e);
                return this.imod(t.mul(e));
            };
            w.prototype.isqr = function (t) {
                return this.imul(t, t.clone());
            };
            w.prototype.sqr = function (t) {
                return this.mul(t, t);
            };
            w.prototype.sqrt = function (t) {
                if (t.isZero()) return t.clone();
                var e = this.m.andln(3);
                n(e % 2 == 1);
                if (3 === e) {
                    var i = this.m.add(new r(1)).iushrn(2);
                    return this.pow(t, i);
                }
                for (var a = this.m.subn(1), o = 0; !a.isZero() && 0 === a.andln(1);) {
                    o++;
                    a.iushrn(1);
                }
                n(!a.isZero());
                var s = new r(1).toRed(this), c = s.redNeg(), l = this.m.subn(1).iushrn(1), h = this.m.bitLength();
                h = new r(2 * h * h).toRed(this);
                for (; 0 !== this.pow(h, l).cmp(c);) h.redIAdd(c);
                for (var u = this.pow(h, a), p = this.pow(t, a.addn(1).iushrn(1)), d = this.pow(t, a), f = o; 0 !== d.cmp(s);) {
                    for (var m = d, g = 0; 0 !== m.cmp(s); g++) m = m.redSqr();
                    n(g < f);
                    var _ = this.pow(u, new r(1).iushln(f - g - 1));
                    p = p.redMul(_);
                    u = _.redSqr();
                    d = d.redMul(u);
                    f = g;
                }
                return p;
            };
            w.prototype.invm = function (t) {
                var e = t._invmp(this.m);
                if (0 !== e.negative) {
                    e.negative = 0;
                    return this.imod(e).redNeg();
                }
                return this.imod(e);
            };
            w.prototype.pow = function (t, e) {
                if (e.isZero()) return new r(1).toRed(this);
                if (0 === e.cmpn(1)) return t.clone();
                var i = new Array(16);
                i[0] = new r(1).toRed(this);
                i[1] = t;
                for (var n = 2; n < i.length; n++) i[n] = this.mul(i[n - 1], t);
                var a = i[0], o = 0, s = 0, c = e.bitLength() % 26;
                0 === c && (c = 26);
                for (n = e.length - 1; n >= 0; n--) {
                    for (var l = e.words[n], h = c - 1; h >= 0; h--) {
                        var u = l >> h & 1;
                        a !== i[0] && (a = this.sqr(a));
                        if (0 !== u || 0 !== o) {
                            o <<= 1;
                            o |= u;
                            if (4 == ++s || 0 === n && 0 === h) {
                                a = this.mul(a, i[o]);
                                s = 0;
                                o = 0;
                            }
                        } else s = 0;
                    }
                    c = 26;
                }
                return a;
            };
            w.prototype.convertTo = function (t) {
                var e = t.umod(this.m);
                return e === t ? e.clone() : e;
            };
            w.prototype.convertFrom = function (t) {
                var e = t.clone();
                e.red = null;
                return e;
            };
            r.mont = function (t) {
                return new A(t);
            };
            function A(t) {
                w.call(this, t);
                this.shift = this.m.bitLength();
                this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26);
                this.r = new r(1).iushln(this.shift);
                this.r2 = this.imod(this.r.sqr());
                this.rinv = this.r._invmp(this.m);
                this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
                this.minv = this.minv.umod(this.r);
                this.minv = this.r.sub(this.minv);
            }
            a(A, w);
            A.prototype.convertTo = function (t) {
                return this.imod(t.ushln(this.shift));
            };
            A.prototype.convertFrom = function (t) {
                var e = this.imod(t.mul(this.rinv));
                e.red = null;
                return e;
            };
            A.prototype.imul = function (t, e) {
                if (t.isZero() || e.isZero()) {
                    t.words[0] = 0;
                    t.length = 1;
                    return t;
                }
                var i = t.imul(e), n = i.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), a = i.isub(n).iushrn(this.shift), r = a;
                a.cmp(this.m) >= 0 ? r = a.isub(this.m) : a.cmpn(0) < 0 && (r = a.iadd(this.m));
                return r._forceRed(this);
            };
            A.prototype.mul = function (t, e) {
                if (t.isZero() || e.isZero()) return new r(0)._forceRed(this);
                var i = t.mul(e), n = i.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), a = i.isub(n).iushrn(this.shift), o = a;
                a.cmp(this.m) >= 0 ? o = a.isub(this.m) : a.cmpn(0) < 0 && (o = a.iadd(this.m));
                return o._forceRed(this);
            };
            A.prototype.invm = function (t) {
                return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
            };
        })("undefined" == typeof e || e, this);
    }, {
        buffer: 19
    }],
    16: [function (t, e, i) {
        "use strict";
        i.byteLength = function (t) {
            var e = l(t), i = e[0], n = e[1];
            return 3 * (i + n) / 4 - n;
        };
        i.toByteArray = function (t) {
            var e, i, n = l(t), o = n[0], s = n[1], c = new r(h(0, o, s)), u = 0, p = s > 0 ? o - 4 : o;
            for (i = 0; i < p; i += 4) {
                e = a[t.charCodeAt(i)] << 18 | a[t.charCodeAt(i + 1)] << 12 | a[t.charCodeAt(i + 2)] << 6 | a[t.charCodeAt(i + 3)];
                c[u++] = e >> 16 & 255;
                c[u++] = e >> 8 & 255;
                c[u++] = 255 & e;
            }
            if (2 === s) {
                e = a[t.charCodeAt(i)] << 2 | a[t.charCodeAt(i + 1)] >> 4;
                c[u++] = 255 & e;
            }
            if (1 === s) {
                e = a[t.charCodeAt(i)] << 10 | a[t.charCodeAt(i + 1)] << 4 | a[t.charCodeAt(i + 2)] >> 2;
                c[u++] = e >> 8 & 255;
                c[u++] = 255 & e;
            }
            return c;
        };
        i.fromByteArray = function (t) {
            for (var e, i = t.length, a = i % 3, r = [], o = 0, s = i - a; o < s; o += 16383) r.push(u(t, o, o + 16383 > s ? s : o + 16383));
            if (1 === a) {
                e = t[i - 1];
                r.push(n[e >> 2] + n[e << 4 & 63] + "==");
            } else if (2 === a) {
                e = (t[i - 2] << 8) + t[i - 1];
                r.push(n[e >> 10] + n[e >> 4 & 63] + n[e << 2 & 63] + "=");
            }
            return r.join("");
        };
        for (var n = [], a = [], r = "undefined" != typeof Uint8Array ? Uint8Array : Array, o = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, c = o.length; s < c; ++s) {
            n[s] = o[s];
            a[o.charCodeAt(s)] = s;
        }
        a["-".charCodeAt(0)] = 62;
        a["_".charCodeAt(0)] = 63;
        function l(t) {
            var e = t.length;
            if (e % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
            var i = t.indexOf("=");
            -1 === i && (i = e);
            return [i, i === e ? 0 : 4 - i % 4];
        }
        function h(t, e, i) {
            return 3 * (e + i) / 4 - i;
        }
        function u(t, e, i) {
            for (var a, r, o = [], s = e; s < i; s += 3) {
                a = (t[s] << 16 & 16711680) + (t[s + 1] << 8 & 65280) + (255 & t[s + 2]);
                o.push(n[(r = a) >> 18 & 63] + n[r >> 12 & 63] + n[r >> 6 & 63] + n[63 & r]);
            }
            return o.join("");
        }
    }, {}],
    17: [function (t, e) {
        (function (e, i) {
            "use strict";
            function n(t, e) {
                if (!t) throw new Error(e || "Assertion failed");
            }
            function a(t, e) {
                t.super_ = e;
                var i = function () { };
                i.prototype = e.prototype;
                t.prototype = new i();
                t.prototype.constructor = t;
            }
            function r(t, e, i) {
                if (r.isBN(t)) return t;
                this.negative = 0;
                this.words = null;
                this.length = 0;
                this.red = null;
                if (null !== t) {
                    if ("le" === e || "be" === e) {
                        i = e;
                        e = 10;
                    }
                    this._init(t || 0, e || 10, i || "be");
                }
            }
            "object" == typeof e ? e.exports = r : i.BN = r;
            r.BN = r;
            r.wordSize = 26;
            var o;
            try {
                o = "undefined" != typeof window && "undefined" != typeof window.Buffer ? window.Buffer : t("buffer").Buffer;
            } catch (t) { }
            r.isBN = function (t) {
                return t instanceof r || null !== t && "object" == typeof t && t.constructor.wordSize === r.wordSize && Array.isArray(t.words);
            };
            r.max = function (t, e) {
                return t.cmp(e) > 0 ? t : e;
            };
            r.min = function (t, e) {
                return t.cmp(e) < 0 ? t : e;
            };
            r.prototype._init = function (t, e, i) {
                if ("number" == typeof t) return this._initNumber(t, e, i);
                if ("object" == typeof t) return this._initArray(t, e, i);
                "hex" === e && (e = 16);
                n(e === (0 | e) && e >= 2 && e <= 36);
                var a = 0;
                if ("-" === (t = t.toString().replace(/\s+/g, ""))[0]) {
                    a++;
                    this.negative = 1;
                }
                if (a < t.length) if (16 === e) this._parseHex(t, a, i); else {
                    this._parseBase(t, e, a);
                    "le" === i && this._initArray(this.toArray(), e, i);
                }
            };
            r.prototype._initNumber = function (t, e, i) {
                if (t < 0) {
                    this.negative = 1;
                    t = -t;
                }
                if (t < 67108864) {
                    this.words = [67108863 & t];
                    this.length = 1;
                } else if (t < 4503599627370496) {
                    this.words = [67108863 & t, t / 67108864 & 67108863];
                    this.length = 2;
                } else {
                    n(t < 9007199254740992);
                    this.words = [67108863 & t, t / 67108864 & 67108863, 1];
                    this.length = 3;
                }
                "le" === i && this._initArray(this.toArray(), e, i);
            };
            r.prototype._initArray = function (t, e, i) {
                n("number" == typeof t.length);
                if (t.length <= 0) {
                    this.words = [0];
                    this.length = 1;
                    return this;
                }
                this.length = Math.ceil(t.length / 3);
                this.words = new Array(this.length);
                for (var a = 0; a < this.length; a++) this.words[a] = 0;
                var r, o, s = 0;
                if ("be" === i) for (a = t.length - 1, r = 0; a >= 0; a -= 3) {
                    o = t[a] | t[a - 1] << 8 | t[a - 2] << 16;
                    this.words[r] |= o << s & 67108863;
                    this.words[r + 1] = o >>> 26 - s & 67108863;
                    if ((s += 24) >= 26) {
                        s -= 26;
                        r++;
                    }
                } else if ("le" === i) for (a = 0, r = 0; a < t.length; a += 3) {
                    o = t[a] | t[a + 1] << 8 | t[a + 2] << 16;
                    this.words[r] |= o << s & 67108863;
                    this.words[r + 1] = o >>> 26 - s & 67108863;
                    if ((s += 24) >= 26) {
                        s -= 26;
                        r++;
                    }
                }
                return this._strip();
            };
            function s(t, e) {
                var i = t.charCodeAt(e);
                if (i >= 48 && i <= 57) return i - 48;
                if (i >= 65 && i <= 70) return i - 55;
                if (i >= 97 && i <= 102) return i - 87;
                n(!1, "Invalid character in " + t);
            }
            function c(t, e, i) {
                var n = s(t, i);
                i - 1 >= e && (n |= s(t, i - 1) << 4);
                return n;
            }
            r.prototype._parseHex = function (t, e, i) {
                this.length = Math.ceil((t.length - e) / 6);
                this.words = new Array(this.length);
                for (var n = 0; n < this.length; n++) this.words[n] = 0;
                var a, r = 0, o = 0;
                if ("be" === i) for (n = t.length - 1; n >= e; n -= 2) {
                    a = c(t, e, n) << r;
                    this.words[o] |= 67108863 & a;
                    if (r >= 18) {
                        r -= 18;
                        o += 1;
                        this.words[o] |= a >>> 26;
                    } else r += 8;
                } else for (n = (t.length - e) % 2 == 0 ? e + 1 : e; n < t.length; n += 2) {
                    a = c(t, e, n) << r;
                    this.words[o] |= 67108863 & a;
                    if (r >= 18) {
                        r -= 18;
                        o += 1;
                        this.words[o] |= a >>> 26;
                    } else r += 8;
                }
                this._strip();
            };
            function l(t, e, i, a) {
                for (var r = 0, o = 0, s = Math.min(t.length, i), c = e; c < s; c++) {
                    var l = t.charCodeAt(c) - 48;
                    r *= a;
                    o = l >= 49 ? l - 49 + 10 : l >= 17 ? l - 17 + 10 : l;
                    n(l >= 0 && o < a, "Invalid character");
                    r += o;
                }
                return r;
            }
            r.prototype._parseBase = function (t, e, i) {
                this.words = [0];
                this.length = 1;
                for (var n = 0, a = 1; a <= 67108863; a *= e) n++;
                n--;
                a = a / e | 0;
                for (var r = t.length - i, o = r % n, s = Math.min(r, r - o) + i, c = 0, h = i; h < s; h += n) {
                    c = l(t, h, h + n, e);
                    this.imuln(a);
                    this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                }
                if (0 !== o) {
                    var u = 1;
                    c = l(t, h, t.length, e);
                    for (h = 0; h < o; h++) u *= e;
                    this.imuln(u);
                    this.words[0] + c < 67108864 ? this.words[0] += c : this._iaddn(c);
                }
                this._strip();
            };
            r.prototype.copy = function (t) {
                t.words = new Array(this.length);
                for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
                t.length = this.length;
                t.negative = this.negative;
                t.red = this.red;
            };
            function h(t, e) {
                t.words = e.words;
                t.length = e.length;
                t.negative = e.negative;
                t.red = e.red;
            }
            r.prototype._move = function (t) {
                h(t, this);
            };
            r.prototype.clone = function () {
                var t = new r(null);
                this.copy(t);
                return t;
            };
            r.prototype._expand = function (t) {
                for (; this.length < t;) this.words[this.length++] = 0;
                return this;
            };
            r.prototype._strip = function () {
                for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                return this._normSign();
            };
            r.prototype._normSign = function () {
                1 === this.length && 0 === this.words[0] && (this.negative = 0);
                return this;
            };
            if ("undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                r.prototype[Symbol.for("nodejs.util.inspect.custom")] = u;
            } catch (t) {
                r.prototype.inspect = u;
            } else r.prototype.inspect = u;
            function u() {
                return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            }
            var p = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], d = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], f = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
            r.prototype.toString = function (t, e) {
                e = 0 | e || 1;
                var i;
                if (16 === (t = t || 10) || "hex" === t) {
                    i = "";
                    for (var a = 0, r = 0, o = 0; o < this.length; o++) {
                        var s = this.words[o], c = (16777215 & (s << a | r)).toString(16);
                        i = 0 != (r = s >>> 24 - a & 16777215) || o !== this.length - 1 ? p[6 - c.length] + c + i : c + i;
                        if ((a += 2) >= 26) {
                            a -= 26;
                            o--;
                        }
                    }
                    0 !== r && (i = r.toString(16) + i);
                    for (; i.length % e != 0;) i = "0" + i;
                    0 !== this.negative && (i = "-" + i);
                    return i;
                }
                if (t === (0 | t) && t >= 2 && t <= 36) {
                    var l = d[t], h = f[t];
                    i = "";
                    var u = this.clone();
                    u.negative = 0;
                    for (; !u.isZero();) {
                        var m = u.modrn(h).toString(t);
                        i = (u = u.idivn(h)).isZero() ? m + i : p[l - m.length] + m + i;
                    }
                    this.isZero() && (i = "0" + i);
                    for (; i.length % e != 0;) i = "0" + i;
                    0 !== this.negative && (i = "-" + i);
                    return i;
                }
                n(!1, "Base should be between 2 and 36");
            };
            r.prototype.toNumber = function () {
                var t = this.words[0];
                2 === this.length ? t += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits");
                return 0 !== this.negative ? -t : t;
            };
            r.prototype.toJSON = function () {
                return this.toString(16, 2);
            };
            o && (r.prototype.toBuffer = function (t, e) {
                return this.toArrayLike(o, t, e);
            });
            r.prototype.toArray = function (t, e) {
                return this.toArrayLike(Array, t, e);
            };
            var m = function (t, e) {
                return t.allocUnsafe ? t.allocUnsafe(e) : new t(e);
            };
            r.prototype.toArrayLike = function (t, e, i) {
                this._strip();
                var a = this.byteLength(), r = i || Math.max(1, a);
                n(a <= r, "byte array longer than desired length");
                n(r > 0, "Requested array length <= 0");
                var o = m(t, r);
                this["_toArrayLike" + ("le" === e ? "LE" : "BE")](o, a);
                return o;
            };
            r.prototype._toArrayLikeLE = function (t) {
                for (var e = 0, i = 0, n = 0, a = 0; n < this.length; n++) {
                    var r = this.words[n] << a | i;
                    t[e++] = 255 & r;
                    e < t.length && (t[e++] = r >> 8 & 255);
                    e < t.length && (t[e++] = r >> 16 & 255);
                    if (6 === a) {
                        e < t.length && (t[e++] = r >> 24 & 255);
                        i = 0;
                        a = 0;
                    } else {
                        i = r >>> 24;
                        a += 2;
                    }
                }
                if (e < t.length) {
                    t[e++] = i;
                    for (; e < t.length;) t[e++] = 0;
                }
            };
            r.prototype._toArrayLikeBE = function (t) {
                for (var e = t.length - 1, i = 0, n = 0, a = 0; n < this.length; n++) {
                    var r = this.words[n] << a | i;
                    t[e--] = 255 & r;
                    e >= 0 && (t[e--] = r >> 8 & 255);
                    e >= 0 && (t[e--] = r >> 16 & 255);
                    if (6 === a) {
                        e >= 0 && (t[e--] = r >> 24 & 255);
                        i = 0;
                        a = 0;
                    } else {
                        i = r >>> 24;
                        a += 2;
                    }
                }
                if (e >= 0) {
                    t[e--] = i;
                    for (; e >= 0;) t[e--] = 0;
                }
            };
            Math.clz32 ? r.prototype._countBits = function (t) {
                return 32 - Math.clz32(t);
            } : r.prototype._countBits = function (t) {
                var e = t, i = 0;
                if (e >= 4096) {
                    i += 13;
                    e >>>= 13;
                }
                if (e >= 64) {
                    i += 7;
                    e >>>= 7;
                }
                if (e >= 8) {
                    i += 4;
                    e >>>= 4;
                }
                if (e >= 2) {
                    i += 2;
                    e >>>= 2;
                }
                return i + e;
            };
            r.prototype._zeroBits = function (t) {
                if (0 === t) return 26;
                var e = t, i = 0;
                if (0 == (8191 & e)) {
                    i += 13;
                    e >>>= 13;
                }
                if (0 == (127 & e)) {
                    i += 7;
                    e >>>= 7;
                }
                if (0 == (15 & e)) {
                    i += 4;
                    e >>>= 4;
                }
                if (0 == (3 & e)) {
                    i += 2;
                    e >>>= 2;
                }
                0 == (1 & e) && i++;
                return i;
            };
            r.prototype.bitLength = function () {
                var t = this.words[this.length - 1], e = this._countBits(t);
                return 26 * (this.length - 1) + e;
            };
            function g(t) {
                for (var e = new Array(t.bitLength()), i = 0; i < e.length; i++) {
                    var n = i / 26 | 0, a = i % 26;
                    e[i] = t.words[n] >>> a & 1;
                }
                return e;
            }
            r.prototype.zeroBits = function () {
                if (this.isZero()) return 0;
                for (var t = 0, e = 0; e < this.length; e++) {
                    var i = this._zeroBits(this.words[e]);
                    t += i;
                    if (26 !== i) break;
                }
                return t;
            };
            r.prototype.byteLength = function () {
                return Math.ceil(this.bitLength() / 8);
            };
            r.prototype.toTwos = function (t) {
                return 0 !== this.negative ? this.abs().inotn(t).iaddn(1) : this.clone();
            };
            r.prototype.fromTwos = function (t) {
                return this.testn(t - 1) ? this.notn(t).iaddn(1).ineg() : this.clone();
            };
            r.prototype.isNeg = function () {
                return 0 !== this.negative;
            };
            r.prototype.neg = function () {
                return this.clone().ineg();
            };
            r.prototype.ineg = function () {
                this.isZero() || (this.negative ^= 1);
                return this;
            };
            r.prototype.iuor = function (t) {
                for (; this.length < t.length;) this.words[this.length++] = 0;
                for (var e = 0; e < t.length; e++) this.words[e] = this.words[e] | t.words[e];
                return this._strip();
            };
            r.prototype.ior = function (t) {
                n(0 == (this.negative | t.negative));
                return this.iuor(t);
            };
            r.prototype.or = function (t) {
                return this.length > t.length ? this.clone().ior(t) : t.clone().ior(this);
            };
            r.prototype.uor = function (t) {
                return this.length > t.length ? this.clone().iuor(t) : t.clone().iuor(this);
            };
            r.prototype.iuand = function (t) {
                var e;
                e = this.length > t.length ? t : this;
                for (var i = 0; i < e.length; i++) this.words[i] = this.words[i] & t.words[i];
                this.length = e.length;
                return this._strip();
            };
            r.prototype.iand = function (t) {
                n(0 == (this.negative | t.negative));
                return this.iuand(t);
            };
            r.prototype.and = function (t) {
                return this.length > t.length ? this.clone().iand(t) : t.clone().iand(this);
            };
            r.prototype.uand = function (t) {
                return this.length > t.length ? this.clone().iuand(t) : t.clone().iuand(this);
            };
            r.prototype.iuxor = function (t) {
                var e, i;
                if (this.length > t.length) {
                    e = this;
                    i = t;
                } else {
                    e = t;
                    i = this;
                }
                for (var n = 0; n < i.length; n++) this.words[n] = e.words[n] ^ i.words[n];
                if (this !== e) for (; n < e.length; n++) this.words[n] = e.words[n];
                this.length = e.length;
                return this._strip();
            };
            r.prototype.ixor = function (t) {
                n(0 == (this.negative | t.negative));
                return this.iuxor(t);
            };
            r.prototype.xor = function (t) {
                return this.length > t.length ? this.clone().ixor(t) : t.clone().ixor(this);
            };
            r.prototype.uxor = function (t) {
                return this.length > t.length ? this.clone().iuxor(t) : t.clone().iuxor(this);
            };
            r.prototype.inotn = function (t) {
                n("number" == typeof t && t >= 0);
                var e = 0 | Math.ceil(t / 26), i = t % 26;
                this._expand(e);
                i > 0 && e--;
                for (var a = 0; a < e; a++) this.words[a] = 67108863 & ~this.words[a];
                i > 0 && (this.words[a] = ~this.words[a] & 67108863 >> 26 - i);
                return this._strip();
            };
            r.prototype.notn = function (t) {
                return this.clone().inotn(t);
            };
            r.prototype.setn = function (t, e) {
                n("number" == typeof t && t >= 0);
                var i = t / 26 | 0, a = t % 26;
                this._expand(i + 1);
                this.words[i] = e ? this.words[i] | 1 << a : this.words[i] & ~(1 << a);
                return this._strip();
            };
            r.prototype.iadd = function (t) {
                var e, i, n;
                if (0 !== this.negative && 0 === t.negative) {
                    this.negative = 0;
                    e = this.isub(t);
                    this.negative ^= 1;
                    return this._normSign();
                }
                if (0 === this.negative && 0 !== t.negative) {
                    t.negative = 0;
                    e = this.isub(t);
                    t.negative = 1;
                    return e._normSign();
                }
                if (this.length > t.length) {
                    i = this;
                    n = t;
                } else {
                    i = t;
                    n = this;
                }
                for (var a = 0, r = 0; r < n.length; r++) {
                    e = (0 | i.words[r]) + (0 | n.words[r]) + a;
                    this.words[r] = 67108863 & e;
                    a = e >>> 26;
                }
                for (; 0 !== a && r < i.length; r++) {
                    e = (0 | i.words[r]) + a;
                    this.words[r] = 67108863 & e;
                    a = e >>> 26;
                }
                this.length = i.length;
                if (0 !== a) {
                    this.words[this.length] = a;
                    this.length++;
                } else if (i !== this) for (; r < i.length; r++) this.words[r] = i.words[r];
                return this;
            };
            r.prototype.add = function (t) {
                var e;
                if (0 !== t.negative && 0 === this.negative) {
                    t.negative = 0;
                    e = this.sub(t);
                    t.negative ^= 1;
                    return e;
                }
                if (0 === t.negative && 0 !== this.negative) {
                    this.negative = 0;
                    e = t.sub(this);
                    this.negative = 1;
                    return e;
                }
                return this.length > t.length ? this.clone().iadd(t) : t.clone().iadd(this);
            };
            r.prototype.isub = function (t) {
                if (0 !== t.negative) {
                    t.negative = 0;
                    var e = this.iadd(t);
                    t.negative = 1;
                    return e._normSign();
                }
                if (0 !== this.negative) {
                    this.negative = 0;
                    this.iadd(t);
                    this.negative = 1;
                    return this._normSign();
                }
                var i, n, a = this.cmp(t);
                if (0 === a) {
                    this.negative = 0;
                    this.length = 1;
                    this.words[0] = 0;
                    return this;
                }
                if (a > 0) {
                    i = this;
                    n = t;
                } else {
                    i = t;
                    n = this;
                }
                for (var r = 0, o = 0; o < n.length; o++) {
                    r = (e = (0 | i.words[o]) - (0 | n.words[o]) + r) >> 26;
                    this.words[o] = 67108863 & e;
                }
                for (; 0 !== r && o < i.length; o++) {
                    r = (e = (0 | i.words[o]) + r) >> 26;
                    this.words[o] = 67108863 & e;
                }
                if (0 === r && o < i.length && i !== this) for (; o < i.length; o++) this.words[o] = i.words[o];
                this.length = Math.max(this.length, o);
                i !== this && (this.negative = 1);
                return this._strip();
            };
            r.prototype.sub = function (t) {
                return this.clone().isub(t);
            };
            function _(t, e, i) {
                i.negative = e.negative ^ t.negative;
                var n = t.length + e.length | 0;
                i.length = n;
                n = n - 1 | 0;
                var a = 0 | t.words[0], r = 0 | e.words[0], o = a * r, s = 67108863 & o, c = o / 67108864 | 0;
                i.words[0] = s;
                for (var l = 1; l < n; l++) {
                    for (var h = c >>> 26, u = 67108863 & c, p = Math.min(l, e.length - 1), d = Math.max(0, l - t.length + 1); d <= p; d++) {
                        var f = l - d | 0;
                        h += (o = (a = 0 | t.words[f]) * (r = 0 | e.words[d]) + u) / 67108864 | 0;
                        u = 67108863 & o;
                    }
                    i.words[l] = 0 | u;
                    c = 0 | h;
                }
                0 !== c ? i.words[l] = 0 | c : i.length--;
                return i._strip();
            }
            var y = function (t, e, i) {
                var n, a, r, o = t.words, s = e.words, c = i.words, l = 0, h = 0 | o[0], u = 8191 & h, p = h >>> 13, d = 0 | o[1], f = 8191 & d, m = d >>> 13, g = 0 | o[2], _ = 8191 & g, y = g >>> 13, v = 0 | o[3], b = 8191 & v, M = v >>> 13, S = 0 | o[4], k = 8191 & S, C = S >>> 13, w = 0 | o[5], A = 8191 & w, T = w >>> 13, D = 0 | o[6], P = 8191 & D, E = D >>> 13, B = 0 | o[7], F = 8191 & B, N = B >>> 13, x = 0 | o[8], R = 8191 & x, I = x >>> 13, G = 0 | o[9], O = 8191 & G, L = G >>> 13, j = 0 | s[0], U = 8191 & j, Y = j >>> 13, H = 0 | s[1], W = 8191 & H, V = H >>> 13, z = 0 | s[2], J = 8191 & z, X = z >>> 13, q = 0 | s[3], K = 8191 & q, Z = q >>> 13, Q = 0 | s[4], $ = 8191 & Q, tt = Q >>> 13, et = 0 | s[5], it = 8191 & et, nt = et >>> 13, at = 0 | s[6], rt = 8191 & at, ot = at >>> 13, st = 0 | s[7], ct = 8191 & st, lt = st >>> 13, ht = 0 | s[8], ut = 8191 & ht, pt = ht >>> 13, dt = 0 | s[9], ft = 8191 & dt, mt = dt >>> 13;
                i.negative = t.negative ^ e.negative;
                i.length = 19;
                var gt = (l + (n = Math.imul(u, U)) | 0) + ((8191 & (a = (a = Math.imul(u, Y)) + Math.imul(p, U) | 0)) << 13) | 0;
                l = ((r = Math.imul(p, Y)) + (a >>> 13) | 0) + (gt >>> 26) | 0;
                gt &= 67108863;
                n = Math.imul(f, U);
                a = (a = Math.imul(f, Y)) + Math.imul(m, U) | 0;
                r = Math.imul(m, Y);
                var _t = (l + (n = n + Math.imul(u, W) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, V) | 0) + Math.imul(p, W) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, V) | 0) + (a >>> 13) | 0) + (_t >>> 26) | 0;
                _t &= 67108863;
                n = Math.imul(_, U);
                a = (a = Math.imul(_, Y)) + Math.imul(y, U) | 0;
                r = Math.imul(y, Y);
                n = n + Math.imul(f, W) | 0;
                a = (a = a + Math.imul(f, V) | 0) + Math.imul(m, W) | 0;
                r = r + Math.imul(m, V) | 0;
                var yt = (l + (n = n + Math.imul(u, J) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, X) | 0) + Math.imul(p, J) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, X) | 0) + (a >>> 13) | 0) + (yt >>> 26) | 0;
                yt &= 67108863;
                n = Math.imul(b, U);
                a = (a = Math.imul(b, Y)) + Math.imul(M, U) | 0;
                r = Math.imul(M, Y);
                n = n + Math.imul(_, W) | 0;
                a = (a = a + Math.imul(_, V) | 0) + Math.imul(y, W) | 0;
                r = r + Math.imul(y, V) | 0;
                n = n + Math.imul(f, J) | 0;
                a = (a = a + Math.imul(f, X) | 0) + Math.imul(m, J) | 0;
                r = r + Math.imul(m, X) | 0;
                var vt = (l + (n = n + Math.imul(u, K) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, Z) | 0) + Math.imul(p, K) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, Z) | 0) + (a >>> 13) | 0) + (vt >>> 26) | 0;
                vt &= 67108863;
                n = Math.imul(k, U);
                a = (a = Math.imul(k, Y)) + Math.imul(C, U) | 0;
                r = Math.imul(C, Y);
                n = n + Math.imul(b, W) | 0;
                a = (a = a + Math.imul(b, V) | 0) + Math.imul(M, W) | 0;
                r = r + Math.imul(M, V) | 0;
                n = n + Math.imul(_, J) | 0;
                a = (a = a + Math.imul(_, X) | 0) + Math.imul(y, J) | 0;
                r = r + Math.imul(y, X) | 0;
                n = n + Math.imul(f, K) | 0;
                a = (a = a + Math.imul(f, Z) | 0) + Math.imul(m, K) | 0;
                r = r + Math.imul(m, Z) | 0;
                var bt = (l + (n = n + Math.imul(u, $) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, tt) | 0) + Math.imul(p, $) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, tt) | 0) + (a >>> 13) | 0) + (bt >>> 26) | 0;
                bt &= 67108863;
                n = Math.imul(A, U);
                a = (a = Math.imul(A, Y)) + Math.imul(T, U) | 0;
                r = Math.imul(T, Y);
                n = n + Math.imul(k, W) | 0;
                a = (a = a + Math.imul(k, V) | 0) + Math.imul(C, W) | 0;
                r = r + Math.imul(C, V) | 0;
                n = n + Math.imul(b, J) | 0;
                a = (a = a + Math.imul(b, X) | 0) + Math.imul(M, J) | 0;
                r = r + Math.imul(M, X) | 0;
                n = n + Math.imul(_, K) | 0;
                a = (a = a + Math.imul(_, Z) | 0) + Math.imul(y, K) | 0;
                r = r + Math.imul(y, Z) | 0;
                n = n + Math.imul(f, $) | 0;
                a = (a = a + Math.imul(f, tt) | 0) + Math.imul(m, $) | 0;
                r = r + Math.imul(m, tt) | 0;
                var Mt = (l + (n = n + Math.imul(u, it) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, nt) | 0) + Math.imul(p, it) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, nt) | 0) + (a >>> 13) | 0) + (Mt >>> 26) | 0;
                Mt &= 67108863;
                n = Math.imul(P, U);
                a = (a = Math.imul(P, Y)) + Math.imul(E, U) | 0;
                r = Math.imul(E, Y);
                n = n + Math.imul(A, W) | 0;
                a = (a = a + Math.imul(A, V) | 0) + Math.imul(T, W) | 0;
                r = r + Math.imul(T, V) | 0;
                n = n + Math.imul(k, J) | 0;
                a = (a = a + Math.imul(k, X) | 0) + Math.imul(C, J) | 0;
                r = r + Math.imul(C, X) | 0;
                n = n + Math.imul(b, K) | 0;
                a = (a = a + Math.imul(b, Z) | 0) + Math.imul(M, K) | 0;
                r = r + Math.imul(M, Z) | 0;
                n = n + Math.imul(_, $) | 0;
                a = (a = a + Math.imul(_, tt) | 0) + Math.imul(y, $) | 0;
                r = r + Math.imul(y, tt) | 0;
                n = n + Math.imul(f, it) | 0;
                a = (a = a + Math.imul(f, nt) | 0) + Math.imul(m, it) | 0;
                r = r + Math.imul(m, nt) | 0;
                var St = (l + (n = n + Math.imul(u, rt) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, ot) | 0) + Math.imul(p, rt) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, ot) | 0) + (a >>> 13) | 0) + (St >>> 26) | 0;
                St &= 67108863;
                n = Math.imul(F, U);
                a = (a = Math.imul(F, Y)) + Math.imul(N, U) | 0;
                r = Math.imul(N, Y);
                n = n + Math.imul(P, W) | 0;
                a = (a = a + Math.imul(P, V) | 0) + Math.imul(E, W) | 0;
                r = r + Math.imul(E, V) | 0;
                n = n + Math.imul(A, J) | 0;
                a = (a = a + Math.imul(A, X) | 0) + Math.imul(T, J) | 0;
                r = r + Math.imul(T, X) | 0;
                n = n + Math.imul(k, K) | 0;
                a = (a = a + Math.imul(k, Z) | 0) + Math.imul(C, K) | 0;
                r = r + Math.imul(C, Z) | 0;
                n = n + Math.imul(b, $) | 0;
                a = (a = a + Math.imul(b, tt) | 0) + Math.imul(M, $) | 0;
                r = r + Math.imul(M, tt) | 0;
                n = n + Math.imul(_, it) | 0;
                a = (a = a + Math.imul(_, nt) | 0) + Math.imul(y, it) | 0;
                r = r + Math.imul(y, nt) | 0;
                n = n + Math.imul(f, rt) | 0;
                a = (a = a + Math.imul(f, ot) | 0) + Math.imul(m, rt) | 0;
                r = r + Math.imul(m, ot) | 0;
                var kt = (l + (n = n + Math.imul(u, ct) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, lt) | 0) + Math.imul(p, ct) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, lt) | 0) + (a >>> 13) | 0) + (kt >>> 26) | 0;
                kt &= 67108863;
                n = Math.imul(R, U);
                a = (a = Math.imul(R, Y)) + Math.imul(I, U) | 0;
                r = Math.imul(I, Y);
                n = n + Math.imul(F, W) | 0;
                a = (a = a + Math.imul(F, V) | 0) + Math.imul(N, W) | 0;
                r = r + Math.imul(N, V) | 0;
                n = n + Math.imul(P, J) | 0;
                a = (a = a + Math.imul(P, X) | 0) + Math.imul(E, J) | 0;
                r = r + Math.imul(E, X) | 0;
                n = n + Math.imul(A, K) | 0;
                a = (a = a + Math.imul(A, Z) | 0) + Math.imul(T, K) | 0;
                r = r + Math.imul(T, Z) | 0;
                n = n + Math.imul(k, $) | 0;
                a = (a = a + Math.imul(k, tt) | 0) + Math.imul(C, $) | 0;
                r = r + Math.imul(C, tt) | 0;
                n = n + Math.imul(b, it) | 0;
                a = (a = a + Math.imul(b, nt) | 0) + Math.imul(M, it) | 0;
                r = r + Math.imul(M, nt) | 0;
                n = n + Math.imul(_, rt) | 0;
                a = (a = a + Math.imul(_, ot) | 0) + Math.imul(y, rt) | 0;
                r = r + Math.imul(y, ot) | 0;
                n = n + Math.imul(f, ct) | 0;
                a = (a = a + Math.imul(f, lt) | 0) + Math.imul(m, ct) | 0;
                r = r + Math.imul(m, lt) | 0;
                var Ct = (l + (n = n + Math.imul(u, ut) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, pt) | 0) + Math.imul(p, ut) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, pt) | 0) + (a >>> 13) | 0) + (Ct >>> 26) | 0;
                Ct &= 67108863;
                n = Math.imul(O, U);
                a = (a = Math.imul(O, Y)) + Math.imul(L, U) | 0;
                r = Math.imul(L, Y);
                n = n + Math.imul(R, W) | 0;
                a = (a = a + Math.imul(R, V) | 0) + Math.imul(I, W) | 0;
                r = r + Math.imul(I, V) | 0;
                n = n + Math.imul(F, J) | 0;
                a = (a = a + Math.imul(F, X) | 0) + Math.imul(N, J) | 0;
                r = r + Math.imul(N, X) | 0;
                n = n + Math.imul(P, K) | 0;
                a = (a = a + Math.imul(P, Z) | 0) + Math.imul(E, K) | 0;
                r = r + Math.imul(E, Z) | 0;
                n = n + Math.imul(A, $) | 0;
                a = (a = a + Math.imul(A, tt) | 0) + Math.imul(T, $) | 0;
                r = r + Math.imul(T, tt) | 0;
                n = n + Math.imul(k, it) | 0;
                a = (a = a + Math.imul(k, nt) | 0) + Math.imul(C, it) | 0;
                r = r + Math.imul(C, nt) | 0;
                n = n + Math.imul(b, rt) | 0;
                a = (a = a + Math.imul(b, ot) | 0) + Math.imul(M, rt) | 0;
                r = r + Math.imul(M, ot) | 0;
                n = n + Math.imul(_, ct) | 0;
                a = (a = a + Math.imul(_, lt) | 0) + Math.imul(y, ct) | 0;
                r = r + Math.imul(y, lt) | 0;
                n = n + Math.imul(f, ut) | 0;
                a = (a = a + Math.imul(f, pt) | 0) + Math.imul(m, ut) | 0;
                r = r + Math.imul(m, pt) | 0;
                var wt = (l + (n = n + Math.imul(u, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(u, mt) | 0) + Math.imul(p, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(p, mt) | 0) + (a >>> 13) | 0) + (wt >>> 26) | 0;
                wt &= 67108863;
                n = Math.imul(O, W);
                a = (a = Math.imul(O, V)) + Math.imul(L, W) | 0;
                r = Math.imul(L, V);
                n = n + Math.imul(R, J) | 0;
                a = (a = a + Math.imul(R, X) | 0) + Math.imul(I, J) | 0;
                r = r + Math.imul(I, X) | 0;
                n = n + Math.imul(F, K) | 0;
                a = (a = a + Math.imul(F, Z) | 0) + Math.imul(N, K) | 0;
                r = r + Math.imul(N, Z) | 0;
                n = n + Math.imul(P, $) | 0;
                a = (a = a + Math.imul(P, tt) | 0) + Math.imul(E, $) | 0;
                r = r + Math.imul(E, tt) | 0;
                n = n + Math.imul(A, it) | 0;
                a = (a = a + Math.imul(A, nt) | 0) + Math.imul(T, it) | 0;
                r = r + Math.imul(T, nt) | 0;
                n = n + Math.imul(k, rt) | 0;
                a = (a = a + Math.imul(k, ot) | 0) + Math.imul(C, rt) | 0;
                r = r + Math.imul(C, ot) | 0;
                n = n + Math.imul(b, ct) | 0;
                a = (a = a + Math.imul(b, lt) | 0) + Math.imul(M, ct) | 0;
                r = r + Math.imul(M, lt) | 0;
                n = n + Math.imul(_, ut) | 0;
                a = (a = a + Math.imul(_, pt) | 0) + Math.imul(y, ut) | 0;
                r = r + Math.imul(y, pt) | 0;
                var At = (l + (n = n + Math.imul(f, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(f, mt) | 0) + Math.imul(m, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(m, mt) | 0) + (a >>> 13) | 0) + (At >>> 26) | 0;
                At &= 67108863;
                n = Math.imul(O, J);
                a = (a = Math.imul(O, X)) + Math.imul(L, J) | 0;
                r = Math.imul(L, X);
                n = n + Math.imul(R, K) | 0;
                a = (a = a + Math.imul(R, Z) | 0) + Math.imul(I, K) | 0;
                r = r + Math.imul(I, Z) | 0;
                n = n + Math.imul(F, $) | 0;
                a = (a = a + Math.imul(F, tt) | 0) + Math.imul(N, $) | 0;
                r = r + Math.imul(N, tt) | 0;
                n = n + Math.imul(P, it) | 0;
                a = (a = a + Math.imul(P, nt) | 0) + Math.imul(E, it) | 0;
                r = r + Math.imul(E, nt) | 0;
                n = n + Math.imul(A, rt) | 0;
                a = (a = a + Math.imul(A, ot) | 0) + Math.imul(T, rt) | 0;
                r = r + Math.imul(T, ot) | 0;
                n = n + Math.imul(k, ct) | 0;
                a = (a = a + Math.imul(k, lt) | 0) + Math.imul(C, ct) | 0;
                r = r + Math.imul(C, lt) | 0;
                n = n + Math.imul(b, ut) | 0;
                a = (a = a + Math.imul(b, pt) | 0) + Math.imul(M, ut) | 0;
                r = r + Math.imul(M, pt) | 0;
                var Tt = (l + (n = n + Math.imul(_, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(_, mt) | 0) + Math.imul(y, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(y, mt) | 0) + (a >>> 13) | 0) + (Tt >>> 26) | 0;
                Tt &= 67108863;
                n = Math.imul(O, K);
                a = (a = Math.imul(O, Z)) + Math.imul(L, K) | 0;
                r = Math.imul(L, Z);
                n = n + Math.imul(R, $) | 0;
                a = (a = a + Math.imul(R, tt) | 0) + Math.imul(I, $) | 0;
                r = r + Math.imul(I, tt) | 0;
                n = n + Math.imul(F, it) | 0;
                a = (a = a + Math.imul(F, nt) | 0) + Math.imul(N, it) | 0;
                r = r + Math.imul(N, nt) | 0;
                n = n + Math.imul(P, rt) | 0;
                a = (a = a + Math.imul(P, ot) | 0) + Math.imul(E, rt) | 0;
                r = r + Math.imul(E, ot) | 0;
                n = n + Math.imul(A, ct) | 0;
                a = (a = a + Math.imul(A, lt) | 0) + Math.imul(T, ct) | 0;
                r = r + Math.imul(T, lt) | 0;
                n = n + Math.imul(k, ut) | 0;
                a = (a = a + Math.imul(k, pt) | 0) + Math.imul(C, ut) | 0;
                r = r + Math.imul(C, pt) | 0;
                var Dt = (l + (n = n + Math.imul(b, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(b, mt) | 0) + Math.imul(M, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(M, mt) | 0) + (a >>> 13) | 0) + (Dt >>> 26) | 0;
                Dt &= 67108863;
                n = Math.imul(O, $);
                a = (a = Math.imul(O, tt)) + Math.imul(L, $) | 0;
                r = Math.imul(L, tt);
                n = n + Math.imul(R, it) | 0;
                a = (a = a + Math.imul(R, nt) | 0) + Math.imul(I, it) | 0;
                r = r + Math.imul(I, nt) | 0;
                n = n + Math.imul(F, rt) | 0;
                a = (a = a + Math.imul(F, ot) | 0) + Math.imul(N, rt) | 0;
                r = r + Math.imul(N, ot) | 0;
                n = n + Math.imul(P, ct) | 0;
                a = (a = a + Math.imul(P, lt) | 0) + Math.imul(E, ct) | 0;
                r = r + Math.imul(E, lt) | 0;
                n = n + Math.imul(A, ut) | 0;
                a = (a = a + Math.imul(A, pt) | 0) + Math.imul(T, ut) | 0;
                r = r + Math.imul(T, pt) | 0;
                var Pt = (l + (n = n + Math.imul(k, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(k, mt) | 0) + Math.imul(C, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(C, mt) | 0) + (a >>> 13) | 0) + (Pt >>> 26) | 0;
                Pt &= 67108863;
                n = Math.imul(O, it);
                a = (a = Math.imul(O, nt)) + Math.imul(L, it) | 0;
                r = Math.imul(L, nt);
                n = n + Math.imul(R, rt) | 0;
                a = (a = a + Math.imul(R, ot) | 0) + Math.imul(I, rt) | 0;
                r = r + Math.imul(I, ot) | 0;
                n = n + Math.imul(F, ct) | 0;
                a = (a = a + Math.imul(F, lt) | 0) + Math.imul(N, ct) | 0;
                r = r + Math.imul(N, lt) | 0;
                n = n + Math.imul(P, ut) | 0;
                a = (a = a + Math.imul(P, pt) | 0) + Math.imul(E, ut) | 0;
                r = r + Math.imul(E, pt) | 0;
                var Et = (l + (n = n + Math.imul(A, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(A, mt) | 0) + Math.imul(T, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(T, mt) | 0) + (a >>> 13) | 0) + (Et >>> 26) | 0;
                Et &= 67108863;
                n = Math.imul(O, rt);
                a = (a = Math.imul(O, ot)) + Math.imul(L, rt) | 0;
                r = Math.imul(L, ot);
                n = n + Math.imul(R, ct) | 0;
                a = (a = a + Math.imul(R, lt) | 0) + Math.imul(I, ct) | 0;
                r = r + Math.imul(I, lt) | 0;
                n = n + Math.imul(F, ut) | 0;
                a = (a = a + Math.imul(F, pt) | 0) + Math.imul(N, ut) | 0;
                r = r + Math.imul(N, pt) | 0;
                var Bt = (l + (n = n + Math.imul(P, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(P, mt) | 0) + Math.imul(E, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(E, mt) | 0) + (a >>> 13) | 0) + (Bt >>> 26) | 0;
                Bt &= 67108863;
                n = Math.imul(O, ct);
                a = (a = Math.imul(O, lt)) + Math.imul(L, ct) | 0;
                r = Math.imul(L, lt);
                n = n + Math.imul(R, ut) | 0;
                a = (a = a + Math.imul(R, pt) | 0) + Math.imul(I, ut) | 0;
                r = r + Math.imul(I, pt) | 0;
                var Ft = (l + (n = n + Math.imul(F, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(F, mt) | 0) + Math.imul(N, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(N, mt) | 0) + (a >>> 13) | 0) + (Ft >>> 26) | 0;
                Ft &= 67108863;
                n = Math.imul(O, ut);
                a = (a = Math.imul(O, pt)) + Math.imul(L, ut) | 0;
                r = Math.imul(L, pt);
                var Nt = (l + (n = n + Math.imul(R, ft) | 0) | 0) + ((8191 & (a = (a = a + Math.imul(R, mt) | 0) + Math.imul(I, ft) | 0)) << 13) | 0;
                l = ((r = r + Math.imul(I, mt) | 0) + (a >>> 13) | 0) + (Nt >>> 26) | 0;
                Nt &= 67108863;
                var xt = (l + (n = Math.imul(O, ft)) | 0) + ((8191 & (a = (a = Math.imul(O, mt)) + Math.imul(L, ft) | 0)) << 13) | 0;
                l = ((r = Math.imul(L, mt)) + (a >>> 13) | 0) + (xt >>> 26) | 0;
                xt &= 67108863;
                c[0] = gt;
                c[1] = _t;
                c[2] = yt;
                c[3] = vt;
                c[4] = bt;
                c[5] = Mt;
                c[6] = St;
                c[7] = kt;
                c[8] = Ct;
                c[9] = wt;
                c[10] = At;
                c[11] = Tt;
                c[12] = Dt;
                c[13] = Pt;
                c[14] = Et;
                c[15] = Bt;
                c[16] = Ft;
                c[17] = Nt;
                c[18] = xt;
                if (0 !== l) {
                    c[19] = l;
                    i.length++;
                }
                return i;
            };
            Math.imul || (y = _);
            function v(t, e, i) {
                i.negative = e.negative ^ t.negative;
                i.length = t.length + e.length;
                for (var n = 0, a = 0, r = 0; r < i.length - 1; r++) {
                    var o = a;
                    a = 0;
                    for (var s = 67108863 & n, c = Math.min(r, e.length - 1), l = Math.max(0, r - t.length + 1); l <= c; l++) {
                        var h = r - l, u = (0 | t.words[h]) * (0 | e.words[l]), p = 67108863 & u;
                        s = 67108863 & (p = p + s | 0);
                        a += (o = (o = o + (u / 67108864 | 0) | 0) + (p >>> 26) | 0) >>> 26;
                        o &= 67108863;
                    }
                    i.words[r] = s;
                    n = o;
                    o = a;
                }
                0 !== n ? i.words[r] = n : i.length--;
                return i._strip();
            }
            function b(t, e, i) {
                return v(t, e, i);
            }
            r.prototype.mulTo = function (t, e) {
                var i = this.length + t.length;
                return 10 === this.length && 10 === t.length ? y(this, t, e) : i < 63 ? _(this, t, e) : i < 1024 ? v(this, t, e) : b(this, t, e);
            };
            function M(t, e) {
                this.x = t;
                this.y = e;
            }
            M.prototype.makeRBT = function (t) {
                for (var e = new Array(t), i = r.prototype._countBits(t) - 1, n = 0; n < t; n++) e[n] = this.revBin(n, i, t);
                return e;
            };
            M.prototype.revBin = function (t, e, i) {
                if (0 === t || t === i - 1) return t;
                for (var n = 0, a = 0; a < e; a++) {
                    n |= (1 & t) << e - a - 1;
                    t >>= 1;
                }
                return n;
            };
            M.prototype.permute = function (t, e, i, n, a, r) {
                for (var o = 0; o < r; o++) {
                    n[o] = e[t[o]];
                    a[o] = i[t[o]];
                }
            };
            M.prototype.transform = function (t, e, i, n, a, r) {
                this.permute(r, t, e, i, n, a);
                for (var o = 1; o < a; o <<= 1) for (var s = o << 1, c = Math.cos(2 * Math.PI / s), l = Math.sin(2 * Math.PI / s), h = 0; h < a; h += s) for (var u = c, p = l, d = 0; d < o; d++) {
                    var f = i[h + d], m = n[h + d], g = i[h + d + o], _ = n[h + d + o], y = u * g - p * _;
                    _ = u * _ + p * g;
                    g = y;
                    i[h + d] = f + g;
                    n[h + d] = m + _;
                    i[h + d + o] = f - g;
                    n[h + d + o] = m - _;
                    if (d !== s) {
                        y = c * u - l * p;
                        p = c * p + l * u;
                        u = y;
                    }
                }
            };
            M.prototype.guessLen13b = function (t, e) {
                var i = 1 | Math.max(e, t), n = 1 & i, a = 0;
                for (i = i / 2 | 0; i; i >>>= 1) a++;
                return 1 << a + 1 + n;
            };
            M.prototype.conjugate = function (t, e, i) {
                if (!(i <= 1)) for (var n = 0; n < i / 2; n++) {
                    var a = t[n];
                    t[n] = t[i - n - 1];
                    t[i - n - 1] = a;
                    a = e[n];
                    e[n] = -e[i - n - 1];
                    e[i - n - 1] = -a;
                }
            };
            M.prototype.normalize13b = function (t, e) {
                for (var i = 0, n = 0; n < e / 2; n++) {
                    var a = 8192 * Math.round(t[2 * n + 1] / e) + Math.round(t[2 * n] / e) + i;
                    t[n] = 67108863 & a;
                    i = a < 67108864 ? 0 : a / 67108864 | 0;
                }
                return t;
            };
            M.prototype.convert13b = function (t, e, i, a) {
                for (var r = 0, o = 0; o < e; o++) {
                    r += 0 | t[o];
                    i[2 * o] = 8191 & r;
                    r >>>= 13;
                    i[2 * o + 1] = 8191 & r;
                    r >>>= 13;
                }
                for (o = 2 * e; o < a; ++o) i[o] = 0;
                n(0 === r);
                n(0 == (-8192 & r));
            };
            M.prototype.stub = function (t) {
                for (var e = new Array(t), i = 0; i < t; i++) e[i] = 0;
                return e;
            };
            M.prototype.mulp = function (t, e, i) {
                var n = 2 * this.guessLen13b(t.length, e.length), a = this.makeRBT(n), r = this.stub(n), o = new Array(n), s = new Array(n), c = new Array(n), l = new Array(n), h = new Array(n), u = new Array(n), p = i.words;
                p.length = n;
                this.convert13b(t.words, t.length, o, n);
                this.convert13b(e.words, e.length, l, n);
                this.transform(o, r, s, c, n, a);
                this.transform(l, r, h, u, n, a);
                for (var d = 0; d < n; d++) {
                    var f = s[d] * h[d] - c[d] * u[d];
                    c[d] = s[d] * u[d] + c[d] * h[d];
                    s[d] = f;
                }
                this.conjugate(s, c, n);
                this.transform(s, c, p, r, n, a);
                this.conjugate(p, r, n);
                this.normalize13b(p, n);
                i.negative = t.negative ^ e.negative;
                i.length = t.length + e.length;
                return i._strip();
            };
            r.prototype.mul = function (t) {
                var e = new r(null);
                e.words = new Array(this.length + t.length);
                return this.mulTo(t, e);
            };
            r.prototype.mulf = function (t) {
                var e = new r(null);
                e.words = new Array(this.length + t.length);
                return b(this, t, e);
            };
            r.prototype.imul = function (t) {
                return this.clone().mulTo(t, this);
            };
            r.prototype.imuln = function (t) {
                var e = t < 0;
                e && (t = -t);
                n("number" == typeof t);
                n(t < 67108864);
                for (var i = 0, a = 0; a < this.length; a++) {
                    var r = (0 | this.words[a]) * t, o = (67108863 & r) + (67108863 & i);
                    i >>= 26;
                    i += r / 67108864 | 0;
                    i += o >>> 26;
                    this.words[a] = 67108863 & o;
                }
                if (0 !== i) {
                    this.words[a] = i;
                    this.length++;
                }
                return e ? this.ineg() : this;
            };
            r.prototype.muln = function (t) {
                return this.clone().imuln(t);
            };
            r.prototype.sqr = function () {
                return this.mul(this);
            };
            r.prototype.isqr = function () {
                return this.imul(this.clone());
            };
            r.prototype.pow = function (t) {
                var e = g(t);
                if (0 === e.length) return new r(1);
                for (var i = this, n = 0; n < e.length && 0 === e[n]; n++, i = i.sqr());
                if (++n < e.length) for (var a = i.sqr(); n < e.length; n++, a = a.sqr()) 0 !== e[n] && (i = i.mul(a));
                return i;
            };
            r.prototype.iushln = function (t) {
                n("number" == typeof t && t >= 0);
                var e, i = t % 26, a = (t - i) / 26, r = 67108863 >>> 26 - i << 26 - i;
                if (0 !== i) {
                    var o = 0;
                    for (e = 0; e < this.length; e++) {
                        var s = this.words[e] & r, c = (0 | this.words[e]) - s << i;
                        this.words[e] = c | o;
                        o = s >>> 26 - i;
                    }
                    if (o) {
                        this.words[e] = o;
                        this.length++;
                    }
                }
                if (0 !== a) {
                    for (e = this.length - 1; e >= 0; e--) this.words[e + a] = this.words[e];
                    for (e = 0; e < a; e++) this.words[e] = 0;
                    this.length += a;
                }
                return this._strip();
            };
            r.prototype.ishln = function (t) {
                n(0 === this.negative);
                return this.iushln(t);
            };
            r.prototype.iushrn = function (t, e, i) {
                n("number" == typeof t && t >= 0);
                var a;
                a = e ? (e - e % 26) / 26 : 0;
                var r = t % 26, o = Math.min((t - r) / 26, this.length), s = 67108863 ^ 67108863 >>> r << r, c = i;
                a -= o;
                a = Math.max(0, a);
                if (c) {
                    for (var l = 0; l < o; l++) c.words[l] = this.words[l];
                    c.length = o;
                }
                if (0 === o); else if (this.length > o) {
                    this.length -= o;
                    for (l = 0; l < this.length; l++) this.words[l] = this.words[l + o];
                } else {
                    this.words[0] = 0;
                    this.length = 1;
                }
                var h = 0;
                for (l = this.length - 1; l >= 0 && (0 !== h || l >= a); l--) {
                    var u = 0 | this.words[l];
                    this.words[l] = h << 26 - r | u >>> r;
                    h = u & s;
                }
                c && 0 !== h && (c.words[c.length++] = h);
                if (0 === this.length) {
                    this.words[0] = 0;
                    this.length = 1;
                }
                return this._strip();
            };
            r.prototype.ishrn = function (t, e, i) {
                n(0 === this.negative);
                return this.iushrn(t, e, i);
            };
            r.prototype.shln = function (t) {
                return this.clone().ishln(t);
            };
            r.prototype.ushln = function (t) {
                return this.clone().iushln(t);
            };
            r.prototype.shrn = function (t) {
                return this.clone().ishrn(t);
            };
            r.prototype.ushrn = function (t) {
                return this.clone().iushrn(t);
            };
            r.prototype.testn = function (t) {
                n("number" == typeof t && t >= 0);
                var e = t % 26, i = (t - e) / 26, a = 1 << e;
                return !(this.length <= i || !(this.words[i] & a));
            };
            r.prototype.imaskn = function (t) {
                n("number" == typeof t && t >= 0);
                var e = t % 26, i = (t - e) / 26;
                n(0 === this.negative, "imaskn works only with positive numbers");
                if (this.length <= i) return this;
                0 !== e && i++;
                this.length = Math.min(i, this.length);
                if (0 !== e) {
                    var a = 67108863 ^ 67108863 >>> e << e;
                    this.words[this.length - 1] &= a;
                }
                return this._strip();
            };
            r.prototype.maskn = function (t) {
                return this.clone().imaskn(t);
            };
            r.prototype.iaddn = function (t) {
                n("number" == typeof t);
                n(t < 67108864);
                if (t < 0) return this.isubn(-t);
                if (0 !== this.negative) {
                    if (1 === this.length && (0 | this.words[0]) <= t) {
                        this.words[0] = t - (0 | this.words[0]);
                        this.negative = 0;
                        return this;
                    }
                    this.negative = 0;
                    this.isubn(t);
                    this.negative = 1;
                    return this;
                }
                return this._iaddn(t);
            };
            r.prototype._iaddn = function (t) {
                this.words[0] += t;
                for (var e = 0; e < this.length && this.words[e] >= 67108864; e++) {
                    this.words[e] -= 67108864;
                    e === this.length - 1 ? this.words[e + 1] = 1 : this.words[e + 1]++;
                }
                this.length = Math.max(this.length, e + 1);
                return this;
            };
            r.prototype.isubn = function (t) {
                n("number" == typeof t);
                n(t < 67108864);
                if (t < 0) return this.iaddn(-t);
                if (0 !== this.negative) {
                    this.negative = 0;
                    this.iaddn(t);
                    this.negative = 1;
                    return this;
                }
                this.words[0] -= t;
                if (1 === this.length && this.words[0] < 0) {
                    this.words[0] = -this.words[0];
                    this.negative = 1;
                } else for (var e = 0; e < this.length && this.words[e] < 0; e++) {
                    this.words[e] += 67108864;
                    this.words[e + 1] -= 1;
                }
                return this._strip();
            };
            r.prototype.addn = function (t) {
                return this.clone().iaddn(t);
            };
            r.prototype.subn = function (t) {
                return this.clone().isubn(t);
            };
            r.prototype.iabs = function () {
                this.negative = 0;
                return this;
            };
            r.prototype.abs = function () {
                return this.clone().iabs();
            };
            r.prototype._ishlnsubmul = function (t, e, i) {
                var a, r, o = t.length + i;
                this._expand(o);
                var s = 0;
                for (a = 0; a < t.length; a++) {
                    r = (0 | this.words[a + i]) + s;
                    var c = (0 | t.words[a]) * e;
                    s = ((r -= 67108863 & c) >> 26) - (c / 67108864 | 0);
                    this.words[a + i] = 67108863 & r;
                }
                for (; a < this.length - i; a++) {
                    s = (r = (0 | this.words[a + i]) + s) >> 26;
                    this.words[a + i] = 67108863 & r;
                }
                if (0 === s) return this._strip();
                n(-1 === s);
                s = 0;
                for (a = 0; a < this.length; a++) {
                    s = (r = -(0 | this.words[a]) + s) >> 26;
                    this.words[a] = 67108863 & r;
                }
                this.negative = 1;
                return this._strip();
            };
            r.prototype._wordDiv = function (t, e) {
                var i = (this.length, t.length), n = this.clone(), a = t, o = 0 | a.words[a.length - 1];
                if (0 != (i = 26 - this._countBits(o))) {
                    a = a.ushln(i);
                    n.iushln(i);
                    o = 0 | a.words[a.length - 1];
                }
                var s, c = n.length - a.length;
                if ("mod" !== e) {
                    (s = new r(null)).length = c + 1;
                    s.words = new Array(s.length);
                    for (var l = 0; l < s.length; l++) s.words[l] = 0;
                }
                var h = n.clone()._ishlnsubmul(a, 1, c);
                if (0 === h.negative) {
                    n = h;
                    s && (s.words[c] = 1);
                }
                for (var u = c - 1; u >= 0; u--) {
                    var p = 67108864 * (0 | n.words[a.length + u]) + (0 | n.words[a.length + u - 1]);
                    p = Math.min(p / o | 0, 67108863);
                    n._ishlnsubmul(a, p, u);
                    for (; 0 !== n.negative;) {
                        p--;
                        n.negative = 0;
                        n._ishlnsubmul(a, 1, u);
                        n.isZero() || (n.negative ^= 1);
                    }
                    s && (s.words[u] = p);
                }
                s && s._strip();
                n._strip();
                "div" !== e && 0 !== i && n.iushrn(i);
                return {
                    div: s || null,
                    mod: n
                };
            };
            r.prototype.divmod = function (t, e, i) {
                n(!t.isZero());
                if (this.isZero()) return {
                    div: new r(0),
                    mod: new r(0)
                };
                var a, o, s;
                if (0 !== this.negative && 0 === t.negative) {
                    s = this.neg().divmod(t, e);
                    "mod" !== e && (a = s.div.neg());
                    if ("div" !== e) {
                        o = s.mod.neg();
                        i && 0 !== o.negative && o.iadd(t);
                    }
                    return {
                        div: a,
                        mod: o
                    };
                }
                if (0 === this.negative && 0 !== t.negative) {
                    s = this.divmod(t.neg(), e);
                    "mod" !== e && (a = s.div.neg());
                    return {
                        div: a,
                        mod: s.mod
                    };
                }
                if (0 != (this.negative & t.negative)) {
                    s = this.neg().divmod(t.neg(), e);
                    if ("div" !== e) {
                        o = s.mod.neg();
                        i && 0 !== o.negative && o.isub(t);
                    }
                    return {
                        div: s.div,
                        mod: o
                    };
                }
                return t.length > this.length || this.cmp(t) < 0 ? {
                    div: new r(0),
                    mod: this
                } : 1 === t.length ? "div" === e ? {
                    div: this.divn(t.words[0]),
                    mod: null
                } : "mod" === e ? {
                    div: null,
                    mod: new r(this.modrn(t.words[0]))
                } : {
                    div: this.divn(t.words[0]),
                    mod: new r(this.modrn(t.words[0]))
                } : this._wordDiv(t, e);
            };
            r.prototype.div = function (t) {
                return this.divmod(t, "div", !1).div;
            };
            r.prototype.mod = function (t) {
                return this.divmod(t, "mod", !1).mod;
            };
            r.prototype.umod = function (t) {
                return this.divmod(t, "mod", !0).mod;
            };
            r.prototype.divRound = function (t) {
                var e = this.divmod(t);
                if (e.mod.isZero()) return e.div;
                var i = 0 !== e.div.negative ? e.mod.isub(t) : e.mod, n = t.ushrn(1), a = t.andln(1), r = i.cmp(n);
                return r < 0 || 1 === a && 0 === r ? e.div : 0 !== e.div.negative ? e.div.isubn(1) : e.div.iaddn(1);
            };
            r.prototype.modrn = function (t) {
                var e = t < 0;
                e && (t = -t);
                n(t <= 67108863);
                for (var i = (1 << 26) % t, a = 0, r = this.length - 1; r >= 0; r--) a = (i * a + (0 | this.words[r])) % t;
                return e ? -a : a;
            };
            r.prototype.modn = function (t) {
                return this.modrn(t);
            };
            r.prototype.idivn = function (t) {
                var e = t < 0;
                e && (t = -t);
                n(t <= 67108863);
                for (var i = 0, a = this.length - 1; a >= 0; a--) {
                    var r = (0 | this.words[a]) + 67108864 * i;
                    this.words[a] = r / t | 0;
                    i = r % t;
                }
                this._strip();
                return e ? this.ineg() : this;
            };
            r.prototype.divn = function (t) {
                return this.clone().idivn(t);
            };
            r.prototype.egcd = function (t) {
                n(0 === t.negative);
                n(!t.isZero());
                var e = this, i = t.clone();
                e = 0 !== e.negative ? e.umod(t) : e.clone();
                for (var a = new r(1), o = new r(0), s = new r(0), c = new r(1), l = 0; e.isEven() && i.isEven();) {
                    e.iushrn(1);
                    i.iushrn(1);
                    ++l;
                }
                for (var h = i.clone(), u = e.clone(); !e.isZero();) {
                    for (var p = 0, d = 1; 0 == (e.words[0] & d) && p < 26; ++p, d <<= 1);
                    if (p > 0) {
                        e.iushrn(p);
                        for (; p-- > 0;) {
                            if (a.isOdd() || o.isOdd()) {
                                a.iadd(h);
                                o.isub(u);
                            }
                            a.iushrn(1);
                            o.iushrn(1);
                        }
                    }
                    for (var f = 0, m = 1; 0 == (i.words[0] & m) && f < 26; ++f, m <<= 1);
                    if (f > 0) {
                        i.iushrn(f);
                        for (; f-- > 0;) {
                            if (s.isOdd() || c.isOdd()) {
                                s.iadd(h);
                                c.isub(u);
                            }
                            s.iushrn(1);
                            c.iushrn(1);
                        }
                    }
                    if (e.cmp(i) >= 0) {
                        e.isub(i);
                        a.isub(s);
                        o.isub(c);
                    } else {
                        i.isub(e);
                        s.isub(a);
                        c.isub(o);
                    }
                }
                return {
                    a: s,
                    b: c,
                    gcd: i.iushln(l)
                };
            };
            r.prototype._invmp = function (t) {
                n(0 === t.negative);
                n(!t.isZero());
                var e = this, i = t.clone();
                e = 0 !== e.negative ? e.umod(t) : e.clone();
                for (var a, o = new r(1), s = new r(0), c = i.clone(); e.cmpn(1) > 0 && i.cmpn(1) > 0;) {
                    for (var l = 0, h = 1; 0 == (e.words[0] & h) && l < 26; ++l, h <<= 1);
                    if (l > 0) {
                        e.iushrn(l);
                        for (; l-- > 0;) {
                            o.isOdd() && o.iadd(c);
                            o.iushrn(1);
                        }
                    }
                    for (var u = 0, p = 1; 0 == (i.words[0] & p) && u < 26; ++u, p <<= 1);
                    if (u > 0) {
                        i.iushrn(u);
                        for (; u-- > 0;) {
                            s.isOdd() && s.iadd(c);
                            s.iushrn(1);
                        }
                    }
                    if (e.cmp(i) >= 0) {
                        e.isub(i);
                        o.isub(s);
                    } else {
                        i.isub(e);
                        s.isub(o);
                    }
                }
                (a = 0 === e.cmpn(1) ? o : s).cmpn(0) < 0 && a.iadd(t);
                return a;
            };
            r.prototype.gcd = function (t) {
                if (this.isZero()) return t.abs();
                if (t.isZero()) return this.abs();
                var e = this.clone(), i = t.clone();
                e.negative = 0;
                i.negative = 0;
                for (var n = 0; e.isEven() && i.isEven(); n++) {
                    e.iushrn(1);
                    i.iushrn(1);
                }
                for (; ;) {
                    for (; e.isEven();) e.iushrn(1);
                    for (; i.isEven();) i.iushrn(1);
                    var a = e.cmp(i);
                    if (a < 0) {
                        var r = e;
                        e = i;
                        i = r;
                    } else if (0 === a || 0 === i.cmpn(1)) break;
                    e.isub(i);
                }
                return i.iushln(n);
            };
            r.prototype.invm = function (t) {
                return this.egcd(t).a.umod(t);
            };
            r.prototype.isEven = function () {
                return 0 == (1 & this.words[0]);
            };
            r.prototype.isOdd = function () {
                return 1 == (1 & this.words[0]);
            };
            r.prototype.andln = function (t) {
                return this.words[0] & t;
            };
            r.prototype.bincn = function (t) {
                n("number" == typeof t);
                var e = t % 26, i = (t - e) / 26, a = 1 << e;
                if (this.length <= i) {
                    this._expand(i + 1);
                    this.words[i] |= a;
                    return this;
                }
                for (var r = a, o = i; 0 !== r && o < this.length; o++) {
                    var s = 0 | this.words[o];
                    r = (s += r) >>> 26;
                    s &= 67108863;
                    this.words[o] = s;
                }
                if (0 !== r) {
                    this.words[o] = r;
                    this.length++;
                }
                return this;
            };
            r.prototype.isZero = function () {
                return 1 === this.length && 0 === this.words[0];
            };
            r.prototype.cmpn = function (t) {
                var e, i = t < 0;
                if (0 !== this.negative && !i) return -1;
                if (0 === this.negative && i) return 1;
                this._strip();
                if (this.length > 1) e = 1; else {
                    i && (t = -t);
                    n(t <= 67108863, "Number is too big");
                    var a = 0 | this.words[0];
                    e = a === t ? 0 : a < t ? -1 : 1;
                }
                return 0 !== this.negative ? 0 | -e : e;
            };
            r.prototype.cmp = function (t) {
                if (0 !== this.negative && 0 === t.negative) return -1;
                if (0 === this.negative && 0 !== t.negative) return 1;
                var e = this.ucmp(t);
                return 0 !== this.negative ? 0 | -e : e;
            };
            r.prototype.ucmp = function (t) {
                if (this.length > t.length) return 1;
                if (this.length < t.length) return -1;
                for (var e = 0, i = this.length - 1; i >= 0; i--) {
                    var n = 0 | this.words[i], a = 0 | t.words[i];
                    if (n !== a) {
                        n < a ? e = -1 : n > a && (e = 1);
                        break;
                    }
                }
                return e;
            };
            r.prototype.gtn = function (t) {
                return 1 === this.cmpn(t);
            };
            r.prototype.gt = function (t) {
                return 1 === this.cmp(t);
            };
            r.prototype.gten = function (t) {
                return this.cmpn(t) >= 0;
            };
            r.prototype.gte = function (t) {
                return this.cmp(t) >= 0;
            };
            r.prototype.ltn = function (t) {
                return -1 === this.cmpn(t);
            };
            r.prototype.lt = function (t) {
                return -1 === this.cmp(t);
            };
            r.prototype.lten = function (t) {
                return this.cmpn(t) <= 0;
            };
            r.prototype.lte = function (t) {
                return this.cmp(t) <= 0;
            };
            r.prototype.eqn = function (t) {
                return 0 === this.cmpn(t);
            };
            r.prototype.eq = function (t) {
                return 0 === this.cmp(t);
            };
            r.red = function (t) {
                return new D(t);
            };
            r.prototype.toRed = function (t) {
                n(!this.red, "Already a number in reduction context");
                n(0 === this.negative, "red works only with positives");
                return t.convertTo(this)._forceRed(t);
            };
            r.prototype.fromRed = function () {
                n(this.red, "fromRed works only with numbers in reduction context");
                return this.red.convertFrom(this);
            };
            r.prototype._forceRed = function (t) {
                this.red = t;
                return this;
            };
            r.prototype.forceRed = function (t) {
                n(!this.red, "Already a number in reduction context");
                return this._forceRed(t);
            };
            r.prototype.redAdd = function (t) {
                n(this.red, "redAdd works only with red numbers");
                return this.red.add(this, t);
            };
            r.prototype.redIAdd = function (t) {
                n(this.red, "redIAdd works only with red numbers");
                return this.red.iadd(this, t);
            };
            r.prototype.redSub = function (t) {
                n(this.red, "redSub works only with red numbers");
                return this.red.sub(this, t);
            };
            r.prototype.redISub = function (t) {
                n(this.red, "redISub works only with red numbers");
                return this.red.isub(this, t);
            };
            r.prototype.redShl = function (t) {
                n(this.red, "redShl works only with red numbers");
                return this.red.shl(this, t);
            };
            r.prototype.redMul = function (t) {
                n(this.red, "redMul works only with red numbers");
                this.red._verify2(this, t);
                return this.red.mul(this, t);
            };
            r.prototype.redIMul = function (t) {
                n(this.red, "redMul works only with red numbers");
                this.red._verify2(this, t);
                return this.red.imul(this, t);
            };
            r.prototype.redSqr = function () {
                n(this.red, "redSqr works only with red numbers");
                this.red._verify1(this);
                return this.red.sqr(this);
            };
            r.prototype.redISqr = function () {
                n(this.red, "redISqr works only with red numbers");
                this.red._verify1(this);
                return this.red.isqr(this);
            };
            r.prototype.redSqrt = function () {
                n(this.red, "redSqrt works only with red numbers");
                this.red._verify1(this);
                return this.red.sqrt(this);
            };
            r.prototype.redInvm = function () {
                n(this.red, "redInvm works only with red numbers");
                this.red._verify1(this);
                return this.red.invm(this);
            };
            r.prototype.redNeg = function () {
                n(this.red, "redNeg works only with red numbers");
                this.red._verify1(this);
                return this.red.neg(this);
            };
            r.prototype.redPow = function (t) {
                n(this.red && !t.red, "redPow(normalNum)");
                this.red._verify1(this);
                return this.red.pow(this, t);
            };
            var S = {
                k256: null,
                p224: null,
                p192: null,
                p25519: null
            };
            function k(t, e) {
                this.name = t;
                this.p = new r(e, 16);
                this.n = this.p.bitLength();
                this.k = new r(1).iushln(this.n).isub(this.p);
                this.tmp = this._tmp();
            }
            k.prototype._tmp = function () {
                var t = new r(null);
                t.words = new Array(Math.ceil(this.n / 13));
                return t;
            };
            k.prototype.ireduce = function (t) {
                var e, i = t;
                do {
                    this.split(i, this.tmp);
                    e = (i = (i = this.imulK(i)).iadd(this.tmp)).bitLength();
                } while (e > this.n);
                var n = e < this.n ? -1 : i.ucmp(this.p);
                if (0 === n) {
                    i.words[0] = 0;
                    i.length = 1;
                } else n > 0 ? i.isub(this.p) : void 0 !== i.strip ? i.strip() : i._strip();
                return i;
            };
            k.prototype.split = function (t, e) {
                t.iushrn(this.n, 0, e);
            };
            k.prototype.imulK = function (t) {
                return t.imul(this.k);
            };
            function C() {
                k.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
            }
            a(C, k);
            C.prototype.split = function (t, e) {
                for (var i = Math.min(t.length, 9), n = 0; n < i; n++) e.words[n] = t.words[n];
                e.length = i;
                if (t.length <= 9) {
                    t.words[0] = 0;
                    t.length = 1;
                } else {
                    var a = t.words[9];
                    e.words[e.length++] = 4194303 & a;
                    for (n = 10; n < t.length; n++) {
                        var r = 0 | t.words[n];
                        t.words[n - 10] = (4194303 & r) << 4 | a >>> 22;
                        a = r;
                    }
                    a >>>= 22;
                    t.words[n - 10] = a;
                    0 === a && t.length > 10 ? t.length -= 10 : t.length -= 9;
                }
            };
            C.prototype.imulK = function (t) {
                t.words[t.length] = 0;
                t.words[t.length + 1] = 0;
                t.length += 2;
                for (var e = 0, i = 0; i < t.length; i++) {
                    var n = 0 | t.words[i];
                    e += 977 * n;
                    t.words[i] = 67108863 & e;
                    e = 64 * n + (e / 67108864 | 0);
                }
                if (0 === t.words[t.length - 1]) {
                    t.length--;
                    0 === t.words[t.length - 1] && t.length--;
                }
                return t;
            };
            function w() {
                k.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
            }
            a(w, k);
            function A() {
                k.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
            }
            a(A, k);
            function T() {
                k.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
            }
            a(T, k);
            T.prototype.imulK = function (t) {
                for (var e = 0, i = 0; i < t.length; i++) {
                    var n = 19 * (0 | t.words[i]) + e, a = 67108863 & n;
                    n >>>= 26;
                    t.words[i] = a;
                    e = n;
                }
                0 !== e && (t.words[t.length++] = e);
                return t;
            };
            r._prime = function (t) {
                if (S[t]) return S[t];
                var e;
                if ("k256" === t) e = new C(); else if ("p224" === t) e = new w(); else if ("p192" === t) e = new A(); else {
                    if ("p25519" !== t) throw new Error("Unknown prime " + t);
                    e = new T();
                }
                S[t] = e;
                return e;
            };
            function D(t) {
                if ("string" == typeof t) {
                    var e = r._prime(t);
                    this.m = e.p;
                    this.prime = e;
                } else {
                    n(t.gtn(1), "modulus must be greater than 1");
                    this.m = t;
                    this.prime = null;
                }
            }
            D.prototype._verify1 = function (t) {
                n(0 === t.negative, "red works only with positives");
                n(t.red, "red works only with red numbers");
            };
            D.prototype._verify2 = function (t, e) {
                n(0 == (t.negative | e.negative), "red works only with positives");
                n(t.red && t.red === e.red, "red works only with red numbers");
            };
            D.prototype.imod = function (t) {
                if (this.prime) return this.prime.ireduce(t)._forceRed(this);
                h(t, t.umod(this.m)._forceRed(this));
                return t;
            };
            D.prototype.neg = function (t) {
                return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
            };
            D.prototype.add = function (t, e) {
                this._verify2(t, e);
                var i = t.add(e);
                i.cmp(this.m) >= 0 && i.isub(this.m);
                return i._forceRed(this);
            };
            D.prototype.iadd = function (t, e) {
                this._verify2(t, e);
                var i = t.iadd(e);
                i.cmp(this.m) >= 0 && i.isub(this.m);
                return i;
            };
            D.prototype.sub = function (t, e) {
                this._verify2(t, e);
                var i = t.sub(e);
                i.cmpn(0) < 0 && i.iadd(this.m);
                return i._forceRed(this);
            };
            D.prototype.isub = function (t, e) {
                this._verify2(t, e);
                var i = t.isub(e);
                i.cmpn(0) < 0 && i.iadd(this.m);
                return i;
            };
            D.prototype.shl = function (t, e) {
                this._verify1(t);
                return this.imod(t.ushln(e));
            };
            D.prototype.imul = function (t, e) {
                this._verify2(t, e);
                return this.imod(t.imul(e));
            };
            D.prototype.mul = function (t, e) {
                this._verify2(t, e);
                return this.imod(t.mul(e));
            };
            D.prototype.isqr = function (t) {
                return this.imul(t, t.clone());
            };
            D.prototype.sqr = function (t) {
                return this.mul(t, t);
            };
            D.prototype.sqrt = function (t) {
                if (t.isZero()) return t.clone();
                var e = this.m.andln(3);
                n(e % 2 == 1);
                if (3 === e) {
                    var i = this.m.add(new r(1)).iushrn(2);
                    return this.pow(t, i);
                }
                for (var a = this.m.subn(1), o = 0; !a.isZero() && 0 === a.andln(1);) {
                    o++;
                    a.iushrn(1);
                }
                n(!a.isZero());
                var s = new r(1).toRed(this), c = s.redNeg(), l = this.m.subn(1).iushrn(1), h = this.m.bitLength();
                h = new r(2 * h * h).toRed(this);
                for (; 0 !== this.pow(h, l).cmp(c);) h.redIAdd(c);
                for (var u = this.pow(h, a), p = this.pow(t, a.addn(1).iushrn(1)), d = this.pow(t, a), f = o; 0 !== d.cmp(s);) {
                    for (var m = d, g = 0; 0 !== m.cmp(s); g++) m = m.redSqr();
                    n(g < f);
                    var _ = this.pow(u, new r(1).iushln(f - g - 1));
                    p = p.redMul(_);
                    u = _.redSqr();
                    d = d.redMul(u);
                    f = g;
                }
                return p;
            };
            D.prototype.invm = function (t) {
                var e = t._invmp(this.m);
                if (0 !== e.negative) {
                    e.negative = 0;
                    return this.imod(e).redNeg();
                }
                return this.imod(e);
            };
            D.prototype.pow = function (t, e) {
                if (e.isZero()) return new r(1).toRed(this);
                if (0 === e.cmpn(1)) return t.clone();
                var i = new Array(16);
                i[0] = new r(1).toRed(this);
                i[1] = t;
                for (var n = 2; n < i.length; n++) i[n] = this.mul(i[n - 1], t);
                var a = i[0], o = 0, s = 0, c = e.bitLength() % 26;
                0 === c && (c = 26);
                for (n = e.length - 1; n >= 0; n--) {
                    for (var l = e.words[n], h = c - 1; h >= 0; h--) {
                        var u = l >> h & 1;
                        a !== i[0] && (a = this.sqr(a));
                        if (0 !== u || 0 !== o) {
                            o <<= 1;
                            o |= u;
                            if (4 == ++s || 0 === n && 0 === h) {
                                a = this.mul(a, i[o]);
                                s = 0;
                                o = 0;
                            }
                        } else s = 0;
                    }
                    c = 26;
                }
                return a;
            };
            D.prototype.convertTo = function (t) {
                var e = t.umod(this.m);
                return e === t ? e.clone() : e;
            };
            D.prototype.convertFrom = function (t) {
                var e = t.clone();
                e.red = null;
                return e;
            };
            r.mont = function (t) {
                return new P(t);
            };
            function P(t) {
                D.call(this, t);
                this.shift = this.m.bitLength();
                this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26);
                this.r = new r(1).iushln(this.shift);
                this.r2 = this.imod(this.r.sqr());
                this.rinv = this.r._invmp(this.m);
                this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
                this.minv = this.minv.umod(this.r);
                this.minv = this.r.sub(this.minv);
            }
            a(P, D);
            P.prototype.convertTo = function (t) {
                return this.imod(t.ushln(this.shift));
            };
            P.prototype.convertFrom = function (t) {
                var e = this.imod(t.mul(this.rinv));
                e.red = null;
                return e;
            };
            P.prototype.imul = function (t, e) {
                if (t.isZero() || e.isZero()) {
                    t.words[0] = 0;
                    t.length = 1;
                    return t;
                }
                var i = t.imul(e), n = i.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), a = i.isub(n).iushrn(this.shift), r = a;
                a.cmp(this.m) >= 0 ? r = a.isub(this.m) : a.cmpn(0) < 0 && (r = a.iadd(this.m));
                return r._forceRed(this);
            };
            P.prototype.mul = function (t, e) {
                if (t.isZero() || e.isZero()) return new r(0)._forceRed(this);
                var i = t.mul(e), n = i.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), a = i.isub(n).iushrn(this.shift), o = a;
                a.cmp(this.m) >= 0 ? o = a.isub(this.m) : a.cmpn(0) < 0 && (o = a.iadd(this.m));
                return o._forceRed(this);
            };
            P.prototype.invm = function (t) {
                return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this);
            };
        })("undefined" == typeof e || e, this);
    }, {
        buffer: 19
    }],
    18: [function (t, e) {
        var i;
        e.exports = function (t) {
            i || (i = new n(null));
            return i.generate(t);
        };
        function n(t) {
            this.rand = t;
        }
        e.exports.Rand = n;
        n.prototype.generate = function (t) {
            return this._rand(t);
        };
        n.prototype._rand = function (t) {
            if (this.rand.getBytes) return this.rand.getBytes(t);
            for (var e = new Uint8Array(t), i = 0; i < e.length; i++) e[i] = this.rand.getByte();
            return e;
        };
        if ("object" == typeof self) self.crypto && self.crypto.getRandomValues ? n.prototype._rand = function (t) {
            var e = new Uint8Array(t);
            self.crypto.getRandomValues(e);
            return e;
        } : self.msCrypto && self.msCrypto.getRandomValues ? n.prototype._rand = function (t) {
            var e = new Uint8Array(t);
            self.msCrypto.getRandomValues(e);
            return e;
        } : "object" == typeof window && (n.prototype._rand = function () {
            throw new Error("Not implemented yet");
        }); else try {
            var a = t("crypto");
            if ("function" != typeof a.randomBytes) throw new Error("Not supported");
            n.prototype._rand = function (t) {
                return a.randomBytes(t);
            };
        } catch (t) { }
    }, {
        crypto: 19
    }],
    19: [function () { }, {}],
    20: [function (t, e) {
        var i = t("safe-buffer").Buffer;
        function n(t) {
            i.isBuffer(t) || (t = i.from(t));
            for (var e = t.length / 4 | 0, n = new Array(e), a = 0; a < e; a++) n[a] = t.readUInt32BE(4 * a);
            return n;
        }
        function a(t) {
            for (; 0 < t.length; t++) t[0] = 0;
        }
        function r(t, e, i, n, a) {
            for (var r, o, s, c, l = i[0], h = i[1], u = i[2], p = i[3], d = t[0] ^ e[0], f = t[1] ^ e[1], m = t[2] ^ e[2], g = t[3] ^ e[3], _ = 4, y = 1; y < a; y++) {
                r = l[d >>> 24] ^ h[f >>> 16 & 255] ^ u[m >>> 8 & 255] ^ p[255 & g] ^ e[_++];
                o = l[f >>> 24] ^ h[m >>> 16 & 255] ^ u[g >>> 8 & 255] ^ p[255 & d] ^ e[_++];
                s = l[m >>> 24] ^ h[g >>> 16 & 255] ^ u[d >>> 8 & 255] ^ p[255 & f] ^ e[_++];
                c = l[g >>> 24] ^ h[d >>> 16 & 255] ^ u[f >>> 8 & 255] ^ p[255 & m] ^ e[_++];
                d = r;
                f = o;
                m = s;
                g = c;
            }
            r = (n[d >>> 24] << 24 | n[f >>> 16 & 255] << 16 | n[m >>> 8 & 255] << 8 | n[255 & g]) ^ e[_++];
            o = (n[f >>> 24] << 24 | n[m >>> 16 & 255] << 16 | n[g >>> 8 & 255] << 8 | n[255 & d]) ^ e[_++];
            s = (n[m >>> 24] << 24 | n[g >>> 16 & 255] << 16 | n[d >>> 8 & 255] << 8 | n[255 & f]) ^ e[_++];
            c = (n[g >>> 24] << 24 | n[d >>> 16 & 255] << 16 | n[f >>> 8 & 255] << 8 | n[255 & m]) ^ e[_++];
            return [r >>>= 0, o >>>= 0, s >>>= 0, c >>>= 0];
        }
        var o = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], s = function () {
            for (var t = new Array(256), e = 0; e < 256; e++) t[e] = e < 128 ? e << 1 : e << 1 ^ 283;
            for (var i = [], n = [], a = [[], [], [], []], r = [[], [], [], []], o = 0, s = 0, c = 0; c < 256; ++c) {
                var l = s ^ s << 1 ^ s << 2 ^ s << 3 ^ s << 4;
                l = l >>> 8 ^ 255 & l ^ 99;
                i[o] = l;
                n[l] = o;
                var h = t[o], u = t[h], p = t[u], d = 257 * t[l] ^ 16843008 * l;
                a[0][o] = d << 24 | d >>> 8;
                a[1][o] = d << 16 | d >>> 16;
                a[2][o] = d << 8 | d >>> 24;
                a[3][o] = d;
                d = 16843009 * p ^ 65537 * u ^ 257 * h ^ 16843008 * o;
                r[0][l] = d << 24 | d >>> 8;
                r[1][l] = d << 16 | d >>> 16;
                r[2][l] = d << 8 | d >>> 24;
                r[3][l] = d;
                if (0 === o) o = s = 1; else {
                    o = h ^ t[t[t[p ^ h]]];
                    s ^= t[t[s]];
                }
            }
            return {
                SBOX: i,
                INV_SBOX: n,
                SUB_MIX: a,
                INV_SUB_MIX: r
            };
        }();
        function c(t) {
            this._key = n(t);
            this._reset();
        }
        c.blockSize = 16;
        c.keySize = 32;
        c.prototype.blockSize = c.blockSize;
        c.prototype.keySize = c.keySize;
        c.prototype._reset = function () {
            for (var t = this._key, e = t.length, i = e + 6, n = 4 * (i + 1), a = [], r = 0; r < e; r++) a[r] = t[r];
            for (r = e; r < n; r++) {
                var c = a[r - 1];
                if (r % e == 0) {
                    c = c << 8 | c >>> 24;
                    c = s.SBOX[c >>> 24] << 24 | s.SBOX[c >>> 16 & 255] << 16 | s.SBOX[c >>> 8 & 255] << 8 | s.SBOX[255 & c];
                    c ^= o[r / e | 0] << 24;
                } else e > 6 && r % e == 4 && (c = s.SBOX[c >>> 24] << 24 | s.SBOX[c >>> 16 & 255] << 16 | s.SBOX[c >>> 8 & 255] << 8 | s.SBOX[255 & c]);
                a[r] = a[r - e] ^ c;
            }
            for (var l = [], h = 0; h < n; h++) {
                var u = n - h, p = a[u - (h % 4 ? 0 : 4)];
                l[h] = h < 4 || u <= 4 ? p : s.INV_SUB_MIX[0][s.SBOX[p >>> 24]] ^ s.INV_SUB_MIX[1][s.SBOX[p >>> 16 & 255]] ^ s.INV_SUB_MIX[2][s.SBOX[p >>> 8 & 255]] ^ s.INV_SUB_MIX[3][s.SBOX[255 & p]];
            }
            this._nRounds = i;
            this._keySchedule = a;
            this._invKeySchedule = l;
        };
        c.prototype.encryptBlockRaw = function (t) {
            return r(t = n(t), this._keySchedule, s.SUB_MIX, s.SBOX, this._nRounds);
        };
        c.prototype.encryptBlock = function (t) {
            var e = this.encryptBlockRaw(t), n = i.allocUnsafe(16);
            n.writeUInt32BE(e[0], 0);
            n.writeUInt32BE(e[1], 4);
            n.writeUInt32BE(e[2], 8);
            n.writeUInt32BE(e[3], 12);
            return n;
        };
        c.prototype.decryptBlock = function (t) {
            var e = (t = n(t))[1];
            t[1] = t[3];
            t[3] = e;
            var a = r(t, this._invKeySchedule, s.INV_SUB_MIX, s.INV_SBOX, this._nRounds), o = i.allocUnsafe(16);
            o.writeUInt32BE(a[0], 0);
            o.writeUInt32BE(a[3], 4);
            o.writeUInt32BE(a[2], 8);
            o.writeUInt32BE(a[1], 12);
            return o;
        };
        c.prototype.scrub = function () {
            a(this._keySchedule);
            a(this._invKeySchedule);
            a(this._key);
        };
        e.exports.AES = c;
    }, {
        "safe-buffer": 176
    }],
    21: [function (t, e) {
        var i = t("./aes"), n = t("safe-buffer").Buffer, a = t("cipher-base"), r = t("inherits"), o = t("./ghash"), s = t("buffer-xor"), c = t("./incr32");
        function l(t, e) {
            var i = 0;
            t.length !== e.length && i++;
            for (var n = Math.min(t.length, e.length), a = 0; a < n; ++a) i += t[a] ^ e[a];
            return i;
        }
        function h(t, e, i) {
            if (12 === e.length) {
                t._finID = n.concat([e, n.from([0, 0, 0, 1])]);
                return n.concat([e, n.from([0, 0, 0, 2])]);
            }
            var a = new o(i), r = e.length, s = r % 16;
            a.update(e);
            if (s) {
                s = 16 - s;
                a.update(n.alloc(s, 0));
            }
            a.update(n.alloc(8, 0));
            var l = 8 * r, h = n.alloc(8);
            h.writeUIntBE(l, 0, 8);
            a.update(h);
            t._finID = a.state;
            var u = n.from(t._finID);
            c(u);
            return u;
        }
        function u(t, e, r, s) {
            a.call(this);
            var c = n.alloc(4, 0);
            this._cipher = new i.AES(e);
            var l = this._cipher.encryptBlock(c);
            this._ghash = new o(l);
            r = h(this, r, l);
            this._prev = n.from(r);
            this._cache = n.allocUnsafe(0);
            this._secCache = n.allocUnsafe(0);
            this._decrypt = s;
            this._alen = 0;
            this._len = 0;
            this._mode = t;
            this._authTag = null;
            this._called = !1;
        }
        r(u, a);
        u.prototype._update = function (t) {
            if (!this._called && this._alen) {
                var e = 16 - this._alen % 16;
                if (e < 16) {
                    e = n.alloc(e, 0);
                    this._ghash.update(e);
                }
            }
            this._called = !0;
            var i = this._mode.encrypt(this, t);
            this._decrypt ? this._ghash.update(t) : this._ghash.update(i);
            this._len += t.length;
            return i;
        };
        u.prototype._final = function () {
            if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
            var t = s(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
            if (this._decrypt && l(t, this._authTag)) throw new Error("Unsupported state or unable to authenticate data");
            this._authTag = t;
            this._cipher.scrub();
        };
        u.prototype.getAuthTag = function () {
            if (this._decrypt || !n.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
            return this._authTag;
        };
        u.prototype.setAuthTag = function (t) {
            if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
            this._authTag = t;
        };
        u.prototype.setAAD = function (t) {
            if (this._called) throw new Error("Attempting to set AAD in unsupported state");
            this._ghash.update(t);
            this._alen += t.length;
        };
        e.exports = u;
    }, {
        "./aes": 20,
        "./ghash": 25,
        "./incr32": 26,
        "buffer-xor": 64,
        "cipher-base": 67,
        inherits: 138,
        "safe-buffer": 176
    }],
    22: [function (t, e, i) {
        var n = t("./encrypter"), a = t("./decrypter"), r = t("./modes/list.json");
        i.createCipher = i.Cipher = n.createCipher;
        i.createCipheriv = i.Cipheriv = n.createCipheriv;
        i.createDecipher = i.Decipher = a.createDecipher;
        i.createDecipheriv = i.Decipheriv = a.createDecipheriv;
        i.listCiphers = i.getCiphers = function () {
            return Object.keys(r);
        };
    }, {
        "./decrypter": 23,
        "./encrypter": 24,
        "./modes/list.json": 34
    }],
    23: [function (t, e, i) {
        var n = t("./authCipher"), a = t("safe-buffer").Buffer, r = t("./modes"), o = t("./streamCipher"), s = t("cipher-base"), c = t("./aes"), l = t("evp_bytestokey");
        function h(t, e, i) {
            s.call(this);
            this._cache = new u();
            this._last = void 0;
            this._cipher = new c.AES(e);
            this._prev = a.from(i);
            this._mode = t;
            this._autopadding = !0;
        }
        t("inherits")(h, s);
        h.prototype._update = function (t) {
            this._cache.add(t);
            for (var e, i, n = []; e = this._cache.get(this._autopadding);) {
                i = this._mode.decrypt(this, e);
                n.push(i);
            }
            return a.concat(n);
        };
        h.prototype._final = function () {
            var t = this._cache.flush();
            if (this._autopadding) return p(this._mode.decrypt(this, t));
            if (t) throw new Error("data not multiple of block length");
        };
        h.prototype.setAutoPadding = function (t) {
            this._autopadding = !!t;
            return this;
        };
        function u() {
            this.cache = a.allocUnsafe(0);
        }
        u.prototype.add = function (t) {
            this.cache = a.concat([this.cache, t]);
        };
        u.prototype.get = function (t) {
            var e;
            if (t) {
                if (this.cache.length > 16) {
                    e = this.cache.slice(0, 16);
                    this.cache = this.cache.slice(16);
                    return e;
                }
            } else if (this.cache.length >= 16) {
                e = this.cache.slice(0, 16);
                this.cache = this.cache.slice(16);
                return e;
            }
            return null;
        };
        u.prototype.flush = function () {
            if (this.cache.length) return this.cache;
        };
        function p(t) {
            var e = t[15];
            if (e < 1 || e > 16) throw new Error("unable to decrypt data");
            for (var i = -1; ++i < e;) if (t[i + (16 - e)] !== e) throw new Error("unable to decrypt data");
            if (16 !== e) return t.slice(0, 16 - e);
        }
        function d(t, e, i) {
            var s = r[t.toLowerCase()];
            if (!s) throw new TypeError("invalid suite type");
            "string" == typeof i && (i = a.from(i));
            if ("GCM" !== s.mode && i.length !== s.iv) throw new TypeError("invalid iv length " + i.length);
            "string" == typeof e && (e = a.from(e));
            if (e.length !== s.key / 8) throw new TypeError("invalid key length " + e.length);
            return "stream" === s.type ? new o(s.module, e, i, !0) : "auth" === s.type ? new n(s.module, e, i, !0) : new h(s.module, e, i);
        }
        i.createDecipher = function (t, e) {
            var i = r[t.toLowerCase()];
            if (!i) throw new TypeError("invalid suite type");
            var n = l(e, !1, i.key, i.iv);
            return d(t, n.key, n.iv);
        };
        i.createDecipheriv = d;
    }, {
        "./aes": 20,
        "./authCipher": 21,
        "./modes": 33,
        "./streamCipher": 36,
        "cipher-base": 67,
        evp_bytestokey: 105,
        inherits: 138,
        "safe-buffer": 176
    }],
    24: [function (t, e, i) {
        var n = t("./modes"), a = t("./authCipher"), r = t("safe-buffer").Buffer, o = t("./streamCipher"), s = t("cipher-base"), c = t("./aes"), l = t("evp_bytestokey");
        function h(t, e, i) {
            s.call(this);
            this._cache = new p();
            this._cipher = new c.AES(e);
            this._prev = r.from(i);
            this._mode = t;
            this._autopadding = !0;
        }
        t("inherits")(h, s);
        h.prototype._update = function (t) {
            this._cache.add(t);
            for (var e, i, n = []; e = this._cache.get();) {
                i = this._mode.encrypt(this, e);
                n.push(i);
            }
            return r.concat(n);
        };
        var u = r.alloc(16, 16);
        h.prototype._final = function () {
            var t = this._cache.flush();
            if (this._autopadding) {
                t = this._mode.encrypt(this, t);
                this._cipher.scrub();
                return t;
            }
            if (!t.equals(u)) {
                this._cipher.scrub();
                throw new Error("data not multiple of block length");
            }
        };
        h.prototype.setAutoPadding = function (t) {
            this._autopadding = !!t;
            return this;
        };
        function p() {
            this.cache = r.allocUnsafe(0);
        }
        p.prototype.add = function (t) {
            this.cache = r.concat([this.cache, t]);
        };
        p.prototype.get = function () {
            if (this.cache.length > 15) {
                var t = this.cache.slice(0, 16);
                this.cache = this.cache.slice(16);
                return t;
            }
            return null;
        };
        p.prototype.flush = function () {
            for (var t = 16 - this.cache.length, e = r.allocUnsafe(t), i = -1; ++i < t;) e.writeUInt8(t, i);
            return r.concat([this.cache, e]);
        };
        function d(t, e, i) {
            var s = n[t.toLowerCase()];
            if (!s) throw new TypeError("invalid suite type");
            "string" == typeof e && (e = r.from(e));
            if (e.length !== s.key / 8) throw new TypeError("invalid key length " + e.length);
            "string" == typeof i && (i = r.from(i));
            if ("GCM" !== s.mode && i.length !== s.iv) throw new TypeError("invalid iv length " + i.length);
            return "stream" === s.type ? new o(s.module, e, i) : "auth" === s.type ? new a(s.module, e, i) : new h(s.module, e, i);
        }
        i.createCipheriv = d;
        i.createCipher = function (t, e) {
            var i = n[t.toLowerCase()];
            if (!i) throw new TypeError("invalid suite type");
            var a = l(e, !1, i.key, i.iv);
            return d(t, a.key, a.iv);
        };
    }, {
        "./aes": 20,
        "./authCipher": 21,
        "./modes": 33,
        "./streamCipher": 36,
        "cipher-base": 67,
        evp_bytestokey: 105,
        inherits: 138,
        "safe-buffer": 176
    }],
    25: [function (t, e) {
        var i = t("safe-buffer").Buffer, n = i.alloc(16, 0);
        function a(t) {
            var e = i.allocUnsafe(16);
            e.writeUInt32BE(t[0] >>> 0, 0);
            e.writeUInt32BE(t[1] >>> 0, 4);
            e.writeUInt32BE(t[2] >>> 0, 8);
            e.writeUInt32BE(t[3] >>> 0, 12);
            return e;
        }
        function r(t) {
            this.h = t;
            this.state = i.alloc(16, 0);
            this.cache = i.allocUnsafe(0);
        }
        r.prototype.ghash = function (t) {
            for (var e = -1; ++e < t.length;) this.state[e] ^= t[e];
            this._multiply();
        };
        r.prototype._multiply = function () {
            for (var t, e, i, n = [(t = this.h).readUInt32BE(0), t.readUInt32BE(4), t.readUInt32BE(8), t.readUInt32BE(12)], r = [0, 0, 0, 0], o = -1; ++o < 128;) {
                if (0 != (this.state[~~(o / 8)] & 1 << 7 - o % 8)) {
                    r[0] ^= n[0];
                    r[1] ^= n[1];
                    r[2] ^= n[2];
                    r[3] ^= n[3];
                }
                i = 0 != (1 & n[3]);
                for (e = 3; e > 0; e--) n[e] = n[e] >>> 1 | (1 & n[e - 1]) << 31;
                n[0] = n[0] >>> 1;
                i && (n[0] = n[0] ^ 225 << 24);
            }
            this.state = a(r);
        };
        r.prototype.update = function (t) {
            this.cache = i.concat([this.cache, t]);
            for (var e; this.cache.length >= 16;) {
                e = this.cache.slice(0, 16);
                this.cache = this.cache.slice(16);
                this.ghash(e);
            }
        };
        r.prototype.final = function (t, e) {
            this.cache.length && this.ghash(i.concat([this.cache, n], 16));
            this.ghash(a([0, t, 0, e]));
            return this.state;
        };
        e.exports = r;
    }, {
        "safe-buffer": 176
    }],
    26: [function (t, e) {
        e.exports = function (t) {
            for (var e, i = t.length; i--;) {
                if (255 !== (e = t.readUInt8(i))) {
                    e++;
                    t.writeUInt8(e, i);
                    break;
                }
                t.writeUInt8(0, i);
            }
        };
    }, {}],
    27: [function (t, e, i) {
        var n = t("buffer-xor");
        i.encrypt = function (t, e) {
            var i = n(e, t._prev);
            t._prev = t._cipher.encryptBlock(i);
            return t._prev;
        };
        i.decrypt = function (t, e) {
            var i = t._prev;
            t._prev = e;
            var a = t._cipher.decryptBlock(e);
            return n(a, i);
        };
    }, {
        "buffer-xor": 64
    }],
    28: [function (t, e, i) {
        var n = t("safe-buffer").Buffer, a = t("buffer-xor");
        function r(t, e, i) {
            var r = e.length, o = a(e, t._cache);
            t._cache = t._cache.slice(r);
            t._prev = n.concat([t._prev, i ? e : o]);
            return o;
        }
        i.encrypt = function (t, e, i) {
            for (var a, o = n.allocUnsafe(0); e.length;) {
                if (0 === t._cache.length) {
                    t._cache = t._cipher.encryptBlock(t._prev);
                    t._prev = n.allocUnsafe(0);
                }
                if (!(t._cache.length <= e.length)) {
                    o = n.concat([o, r(t, e, i)]);
                    break;
                }
                a = t._cache.length;
                o = n.concat([o, r(t, e.slice(0, a), i)]);
                e = e.slice(a);
            }
            return o;
        };
    }, {
        "buffer-xor": 64,
        "safe-buffer": 176
    }],
    29: [function (t, e, i) {
        var n = t("safe-buffer").Buffer;
        function a(t, e, i) {
            for (var n, a, o = -1, s = 0; ++o < 8;) {
                n = e & 1 << 7 - o ? 128 : 0;
                s += (128 & (a = t._cipher.encryptBlock(t._prev)[0] ^ n)) >> o % 8;
                t._prev = r(t._prev, i ? n : a);
            }
            return s;
        }
        function r(t, e) {
            var i = t.length, a = -1, r = n.allocUnsafe(t.length);
            t = n.concat([t, n.from([e])]);
            for (; ++a < i;) r[a] = t[a] << 1 | t[a + 1] >> 7;
            return r;
        }
        i.encrypt = function (t, e, i) {
            for (var r = e.length, o = n.allocUnsafe(r), s = -1; ++s < r;) o[s] = a(t, e[s], i);
            return o;
        };
    }, {
        "safe-buffer": 176
    }],
    30: [function (t, e, i) {
        var n = t("safe-buffer").Buffer;
        function a(t, e, i) {
            var a = t._cipher.encryptBlock(t._prev)[0] ^ e;
            t._prev = n.concat([t._prev.slice(1), n.from([i ? e : a])]);
            return a;
        }
        i.encrypt = function (t, e, i) {
            for (var r = e.length, o = n.allocUnsafe(r), s = -1; ++s < r;) o[s] = a(t, e[s], i);
            return o;
        };
    }, {
        "safe-buffer": 176
    }],
    31: [function (t, e, i) {
        var n = t("buffer-xor"), a = t("safe-buffer").Buffer, r = t("../incr32");
        function o(t) {
            var e = t._cipher.encryptBlockRaw(t._prev);
            r(t._prev);
            return e;
        }
        i.encrypt = function (t, e) {
            var i = Math.ceil(e.length / 16), r = t._cache.length;
            t._cache = a.concat([t._cache, a.allocUnsafe(16 * i)]);
            for (var s = 0; s < i; s++) {
                var c = o(t), l = r + 16 * s;
                t._cache.writeUInt32BE(c[0], l + 0);
                t._cache.writeUInt32BE(c[1], l + 4);
                t._cache.writeUInt32BE(c[2], l + 8);
                t._cache.writeUInt32BE(c[3], l + 12);
            }
            var h = t._cache.slice(0, e.length);
            t._cache = t._cache.slice(e.length);
            return n(e, h);
        };
    }, {
        "../incr32": 26,
        "buffer-xor": 64,
        "safe-buffer": 176
    }],
    32: [function (t, e, i) {
        i.encrypt = function (t, e) {
            return t._cipher.encryptBlock(e);
        };
        i.decrypt = function (t, e) {
            return t._cipher.decryptBlock(e);
        };
    }, {}],
    33: [function (t, e) {
        var i = {
            ECB: t("./ecb"),
            CBC: t("./cbc"),
            CFB: t("./cfb"),
            CFB8: t("./cfb8"),
            CFB1: t("./cfb1"),
            OFB: t("./ofb"),
            CTR: t("./ctr"),
            GCM: t("./ctr")
        }, n = t("./list.json");
        for (var a in n) n[a].module = i[n[a].mode];
        e.exports = n;
    }, {
        "./cbc": 27,
        "./cfb": 28,
        "./cfb1": 29,
        "./cfb8": 30,
        "./ctr": 31,
        "./ecb": 32,
        "./list.json": 34,
        "./ofb": 35
    }],
    34: [function (t, e) {
        e.exports = {
            "aes-128-ecb": {
                cipher: "AES",
                key: 128,
                iv: 0,
                mode: "ECB",
                type: "block"
            },
            "aes-192-ecb": {
                cipher: "AES",
                key: 192,
                iv: 0,
                mode: "ECB",
                type: "block"
            },
            "aes-256-ecb": {
                cipher: "AES",
                key: 256,
                iv: 0,
                mode: "ECB",
                type: "block"
            },
            "aes-128-cbc": {
                cipher: "AES",
                key: 128,
                iv: 16,
                mode: "CBC",
                type: "block"
            },
            "aes-192-cbc": {
                cipher: "AES",
                key: 192,
                iv: 16,
                mode: "CBC",
                type: "block"
            },
            "aes-256-cbc": {
                cipher: "AES",
                key: 256,
                iv: 16,
                mode: "CBC",
                type: "block"
            },
            aes128: {
                cipher: "AES",
                key: 128,
                iv: 16,
                mode: "CBC",
                type: "block"
            },
            aes192: {
                cipher: "AES",
                key: 192,
                iv: 16,
                mode: "CBC",
                type: "block"
            },
            aes256: {
                cipher: "AES",
                key: 256,
                iv: 16,
                mode: "CBC",
                type: "block"
            },
            "aes-128-cfb": {
                cipher: "AES",
                key: 128,
                iv: 16,
                mode: "CFB",
                type: "stream"
            },
            "aes-192-cfb": {
                cipher: "AES",
                key: 192,
                iv: 16,
                mode: "CFB",
                type: "stream"
            },
            "aes-256-cfb": {
                cipher: "AES",
                key: 256,
                iv: 16,
                mode: "CFB",
                type: "stream"
            },
            "aes-128-cfb8": {
                cipher: "AES",
                key: 128,
                iv: 16,
                mode: "CFB8",
                type: "stream"
            },
            "aes-192-cfb8": {
                cipher: "AES",
                key: 192,
                iv: 16,
                mode: "CFB8",
                type: "stream"
            },
            "aes-256-cfb8": {
                cipher: "AES",
                key: 256,
                iv: 16,
                mode: "CFB8",
                type: "stream"
            },
            "aes-128-cfb1": {
                cipher: "AES",
                key: 128,
                iv: 16,
                mode: "CFB1",
                type: "stream"
            },
            "aes-192-cfb1": {
                cipher: "AES",
                key: 192,
                iv: 16,
                mode: "CFB1",
                type: "stream"
            },
            "aes-256-cfb1": {
                cipher: "AES",
                key: 256,
                iv: 16,
                mode: "CFB1",
                type: "stream"
            },
            "aes-128-ofb": {
                cipher: "AES",
                key: 128,
                iv: 16,
                mode: "OFB",
                type: "stream"
            },
            "aes-192-ofb": {
                cipher: "AES",
                key: 192,
                iv: 16,
                mode: "OFB",
                type: "stream"
            },
            "aes-256-ofb": {
                cipher: "AES",
                key: 256,
                iv: 16,
                mode: "OFB",
                type: "stream"
            },
            "aes-128-ctr": {
                cipher: "AES",
                key: 128,
                iv: 16,
                mode: "CTR",
                type: "stream"
            },
            "aes-192-ctr": {
                cipher: "AES",
                key: 192,
                iv: 16,
                mode: "CTR",
                type: "stream"
            },
            "aes-256-ctr": {
                cipher: "AES",
                key: 256,
                iv: 16,
                mode: "CTR",
                type: "stream"
            },
            "aes-128-gcm": {
                cipher: "AES",
                key: 128,
                iv: 12,
                mode: "GCM",
                type: "auth"
            },
            "aes-192-gcm": {
                cipher: "AES",
                key: 192,
                iv: 12,
                mode: "GCM",
                type: "auth"
            },
            "aes-256-gcm": {
                cipher: "AES",
                key: 256,
                iv: 12,
                mode: "GCM",
                type: "auth"
            }
        };
    }, {}],
    35: [function (t, e, i) {
        (function (e) {
            var n = t("buffer-xor");
            function a(t) {
                t._prev = t._cipher.encryptBlock(t._prev);
                return t._prev;
            }
            i.encrypt = function (t, i) {
                for (; t._cache.length < i.length;) t._cache = e.concat([t._cache, a(t)]);
                var r = t._cache.slice(0, i.length);
                t._cache = t._cache.slice(i.length);
                return n(i, r);
            };
        }).call(this, t("buffer").Buffer);
    }, {
        buffer: 65,
        "buffer-xor": 64
    }],
    36: [function (t, e) {
        var i = t("./aes"), n = t("safe-buffer").Buffer, a = t("cipher-base");
        function r(t, e, r, o) {
            a.call(this);
            this._cipher = new i.AES(e);
            this._prev = n.from(r);
            this._cache = n.allocUnsafe(0);
            this._secCache = n.allocUnsafe(0);
            this._decrypt = o;
            this._mode = t;
        }
        t("inherits")(r, a);
        r.prototype._update = function (t) {
            return this._mode.encrypt(this, t, this._decrypt);
        };
        r.prototype._final = function () {
            this._cipher.scrub();
        };
        e.exports = r;
    }, {
        "./aes": 20,
        "cipher-base": 67,
        inherits: 138,
        "safe-buffer": 176
    }],
    37: [function (t, e, i) {
        var n = t("browserify-des"), a = t("browserify-aes/browser"), r = t("browserify-aes/modes"), o = t("browserify-des/modes"), s = t("evp_bytestokey");
        function c(t, e, i) {
            t = t.toLowerCase();
            if (r[t]) return a.createCipheriv(t, e, i);
            if (o[t]) return new n({
                key: e,
                iv: i,
                mode: t
            });
            throw new TypeError("invalid suite type");
        }
        function l(t, e, i) {
            t = t.toLowerCase();
            if (r[t]) return a.createDecipheriv(t, e, i);
            if (o[t]) return new n({
                key: e,
                iv: i,
                mode: t,
                decrypt: !0
            });
            throw new TypeError("invalid suite type");
        }
        i.createCipher = i.Cipher = function (t, e) {
            t = t.toLowerCase();
            var i, n;
            if (r[t]) {
                i = r[t].key;
                n = r[t].iv;
            } else {
                if (!o[t]) throw new TypeError("invalid suite type");
                i = 8 * o[t].key;
                n = o[t].iv;
            }
            var a = s(e, !1, i, n);
            return c(t, a.key, a.iv);
        };
        i.createCipheriv = i.Cipheriv = c;
        i.createDecipher = i.Decipher = function (t, e) {
            t = t.toLowerCase();
            var i, n;
            if (r[t]) {
                i = r[t].key;
                n = r[t].iv;
            } else {
                if (!o[t]) throw new TypeError("invalid suite type");
                i = 8 * o[t].key;
                n = o[t].iv;
            }
            var a = s(e, !1, i, n);
            return l(t, a.key, a.iv);
        };
        i.createDecipheriv = i.Decipheriv = l;
        i.listCiphers = i.getCiphers = function () {
            return Object.keys(o).concat(a.getCiphers());
        };
    }, {
        "browserify-aes/browser": 22,
        "browserify-aes/modes": 33,
        "browserify-des": 38,
        "browserify-des/modes": 39,
        evp_bytestokey: 105
    }],
    38: [function (t, e) {
        var i = t("cipher-base"), n = t("des.js"), a = t("inherits"), r = t("safe-buffer").Buffer, o = {
            "des-ede3-cbc": n.CBC.instantiate(n.EDE),
            "des-ede3": n.EDE,
            "des-ede-cbc": n.CBC.instantiate(n.EDE),
            "des-ede": n.EDE,
            "des-cbc": n.CBC.instantiate(n.DES),
            "des-ecb": n.DES
        };
        o.des = o["des-cbc"];
        o.des3 = o["des-ede3-cbc"];
        e.exports = s;
        a(s, i);
        function s(t) {
            i.call(this);
            var e, n = t.mode.toLowerCase(), a = o[n];
            e = t.decrypt ? "decrypt" : "encrypt";
            var s = t.key;
            r.isBuffer(s) || (s = r.from(s));
            "des-ede" !== n && "des-ede-cbc" !== n || (s = r.concat([s, s.slice(0, 8)]));
            var c = t.iv;
            r.isBuffer(c) || (c = r.from(c));
            this._des = a.create({
                key: s,
                iv: c,
                type: e
            });
        }
        s.prototype._update = function (t) {
            return r.from(this._des.update(t));
        };
        s.prototype._final = function () {
            return r.from(this._des.final());
        };
    }, {
        "cipher-base": 67,
        "des.js": 76,
        inherits: 138,
        "safe-buffer": 176
    }],
    39: [function (t, e, i) {
        i["des-ecb"] = {
            key: 8,
            iv: 0
        };
        i["des-cbc"] = i.des = {
            key: 8,
            iv: 8
        };
        i["des-ede3-cbc"] = i.des3 = {
            key: 24,
            iv: 8
        };
        i["des-ede3"] = {
            key: 24,
            iv: 0
        };
        i["des-ede-cbc"] = {
            key: 16,
            iv: 8
        };
        i["des-ede"] = {
            key: 16,
            iv: 0
        };
    }, {}],
    40: [function (t, e) {
        (function (i) {
            var n = t("bn.js"), a = t("randombytes");
            function r(t) {
                var e = o(t);
                return {
                    blinder: e.toRed(n.mont(t.modulus)).redPow(new n(t.publicExponent)).fromRed(),
                    unblinder: e.invm(t.modulus)
                };
            }
            function o(t) {
                var e, i = t.modulus.byteLength();
                do {
                    e = new n(a(i));
                } while (e.cmp(t.modulus) >= 0 || !e.umod(t.prime1) || !e.umod(t.prime2));
                return e;
            }
            function s(t, e) {
                var a = r(e), o = e.modulus.byteLength(), s = new n(t).mul(a.blinder).umod(e.modulus), c = s.toRed(n.mont(e.prime1)), l = s.toRed(n.mont(e.prime2)), h = e.coefficient, u = e.prime1, p = e.prime2, d = c.redPow(e.exponent1).fromRed(), f = l.redPow(e.exponent2).fromRed(), m = d.isub(f).imul(h).umod(u).imul(p);
                return f.iadd(m).imul(a.unblinder).umod(e.modulus).toArrayLike(i, "be", o);
            }
            s.getr = o;
            e.exports = s;
        }).call(this, t("buffer").Buffer);
    }, {
        "bn.js": 17,
        buffer: 65,
        randombytes: 159
    }],
    41: [function (t, e) {
        e.exports = t("./browser/algorithms.json");
    }, {
        "./browser/algorithms.json": 42
    }],
    42: [function (t, e) {
        e.exports = {
            sha224WithRSAEncryption: {
                sign: "rsa",
                hash: "sha224",
                id: "302d300d06096086480165030402040500041c"
            },
            "RSA-SHA224": {
                sign: "ecdsa/rsa",
                hash: "sha224",
                id: "302d300d06096086480165030402040500041c"
            },
            sha256WithRSAEncryption: {
                sign: "rsa",
                hash: "sha256",
                id: "3031300d060960864801650304020105000420"
            },
            "RSA-SHA256": {
                sign: "ecdsa/rsa",
                hash: "sha256",
                id: "3031300d060960864801650304020105000420"
            },
            sha384WithRSAEncryption: {
                sign: "rsa",
                hash: "sha384",
                id: "3041300d060960864801650304020205000430"
            },
            "RSA-SHA384": {
                sign: "ecdsa/rsa",
                hash: "sha384",
                id: "3041300d060960864801650304020205000430"
            },
            sha512WithRSAEncryption: {
                sign: "rsa",
                hash: "sha512",
                id: "3051300d060960864801650304020305000440"
            },
            "RSA-SHA512": {
                sign: "ecdsa/rsa",
                hash: "sha512",
                id: "3051300d060960864801650304020305000440"
            },
            "RSA-SHA1": {
                sign: "rsa",
                hash: "sha1",
                id: "3021300906052b0e03021a05000414"
            },
            "ecdsa-with-SHA1": {
                sign: "ecdsa",
                hash: "sha1",
                id: ""
            },
            sha256: {
                sign: "ecdsa",
                hash: "sha256",
                id: ""
            },
            sha224: {
                sign: "ecdsa",
                hash: "sha224",
                id: ""
            },
            sha384: {
                sign: "ecdsa",
                hash: "sha384",
                id: ""
            },
            sha512: {
                sign: "ecdsa",
                hash: "sha512",
                id: ""
            },
            "DSA-SHA": {
                sign: "dsa",
                hash: "sha1",
                id: ""
            },
            "DSA-SHA1": {
                sign: "dsa",
                hash: "sha1",
                id: ""
            },
            DSA: {
                sign: "dsa",
                hash: "sha1",
                id: ""
            },
            "DSA-WITH-SHA224": {
                sign: "dsa",
                hash: "sha224",
                id: ""
            },
            "DSA-SHA224": {
                sign: "dsa",
                hash: "sha224",
                id: ""
            },
            "DSA-WITH-SHA256": {
                sign: "dsa",
                hash: "sha256",
                id: ""
            },
            "DSA-SHA256": {
                sign: "dsa",
                hash: "sha256",
                id: ""
            },
            "DSA-WITH-SHA384": {
                sign: "dsa",
                hash: "sha384",
                id: ""
            },
            "DSA-SHA384": {
                sign: "dsa",
                hash: "sha384",
                id: ""
            },
            "DSA-WITH-SHA512": {
                sign: "dsa",
                hash: "sha512",
                id: ""
            },
            "DSA-SHA512": {
                sign: "dsa",
                hash: "sha512",
                id: ""
            },
            "DSA-RIPEMD160": {
                sign: "dsa",
                hash: "rmd160",
                id: ""
            },
            ripemd160WithRSA: {
                sign: "rsa",
                hash: "rmd160",
                id: "3021300906052b2403020105000414"
            },
            "RSA-RIPEMD160": {
                sign: "rsa",
                hash: "rmd160",
                id: "3021300906052b2403020105000414"
            },
            md5WithRSAEncryption: {
                sign: "rsa",
                hash: "md5",
                id: "3020300c06082a864886f70d020505000410"
            },
            "RSA-MD5": {
                sign: "rsa",
                hash: "md5",
                id: "3020300c06082a864886f70d020505000410"
            }
        };
    }, {}],
    43: [function (t, e) {
        e.exports = {
            "1.3.132.0.10": "secp256k1",
            "1.3.132.0.33": "p224",
            "1.2.840.10045.3.1.1": "p192",
            "1.2.840.10045.3.1.7": "p256",
            "1.3.132.0.34": "p384",
            "1.3.132.0.35": "p521"
        };
    }, {}],
    44: [function (t, e) {
        var i = t("safe-buffer").Buffer, n = t("create-hash"), a = t("readable-stream"), r = t("inherits"), o = t("./sign"), s = t("./verify"), c = t("./algorithms.json");
        Object.keys(c).forEach(function (t) {
            c[t].id = i.from(c[t].id, "hex");
            c[t.toLowerCase()] = c[t];
        });
        function l(t) {
            a.Writable.call(this);
            var e = c[t];
            if (!e) throw new Error("Unknown message digest");
            this._hashType = e.hash;
            this._hash = n(e.hash);
            this._tag = e.id;
            this._signType = e.sign;
        }
        r(l, a.Writable);
        l.prototype._write = function (t, e, i) {
            this._hash.update(t);
            i();
        };
        l.prototype.update = function (t, e) {
            "string" == typeof t && (t = i.from(t, e));
            this._hash.update(t);
            return this;
        };
        l.prototype.sign = function (t, e) {
            this.end();
            var i = this._hash.digest(), n = o(i, t, this._hashType, this._signType, this._tag);
            return e ? n.toString(e) : n;
        };
        function h(t) {
            a.Writable.call(this);
            var e = c[t];
            if (!e) throw new Error("Unknown message digest");
            this._hash = n(e.hash);
            this._tag = e.id;
            this._signType = e.sign;
        }
        r(h, a.Writable);
        h.prototype._write = function (t, e, i) {
            this._hash.update(t);
            i();
        };
        h.prototype.update = function (t, e) {
            "string" == typeof t && (t = i.from(t, e));
            this._hash.update(t);
            return this;
        };
        h.prototype.verify = function (t, e, n) {
            "string" == typeof e && (e = i.from(e, n));
            this.end();
            var a = this._hash.digest();
            return s(e, a, t, this._signType, this._tag);
        };
        function u(t) {
            return new l(t);
        }
        function p(t) {
            return new h(t);
        }
        e.exports = {
            Sign: u,
            Verify: p,
            createSign: u,
            createVerify: p
        };
    }, {
        "./algorithms.json": 42,
        "./sign": 45,
        "./verify": 46,
        "create-hash": 71,
        inherits: 138,
        "readable-stream": 61,
        "safe-buffer": 62
    }],
    45: [function (t, e) {
        var i = t("safe-buffer").Buffer, n = t("create-hmac"), a = t("browserify-rsa"), r = t("elliptic").ec, o = t("bn.js"), s = t("parse-asn1"), c = t("./curves.json");
        function l(t, e) {
            var n = c[e.curve.join(".")];
            if (!n) throw new Error("unknown curve " + e.curve.join("."));
            var a = new r(n).keyFromPrivate(e.privateKey).sign(t);
            return i.from(a.toDER());
        }
        function h(t, e, i) {
            for (var n, a = e.params.priv_key, r = e.params.p, s = e.params.q, c = e.params.g, l = new o(0), h = d(t, s).mod(s), f = !1, _ = p(a, s, t, i); !1 === f;) {
                l = g(c, n = m(s, _, i), r, s);
                if (0 === (f = n.invm(s).imul(h.add(a.mul(l))).mod(s)).cmpn(0)) {
                    f = !1;
                    l = new o(0);
                }
            }
            return u(l, f);
        }
        function u(t, e) {
            t = t.toArray();
            e = e.toArray();
            128 & t[0] && (t = [0].concat(t));
            128 & e[0] && (e = [0].concat(e));
            var n = [48, t.length + e.length + 4, 2, t.length];
            n = n.concat(t, [2, e.length], e);
            return i.from(n);
        }
        function p(t, e, a, r) {
            if ((t = i.from(t.toArray())).length < e.byteLength()) {
                var o = i.alloc(e.byteLength() - t.length);
                t = i.concat([o, t]);
            }
            var s = a.length, c = f(a, e), l = i.alloc(s);
            l.fill(1);
            var h = i.alloc(s);
            h = n(r, h).update(l).update(i.from([0])).update(t).update(c).digest();
            l = n(r, h).update(l).digest();
            return {
                k: h = n(r, h).update(l).update(i.from([1])).update(t).update(c).digest(),
                v: l = n(r, h).update(l).digest()
            };
        }
        function d(t, e) {
            var i = new o(t), n = (t.length << 3) - e.bitLength();
            n > 0 && i.ishrn(n);
            return i;
        }
        function f(t, e) {
            t = (t = d(t, e)).mod(e);
            var n = i.from(t.toArray());
            if (n.length < e.byteLength()) {
                var a = i.alloc(e.byteLength() - n.length);
                n = i.concat([a, n]);
            }
            return n;
        }
        function m(t, e, a) {
            var r, o;
            do {
                r = i.alloc(0);
                for (; 8 * r.length < t.bitLength();) {
                    e.v = n(a, e.k).update(e.v).digest();
                    r = i.concat([r, e.v]);
                }
                o = d(r, t);
                e.k = n(a, e.k).update(e.v).update(i.from([0])).digest();
                e.v = n(a, e.k).update(e.v).digest();
            } while (-1 !== o.cmp(t));
            return o;
        }
        function g(t, e, i, n) {
            return t.toRed(o.mont(i)).redPow(e).fromRed().mod(n);
        }
        e.exports = function (t, e, n, r, o) {
            var c = s(e);
            if (c.curve) {
                if ("ecdsa" !== r && "ecdsa/rsa" !== r) throw new Error("wrong private key type");
                return l(t, c);
            }
            if ("dsa" === c.type) {
                if ("dsa" !== r) throw new Error("wrong private key type");
                return h(t, c, n);
            }
            if ("rsa" !== r && "ecdsa/rsa" !== r) throw new Error("wrong private key type");
            t = i.concat([o, t]);
            for (var u = c.modulus.byteLength(), p = [0, 1]; t.length + p.length + 1 < u;) p.push(255);
            p.push(0);
            for (var d = -1; ++d < t.length;) p.push(t[d]);
            return a(p, c);
        };
        e.exports.getKey = p;
        e.exports.makeKey = m;
    }, {
        "./curves.json": 43,
        "bn.js": 17,
        "browserify-rsa": 40,
        "create-hmac": 73,
        elliptic: 87,
        "parse-asn1": 149,
        "safe-buffer": 62
    }],
    46: [function (t, e) {
        var i = t("safe-buffer").Buffer, n = t("bn.js"), a = t("elliptic").ec, r = t("parse-asn1"), o = t("./curves.json");
        function s(t, e, i) {
            var n = o[i.data.algorithm.curve.join(".")];
            if (!n) throw new Error("unknown curve " + i.data.algorithm.curve.join("."));
            var r = new a(n), s = i.data.subjectPrivateKey.data;
            return r.verify(e, t, s);
        }
        function c(t, e, i) {
            var a = i.data.p, o = i.data.q, s = i.data.g, c = i.data.pub_key, h = r.signature.decode(t, "der"), u = h.s, p = h.r;
            l(u, o);
            l(p, o);
            var d = n.mont(a), f = u.invm(o);
            return 0 === s.toRed(d).redPow(new n(e).mul(f).mod(o)).fromRed().mul(c.toRed(d).redPow(p.mul(f).mod(o)).fromRed()).mod(a).mod(o).cmp(p);
        }
        function l(t, e) {
            if (t.cmpn(0) <= 0) throw new Error("invalid sig");
            if (t.cmp(e) >= e) throw new Error("invalid sig");
        }
        e.exports = function (t, e, a, o, l) {
            var h = r(a);
            if ("ec" === h.type) {
                if ("ecdsa" !== o && "ecdsa/rsa" !== o) throw new Error("wrong public key type");
                return s(t, e, h);
            }
            if ("dsa" === h.type) {
                if ("dsa" !== o) throw new Error("wrong public key type");
                return c(t, e, h);
            }
            if ("rsa" !== o && "ecdsa/rsa" !== o) throw new Error("wrong public key type");
            e = i.concat([l, e]);
            for (var u = h.modulus.byteLength(), p = [1], d = 0; e.length + p.length + 2 < u;) {
                p.push(255);
                d++;
            }
            p.push(0);
            for (var f = -1; ++f < e.length;) p.push(e[f]);
            p = i.from(p);
            var m = n.mont(h.modulus);
            t = (t = new n(t).toRed(m)).redPow(new n(h.publicExponent));
            t = i.from(t.fromRed().toArray());
            var g = d < 8 ? 1 : 0;
            u = Math.min(t.length, p.length);
            t.length !== p.length && (g = 1);
            f = -1;
            for (; ++f < u;) g |= t[f] ^ p[f];
            return 0 === g;
        };
    }, {
        "./curves.json": 43,
        "bn.js": 17,
        elliptic: 87,
        "parse-asn1": 149,
        "safe-buffer": 62
    }],
    47: [function (t, e) {
        "use strict";
        function i(t, e) {
            t.prototype = Object.create(e.prototype);
            t.prototype.constructor = t;
            t.__proto__ = e;
        }
        var n = {};
        function a(t, e, a) {
            a || (a = Error);
            function r(t, i, n) {
                return "string" == typeof e ? e : e(t, i, n);
            }
            var o = function (t) {
                i(e, t);
                function e(e, i, n) {
                    return t.call(this, r(e, i, n)) || this;
                }
                return e;
            }(a);
            o.prototype.name = a.name;
            o.prototype.code = t;
            n[t] = o;
        }
        function r(t, e) {
            if (Array.isArray(t)) {
                var i = t.length;
                t = t.map(function (t) {
                    return String(t);
                });
                return i > 2 ? "one of ".concat(e, " ").concat(t.slice(0, i - 1).join(", "), ", or ") + t[i - 1] : 2 === i ? "one of ".concat(e, " ").concat(t[0], " or ").concat(t[1]) : "of ".concat(e, " ").concat(t[0]);
            }
            return "of ".concat(e, " ").concat(String(t));
        }
        function o(t, e, i) {
            (void 0 === i || i > t.length) && (i = t.length);
            return t.substring(i - e.length, i) === e;
        }
        function s(t, e, i) {
            "number" != typeof i && (i = 0);
            return !(i + e.length > t.length) && -1 !== t.indexOf(e, i);
        }
        a("ERR_INVALID_OPT_VALUE", function (t, e) {
            return 'The value "' + e + '" is invalid for option "' + t + '"';
        }, TypeError);
        a("ERR_INVALID_ARG_TYPE", function (t, e, i) {
            var n, a;
            if ("string" == typeof e && ("not ", "not " === e.substr(0, "not ".length))) {
                n = "must not be";
                e = e.replace(/^not /, "");
            } else n = "must be";
            if (o(t, " argument")) a = "The ".concat(t, " ").concat(n, " ").concat(r(e, "type")); else {
                var c = s(t, ".") ? "property" : "argument";
                a = 'The "'.concat(t, '" ').concat(c, " ").concat(n, " ").concat(r(e, "type"));
            }
            return a + ". Received type ".concat(typeof i);
        }, TypeError);
        a("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
        a("ERR_METHOD_NOT_IMPLEMENTED", function (t) {
            return "The " + t + " method is not implemented";
        });
        a("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
        a("ERR_STREAM_DESTROYED", function (t) {
            return "Cannot call " + t + " after a stream was destroyed";
        });
        a("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
        a("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
        a("ERR_STREAM_WRITE_AFTER_END", "write after end");
        a("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
        a("ERR_UNKNOWN_ENCODING", function (t) {
            return "Unknown encoding: " + t;
        }, TypeError);
        a("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
        e.exports.codes = n;
    }, {}],
    48: [function (t, e) {
        (function (i) {
            "use strict";
            var n = Object.keys || function (t) {
                var e = [];
                for (var i in t) e.push(i);
                return e;
            };
            e.exports = l;
            var a = t("./_stream_readable"), r = t("./_stream_writable");
            t("inherits")(l, a);
            for (var o = n(r.prototype), s = 0; s < o.length; s++) {
                var c = o[s];
                l.prototype[c] || (l.prototype[c] = r.prototype[c]);
            }
            function l(t) {
                if (!(this instanceof l)) return new l(t);
                a.call(this, t);
                r.call(this, t);
                this.allowHalfOpen = !0;
                if (t) {
                    !1 === t.readable && (this.readable = !1);
                    !1 === t.writable && (this.writable = !1);
                    if (!1 === t.allowHalfOpen) {
                        this.allowHalfOpen = !1;
                        this.once("end", h);
                    }
                }
            }
            Object.defineProperty(l.prototype, "writableHighWaterMark", {
                enumerable: !1,
                get: function () {
                    return this._writableState.highWaterMark;
                }
            });
            Object.defineProperty(l.prototype, "writableBuffer", {
                enumerable: !1,
                get: function () {
                    return this._writableState && this._writableState.getBuffer();
                }
            });
            Object.defineProperty(l.prototype, "writableLength", {
                enumerable: !1,
                get: function () {
                    return this._writableState.length;
                }
            });
            function h() {
                this._writableState.ended || i.nextTick(u, this);
            }
            function u(t) {
                t.end();
            }
            Object.defineProperty(l.prototype, "destroyed", {
                enumerable: !1,
                get: function () {
                    return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
                },
                set: function (t) {
                    if (void 0 !== this._readableState && void 0 !== this._writableState) {
                        this._readableState.destroyed = t;
                        this._writableState.destroyed = t;
                    }
                }
            });
        }).call(this, t("_process"));
    }, {
        "./_stream_readable": 50,
        "./_stream_writable": 52,
        _process: 151,
        inherits: 138
    }],
    49: [function (t, e) {
        "use strict";
        e.exports = n;
        var i = t("./_stream_transform");
        t("inherits")(n, i);
        function n(t) {
            if (!(this instanceof n)) return new n(t);
            i.call(this, t);
        }
        n.prototype._transform = function (t, e, i) {
            i(null, t);
        };
    }, {
        "./_stream_transform": 51,
        inherits: 138
    }],
    50: [function (t, e) {
        (function (i, n) {
            "use strict";
            e.exports = T;
            var a;
            T.ReadableState = A;
            t("events").EventEmitter;
            var r = function (t, e) {
                return t.listeners(e).length;
            }, o = t("./internal/streams/stream"), s = t("buffer").Buffer, c = n.Uint8Array || function () { };
            function l(t) {
                return s.from(t);
            }
            var h, u = t("util");
            h = u && u.debuglog ? u.debuglog("stream") : function () { };
            var p, d, f, m = t("./internal/streams/buffer_list"), g = t("./internal/streams/destroy"), _ = t("./internal/streams/state").getHighWaterMark, y = t("../errors").codes, v = y.ERR_INVALID_ARG_TYPE, b = y.ERR_STREAM_PUSH_AFTER_EOF, M = y.ERR_METHOD_NOT_IMPLEMENTED, S = y.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
            t("inherits")(T, o);
            var k = g.errorOrDestroy, C = ["error", "close", "destroy", "pause", "resume"];
            function w(t, e, i) {
                if ("function" == typeof t.prependListener) return t.prependListener(e, i);
                t._events && t._events[e] ? Array.isArray(t._events[e]) ? t._events[e].unshift(i) : t._events[e] = [i, t._events[e]] : t.on(e, i);
            }
            function A(e, i, n) {
                a = a || t("./_stream_duplex");
                e = e || {};
                "boolean" != typeof n && (n = i instanceof a);
                this.objectMode = !!e.objectMode;
                n && (this.objectMode = this.objectMode || !!e.readableObjectMode);
                this.highWaterMark = _(this, e, "readableHighWaterMark", n);
                this.buffer = new m();
                this.length = 0;
                this.pipes = null;
                this.pipesCount = 0;
                this.flowing = null;
                this.ended = !1;
                this.endEmitted = !1;
                this.reading = !1;
                this.sync = !0;
                this.needReadable = !1;
                this.emittedReadable = !1;
                this.readableListening = !1;
                this.resumeScheduled = !1;
                this.paused = !0;
                this.emitClose = !1 !== e.emitClose;
                this.autoDestroy = !!e.autoDestroy;
                this.destroyed = !1;
                this.defaultEncoding = e.defaultEncoding || "utf8";
                this.awaitDrain = 0;
                this.readingMore = !1;
                this.decoder = null;
                this.encoding = null;
                if (e.encoding) {
                    p || (p = t("string_decoder/").StringDecoder);
                    this.decoder = new p(e.encoding);
                    this.encoding = e.encoding;
                }
            }
            function T(e) {
                a = a || t("./_stream_duplex");
                if (!(this instanceof T)) return new T(e);
                var i = this instanceof a;
                this._readableState = new A(e, this, i);
                this.readable = !0;
                if (e) {
                    "function" == typeof e.read && (this._read = e.read);
                    "function" == typeof e.destroy && (this._destroy = e.destroy);
                }
                o.call(this);
            }
            Object.defineProperty(T.prototype, "destroyed", {
                enumerable: !1,
                get: function () {
                    return void 0 !== this._readableState && this._readableState.destroyed;
                },
                set: function (t) {
                    this._readableState && (this._readableState.destroyed = t);
                }
            });
            T.prototype.destroy = g.destroy;
            T.prototype._undestroy = g.undestroy;
            T.prototype._destroy = function (t, e) {
                e(t);
            };
            T.prototype.push = function (t, e) {
                var i, n = this._readableState;
                if (n.objectMode) i = !0; else if ("string" == typeof t) {
                    if ((e = e || n.defaultEncoding) !== n.encoding) {
                        t = s.from(t, e);
                        e = "";
                    }
                    i = !0;
                }
                return D(this, t, e, !1, i);
            };
            T.prototype.unshift = function (t) {
                return D(this, t, null, !0, !1);
            };
            function D(t, e, i, n, a) {
                h("readableAddChunk", e);
                var r = t._readableState;
                if (null === e) {
                    r.reading = !1;
                    x(t, r);
                } else {
                    var o;
                    a || (o = E(r, e));
                    if (o) k(t, o); else if (r.objectMode || e && e.length > 0) {
                        "string" == typeof e || r.objectMode || Object.getPrototypeOf(e) === s.prototype || (e = l(e));
                        if (n) r.endEmitted ? k(t, new S()) : P(t, r, e, !0); else if (r.ended) k(t, new b()); else {
                            if (r.destroyed) return !1;
                            r.reading = !1;
                            if (r.decoder && !i) {
                                e = r.decoder.write(e);
                                r.objectMode || 0 !== e.length ? P(t, r, e, !1) : G(t, r);
                            } else P(t, r, e, !1);
                        }
                    } else if (!n) {
                        r.reading = !1;
                        G(t, r);
                    }
                }
                return !r.ended && (r.length < r.highWaterMark || 0 === r.length);
            }
            function P(t, e, i, n) {
                if (e.flowing && 0 === e.length && !e.sync) {
                    e.awaitDrain = 0;
                    t.emit("data", i);
                } else {
                    e.length += e.objectMode ? 1 : i.length;
                    n ? e.buffer.unshift(i) : e.buffer.push(i);
                    e.needReadable && R(t);
                }
                G(t, e);
            }
            function E(t, e) {
                var i, n;
                (n = e, s.isBuffer(n) || n instanceof c) || "string" == typeof e || void 0 === e || t.objectMode || (i = new v("chunk", ["string", "Buffer", "Uint8Array"], e));
                return i;
            }
            T.prototype.isPaused = function () {
                return !1 === this._readableState.flowing;
            };
            T.prototype.setEncoding = function (e) {
                p || (p = t("string_decoder/").StringDecoder);
                var i = new p(e);
                this._readableState.decoder = i;
                this._readableState.encoding = this._readableState.decoder.encoding;
                for (var n = this._readableState.buffer.head, a = ""; null !== n;) {
                    a += i.write(n.data);
                    n = n.next;
                }
                this._readableState.buffer.clear();
                "" !== a && this._readableState.buffer.push(a);
                this._readableState.length = a.length;
                return this;
            };
            var B = 1073741824;
            function F(t) {
                if (t >= B) t = B; else {
                    t--;
                    t |= t >>> 1;
                    t |= t >>> 2;
                    t |= t >>> 4;
                    t |= t >>> 8;
                    t |= t >>> 16;
                    t++;
                }
                return t;
            }
            function N(t, e) {
                if (t <= 0 || 0 === e.length && e.ended) return 0;
                if (e.objectMode) return 1;
                if (t != t) return e.flowing && e.length ? e.buffer.head.data.length : e.length;
                t > e.highWaterMark && (e.highWaterMark = F(t));
                if (t <= e.length) return t;
                if (!e.ended) {
                    e.needReadable = !0;
                    return 0;
                }
                return e.length;
            }
            T.prototype.read = function (t) {
                h("read", t);
                t = parseInt(t, 10);
                var e = this._readableState, i = t;
                0 !== t && (e.emittedReadable = !1);
                if (0 === t && e.needReadable && ((0 !== e.highWaterMark ? e.length >= e.highWaterMark : e.length > 0) || e.ended)) {
                    h("read: emitReadable", e.length, e.ended);
                    0 === e.length && e.ended ? z(this) : R(this);
                    return null;
                }
                if (0 === (t = N(t, e)) && e.ended) {
                    0 === e.length && z(this);
                    return null;
                }
                var n, a = e.needReadable;
                h("need readable", a);
                (0 === e.length || e.length - t < e.highWaterMark) && h("length less than watermark", a = !0);
                if (e.ended || e.reading) h("reading or ended", a = !1); else if (a) {
                    h("do read");
                    e.reading = !0;
                    e.sync = !0;
                    0 === e.length && (e.needReadable = !0);
                    this._read(e.highWaterMark);
                    e.sync = !1;
                    e.reading || (t = N(i, e));
                }
                if (null === (n = t > 0 ? V(t, e) : null)) {
                    e.needReadable = e.length <= e.highWaterMark;
                    t = 0;
                } else {
                    e.length -= t;
                    e.awaitDrain = 0;
                }
                if (0 === e.length) {
                    e.ended || (e.needReadable = !0);
                    i !== t && e.ended && z(this);
                }
                null !== n && this.emit("data", n);
                return n;
            };
            function x(t, e) {
                h("onEofChunk");
                if (!e.ended) {
                    if (e.decoder) {
                        var i = e.decoder.end();
                        if (i && i.length) {
                            e.buffer.push(i);
                            e.length += e.objectMode ? 1 : i.length;
                        }
                    }
                    e.ended = !0;
                    if (e.sync) R(t); else {
                        e.needReadable = !1;
                        if (!e.emittedReadable) {
                            e.emittedReadable = !0;
                            I(t);
                        }
                    }
                }
            }
            function R(t) {
                var e = t._readableState;
                h("emitReadable", e.needReadable, e.emittedReadable);
                e.needReadable = !1;
                if (!e.emittedReadable) {
                    h("emitReadable", e.flowing);
                    e.emittedReadable = !0;
                    i.nextTick(I, t);
                }
            }
            function I(t) {
                var e = t._readableState;
                h("emitReadable_", e.destroyed, e.length, e.ended);
                if (!e.destroyed && (e.length || e.ended)) {
                    t.emit("readable");
                    e.emittedReadable = !1;
                }
                e.needReadable = !e.flowing && !e.ended && e.length <= e.highWaterMark;
                W(t);
            }
            function G(t, e) {
                if (!e.readingMore) {
                    e.readingMore = !0;
                    i.nextTick(O, t, e);
                }
            }
            function O(t, e) {
                for (; !e.reading && !e.ended && (e.length < e.highWaterMark || e.flowing && 0 === e.length);) {
                    var i = e.length;
                    h("maybeReadMore read 0");
                    t.read(0);
                    if (i === e.length) break;
                }
                e.readingMore = !1;
            }
            T.prototype._read = function () {
                k(this, new M("_read()"));
            };
            T.prototype.pipe = function (t, e) {
                var n = this, a = this._readableState;
                switch (a.pipesCount) {
                    case 0:
                        a.pipes = t;
                        break;

                    case 1:
                        a.pipes = [a.pipes, t];
                        break;

                    default:
                        a.pipes.push(t);
                }
                a.pipesCount += 1;
                h("pipe count=%d opts=%j", a.pipesCount, e);
                var o = e && !1 === e.end || t === i.stdout || t === i.stderr ? _ : c;
                a.endEmitted ? i.nextTick(o) : n.once("end", o);
                t.on("unpipe", s);
                function s(t, e) {
                    h("onunpipe");
                    if (t === n && e && !1 === e.hasUnpiped) {
                        e.hasUnpiped = !0;
                        p();
                    }
                }
                function c() {
                    h("onend");
                    t.end();
                }
                var l = L(n);
                t.on("drain", l);
                var u = !1;
                function p() {
                    h("cleanup");
                    t.removeListener("close", m);
                    t.removeListener("finish", g);
                    t.removeListener("drain", l);
                    t.removeListener("error", f);
                    t.removeListener("unpipe", s);
                    n.removeListener("end", c);
                    n.removeListener("end", _);
                    n.removeListener("data", d);
                    u = !0;
                    !a.awaitDrain || t._writableState && !t._writableState.needDrain || l();
                }
                n.on("data", d);
                function d(e) {
                    h("ondata");
                    var i = t.write(e);
                    h("dest.write", i);
                    if (!1 === i) {
                        if ((1 === a.pipesCount && a.pipes === t || a.pipesCount > 1 && -1 !== X(a.pipes, t)) && !u) {
                            h("false write response, pause", a.awaitDrain);
                            a.awaitDrain++;
                        }
                        n.pause();
                    }
                }
                function f(e) {
                    h("onerror", e);
                    _();
                    t.removeListener("error", f);
                    0 === r(t, "error") && k(t, e);
                }
                w(t, "error", f);
                function m() {
                    t.removeListener("finish", g);
                    _();
                }
                t.once("close", m);
                function g() {
                    h("onfinish");
                    t.removeListener("close", m);
                    _();
                }
                t.once("finish", g);
                function _() {
                    h("unpipe");
                    n.unpipe(t);
                }
                t.emit("pipe", n);
                if (!a.flowing) {
                    h("pipe resume");
                    n.resume();
                }
                return t;
            };
            function L(t) {
                return function () {
                    var e = t._readableState;
                    h("pipeOnDrain", e.awaitDrain);
                    e.awaitDrain && e.awaitDrain--;
                    if (0 === e.awaitDrain && r(t, "data")) {
                        e.flowing = !0;
                        W(t);
                    }
                };
            }
            T.prototype.unpipe = function (t) {
                var e = this._readableState, i = {
                    hasUnpiped: !1
                };
                if (0 === e.pipesCount) return this;
                if (1 === e.pipesCount) {
                    if (t && t !== e.pipes) return this;
                    t || (t = e.pipes);
                    e.pipes = null;
                    e.pipesCount = 0;
                    e.flowing = !1;
                    t && t.emit("unpipe", this, i);
                    return this;
                }
                if (!t) {
                    var n = e.pipes, a = e.pipesCount;
                    e.pipes = null;
                    e.pipesCount = 0;
                    e.flowing = !1;
                    for (var r = 0; r < a; r++) n[r].emit("unpipe", this, {
                        hasUnpiped: !1
                    });
                    return this;
                }
                var o = X(e.pipes, t);
                if (-1 === o) return this;
                e.pipes.splice(o, 1);
                e.pipesCount -= 1;
                1 === e.pipesCount && (e.pipes = e.pipes[0]);
                t.emit("unpipe", this, i);
                return this;
            };
            T.prototype.on = function (t, e) {
                var n = o.prototype.on.call(this, t, e), a = this._readableState;
                if ("data" === t) {
                    a.readableListening = this.listenerCount("readable") > 0;
                    !1 !== a.flowing && this.resume();
                } else if ("readable" === t && !a.endEmitted && !a.readableListening) {
                    a.readableListening = a.needReadable = !0;
                    a.flowing = !1;
                    a.emittedReadable = !1;
                    h("on readable", a.length, a.reading);
                    a.length ? R(this) : a.reading || i.nextTick(U, this);
                }
                return n;
            };
            T.prototype.addListener = T.prototype.on;
            T.prototype.removeListener = function (t, e) {
                var n = o.prototype.removeListener.call(this, t, e);
                "readable" === t && i.nextTick(j, this);
                return n;
            };
            T.prototype.removeAllListeners = function (t) {
                var e = o.prototype.removeAllListeners.apply(this, arguments);
                "readable" !== t && void 0 !== t || i.nextTick(j, this);
                return e;
            };
            function j(t) {
                var e = t._readableState;
                e.readableListening = t.listenerCount("readable") > 0;
                e.resumeScheduled && !e.paused ? e.flowing = !0 : t.listenerCount("data") > 0 && t.resume();
            }
            function U(t) {
                h("readable nexttick read 0");
                t.read(0);
            }
            T.prototype.resume = function () {
                var t = this._readableState;
                if (!t.flowing) {
                    h("resume");
                    t.flowing = !t.readableListening;
                    Y(this, t);
                }
                t.paused = !1;
                return this;
            };
            function Y(t, e) {
                if (!e.resumeScheduled) {
                    e.resumeScheduled = !0;
                    i.nextTick(H, t, e);
                }
            }
            function H(t, e) {
                h("resume", e.reading);
                e.reading || t.read(0);
                e.resumeScheduled = !1;
                t.emit("resume");
                W(t);
                e.flowing && !e.reading && t.read(0);
            }
            T.prototype.pause = function () {
                h("call pause flowing=%j", this._readableState.flowing);
                if (!1 !== this._readableState.flowing) {
                    h("pause");
                    this._readableState.flowing = !1;
                    this.emit("pause");
                }
                this._readableState.paused = !0;
                return this;
            };
            function W(t) {
                var e = t._readableState;
                h("flow", e.flowing);
                for (; e.flowing && null !== t.read(););
            }
            T.prototype.wrap = function (t) {
                var e = this, i = this._readableState, n = !1;
                t.on("end", function () {
                    h("wrapped end");
                    if (i.decoder && !i.ended) {
                        var t = i.decoder.end();
                        t && t.length && e.push(t);
                    }
                    e.push(null);
                });
                t.on("data", function (a) {
                    h("wrapped data");
                    i.decoder && (a = i.decoder.write(a));
                    if ((!i.objectMode || null != a) && (i.objectMode || a && a.length) && !e.push(a)) {
                        n = !0;
                        t.pause();
                    }
                });
                for (var a in t) void 0 === this[a] && "function" == typeof t[a] && (this[a] = function (e) {
                    return function () {
                        return t[e].apply(t, arguments);
                    };
                }(a));
                for (var r = 0; r < C.length; r++) t.on(C[r], this.emit.bind(this, C[r]));
                this._read = function (e) {
                    h("wrapped _read", e);
                    if (n) {
                        n = !1;
                        t.resume();
                    }
                };
                return this;
            };
            "function" == typeof Symbol && (T.prototype[Symbol.asyncIterator] = function () {
                void 0 === d && (d = t("./internal/streams/async_iterator"));
                return d(this);
            });
            Object.defineProperty(T.prototype, "readableHighWaterMark", {
                enumerable: !1,
                get: function () {
                    return this._readableState.highWaterMark;
                }
            });
            Object.defineProperty(T.prototype, "readableBuffer", {
                enumerable: !1,
                get: function () {
                    return this._readableState && this._readableState.buffer;
                }
            });
            Object.defineProperty(T.prototype, "readableFlowing", {
                enumerable: !1,
                get: function () {
                    return this._readableState.flowing;
                },
                set: function (t) {
                    this._readableState && (this._readableState.flowing = t);
                }
            });
            T._fromList = V;
            Object.defineProperty(T.prototype, "readableLength", {
                enumerable: !1,
                get: function () {
                    return this._readableState.length;
                }
            });
            function V(t, e) {
                if (0 === e.length) return null;
                var i;
                if (e.objectMode) i = e.buffer.shift(); else if (!t || t >= e.length) {
                    i = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.first() : e.buffer.concat(e.length);
                    e.buffer.clear();
                } else i = e.buffer.consume(t, e.decoder);
                return i;
            }
            function z(t) {
                var e = t._readableState;
                h("endReadable", e.endEmitted);
                if (!e.endEmitted) {
                    e.ended = !0;
                    i.nextTick(J, e, t);
                }
            }
            function J(t, e) {
                h("endReadableNT", t.endEmitted, t.length);
                if (!t.endEmitted && 0 === t.length) {
                    t.endEmitted = !0;
                    e.readable = !1;
                    e.emit("end");
                    if (t.autoDestroy) {
                        var i = e._writableState;
                        (!i || i.autoDestroy && i.finished) && e.destroy();
                    }
                }
            }
            "function" == typeof Symbol && (T.from = function (e, i) {
                void 0 === f && (f = t("./internal/streams/from"));
                return f(T, e, i);
            });
            function X(t, e) {
                for (var i = 0, n = t.length; i < n; i++) if (t[i] === e) return i;
                return -1;
            }
        }).call(this, t("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
        "../errors": 47,
        "./_stream_duplex": 48,
        "./internal/streams/async_iterator": 53,
        "./internal/streams/buffer_list": 54,
        "./internal/streams/destroy": 55,
        "./internal/streams/from": 57,
        "./internal/streams/state": 59,
        "./internal/streams/stream": 60,
        _process: 151,
        buffer: 65,
        events: 104,
        inherits: 138,
        "string_decoder/": 63,
        util: 19
    }],
    51: [function (t, e) {
        "use strict";
        e.exports = l;
        var i = t("../errors").codes, n = i.ERR_METHOD_NOT_IMPLEMENTED, a = i.ERR_MULTIPLE_CALLBACK, r = i.ERR_TRANSFORM_ALREADY_TRANSFORMING, o = i.ERR_TRANSFORM_WITH_LENGTH_0, s = t("./_stream_duplex");
        t("inherits")(l, s);
        function c(t, e) {
            var i = this._transformState;
            i.transforming = !1;
            var n = i.writecb;
            if (null === n) return this.emit("error", new a());
            i.writechunk = null;
            i.writecb = null;
            null != e && this.push(e);
            n(t);
            var r = this._readableState;
            r.reading = !1;
            (r.needReadable || r.length < r.highWaterMark) && this._read(r.highWaterMark);
        }
        function l(t) {
            if (!(this instanceof l)) return new l(t);
            s.call(this, t);
            this._transformState = {
                afterTransform: c.bind(this),
                needTransform: !1,
                transforming: !1,
                writecb: null,
                writechunk: null,
                writeencoding: null
            };
            this._readableState.needReadable = !0;
            this._readableState.sync = !1;
            if (t) {
                "function" == typeof t.transform && (this._transform = t.transform);
                "function" == typeof t.flush && (this._flush = t.flush);
            }
            this.on("prefinish", h);
        }
        function h() {
            var t = this;
            "function" != typeof this._flush || this._readableState.destroyed ? u(this, null, null) : this._flush(function (e, i) {
                u(t, e, i);
            });
        }
        l.prototype.push = function (t, e) {
            this._transformState.needTransform = !1;
            return s.prototype.push.call(this, t, e);
        };
        l.prototype._transform = function (t, e, i) {
            i(new n("_transform()"));
        };
        l.prototype._write = function (t, e, i) {
            var n = this._transformState;
            n.writecb = i;
            n.writechunk = t;
            n.writeencoding = e;
            if (!n.transforming) {
                var a = this._readableState;
                (n.needTransform || a.needReadable || a.length < a.highWaterMark) && this._read(a.highWaterMark);
            }
        };
        l.prototype._read = function () {
            var t = this._transformState;
            if (null === t.writechunk || t.transforming) t.needTransform = !0; else {
                t.transforming = !0;
                this._transform(t.writechunk, t.writeencoding, t.afterTransform);
            }
        };
        l.prototype._destroy = function (t, e) {
            s.prototype._destroy.call(this, t, function (t) {
                e(t);
            });
        };
        function u(t, e, i) {
            if (e) return t.emit("error", e);
            null != i && t.push(i);
            if (t._writableState.length) throw new o();
            if (t._transformState.transforming) throw new r();
            return t.push(null);
        }
    }, {
        "../errors": 47,
        "./_stream_duplex": 48,
        inherits: 138
    }],
    52: [function (t, e) {
        (function (i, n) {
            "use strict";
            e.exports = A;
            function a(t) {
                var e = this;
                this.next = null;
                this.entry = null;
                this.finish = function () {
                    H(e, t);
                };
            }
            var r;
            A.WritableState = w;
            var o = {
                deprecate: t("util-deprecate")
            }, s = t("./internal/streams/stream"), c = t("buffer").Buffer, l = n.Uint8Array || function () { };
            function h(t) {
                return c.from(t);
            }
            var u, p = t("./internal/streams/destroy"), d = t("./internal/streams/state").getHighWaterMark, f = t("../errors").codes, m = f.ERR_INVALID_ARG_TYPE, g = f.ERR_METHOD_NOT_IMPLEMENTED, _ = f.ERR_MULTIPLE_CALLBACK, y = f.ERR_STREAM_CANNOT_PIPE, v = f.ERR_STREAM_DESTROYED, b = f.ERR_STREAM_NULL_VALUES, M = f.ERR_STREAM_WRITE_AFTER_END, S = f.ERR_UNKNOWN_ENCODING, k = p.errorOrDestroy;
            t("inherits")(A, s);
            function C() { }
            function w(e, i, n) {
                r = r || t("./_stream_duplex");
                e = e || {};
                "boolean" != typeof n && (n = i instanceof r);
                this.objectMode = !!e.objectMode;
                n && (this.objectMode = this.objectMode || !!e.writableObjectMode);
                this.highWaterMark = d(this, e, "writableHighWaterMark", n);
                this.finalCalled = !1;
                this.needDrain = !1;
                this.ending = !1;
                this.ended = !1;
                this.finished = !1;
                this.destroyed = !1;
                var o = !1 === e.decodeStrings;
                this.decodeStrings = !o;
                this.defaultEncoding = e.defaultEncoding || "utf8";
                this.length = 0;
                this.writing = !1;
                this.corked = 0;
                this.sync = !0;
                this.bufferProcessing = !1;
                this.onwrite = function (t) {
                    x(i, t);
                };
                this.writecb = null;
                this.writelen = 0;
                this.bufferedRequest = null;
                this.lastBufferedRequest = null;
                this.pendingcb = 0;
                this.prefinished = !1;
                this.errorEmitted = !1;
                this.emitClose = !1 !== e.emitClose;
                this.autoDestroy = !!e.autoDestroy;
                this.bufferedRequestCount = 0;
                this.corkedRequestsFree = new a(this);
            }
            w.prototype.getBuffer = function () {
                for (var t = this.bufferedRequest, e = []; t;) {
                    e.push(t);
                    t = t.next;
                }
                return e;
            };
            (function () {
                try {
                    Object.defineProperty(w.prototype, "buffer", {
                        get: o.deprecate(function () {
                            return this.getBuffer();
                        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                    });
                } catch (t) { }
            })();
            if ("function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance]) {
                u = Function.prototype[Symbol.hasInstance];
                Object.defineProperty(A, Symbol.hasInstance, {
                    value: function (t) {
                        return !!u.call(this, t) || this === A && t && t._writableState instanceof w;
                    }
                });
            } else u = function (t) {
                return t instanceof this;
            };
            function A(e) {
                var i = this instanceof (r = r || t("./_stream_duplex"));
                if (!i && !u.call(A, this)) return new A(e);
                this._writableState = new w(e, this, i);
                this.writable = !0;
                if (e) {
                    "function" == typeof e.write && (this._write = e.write);
                    "function" == typeof e.writev && (this._writev = e.writev);
                    "function" == typeof e.destroy && (this._destroy = e.destroy);
                    "function" == typeof e.final && (this._final = e.final);
                }
                s.call(this);
            }
            A.prototype.pipe = function () {
                k(this, new y());
            };
            function T(t, e) {
                var n = new M();
                k(t, n);
                i.nextTick(e, n);
            }
            function D(t, e, n, a) {
                var r;
                null === n ? r = new b() : "string" == typeof n || e.objectMode || (r = new m("chunk", ["string", "Buffer"], n));
                if (r) {
                    k(t, r);
                    i.nextTick(a, r);
                    return !1;
                }
                return !0;
            }
            A.prototype.write = function (t, e, i) {
                var n, a = this._writableState, r = !1, o = !a.objectMode && (n = t, c.isBuffer(n) || n instanceof l);
                o && !c.isBuffer(t) && (t = h(t));
                if ("function" == typeof e) {
                    i = e;
                    e = null;
                }
                o ? e = "buffer" : e || (e = a.defaultEncoding);
                "function" != typeof i && (i = C);
                if (a.ending) T(this, i); else if (o || D(this, a, t, i)) {
                    a.pendingcb++;
                    r = E(this, a, o, t, e, i);
                }
                return r;
            };
            A.prototype.cork = function () {
                this._writableState.corked++;
            };
            A.prototype.uncork = function () {
                var t = this._writableState;
                if (t.corked) {
                    t.corked--;
                    t.writing || t.corked || t.bufferProcessing || !t.bufferedRequest || G(this, t);
                }
            };
            A.prototype.setDefaultEncoding = function (t) {
                "string" == typeof t && (t = t.toLowerCase());
                if (!(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t + "").toLowerCase()) > -1)) throw new S(t);
                this._writableState.defaultEncoding = t;
                return this;
            };
            Object.defineProperty(A.prototype, "writableBuffer", {
                enumerable: !1,
                get: function () {
                    return this._writableState && this._writableState.getBuffer();
                }
            });
            function P(t, e, i) {
                t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = c.from(e, i));
                return e;
            }
            Object.defineProperty(A.prototype, "writableHighWaterMark", {
                enumerable: !1,
                get: function () {
                    return this._writableState.highWaterMark;
                }
            });
            function E(t, e, i, n, a, r) {
                if (!i) {
                    var o = P(e, n, a);
                    if (n !== o) {
                        i = !0;
                        a = "buffer";
                        n = o;
                    }
                }
                var s = e.objectMode ? 1 : n.length;
                e.length += s;
                var c = e.length < e.highWaterMark;
                c || (e.needDrain = !0);
                if (e.writing || e.corked) {
                    var l = e.lastBufferedRequest;
                    e.lastBufferedRequest = {
                        chunk: n,
                        encoding: a,
                        isBuf: i,
                        callback: r,
                        next: null
                    };
                    l ? l.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest;
                    e.bufferedRequestCount += 1;
                } else B(t, e, !1, s, n, a, r);
                return c;
            }
            function B(t, e, i, n, a, r, o) {
                e.writelen = n;
                e.writecb = o;
                e.writing = !0;
                e.sync = !0;
                e.destroyed ? e.onwrite(new v("write")) : i ? t._writev(a, e.onwrite) : t._write(a, r, e.onwrite);
                e.sync = !1;
            }
            function F(t, e, n, a, r) {
                --e.pendingcb;
                if (n) {
                    i.nextTick(r, a);
                    i.nextTick(U, t, e);
                    t._writableState.errorEmitted = !0;
                    k(t, a);
                } else {
                    r(a);
                    t._writableState.errorEmitted = !0;
                    k(t, a);
                    U(t, e);
                }
            }
            function N(t) {
                t.writing = !1;
                t.writecb = null;
                t.length -= t.writelen;
                t.writelen = 0;
            }
            function x(t, e) {
                var n = t._writableState, a = n.sync, r = n.writecb;
                if ("function" != typeof r) throw new _();
                N(n);
                if (e) F(t, n, a, e, r); else {
                    var o = O(n) || t.destroyed;
                    o || n.corked || n.bufferProcessing || !n.bufferedRequest || G(t, n);
                    a ? i.nextTick(R, t, n, o, r) : R(t, n, o, r);
                }
            }
            function R(t, e, i, n) {
                i || I(t, e);
                e.pendingcb--;
                n();
                U(t, e);
            }
            function I(t, e) {
                if (0 === e.length && e.needDrain) {
                    e.needDrain = !1;
                    t.emit("drain");
                }
            }
            function G(t, e) {
                e.bufferProcessing = !0;
                var i = e.bufferedRequest;
                if (t._writev && i && i.next) {
                    var n = e.bufferedRequestCount, r = new Array(n), o = e.corkedRequestsFree;
                    o.entry = i;
                    for (var s = 0, c = !0; i;) {
                        r[s] = i;
                        i.isBuf || (c = !1);
                        i = i.next;
                        s += 1;
                    }
                    r.allBuffers = c;
                    B(t, e, !0, e.length, r, "", o.finish);
                    e.pendingcb++;
                    e.lastBufferedRequest = null;
                    if (o.next) {
                        e.corkedRequestsFree = o.next;
                        o.next = null;
                    } else e.corkedRequestsFree = new a(e);
                    e.bufferedRequestCount = 0;
                } else {
                    for (; i;) {
                        var l = i.chunk, h = i.encoding, u = i.callback;
                        B(t, e, !1, e.objectMode ? 1 : l.length, l, h, u);
                        i = i.next;
                        e.bufferedRequestCount--;
                        if (e.writing) break;
                    }
                    null === i && (e.lastBufferedRequest = null);
                }
                e.bufferedRequest = i;
                e.bufferProcessing = !1;
            }
            A.prototype._write = function (t, e, i) {
                i(new g("_write()"));
            };
            A.prototype._writev = null;
            A.prototype.end = function (t, e, i) {
                var n = this._writableState;
                if ("function" == typeof t) {
                    i = t;
                    t = null;
                    e = null;
                } else if ("function" == typeof e) {
                    i = e;
                    e = null;
                }
                null != t && this.write(t, e);
                if (n.corked) {
                    n.corked = 1;
                    this.uncork();
                }
                n.ending || Y(this, n, i);
                return this;
            };
            Object.defineProperty(A.prototype, "writableLength", {
                enumerable: !1,
                get: function () {
                    return this._writableState.length;
                }
            });
            function O(t) {
                return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;
            }
            function L(t, e) {
                t._final(function (i) {
                    e.pendingcb--;
                    i && k(t, i);
                    e.prefinished = !0;
                    t.emit("prefinish");
                    U(t, e);
                });
            }
            function j(t, e) {
                if (!e.prefinished && !e.finalCalled) if ("function" != typeof t._final || e.destroyed) {
                    e.prefinished = !0;
                    t.emit("prefinish");
                } else {
                    e.pendingcb++;
                    e.finalCalled = !0;
                    i.nextTick(L, t, e);
                }
            }
            function U(t, e) {
                var i = O(e);
                if (i) {
                    j(t, e);
                    if (0 === e.pendingcb) {
                        e.finished = !0;
                        t.emit("finish");
                        if (e.autoDestroy) {
                            var n = t._readableState;
                            (!n || n.autoDestroy && n.endEmitted) && t.destroy();
                        }
                    }
                }
                return i;
            }
            function Y(t, e, n) {
                e.ending = !0;
                U(t, e);
                n && (e.finished ? i.nextTick(n) : t.once("finish", n));
                e.ended = !0;
                t.writable = !1;
            }
            function H(t, e, i) {
                var n = t.entry;
                t.entry = null;
                for (; n;) {
                    var a = n.callback;
                    e.pendingcb--;
                    a(i);
                    n = n.next;
                }
                e.corkedRequestsFree.next = t;
            }
            Object.defineProperty(A.prototype, "destroyed", {
                enumerable: !1,
                get: function () {
                    return void 0 !== this._writableState && this._writableState.destroyed;
                },
                set: function (t) {
                    this._writableState && (this._writableState.destroyed = t);
                }
            });
            A.prototype.destroy = p.destroy;
            A.prototype._undestroy = p.undestroy;
            A.prototype._destroy = function (t, e) {
                e(t);
            };
        }).call(this, t("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
        "../errors": 47,
        "./_stream_duplex": 48,
        "./internal/streams/destroy": 55,
        "./internal/streams/state": 59,
        "./internal/streams/stream": 60,
        _process: 151,
        buffer: 65,
        inherits: 138,
        "util-deprecate": 188
    }],
    53: [function (t, e) {
        (function (i) {
            "use strict";
            var n;
            function a(t, e, i) {
                e in t ? Object.defineProperty(t, e, {
                    value: i,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[e] = i;
                return t;
            }
            var r = t("./end-of-stream"), o = Symbol("lastResolve"), s = Symbol("lastReject"), c = Symbol("error"), l = Symbol("ended"), h = Symbol("lastPromise"), u = Symbol("handlePromise"), p = Symbol("stream");
            function d(t, e) {
                return {
                    value: t,
                    done: e
                };
            }
            function f(t) {
                var e = t[o];
                if (null !== e) {
                    var i = t[p].read();
                    if (null !== i) {
                        t[h] = null;
                        t[o] = null;
                        t[s] = null;
                        e(d(i, !1));
                    }
                }
            }
            function m(t) {
                i.nextTick(f, t);
            }
            function g(t, e) {
                return function (i, n) {
                    t.then(function () {
                        e[l] ? i(d(void 0, !0)) : e[u](i, n);
                    }, n);
                };
            }
            var _ = Object.getPrototypeOf(function () { }), y = Object.setPrototypeOf((a(n = {
                get stream() {
                    return this[p];
                },
                next: function () {
                    var t = this, e = this[c];
                    if (null !== e) return Promise.reject(e);
                    if (this[l]) return Promise.resolve(d(void 0, !0));
                    if (this[p].destroyed) return new Promise(function (e, n) {
                        i.nextTick(function () {
                            t[c] ? n(t[c]) : e(d(void 0, !0));
                        });
                    });
                    var n, a = this[h];
                    if (a) n = new Promise(g(a, this)); else {
                        var r = this[p].read();
                        if (null !== r) return Promise.resolve(d(r, !1));
                        n = new Promise(this[u]);
                    }
                    this[h] = n;
                    return n;
                }
            }, Symbol.asyncIterator, function () {
                return this;
            }), a(n, "return", function () {
                var t = this;
                return new Promise(function (e, i) {
                    t[p].destroy(null, function (t) {
                        t ? i(t) : e(d(void 0, !0));
                    });
                });
            }), n), _);
            e.exports = function (t) {
                var e, i = Object.create(y, (a(e = {}, p, {
                    value: t,
                    writable: !0
                }), a(e, o, {
                    value: null,
                    writable: !0
                }), a(e, s, {
                    value: null,
                    writable: !0
                }), a(e, c, {
                    value: null,
                    writable: !0
                }), a(e, l, {
                    value: t._readableState.endEmitted,
                    writable: !0
                }), a(e, u, {
                    value: function (t, e) {
                        var n = i[p].read();
                        if (n) {
                            i[h] = null;
                            i[o] = null;
                            i[s] = null;
                            t(d(n, !1));
                        } else {
                            i[o] = t;
                            i[s] = e;
                        }
                    },
                    writable: !0
                }), e));
                i[h] = null;
                r(t, function (t) {
                    if (t && "ERR_STREAM_PREMATURE_CLOSE" !== t.code) {
                        var e = i[s];
                        if (null !== e) {
                            i[h] = null;
                            i[o] = null;
                            i[s] = null;
                            e(t);
                        }
                        i[c] = t;
                    } else {
                        var n = i[o];
                        if (null !== n) {
                            i[h] = null;
                            i[o] = null;
                            i[s] = null;
                            n(d(void 0, !0));
                        }
                        i[l] = !0;
                    }
                });
                t.on("readable", m.bind(null, i));
                return i;
            };
        }).call(this, t("_process"));
    }, {
        "./end-of-stream": 56,
        _process: 151
    }],
    54: [function (t, e) {
        "use strict";
        function i(t, e) {
            var i = Object.keys(t);
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(t);
                e && (n = n.filter(function (e) {
                    return Object.getOwnPropertyDescriptor(t, e).enumerable;
                }));
                i.push.apply(i, n);
            }
            return i;
        }
        function n(t) {
            for (var e = 1; e < arguments.length; e++) {
                var n = null != arguments[e] ? arguments[e] : {};
                e % 2 ? i(Object(n), !0).forEach(function (e) {
                    a(t, e, n[e]);
                }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : i(Object(n)).forEach(function (e) {
                    Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));
                });
            }
            return t;
        }
        function a(t, e, i) {
            e in t ? Object.defineProperty(t, e, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : t[e] = i;
            return t;
        }
        function r(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        function o(t, e) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                n.enumerable = n.enumerable || !1;
                n.configurable = !0;
                "value" in n && (n.writable = !0);
                Object.defineProperty(t, n.key, n);
            }
        }
        function s(t, e, i) {
            e && o(t.prototype, e);
            i && o(t, i);
            return t;
        }
        var c = t("buffer").Buffer, l = t("util").inspect, h = l && l.custom || "inspect";
        e.exports = function () {
            function t() {
                r(this, t);
                this.head = null;
                this.tail = null;
                this.length = 0;
            }
            s(t, [{
                key: "push",
                value: function (t) {
                    var e = {
                        data: t,
                        next: null
                    };
                    this.length > 0 ? this.tail.next = e : this.head = e;
                    this.tail = e;
                    ++this.length;
                }
            }, {
                key: "unshift",
                value: function (t) {
                    var e = {
                        data: t,
                        next: this.head
                    };
                    0 === this.length && (this.tail = e);
                    this.head = e;
                    ++this.length;
                }
            }, {
                key: "shift",
                value: function () {
                    if (0 !== this.length) {
                        var t = this.head.data;
                        1 === this.length ? this.head = this.tail = null : this.head = this.head.next;
                        --this.length;
                        return t;
                    }
                }
            }, {
                key: "clear",
                value: function () {
                    this.head = this.tail = null;
                    this.length = 0;
                }
            }, {
                key: "join",
                value: function (t) {
                    if (0 === this.length) return "";
                    for (var e = this.head, i = "" + e.data; e = e.next;) i += t + e.data;
                    return i;
                }
            }, {
                key: "concat",
                value: function (t) {
                    if (0 === this.length) return c.alloc(0);
                    for (var e, i, n, a = c.allocUnsafe(t >>> 0), r = this.head, o = 0; r;) {
                        e = r.data, i = a, n = o, c.prototype.copy.call(e, i, n);
                        o += r.data.length;
                        r = r.next;
                    }
                    return a;
                }
            }, {
                key: "consume",
                value: function (t, e) {
                    var i;
                    if (t < this.head.data.length) {
                        i = this.head.data.slice(0, t);
                        this.head.data = this.head.data.slice(t);
                    } else i = t === this.head.data.length ? this.shift() : e ? this._getString(t) : this._getBuffer(t);
                    return i;
                }
            }, {
                key: "first",
                value: function () {
                    return this.head.data;
                }
            }, {
                key: "_getString",
                value: function (t) {
                    var e = this.head, i = 1, n = e.data;
                    t -= n.length;
                    for (; e = e.next;) {
                        var a = e.data, r = t > a.length ? a.length : t;
                        r === a.length ? n += a : n += a.slice(0, t);
                        if (0 == (t -= r)) {
                            if (r === a.length) {
                                ++i;
                                e.next ? this.head = e.next : this.head = this.tail = null;
                            } else {
                                this.head = e;
                                e.data = a.slice(r);
                            }
                            break;
                        }
                        ++i;
                    }
                    this.length -= i;
                    return n;
                }
            }, {
                key: "_getBuffer",
                value: function (t) {
                    var e = c.allocUnsafe(t), i = this.head, n = 1;
                    i.data.copy(e);
                    t -= i.data.length;
                    for (; i = i.next;) {
                        var a = i.data, r = t > a.length ? a.length : t;
                        a.copy(e, e.length - t, 0, r);
                        if (0 == (t -= r)) {
                            if (r === a.length) {
                                ++n;
                                i.next ? this.head = i.next : this.head = this.tail = null;
                            } else {
                                this.head = i;
                                i.data = a.slice(r);
                            }
                            break;
                        }
                        ++n;
                    }
                    this.length -= n;
                    return e;
                }
            }, {
                key: h,
                value: function (t, e) {
                    return l(this, n({}, e, {
                        depth: 0,
                        customInspect: !1
                    }));
                }
            }]);
            return t;
        }();
    }, {
        buffer: 65,
        util: 19
    }],
    55: [function (t, e) {
        (function (t) {
            "use strict";
            function i(t, e) {
                a(t, e);
                n(t);
            }
            function n(t) {
                t._writableState && !t._writableState.emitClose || t._readableState && !t._readableState.emitClose || t.emit("close");
            }
            function a(t, e) {
                t.emit("error", e);
            }
            e.exports = {
                destroy: function (e, r) {
                    var o = this, s = this._readableState && this._readableState.destroyed, c = this._writableState && this._writableState.destroyed;
                    if (s || c) {
                        if (r) r(e); else if (e) if (this._writableState) {
                            if (!this._writableState.errorEmitted) {
                                this._writableState.errorEmitted = !0;
                                t.nextTick(a, this, e);
                            }
                        } else t.nextTick(a, this, e);
                        return this;
                    }
                    this._readableState && (this._readableState.destroyed = !0);
                    this._writableState && (this._writableState.destroyed = !0);
                    this._destroy(e || null, function (e) {
                        if (!r && e) if (o._writableState) if (o._writableState.errorEmitted) t.nextTick(n, o); else {
                            o._writableState.errorEmitted = !0;
                            t.nextTick(i, o, e);
                        } else t.nextTick(i, o, e); else if (r) {
                            t.nextTick(n, o);
                            r(e);
                        } else t.nextTick(n, o);
                    });
                    return this;
                },
                undestroy: function () {
                    if (this._readableState) {
                        this._readableState.destroyed = !1;
                        this._readableState.reading = !1;
                        this._readableState.ended = !1;
                        this._readableState.endEmitted = !1;
                    }
                    if (this._writableState) {
                        this._writableState.destroyed = !1;
                        this._writableState.ended = !1;
                        this._writableState.ending = !1;
                        this._writableState.finalCalled = !1;
                        this._writableState.prefinished = !1;
                        this._writableState.finished = !1;
                        this._writableState.errorEmitted = !1;
                    }
                },
                errorOrDestroy: function (t, e) {
                    var i = t._readableState, n = t._writableState;
                    i && i.autoDestroy || n && n.autoDestroy ? t.destroy(e) : t.emit("error", e);
                }
            };
        }).call(this, t("_process"));
    }, {
        _process: 151
    }],
    56: [function (t, e) {
        "use strict";
        var i = t("../../../errors").codes.ERR_STREAM_PREMATURE_CLOSE;
        function n(t) {
            var e = !1;
            return function () {
                if (!e) {
                    e = !0;
                    for (var i = arguments.length, n = new Array(i), a = 0; a < i; a++) n[a] = arguments[a];
                    t.apply(this, n);
                }
            };
        }
        function a() { }
        function r(t) {
            return t.setHeader && "function" == typeof t.abort;
        }
        e.exports = function t(e, o, s) {
            if ("function" == typeof o) return t(e, null, o);
            o || (o = {});
            s = n(s || a);
            var c = o.readable || !1 !== o.readable && e.readable, l = o.writable || !1 !== o.writable && e.writable, h = function () {
                e.writable || p();
            }, u = e._writableState && e._writableState.finished, p = function () {
                l = !1;
                u = !0;
                c || s.call(e);
            }, d = e._readableState && e._readableState.endEmitted, f = function () {
                c = !1;
                d = !0;
                l || s.call(e);
            }, m = function (t) {
                s.call(e, t);
            }, g = function () {
                var t;
                if (c && !d) {
                    e._readableState && e._readableState.ended || (t = new i());
                    return s.call(e, t);
                }
                if (l && !u) {
                    e._writableState && e._writableState.ended || (t = new i());
                    return s.call(e, t);
                }
            }, _ = function () {
                e.req.on("finish", p);
            };
            if (r(e)) {
                e.on("complete", p);
                e.on("abort", g);
                e.req ? _() : e.on("request", _);
            } else if (l && !e._writableState) {
                e.on("end", h);
                e.on("close", h);
            }
            e.on("end", f);
            e.on("finish", p);
            !1 !== o.error && e.on("error", m);
            e.on("close", g);
            return function () {
                e.removeListener("complete", p);
                e.removeListener("abort", g);
                e.removeListener("request", _);
                e.req && e.req.removeListener("finish", p);
                e.removeListener("end", h);
                e.removeListener("close", h);
                e.removeListener("finish", p);
                e.removeListener("end", f);
                e.removeListener("error", m);
                e.removeListener("close", g);
            };
        };
    }, {
        "../../../errors": 47
    }],
    57: [function (t, e) {
        e.exports = function () {
            throw new Error("Readable.from is not available in the browser");
        };
    }, {}],
    58: [function (t, e) {
        "use strict";
        var i;
        function n(t) {
            var e = !1;
            return function () {
                if (!e) {
                    e = !0;
                    t.apply(void 0, arguments);
                }
            };
        }
        var a = t("../../../errors").codes, r = a.ERR_MISSING_ARGS, o = a.ERR_STREAM_DESTROYED;
        function s(t) {
            if (t) throw t;
        }
        function c(t) {
            return t.setHeader && "function" == typeof t.abort;
        }
        function l(e, a, r, s) {
            s = n(s);
            var l = !1;
            e.on("close", function () {
                l = !0;
            });
            void 0 === i && (i = t("./end-of-stream"));
            i(e, {
                readable: a,
                writable: r
            }, function (t) {
                if (t) return s(t);
                l = !0;
                s();
            });
            var h = !1;
            return function (t) {
                if (!l && !h) {
                    h = !0;
                    if (c(e)) return e.abort();
                    if ("function" == typeof e.destroy) return e.destroy();
                    s(t || new o("pipe"));
                }
            };
        }
        function h(t) {
            t();
        }
        function u(t, e) {
            return t.pipe(e);
        }
        function p(t) {
            return t.length ? "function" != typeof t[t.length - 1] ? s : t.pop() : s;
        }
        e.exports = function () {
            for (var t = arguments.length, e = new Array(t), i = 0; i < t; i++) e[i] = arguments[i];
            var n, a = p(e);
            Array.isArray(e[0]) && (e = e[0]);
            if (e.length < 2) throw new r("streams");
            var o = e.map(function (t, i) {
                var r = i < e.length - 1;
                return l(t, r, i > 0, function (t) {
                    n || (n = t);
                    t && o.forEach(h);
                    if (!r) {
                        o.forEach(h);
                        a(n);
                    }
                });
            });
            return e.reduce(u);
        };
    }, {
        "../../../errors": 47,
        "./end-of-stream": 56
    }],
    59: [function (t, e) {
        "use strict";
        var i = t("../../../errors").codes.ERR_INVALID_OPT_VALUE;
        function n(t, e, i) {
            return null != t.highWaterMark ? t.highWaterMark : e ? t[i] : null;
        }
        e.exports = {
            getHighWaterMark: function (t, e, a, r) {
                var o = n(e, r, a);
                if (null != o) {
                    if (!isFinite(o) || Math.floor(o) !== o || o < 0) throw new i(r ? a : "highWaterMark", o);
                    return Math.floor(o);
                }
                return t.objectMode ? 16 : 16384;
            }
        };
    }, {
        "../../../errors": 47
    }],
    60: [function (t, e) {
        e.exports = t("events").EventEmitter;
    }, {
        events: 104
    }],
    61: [function (t, e, i) {
        (i = e.exports = t("./lib/_stream_readable.js")).Stream = i;
        i.Readable = i;
        i.Writable = t("./lib/_stream_writable.js");
        i.Duplex = t("./lib/_stream_duplex.js");
        i.Transform = t("./lib/_stream_transform.js");
        i.PassThrough = t("./lib/_stream_passthrough.js");
        i.finished = t("./lib/internal/streams/end-of-stream.js");
        i.pipeline = t("./lib/internal/streams/pipeline.js");
    }, {
        "./lib/_stream_duplex.js": 48,
        "./lib/_stream_passthrough.js": 49,
        "./lib/_stream_readable.js": 50,
        "./lib/_stream_transform.js": 51,
        "./lib/_stream_writable.js": 52,
        "./lib/internal/streams/end-of-stream.js": 56,
        "./lib/internal/streams/pipeline.js": 58
    }],
    62: [function (t, e, i) {
        var n = t("buffer"), a = n.Buffer;
        function r(t, e) {
            for (var i in t) e[i] = t[i];
        }
        if (a.from && a.alloc && a.allocUnsafe && a.allocUnsafeSlow) e.exports = n; else {
            r(n, i);
            i.Buffer = o;
        }
        function o(t, e, i) {
            return a(t, e, i);
        }
        o.prototype = Object.create(a.prototype);
        r(a, o);
        o.from = function (t, e, i) {
            if ("number" == typeof t) throw new TypeError("Argument must not be a number");
            return a(t, e, i);
        };
        o.alloc = function (t, e, i) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            var n = a(t);
            void 0 !== e ? "string" == typeof i ? n.fill(e, i) : n.fill(e) : n.fill(0);
            return n;
        };
        o.allocUnsafe = function (t) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            return a(t);
        };
        o.allocUnsafeSlow = function (t) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            return n.SlowBuffer(t);
        };
    }, {
        buffer: 65
    }],
    63: [function (t, e, i) {
        "use strict";
        var n = t("safe-buffer").Buffer, a = n.isEncoding || function (t) {
            switch ((t = "" + t) && t.toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                case "raw":
                    return !0;

                default:
                    return !1;
            }
        };
        function r(t) {
            if (!t) return "utf8";
            for (var e; ;) switch (t) {
                case "utf8":
                case "utf-8":
                    return "utf8";

                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return "utf16le";

                case "latin1":
                case "binary":
                    return "latin1";

                case "base64":
                case "ascii":
                case "hex":
                    return t;

                default:
                    if (e) return;
                    t = ("" + t).toLowerCase();
                    e = !0;
            }
        }
        function o(t) {
            var e = r(t);
            if ("string" != typeof e && (n.isEncoding === a || !a(t))) throw new Error("Unknown encoding: " + t);
            return e || t;
        }
        i.StringDecoder = s;
        function s(t) {
            this.encoding = o(t);
            var e;
            switch (this.encoding) {
                case "utf16le":
                    this.text = p;
                    this.end = d;
                    e = 4;
                    break;

                case "utf8":
                    this.fillLast = u;
                    e = 4;
                    break;

                case "base64":
                    this.text = f;
                    this.end = m;
                    e = 3;
                    break;

                default:
                    this.write = g;
                    this.end = _;
                    return;
            }
            this.lastNeed = 0;
            this.lastTotal = 0;
            this.lastChar = n.allocUnsafe(e);
        }
        s.prototype.write = function (t) {
            if (0 === t.length) return "";
            var e, i;
            if (this.lastNeed) {
                if (void 0 === (e = this.fillLast(t))) return "";
                i = this.lastNeed;
                this.lastNeed = 0;
            } else i = 0;
            return i < t.length ? e ? e + this.text(t, i) : this.text(t, i) : e || "";
        };
        s.prototype.end = function (t) {
            var e = t && t.length ? this.write(t) : "";
            return this.lastNeed ? e + "�" : e;
        };
        s.prototype.text = function (t, e) {
            var i = l(this, t, e);
            if (!this.lastNeed) return t.toString("utf8", e);
            this.lastTotal = i;
            var n = t.length - (i - this.lastNeed);
            t.copy(this.lastChar, 0, n);
            return t.toString("utf8", e, n);
        };
        s.prototype.fillLast = function (t) {
            if (this.lastNeed <= t.length) {
                t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
                return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length);
            this.lastNeed -= t.length;
        };
        function c(t) {
            return t <= 127 ? 0 : t >> 5 == 6 ? 2 : t >> 4 == 14 ? 3 : t >> 3 == 30 ? 4 : t >> 6 == 2 ? -1 : -2;
        }
        function l(t, e, i) {
            var n = e.length - 1;
            if (n < i) return 0;
            var a = c(e[n]);
            if (a >= 0) {
                a > 0 && (t.lastNeed = a - 1);
                return a;
            }
            if (--n < i || -2 === a) return 0;
            if ((a = c(e[n])) >= 0) {
                a > 0 && (t.lastNeed = a - 2);
                return a;
            }
            if (--n < i || -2 === a) return 0;
            if ((a = c(e[n])) >= 0) {
                a > 0 && (2 === a ? a = 0 : t.lastNeed = a - 3);
                return a;
            }
            return 0;
        }
        function h(t, e) {
            if (128 != (192 & e[0])) {
                t.lastNeed = 0;
                return "�";
            }
            if (t.lastNeed > 1 && e.length > 1) {
                if (128 != (192 & e[1])) {
                    t.lastNeed = 1;
                    return "�";
                }
                if (t.lastNeed > 2 && e.length > 2 && 128 != (192 & e[2])) {
                    t.lastNeed = 2;
                    return "�";
                }
            }
        }
        function u(t) {
            var e = this.lastTotal - this.lastNeed, i = h(this, t);
            if (void 0 !== i) return i;
            if (this.lastNeed <= t.length) {
                t.copy(this.lastChar, e, 0, this.lastNeed);
                return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            t.copy(this.lastChar, e, 0, t.length);
            this.lastNeed -= t.length;
        }
        function p(t, e) {
            if ((t.length - e) % 2 == 0) {
                var i = t.toString("utf16le", e);
                if (i) {
                    var n = i.charCodeAt(i.length - 1);
                    if (n >= 55296 && n <= 56319) {
                        this.lastNeed = 2;
                        this.lastTotal = 4;
                        this.lastChar[0] = t[t.length - 2];
                        this.lastChar[1] = t[t.length - 1];
                        return i.slice(0, -1);
                    }
                }
                return i;
            }
            this.lastNeed = 1;
            this.lastTotal = 2;
            this.lastChar[0] = t[t.length - 1];
            return t.toString("utf16le", e, t.length - 1);
        }
        function d(t) {
            var e = t && t.length ? this.write(t) : "";
            if (this.lastNeed) {
                var i = this.lastTotal - this.lastNeed;
                return e + this.lastChar.toString("utf16le", 0, i);
            }
            return e;
        }
        function f(t, e) {
            var i = (t.length - e) % 3;
            if (0 === i) return t.toString("base64", e);
            this.lastNeed = 3 - i;
            this.lastTotal = 3;
            if (1 === i) this.lastChar[0] = t[t.length - 1]; else {
                this.lastChar[0] = t[t.length - 2];
                this.lastChar[1] = t[t.length - 1];
            }
            return t.toString("base64", e, t.length - i);
        }
        function m(t) {
            var e = t && t.length ? this.write(t) : "";
            return this.lastNeed ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e;
        }
        function g(t) {
            return t.toString(this.encoding);
        }
        function _(t) {
            return t && t.length ? this.write(t) : "";
        }
    }, {
        "safe-buffer": 62
    }],
    64: [function (t, e) {
        (function (t) {
            e.exports = function (e, i) {
                for (var n = Math.min(e.length, i.length), a = new t(n), r = 0; r < n; ++r) a[r] = e[r] ^ i[r];
                return a;
            };
        }).call(this, t("buffer").Buffer);
    }, {
        buffer: 65
    }],
    65: [function (t, e, i) {
        (function (e) {
            "use strict";
            var n = t("base64-js"), a = t("ieee754"), r = t("isarray");
            i.Buffer = c;
            i.SlowBuffer = function (t) {
                +t != t && (t = 0);
                return c.alloc(+t);
            };
            i.INSPECT_MAX_BYTES = 50;
            c.TYPED_ARRAY_SUPPORT = void 0 !== e.TYPED_ARRAY_SUPPORT ? e.TYPED_ARRAY_SUPPORT : function () {
                try {
                    var t = new Uint8Array(1);
                    t.__proto__ = {
                        __proto__: Uint8Array.prototype,
                        foo: function () {
                            return 42;
                        }
                    };
                    return 42 === t.foo() && "function" == typeof t.subarray && 0 === t.subarray(1, 1).byteLength;
                } catch (t) {
                    return !1;
                }
            }();
            i.kMaxLength = o();
            function o() {
                return c.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
            }
            function s(t, e) {
                if (o() < e) throw new RangeError("Invalid typed array length");
                if (c.TYPED_ARRAY_SUPPORT) (t = new Uint8Array(e)).__proto__ = c.prototype; else {
                    null === t && (t = new c(e));
                    t.length = e;
                }
                return t;
            }
            function c(t, e, i) {
                if (!(c.TYPED_ARRAY_SUPPORT || this instanceof c)) return new c(t, e, i);
                if ("number" == typeof t) {
                    if ("string" == typeof e) throw new Error("If encoding is specified then the first argument must be a string");
                    return p(this, t);
                }
                return l(this, t, e, i);
            }
            c.poolSize = 8192;
            c._augment = function (t) {
                t.__proto__ = c.prototype;
                return t;
            };
            function l(t, e, i, n) {
                if ("number" == typeof e) throw new TypeError('"value" argument must not be a number');
                return "undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer ? m(t, e, i, n) : "string" == typeof e ? d(t, e, i) : g(t, e);
            }
            c.from = function (t, e, i) {
                return l(null, t, e, i);
            };
            if (c.TYPED_ARRAY_SUPPORT) {
                c.prototype.__proto__ = Uint8Array.prototype;
                c.__proto__ = Uint8Array;
                "undefined" != typeof Symbol && Symbol.species && c[Symbol.species] === c && Object.defineProperty(c, Symbol.species, {
                    value: null,
                    configurable: !0
                });
            }
            function h(t) {
                if ("number" != typeof t) throw new TypeError('"size" argument must be a number');
                if (t < 0) throw new RangeError('"size" argument must not be negative');
            }
            function u(t, e, i, n) {
                h(e);
                return e <= 0 ? s(t, e) : void 0 !== i ? "string" == typeof n ? s(t, e).fill(i, n) : s(t, e).fill(i) : s(t, e);
            }
            c.alloc = function (t, e, i) {
                return u(null, t, e, i);
            };
            function p(t, e) {
                h(e);
                t = s(t, e < 0 ? 0 : 0 | _(e));
                if (!c.TYPED_ARRAY_SUPPORT) for (var i = 0; i < e; ++i) t[i] = 0;
                return t;
            }
            c.allocUnsafe = function (t) {
                return p(null, t);
            };
            c.allocUnsafeSlow = function (t) {
                return p(null, t);
            };
            function d(t, e, i) {
                "string" == typeof i && "" !== i || (i = "utf8");
                if (!c.isEncoding(i)) throw new TypeError('"encoding" must be a valid string encoding');
                var n = 0 | y(e, i), a = (t = s(t, n)).write(e, i);
                a !== n && (t = t.slice(0, a));
                return t;
            }
            function f(t, e) {
                var i = e.length < 0 ? 0 : 0 | _(e.length);
                t = s(t, i);
                for (var n = 0; n < i; n += 1) t[n] = 255 & e[n];
                return t;
            }
            function m(t, e, i, n) {
                e.byteLength;
                if (i < 0 || e.byteLength < i) throw new RangeError("'offset' is out of bounds");
                if (e.byteLength < i + (n || 0)) throw new RangeError("'length' is out of bounds");
                e = void 0 === i && void 0 === n ? new Uint8Array(e) : void 0 === n ? new Uint8Array(e, i) : new Uint8Array(e, i, n);
                c.TYPED_ARRAY_SUPPORT ? (t = e).__proto__ = c.prototype : t = f(t, e);
                return t;
            }
            function g(t, e) {
                if (c.isBuffer(e)) {
                    var i = 0 | _(e.length);
                    if (0 === (t = s(t, i)).length) return t;
                    e.copy(t, 0, 0, i);
                    return t;
                }
                if (e) {
                    if ("undefined" != typeof ArrayBuffer && e.buffer instanceof ArrayBuffer || "length" in e) return "number" != typeof e.length || (n = e.length) != n ? s(t, 0) : f(t, e);
                    if ("Buffer" === e.type && r(e.data)) return f(t, e.data);
                }
                var n;
                throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
            }
            function _(t) {
                if (t >= o()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + o().toString(16) + " bytes");
                return 0 | t;
            }
            c.isBuffer = function (t) {
                return !(null == t || !t._isBuffer);
            };
            c.compare = function (t, e) {
                if (!c.isBuffer(t) || !c.isBuffer(e)) throw new TypeError("Arguments must be Buffers");
                if (t === e) return 0;
                for (var i = t.length, n = e.length, a = 0, r = Math.min(i, n); a < r; ++a) if (t[a] !== e[a]) {
                    i = t[a];
                    n = e[a];
                    break;
                }
                return i < n ? -1 : n < i ? 1 : 0;
            };
            c.isEncoding = function (t) {
                switch (String(t).toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "latin1":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return !0;

                    default:
                        return !1;
                }
            };
            c.concat = function (t, e) {
                if (!r(t)) throw new TypeError('"list" argument must be an Array of Buffers');
                if (0 === t.length) return c.alloc(0);
                var i;
                if (void 0 === e) {
                    e = 0;
                    for (i = 0; i < t.length; ++i) e += t[i].length;
                }
                var n = c.allocUnsafe(e), a = 0;
                for (i = 0; i < t.length; ++i) {
                    var o = t[i];
                    if (!c.isBuffer(o)) throw new TypeError('"list" argument must be an Array of Buffers');
                    o.copy(n, a);
                    a += o.length;
                }
                return n;
            };
            function y(t, e) {
                if (c.isBuffer(t)) return t.length;
                if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)) return t.byteLength;
                "string" != typeof t && (t = "" + t);
                var i = t.length;
                if (0 === i) return 0;
                for (var n = !1; ;) switch (e) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return i;

                    case "utf8":
                    case "utf-8":
                    case void 0:
                        return J(t).length;

                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return 2 * i;

                    case "hex":
                        return i >>> 1;

                    case "base64":
                        return K(t).length;

                    default:
                        if (n) return J(t).length;
                        e = ("" + e).toLowerCase();
                        n = !0;
                }
            }
            c.byteLength = y;
            function v(t, e, i) {
                var n = !1;
                (void 0 === e || e < 0) && (e = 0);
                if (e > this.length) return "";
                (void 0 === i || i > this.length) && (i = this.length);
                if (i <= 0) return "";
                if ((i >>>= 0) <= (e >>>= 0)) return "";
                t || (t = "utf8");
                for (; ;) switch (t) {
                    case "hex":
                        return R(this, e, i);

                    case "utf8":
                    case "utf-8":
                        return E(this, e, i);

                    case "ascii":
                        return N(this, e, i);

                    case "latin1":
                    case "binary":
                        return x(this, e, i);

                    case "base64":
                        return P(this, e, i);

                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return I(this, e, i);

                    default:
                        if (n) throw new TypeError("Unknown encoding: " + t);
                        t = (t + "").toLowerCase();
                        n = !0;
                }
            }
            c.prototype._isBuffer = !0;
            function b(t, e, i) {
                var n = t[e];
                t[e] = t[i];
                t[i] = n;
            }
            c.prototype.swap16 = function () {
                var t = this.length;
                if (t % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var e = 0; e < t; e += 2) b(this, e, e + 1);
                return this;
            };
            c.prototype.swap32 = function () {
                var t = this.length;
                if (t % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var e = 0; e < t; e += 4) {
                    b(this, e, e + 3);
                    b(this, e + 1, e + 2);
                }
                return this;
            };
            c.prototype.swap64 = function () {
                var t = this.length;
                if (t % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var e = 0; e < t; e += 8) {
                    b(this, e, e + 7);
                    b(this, e + 1, e + 6);
                    b(this, e + 2, e + 5);
                    b(this, e + 3, e + 4);
                }
                return this;
            };
            c.prototype.toString = function () {
                var t = 0 | this.length;
                return 0 === t ? "" : 0 === arguments.length ? E(this, 0, t) : v.apply(this, arguments);
            };
            c.prototype.equals = function (t) {
                if (!c.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                return this === t || 0 === c.compare(this, t);
            };
            c.prototype.inspect = function () {
                var t = "", e = i.INSPECT_MAX_BYTES;
                if (this.length > 0) {
                    t = this.toString("hex", 0, e).match(/.{2}/g).join(" ");
                    this.length > e && (t += " ... ");
                }
                return "<Buffer " + t + ">";
            };
            c.prototype.compare = function (t, e, i, n, a) {
                if (!c.isBuffer(t)) throw new TypeError("Argument must be a Buffer");
                void 0 === e && (e = 0);
                void 0 === i && (i = t ? t.length : 0);
                void 0 === n && (n = 0);
                void 0 === a && (a = this.length);
                if (e < 0 || i > t.length || n < 0 || a > this.length) throw new RangeError("out of range index");
                if (n >= a && e >= i) return 0;
                if (n >= a) return -1;
                if (e >= i) return 1;
                if (this === t) return 0;
                for (var r = (a >>>= 0) - (n >>>= 0), o = (i >>>= 0) - (e >>>= 0), s = Math.min(r, o), l = this.slice(n, a), h = t.slice(e, i), u = 0; u < s; ++u) if (l[u] !== h[u]) {
                    r = l[u];
                    o = h[u];
                    break;
                }
                return r < o ? -1 : o < r ? 1 : 0;
            };
            function M(t, e, i, n, a) {
                if (0 === t.length) return -1;
                if ("string" == typeof i) {
                    n = i;
                    i = 0;
                } else i > 2147483647 ? i = 2147483647 : i < -2147483648 && (i = -2147483648);
                i = +i;
                isNaN(i) && (i = a ? 0 : t.length - 1);
                i < 0 && (i = t.length + i);
                if (i >= t.length) {
                    if (a) return -1;
                    i = t.length - 1;
                } else if (i < 0) {
                    if (!a) return -1;
                    i = 0;
                }
                "string" == typeof e && (e = c.from(e, n));
                if (c.isBuffer(e)) return 0 === e.length ? -1 : S(t, e, i, n, a);
                if ("number" == typeof e) {
                    e &= 255;
                    return c.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? a ? Uint8Array.prototype.indexOf.call(t, e, i) : Uint8Array.prototype.lastIndexOf.call(t, e, i) : S(t, [e], i, n, a);
                }
                throw new TypeError("val must be string, number or Buffer");
            }
            function S(t, e, i, n, a) {
                var r, o = 1, s = t.length, c = e.length;
                if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                    if (t.length < 2 || e.length < 2) return -1;
                    o = 2;
                    s /= 2;
                    c /= 2;
                    i /= 2;
                }
                function l(t, e) {
                    return 1 === o ? t[e] : t.readUInt16BE(e * o);
                }
                if (a) {
                    var h = -1;
                    for (r = i; r < s; r++) if (l(t, r) === l(e, -1 === h ? 0 : r - h)) {
                        -1 === h && (h = r);
                        if (r - h + 1 === c) return h * o;
                    } else {
                        -1 !== h && (r -= r - h);
                        h = -1;
                    }
                } else {
                    i + c > s && (i = s - c);
                    for (r = i; r >= 0; r--) {
                        for (var u = !0, p = 0; p < c; p++) if (l(t, r + p) !== l(e, p)) {
                            u = !1;
                            break;
                        }
                        if (u) return r;
                    }
                }
                return -1;
            }
            c.prototype.includes = function (t, e, i) {
                return -1 !== this.indexOf(t, e, i);
            };
            c.prototype.indexOf = function (t, e, i) {
                return M(this, t, e, i, !0);
            };
            c.prototype.lastIndexOf = function (t, e, i) {
                return M(this, t, e, i, !1);
            };
            function k(t, e, i, n) {
                i = Number(i) || 0;
                var a = t.length - i;
                n ? (n = Number(n)) > a && (n = a) : n = a;
                var r = e.length;
                if (r % 2 != 0) throw new TypeError("Invalid hex string");
                n > r / 2 && (n = r / 2);
                for (var o = 0; o < n; ++o) {
                    var s = parseInt(e.substr(2 * o, 2), 16);
                    if (isNaN(s)) return o;
                    t[i + o] = s;
                }
                return o;
            }
            function C(t, e, i, n) {
                return Z(J(e, t.length - i), t, i, n);
            }
            function w(t, e, i, n) {
                return Z(X(e), t, i, n);
            }
            function A(t, e, i, n) {
                return w(t, e, i, n);
            }
            function T(t, e, i, n) {
                return Z(K(e), t, i, n);
            }
            function D(t, e, i, n) {
                return Z(q(e, t.length - i), t, i, n);
            }
            c.prototype.write = function (t, e, i, n) {
                if (void 0 === e) {
                    n = "utf8";
                    i = this.length;
                    e = 0;
                } else if (void 0 === i && "string" == typeof e) {
                    n = e;
                    i = this.length;
                    e = 0;
                } else {
                    if (!isFinite(e)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                    e |= 0;
                    if (isFinite(i)) {
                        i |= 0;
                        void 0 === n && (n = "utf8");
                    } else {
                        n = i;
                        i = void 0;
                    }
                }
                var a = this.length - e;
                (void 0 === i || i > a) && (i = a);
                if (t.length > 0 && (i < 0 || e < 0) || e > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                n || (n = "utf8");
                for (var r = !1; ;) switch (n) {
                    case "hex":
                        return k(this, t, e, i);

                    case "utf8":
                    case "utf-8":
                        return C(this, t, e, i);

                    case "ascii":
                        return w(this, t, e, i);

                    case "latin1":
                    case "binary":
                        return A(this, t, e, i);

                    case "base64":
                        return T(this, t, e, i);

                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return D(this, t, e, i);

                    default:
                        if (r) throw new TypeError("Unknown encoding: " + n);
                        n = ("" + n).toLowerCase();
                        r = !0;
                }
            };
            c.prototype.toJSON = function () {
                return {
                    type: "Buffer",
                    data: Array.prototype.slice.call(this._arr || this, 0)
                };
            };
            function P(t, e, i) {
                return 0 === e && i === t.length ? n.fromByteArray(t) : n.fromByteArray(t.slice(e, i));
            }
            function E(t, e, i) {
                i = Math.min(t.length, i);
                for (var n = [], a = e; a < i;) {
                    var r = t[a], o = null, s = r > 239 ? 4 : r > 223 ? 3 : r > 191 ? 2 : 1;
                    if (a + s <= i) {
                        var c, l, h, u;
                        switch (s) {
                            case 1:
                                r < 128 && (o = r);
                                break;

                            case 2:
                                128 == (192 & (c = t[a + 1])) && (u = (31 & r) << 6 | 63 & c) > 127 && (o = u);
                                break;

                            case 3:
                                c = t[a + 1];
                                l = t[a + 2];
                                128 == (192 & c) && 128 == (192 & l) && (u = (15 & r) << 12 | (63 & c) << 6 | 63 & l) > 2047 && (u < 55296 || u > 57343) && (o = u);
                                break;

                            case 4:
                                c = t[a + 1];
                                l = t[a + 2];
                                h = t[a + 3];
                                128 == (192 & c) && 128 == (192 & l) && 128 == (192 & h) && (u = (15 & r) << 18 | (63 & c) << 12 | (63 & l) << 6 | 63 & h) > 65535 && u < 1114112 && (o = u);
                        }
                    }
                    if (null === o) {
                        o = 65533;
                        s = 1;
                    } else if (o > 65535) {
                        o -= 65536;
                        n.push(o >>> 10 & 1023 | 55296);
                        o = 56320 | 1023 & o;
                    }
                    n.push(o);
                    a += s;
                }
                return F(n);
            }
            var B = 4096;
            function F(t) {
                var e = t.length;
                if (e <= B) return String.fromCharCode.apply(String, t);
                for (var i = "", n = 0; n < e;) i += String.fromCharCode.apply(String, t.slice(n, n += B));
                return i;
            }
            function N(t, e, i) {
                var n = "";
                i = Math.min(t.length, i);
                for (var a = e; a < i; ++a) n += String.fromCharCode(127 & t[a]);
                return n;
            }
            function x(t, e, i) {
                var n = "";
                i = Math.min(t.length, i);
                for (var a = e; a < i; ++a) n += String.fromCharCode(t[a]);
                return n;
            }
            function R(t, e, i) {
                var n, a = t.length;
                (!e || e < 0) && (e = 0);
                (!i || i < 0 || i > a) && (i = a);
                for (var r = "", o = e; o < i; ++o) r += (n = t[o]) < 16 ? "0" + n.toString(16) : n.toString(16);
                return r;
            }
            function I(t, e, i) {
                for (var n = t.slice(e, i), a = "", r = 0; r < n.length; r += 2) a += String.fromCharCode(n[r] + 256 * n[r + 1]);
                return a;
            }
            c.prototype.slice = function (t, e) {
                var i, n = this.length;
                (t = ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n);
                (e = void 0 === e ? n : ~~e) < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n);
                e < t && (e = t);
                if (c.TYPED_ARRAY_SUPPORT) (i = this.subarray(t, e)).__proto__ = c.prototype; else {
                    var a = e - t;
                    i = new c(a, void 0);
                    for (var r = 0; r < a; ++r) i[r] = this[r + t];
                }
                return i;
            };
            function G(t, e, i) {
                if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint");
                if (t + e > i) throw new RangeError("Trying to access beyond buffer length");
            }
            c.prototype.readUIntLE = function (t, e, i) {
                t |= 0;
                e |= 0;
                i || G(t, e, this.length);
                for (var n = this[t], a = 1, r = 0; ++r < e && (a *= 256);) n += this[t + r] * a;
                return n;
            };
            c.prototype.readUIntBE = function (t, e, i) {
                t |= 0;
                e |= 0;
                i || G(t, e, this.length);
                for (var n = this[t + --e], a = 1; e > 0 && (a *= 256);) n += this[t + --e] * a;
                return n;
            };
            c.prototype.readUInt8 = function (t, e) {
                e || G(t, 1, this.length);
                return this[t];
            };
            c.prototype.readUInt16LE = function (t, e) {
                e || G(t, 2, this.length);
                return this[t] | this[t + 1] << 8;
            };
            c.prototype.readUInt16BE = function (t, e) {
                e || G(t, 2, this.length);
                return this[t] << 8 | this[t + 1];
            };
            c.prototype.readUInt32LE = function (t, e) {
                e || G(t, 4, this.length);
                return (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3];
            };
            c.prototype.readUInt32BE = function (t, e) {
                e || G(t, 4, this.length);
                return 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);
            };
            c.prototype.readIntLE = function (t, e, i) {
                t |= 0;
                e |= 0;
                i || G(t, e, this.length);
                for (var n = this[t], a = 1, r = 0; ++r < e && (a *= 256);) n += this[t + r] * a;
                n >= (a *= 128) && (n -= Math.pow(2, 8 * e));
                return n;
            };
            c.prototype.readIntBE = function (t, e, i) {
                t |= 0;
                e |= 0;
                i || G(t, e, this.length);
                for (var n = e, a = 1, r = this[t + --n]; n > 0 && (a *= 256);) r += this[t + --n] * a;
                r >= (a *= 128) && (r -= Math.pow(2, 8 * e));
                return r;
            };
            c.prototype.readInt8 = function (t, e) {
                e || G(t, 1, this.length);
                return 128 & this[t] ? -1 * (255 - this[t] + 1) : this[t];
            };
            c.prototype.readInt16LE = function (t, e) {
                e || G(t, 2, this.length);
                var i = this[t] | this[t + 1] << 8;
                return 32768 & i ? 4294901760 | i : i;
            };
            c.prototype.readInt16BE = function (t, e) {
                e || G(t, 2, this.length);
                var i = this[t + 1] | this[t] << 8;
                return 32768 & i ? 4294901760 | i : i;
            };
            c.prototype.readInt32LE = function (t, e) {
                e || G(t, 4, this.length);
                return this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;
            };
            c.prototype.readInt32BE = function (t, e) {
                e || G(t, 4, this.length);
                return this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];
            };
            c.prototype.readFloatLE = function (t, e) {
                e || G(t, 4, this.length);
                return a.read(this, t, !0, 23, 4);
            };
            c.prototype.readFloatBE = function (t, e) {
                e || G(t, 4, this.length);
                return a.read(this, t, !1, 23, 4);
            };
            c.prototype.readDoubleLE = function (t, e) {
                e || G(t, 8, this.length);
                return a.read(this, t, !0, 52, 8);
            };
            c.prototype.readDoubleBE = function (t, e) {
                e || G(t, 8, this.length);
                return a.read(this, t, !1, 52, 8);
            };
            function O(t, e, i, n, a, r) {
                if (!c.isBuffer(t)) throw new TypeError('"buffer" argument must be a Buffer instance');
                if (e > a || e < r) throw new RangeError('"value" argument is out of bounds');
                if (i + n > t.length) throw new RangeError("Index out of range");
            }
            c.prototype.writeUIntLE = function (t, e, i, n) {
                t = +t;
                e |= 0;
                i |= 0;
                n || O(this, t, e, i, Math.pow(2, 8 * i) - 1, 0);
                var a = 1, r = 0;
                this[e] = 255 & t;
                for (; ++r < i && (a *= 256);) this[e + r] = t / a & 255;
                return e + i;
            };
            c.prototype.writeUIntBE = function (t, e, i, n) {
                t = +t;
                e |= 0;
                i |= 0;
                n || O(this, t, e, i, Math.pow(2, 8 * i) - 1, 0);
                var a = i - 1, r = 1;
                this[e + a] = 255 & t;
                for (; --a >= 0 && (r *= 256);) this[e + a] = t / r & 255;
                return e + i;
            };
            c.prototype.writeUInt8 = function (t, e, i) {
                t = +t;
                e |= 0;
                i || O(this, t, e, 1, 255, 0);
                c.TYPED_ARRAY_SUPPORT || (t = Math.floor(t));
                this[e] = 255 & t;
                return e + 1;
            };
            function L(t, e, i, n) {
                e < 0 && (e = 65535 + e + 1);
                for (var a = 0, r = Math.min(t.length - i, 2); a < r; ++a) t[i + a] = (e & 255 << 8 * (n ? a : 1 - a)) >>> 8 * (n ? a : 1 - a);
            }
            c.prototype.writeUInt16LE = function (t, e, i) {
                t = +t;
                e |= 0;
                i || O(this, t, e, 2, 65535, 0);
                if (c.TYPED_ARRAY_SUPPORT) {
                    this[e] = 255 & t;
                    this[e + 1] = t >>> 8;
                } else L(this, t, e, !0);
                return e + 2;
            };
            c.prototype.writeUInt16BE = function (t, e, i) {
                t = +t;
                e |= 0;
                i || O(this, t, e, 2, 65535, 0);
                if (c.TYPED_ARRAY_SUPPORT) {
                    this[e] = t >>> 8;
                    this[e + 1] = 255 & t;
                } else L(this, t, e, !1);
                return e + 2;
            };
            function j(t, e, i, n) {
                e < 0 && (e = 4294967295 + e + 1);
                for (var a = 0, r = Math.min(t.length - i, 4); a < r; ++a) t[i + a] = e >>> 8 * (n ? a : 3 - a) & 255;
            }
            c.prototype.writeUInt32LE = function (t, e, i) {
                t = +t;
                e |= 0;
                i || O(this, t, e, 4, 4294967295, 0);
                if (c.TYPED_ARRAY_SUPPORT) {
                    this[e + 3] = t >>> 24;
                    this[e + 2] = t >>> 16;
                    this[e + 1] = t >>> 8;
                    this[e] = 255 & t;
                } else j(this, t, e, !0);
                return e + 4;
            };
            c.prototype.writeUInt32BE = function (t, e, i) {
                t = +t;
                e |= 0;
                i || O(this, t, e, 4, 4294967295, 0);
                if (c.TYPED_ARRAY_SUPPORT) {
                    this[e] = t >>> 24;
                    this[e + 1] = t >>> 16;
                    this[e + 2] = t >>> 8;
                    this[e + 3] = 255 & t;
                } else j(this, t, e, !1);
                return e + 4;
            };
            c.prototype.writeIntLE = function (t, e, i, n) {
                t = +t;
                e |= 0;
                if (!n) {
                    var a = Math.pow(2, 8 * i - 1);
                    O(this, t, e, i, a - 1, -a);
                }
                var r = 0, o = 1, s = 0;
                this[e] = 255 & t;
                for (; ++r < i && (o *= 256);) {
                    t < 0 && 0 === s && 0 !== this[e + r - 1] && (s = 1);
                    this[e + r] = (t / o >> 0) - s & 255;
                }
                return e + i;
            };
            c.prototype.writeIntBE = function (t, e, i, n) {
                t = +t;
                e |= 0;
                if (!n) {
                    var a = Math.pow(2, 8 * i - 1);
                    O(this, t, e, i, a - 1, -a);
                }
                var r = i - 1, o = 1, s = 0;
                this[e + r] = 255 & t;
                for (; --r >= 0 && (o *= 256);) {
                    t < 0 && 0 === s && 0 !== this[e + r + 1] && (s = 1);
                    this[e + r] = (t / o >> 0) - s & 255;
                }
                return e + i;
            };
            c.prototype.writeInt8 = function (t, e, i) {
                t = +t;
                e |= 0;
                i || O(this, t, e, 1, 127, -128);
                c.TYPED_ARRAY_SUPPORT || (t = Math.floor(t));
                t < 0 && (t = 255 + t + 1);
                this[e] = 255 & t;
                return e + 1;
            };
            c.prototype.writeInt16LE = function (t, e, i) {
                t = +t;
                e |= 0;
                i || O(this, t, e, 2, 32767, -32768);
                if (c.TYPED_ARRAY_SUPPORT) {
                    this[e] = 255 & t;
                    this[e + 1] = t >>> 8;
                } else L(this, t, e, !0);
                return e + 2;
            };
            c.prototype.writeInt16BE = function (t, e, i) {
                t = +t;
                e |= 0;
                i || O(this, t, e, 2, 32767, -32768);
                if (c.TYPED_ARRAY_SUPPORT) {
                    this[e] = t >>> 8;
                    this[e + 1] = 255 & t;
                } else L(this, t, e, !1);
                return e + 2;
            };
            c.prototype.writeInt32LE = function (t, e, i) {
                t = +t;
                e |= 0;
                i || O(this, t, e, 4, 2147483647, -2147483648);
                if (c.TYPED_ARRAY_SUPPORT) {
                    this[e] = 255 & t;
                    this[e + 1] = t >>> 8;
                    this[e + 2] = t >>> 16;
                    this[e + 3] = t >>> 24;
                } else j(this, t, e, !0);
                return e + 4;
            };
            c.prototype.writeInt32BE = function (t, e, i) {
                t = +t;
                e |= 0;
                i || O(this, t, e, 4, 2147483647, -2147483648);
                t < 0 && (t = 4294967295 + t + 1);
                if (c.TYPED_ARRAY_SUPPORT) {
                    this[e] = t >>> 24;
                    this[e + 1] = t >>> 16;
                    this[e + 2] = t >>> 8;
                    this[e + 3] = 255 & t;
                } else j(this, t, e, !1);
                return e + 4;
            };
            function U(t, e, i, n) {
                if (i + n > t.length) throw new RangeError("Index out of range");
                if (i < 0) throw new RangeError("Index out of range");
            }
            function Y(t, e, i, n, r) {
                r || U(t, 0, i, 4);
                a.write(t, e, i, n, 23, 4);
                return i + 4;
            }
            c.prototype.writeFloatLE = function (t, e, i) {
                return Y(this, t, e, !0, i);
            };
            c.prototype.writeFloatBE = function (t, e, i) {
                return Y(this, t, e, !1, i);
            };
            function H(t, e, i, n, r) {
                r || U(t, 0, i, 8);
                a.write(t, e, i, n, 52, 8);
                return i + 8;
            }
            c.prototype.writeDoubleLE = function (t, e, i) {
                return H(this, t, e, !0, i);
            };
            c.prototype.writeDoubleBE = function (t, e, i) {
                return H(this, t, e, !1, i);
            };
            c.prototype.copy = function (t, e, i, n) {
                i || (i = 0);
                n || 0 === n || (n = this.length);
                e >= t.length && (e = t.length);
                e || (e = 0);
                n > 0 && n < i && (n = i);
                if (n === i) return 0;
                if (0 === t.length || 0 === this.length) return 0;
                if (e < 0) throw new RangeError("targetStart out of bounds");
                if (i < 0 || i >= this.length) throw new RangeError("sourceStart out of bounds");
                if (n < 0) throw new RangeError("sourceEnd out of bounds");
                n > this.length && (n = this.length);
                t.length - e < n - i && (n = t.length - e + i);
                var a, r = n - i;
                if (this === t && i < e && e < n) for (a = r - 1; a >= 0; --a) t[a + e] = this[a + i]; else if (r < 1e3 || !c.TYPED_ARRAY_SUPPORT) for (a = 0; a < r; ++a) t[a + e] = this[a + i]; else Uint8Array.prototype.set.call(t, this.subarray(i, i + r), e);
                return r;
            };
            c.prototype.fill = function (t, e, i, n) {
                if ("string" == typeof t) {
                    if ("string" == typeof e) {
                        n = e;
                        e = 0;
                        i = this.length;
                    } else if ("string" == typeof i) {
                        n = i;
                        i = this.length;
                    }
                    if (1 === t.length) {
                        var a = t.charCodeAt(0);
                        a < 256 && (t = a);
                    }
                    if (void 0 !== n && "string" != typeof n) throw new TypeError("encoding must be a string");
                    if ("string" == typeof n && !c.isEncoding(n)) throw new TypeError("Unknown encoding: " + n);
                } else "number" == typeof t && (t &= 255);
                if (e < 0 || this.length < e || this.length < i) throw new RangeError("Out of range index");
                if (i <= e) return this;
                e >>>= 0;
                i = void 0 === i ? this.length : i >>> 0;
                t || (t = 0);
                var r;
                if ("number" == typeof t) for (r = e; r < i; ++r) this[r] = t; else {
                    var o = c.isBuffer(t) ? t : J(new c(t, n).toString()), s = o.length;
                    for (r = 0; r < i - e; ++r) this[r + e] = o[r % s];
                }
                return this;
            };
            var W = /[^+\/0-9A-Za-z-_]/g;
            function V(t) {
                if ((t = z(t).replace(W, "")).length < 2) return "";
                for (; t.length % 4 != 0;) t += "=";
                return t;
            }
            function z(t) {
                return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "");
            }
            function J(t, e) {
                e = e || Infinity;
                for (var i, n = t.length, a = null, r = [], o = 0; o < n; ++o) {
                    if ((i = t.charCodeAt(o)) > 55295 && i < 57344) {
                        if (!a) {
                            if (i > 56319) {
                                (e -= 3) > -1 && r.push(239, 191, 189);
                                continue;
                            }
                            if (o + 1 === n) {
                                (e -= 3) > -1 && r.push(239, 191, 189);
                                continue;
                            }
                            a = i;
                            continue;
                        }
                        if (i < 56320) {
                            (e -= 3) > -1 && r.push(239, 191, 189);
                            a = i;
                            continue;
                        }
                        i = 65536 + (a - 55296 << 10 | i - 56320);
                    } else a && (e -= 3) > -1 && r.push(239, 191, 189);
                    a = null;
                    if (i < 128) {
                        if ((e -= 1) < 0) break;
                        r.push(i);
                    } else if (i < 2048) {
                        if ((e -= 2) < 0) break;
                        r.push(i >> 6 | 192, 63 & i | 128);
                    } else if (i < 65536) {
                        if ((e -= 3) < 0) break;
                        r.push(i >> 12 | 224, i >> 6 & 63 | 128, 63 & i | 128);
                    } else {
                        if (!(i < 1114112)) throw new Error("Invalid code point");
                        if ((e -= 4) < 0) break;
                        r.push(i >> 18 | 240, i >> 12 & 63 | 128, i >> 6 & 63 | 128, 63 & i | 128);
                    }
                }
                return r;
            }
            function X(t) {
                for (var e = [], i = 0; i < t.length; ++i) e.push(255 & t.charCodeAt(i));
                return e;
            }
            function q(t, e) {
                for (var i, n, a, r = [], o = 0; o < t.length && !((e -= 2) < 0); ++o) {
                    n = (i = t.charCodeAt(o)) >> 8;
                    a = i % 256;
                    r.push(a);
                    r.push(n);
                }
                return r;
            }
            function K(t) {
                return n.toByteArray(V(t));
            }
            function Z(t, e, i, n) {
                for (var a = 0; a < n && !(a + i >= e.length || a >= t.length); ++a) e[a + i] = t[a];
                return a;
            }
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
        "base64-js": 16,
        ieee754: 137,
        isarray: 66
    }],
    66: [function (t, e) {
        var i = {}.toString;
        e.exports = Array.isArray || function (t) {
            return "[object Array]" == i.call(t);
        };
    }, {}],
    67: [function (t, e) {
        var i = t("safe-buffer").Buffer, n = t("stream").Transform, a = t("string_decoder").StringDecoder;
        function r(t) {
            n.call(this);
            this.hashMode = "string" == typeof t;
            this.hashMode ? this[t] = this._finalOrDigest : this.final = this._finalOrDigest;
            if (this._final) {
                this.__final = this._final;
                this._final = null;
            }
            this._decoder = null;
            this._encoding = null;
        }
        t("inherits")(r, n);
        r.prototype.update = function (t, e, n) {
            "string" == typeof t && (t = i.from(t, e));
            var a = this._update(t);
            if (this.hashMode) return this;
            n && (a = this._toString(a, n));
            return a;
        };
        r.prototype.setAutoPadding = function () { };
        r.prototype.getAuthTag = function () {
            throw new Error("trying to get auth tag in unsupported state");
        };
        r.prototype.setAuthTag = function () {
            throw new Error("trying to set auth tag in unsupported state");
        };
        r.prototype.setAAD = function () {
            throw new Error("trying to set aad in unsupported state");
        };
        r.prototype._transform = function (t, e, i) {
            var n;
            try {
                this.hashMode ? this._update(t) : this.push(this._update(t));
            } catch (t) {
                n = t;
            } finally {
                i(n);
            }
        };
        r.prototype._flush = function (t) {
            var e;
            try {
                this.push(this.__final());
            } catch (t) {
                e = t;
            }
            t(e);
        };
        r.prototype._finalOrDigest = function (t) {
            var e = this.__final() || i.alloc(0);
            t && (e = this._toString(e, t, !0));
            return e;
        };
        r.prototype._toString = function (t, e, i) {
            if (!this._decoder) {
                this._decoder = new a(e);
                this._encoding = e;
            }
            if (this._encoding !== e) throw new Error("can't switch encodings");
            var n = this._decoder.write(t);
            i && (n += this._decoder.end());
            return n;
        };
        e.exports = r;
    }, {
        inherits: 138,
        "safe-buffer": 176,
        stream: 186,
        string_decoder: 187
    }],
    68: [function (t, e, i) {
        (function (t) {
            i.isArray = function (t) {
                return Array.isArray ? Array.isArray(t) : "[object Array]" === e(t);
            };
            i.isBoolean = function (t) {
                return "boolean" == typeof t;
            };
            i.isNull = function (t) {
                return null === t;
            };
            i.isNullOrUndefined = function (t) {
                return null == t;
            };
            i.isNumber = function (t) {
                return "number" == typeof t;
            };
            i.isString = function (t) {
                return "string" == typeof t;
            };
            i.isSymbol = function (t) {
                return "symbol" == typeof t;
            };
            i.isUndefined = function (t) {
                return void 0 === t;
            };
            i.isRegExp = function (t) {
                return "[object RegExp]" === e(t);
            };
            i.isObject = function (t) {
                return "object" == typeof t && null !== t;
            };
            i.isDate = function (t) {
                return "[object Date]" === e(t);
            };
            i.isError = function (t) {
                return "[object Error]" === e(t) || t instanceof Error;
            };
            i.isFunction = function (t) {
                return "function" == typeof t;
            };
            i.isPrimitive = function (t) {
                return null === t || "boolean" == typeof t || "number" == typeof t || "string" == typeof t || "symbol" == typeof t || "undefined" == typeof t;
            };
            i.isBuffer = t.isBuffer;
            function e(t) {
                return Object.prototype.toString.call(t);
            }
        }).call(this, {
            isBuffer: t("../../is-buffer/index.js")
        });
    }, {
        "../../is-buffer/index.js": 139
    }],
    69: [function (t, e) {
        (function (i) {
            var n = t("elliptic"), a = t("bn.js");
            e.exports = function (t) {
                return new o(t);
            };
            var r = {
                secp256k1: {
                    name: "secp256k1",
                    byteLength: 32
                },
                secp224r1: {
                    name: "p224",
                    byteLength: 28
                },
                prime256v1: {
                    name: "p256",
                    byteLength: 32
                },
                prime192v1: {
                    name: "p192",
                    byteLength: 24
                },
                ed25519: {
                    name: "ed25519",
                    byteLength: 32
                },
                secp384r1: {
                    name: "p384",
                    byteLength: 48
                },
                secp521r1: {
                    name: "p521",
                    byteLength: 66
                }
            };
            r.p224 = r.secp224r1;
            r.p256 = r.secp256r1 = r.prime256v1;
            r.p192 = r.secp192r1 = r.prime192v1;
            r.p384 = r.secp384r1;
            r.p521 = r.secp521r1;
            function o(t) {
                this.curveType = r[t];
                this.curveType || (this.curveType = {
                    name: t
                });
                this.curve = new n.ec(this.curveType.name);
                this.keys = void 0;
            }
            o.prototype.generateKeys = function (t, e) {
                this.keys = this.curve.genKeyPair();
                return this.getPublicKey(t, e);
            };
            o.prototype.computeSecret = function (t, e, n) {
                e = e || "utf8";
                i.isBuffer(t) || (t = new i(t, e));
                return s(this.curve.keyFromPublic(t).getPublic().mul(this.keys.getPrivate()).getX(), n, this.curveType.byteLength);
            };
            o.prototype.getPublicKey = function (t, e) {
                var i = this.keys.getPublic("compressed" === e, !0);
                "hybrid" === e && (i[i.length - 1] % 2 ? i[0] = 7 : i[0] = 6);
                return s(i, t);
            };
            o.prototype.getPrivateKey = function (t) {
                return s(this.keys.getPrivate(), t);
            };
            o.prototype.setPublicKey = function (t, e) {
                e = e || "utf8";
                i.isBuffer(t) || (t = new i(t, e));
                this.keys._importPublic(t);
                return this;
            };
            o.prototype.setPrivateKey = function (t, e) {
                e = e || "utf8";
                i.isBuffer(t) || (t = new i(t, e));
                var n = new a(t);
                n = n.toString(16);
                this.keys = this.curve.genKeyPair();
                this.keys._importPrivate(n);
                return this;
            };
            function s(t, e, n) {
                Array.isArray(t) || (t = t.toArray());
                var a = new i(t);
                if (n && a.length < n) {
                    var r = new i(n - a.length);
                    r.fill(0);
                    a = i.concat([r, a]);
                }
                return e ? a.toString(e) : a;
            }
        }).call(this, t("buffer").Buffer);
    }, {
        "bn.js": 70,
        buffer: 65,
        elliptic: 87
    }],
    70: [function (t, e, i) {
        arguments[4][15][0].apply(i, arguments);
    }, {
        buffer: 19,
        dup: 15
    }],
    71: [function (t, e) {
        "use strict";
        var i = t("inherits"), n = t("md5.js"), a = t("ripemd160"), r = t("sha.js"), o = t("cipher-base");
        function s(t) {
            o.call(this, "digest");
            this._hash = t;
        }
        i(s, o);
        s.prototype._update = function (t) {
            this._hash.update(t);
        };
        s.prototype._final = function () {
            return this._hash.digest();
        };
        e.exports = function (t) {
            return "md5" === (t = t.toLowerCase()) ? new n() : "rmd160" === t || "ripemd160" === t ? new a() : new s(r(t));
        };
    }, {
        "cipher-base": 67,
        inherits: 138,
        "md5.js": 140,
        ripemd160: "ripemd160",
        "sha.js": 179
    }],
    72: [function (t, e) {
        var i = t("md5.js");
        e.exports = function (t) {
            return new i().update(t).digest();
        };
    }, {
        "md5.js": 140
    }],
    73: [function (t, e) {
        "use strict";
        var i = t("inherits"), n = t("./legacy"), a = t("cipher-base"), r = t("safe-buffer").Buffer, o = t("create-hash/md5"), s = t("ripemd160"), c = t("sha.js"), l = r.alloc(128);
        function h(t, e) {
            a.call(this, "digest");
            "string" == typeof e && (e = r.from(e));
            var i = "sha512" === t || "sha384" === t ? 128 : 64;
            this._alg = t;
            this._key = e;
            e.length > i ? e = ("rmd160" === t ? new s() : c(t)).update(e).digest() : e.length < i && (e = r.concat([e, l], i));
            for (var n = this._ipad = r.allocUnsafe(i), o = this._opad = r.allocUnsafe(i), h = 0; h < i; h++) {
                n[h] = 54 ^ e[h];
                o[h] = 92 ^ e[h];
            }
            this._hash = "rmd160" === t ? new s() : c(t);
            this._hash.update(n);
        }
        i(h, a);
        h.prototype._update = function (t) {
            this._hash.update(t);
        };
        h.prototype._final = function () {
            var t = this._hash.digest();
            return ("rmd160" === this._alg ? new s() : c(this._alg)).update(this._opad).update(t).digest();
        };
        e.exports = function (t, e) {
            return "rmd160" === (t = t.toLowerCase()) || "ripemd160" === t ? new h("rmd160", e) : "md5" === t ? new n(o, e) : new h(t, e);
        };
    }, {
        "./legacy": 74,
        "cipher-base": 67,
        "create-hash/md5": 72,
        inherits: 138,
        ripemd160: "ripemd160",
        "safe-buffer": 176,
        "sha.js": 179
    }],
    74: [function (t, e) {
        "use strict";
        var i = t("inherits"), n = t("safe-buffer").Buffer, a = t("cipher-base"), r = n.alloc(128), o = 64;
        function s(t, e) {
            a.call(this, "digest");
            "string" == typeof e && (e = n.from(e));
            this._alg = t;
            this._key = e;
            e.length > o ? e = t(e) : e.length < o && (e = n.concat([e, r], o));
            for (var i = this._ipad = n.allocUnsafe(o), s = this._opad = n.allocUnsafe(o), c = 0; c < o; c++) {
                i[c] = 54 ^ e[c];
                s[c] = 92 ^ e[c];
            }
            this._hash = [i];
        }
        i(s, a);
        s.prototype._update = function (t) {
            this._hash.push(t);
        };
        s.prototype._final = function () {
            var t = this._alg(n.concat(this._hash));
            return this._alg(n.concat([this._opad, t]));
        };
        e.exports = s;
    }, {
        "cipher-base": 67,
        inherits: 138,
        "safe-buffer": 176
    }],
    75: [function (t, e, i) {
        "use strict";
        i.randomBytes = i.rng = i.pseudoRandomBytes = i.prng = t("randombytes");
        i.createHash = i.Hash = t("create-hash");
        i.createHmac = i.Hmac = t("create-hmac");
        var n = t("browserify-sign/algos"), a = Object.keys(n), r = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(a);
        i.getHashes = function () {
            return r;
        };
        var o = t("pbkdf2");
        i.pbkdf2 = o.pbkdf2;
        i.pbkdf2Sync = o.pbkdf2Sync;
        var s = t("browserify-cipher");
        i.Cipher = s.Cipher;
        i.createCipher = s.createCipher;
        i.Cipheriv = s.Cipheriv;
        i.createCipheriv = s.createCipheriv;
        i.Decipher = s.Decipher;
        i.createDecipher = s.createDecipher;
        i.Decipheriv = s.Decipheriv;
        i.createDecipheriv = s.createDecipheriv;
        i.getCiphers = s.getCiphers;
        i.listCiphers = s.listCiphers;
        var c = t("diffie-hellman");
        i.DiffieHellmanGroup = c.DiffieHellmanGroup;
        i.createDiffieHellmanGroup = c.createDiffieHellmanGroup;
        i.getDiffieHellman = c.getDiffieHellman;
        i.createDiffieHellman = c.createDiffieHellman;
        i.DiffieHellman = c.DiffieHellman;
        var l = t("browserify-sign");
        i.createSign = l.createSign;
        i.Sign = l.Sign;
        i.createVerify = l.createVerify;
        i.Verify = l.Verify;
        i.createECDH = t("create-ecdh");
        var h = t("public-encrypt");
        i.publicEncrypt = h.publicEncrypt;
        i.privateEncrypt = h.privateEncrypt;
        i.publicDecrypt = h.publicDecrypt;
        i.privateDecrypt = h.privateDecrypt;
        var u = t("randomfill");
        i.randomFill = u.randomFill;
        i.randomFillSync = u.randomFillSync;
        i.createCredentials = function () {
            throw new Error(["sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join("\n"));
        };
        i.constants = {
            DH_CHECK_P_NOT_SAFE_PRIME: 2,
            DH_CHECK_P_NOT_PRIME: 1,
            DH_UNABLE_TO_CHECK_GENERATOR: 4,
            DH_NOT_SUITABLE_GENERATOR: 8,
            NPN_ENABLED: 1,
            ALPN_ENABLED: 1,
            RSA_PKCS1_PADDING: 1,
            RSA_SSLV23_PADDING: 2,
            RSA_NO_PADDING: 3,
            RSA_PKCS1_OAEP_PADDING: 4,
            RSA_X931_PADDING: 5,
            RSA_PKCS1_PSS_PADDING: 6,
            POINT_CONVERSION_COMPRESSED: 2,
            POINT_CONVERSION_UNCOMPRESSED: 4,
            POINT_CONVERSION_HYBRID: 6
        };
    }, {
        "browserify-cipher": 37,
        "browserify-sign": 44,
        "browserify-sign/algos": 41,
        "create-ecdh": 69,
        "create-hash": 71,
        "create-hmac": 73,
        "diffie-hellman": 82,
        pbkdf2: "pbkdf2",
        "public-encrypt": 152,
        randombytes: 159,
        randomfill: 160
    }],
    76: [function (t, e, i) {
        "use strict";
        i.utils = t("./des/utils");
        i.Cipher = t("./des/cipher");
        i.DES = t("./des/des");
        i.CBC = t("./des/cbc");
        i.EDE = t("./des/ede");
    }, {
        "./des/cbc": 77,
        "./des/cipher": 78,
        "./des/des": 79,
        "./des/ede": 80,
        "./des/utils": 81
    }],
    77: [function (t, e, i) {
        "use strict";
        var n = t("minimalistic-assert"), a = t("inherits"), r = {};
        function o(t) {
            n.equal(t.length, 8, "Invalid IV length");
            this.iv = new Array(8);
            for (var e = 0; e < this.iv.length; e++) this.iv[e] = t[e];
        }
        i.instantiate = function (t) {
            function e(e) {
                t.call(this, e);
                this._cbcInit();
            }
            a(e, t);
            for (var i = Object.keys(r), n = 0; n < i.length; n++) {
                var o = i[n];
                e.prototype[o] = r[o];
            }
            e.create = function (t) {
                return new e(t);
            };
            return e;
        };
        r._cbcInit = function () {
            var t = new o(this.options.iv);
            this._cbcState = t;
        };
        r._update = function (t, e, i, n) {
            var a = this._cbcState, r = this.constructor.super_.prototype, o = a.iv;
            if ("encrypt" === this.type) {
                for (var s = 0; s < this.blockSize; s++) o[s] ^= t[e + s];
                r._update.call(this, o, 0, i, n);
                for (s = 0; s < this.blockSize; s++) o[s] = i[n + s];
            } else {
                r._update.call(this, t, e, i, n);
                for (s = 0; s < this.blockSize; s++) i[n + s] ^= o[s];
                for (s = 0; s < this.blockSize; s++) o[s] = t[e + s];
            }
        };
    }, {
        inherits: 138,
        "minimalistic-assert": 143
    }],
    78: [function (t, e) {
        "use strict";
        var i = t("minimalistic-assert");
        function n(t) {
            this.options = t;
            this.type = this.options.type;
            this.blockSize = 8;
            this._init();
            this.buffer = new Array(this.blockSize);
            this.bufferOff = 0;
        }
        e.exports = n;
        n.prototype._init = function () { };
        n.prototype.update = function (t) {
            return 0 === t.length ? [] : "decrypt" === this.type ? this._updateDecrypt(t) : this._updateEncrypt(t);
        };
        n.prototype._buffer = function (t, e) {
            for (var i = Math.min(this.buffer.length - this.bufferOff, t.length - e), n = 0; n < i; n++) this.buffer[this.bufferOff + n] = t[e + n];
            this.bufferOff += i;
            return i;
        };
        n.prototype._flushBuffer = function (t, e) {
            this._update(this.buffer, 0, t, e);
            this.bufferOff = 0;
            return this.blockSize;
        };
        n.prototype._updateEncrypt = function (t) {
            var e = 0, i = 0, n = (this.bufferOff + t.length) / this.blockSize | 0, a = new Array(n * this.blockSize);
            if (0 !== this.bufferOff) {
                e += this._buffer(t, e);
                this.bufferOff === this.buffer.length && (i += this._flushBuffer(a, i));
            }
            for (var r = t.length - (t.length - e) % this.blockSize; e < r; e += this.blockSize) {
                this._update(t, e, a, i);
                i += this.blockSize;
            }
            for (; e < t.length; e++, this.bufferOff++) this.buffer[this.bufferOff] = t[e];
            return a;
        };
        n.prototype._updateDecrypt = function (t) {
            for (var e = 0, i = 0, n = Math.ceil((this.bufferOff + t.length) / this.blockSize) - 1, a = new Array(n * this.blockSize); n > 0; n--) {
                e += this._buffer(t, e);
                i += this._flushBuffer(a, i);
            }
            e += this._buffer(t, e);
            return a;
        };
        n.prototype.final = function (t) {
            var e, i;
            t && (e = this.update(t));
            i = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt();
            return e ? e.concat(i) : i;
        };
        n.prototype._pad = function (t, e) {
            if (0 === e) return !1;
            for (; e < t.length;) t[e++] = 0;
            return !0;
        };
        n.prototype._finalEncrypt = function () {
            if (!this._pad(this.buffer, this.bufferOff)) return [];
            var t = new Array(this.blockSize);
            this._update(this.buffer, 0, t, 0);
            return t;
        };
        n.prototype._unpad = function (t) {
            return t;
        };
        n.prototype._finalDecrypt = function () {
            i.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
            var t = new Array(this.blockSize);
            this._flushBuffer(t, 0);
            return this._unpad(t);
        };
    }, {
        "minimalistic-assert": 143
    }],
    79: [function (t, e) {
        "use strict";
        var i = t("minimalistic-assert"), n = t("inherits"), a = t("./utils"), r = t("./cipher");
        function o() {
            this.tmp = new Array(2);
            this.keys = null;
        }
        function s(t) {
            r.call(this, t);
            var e = new o();
            this._desState = e;
            this.deriveKeys(e, t.key);
        }
        n(s, r);
        e.exports = s;
        s.create = function (t) {
            return new s(t);
        };
        var c = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
        s.prototype.deriveKeys = function (t, e) {
            t.keys = new Array(32);
            i.equal(e.length, this.blockSize, "Invalid key length");
            var n = a.readUInt32BE(e, 0), r = a.readUInt32BE(e, 4);
            a.pc1(n, r, t.tmp, 0);
            n = t.tmp[0];
            r = t.tmp[1];
            for (var o = 0; o < t.keys.length; o += 2) {
                var s = c[o >>> 1];
                n = a.r28shl(n, s);
                r = a.r28shl(r, s);
                a.pc2(n, r, t.keys, o);
            }
        };
        s.prototype._update = function (t, e, i, n) {
            var r = this._desState, o = a.readUInt32BE(t, e), s = a.readUInt32BE(t, e + 4);
            a.ip(o, s, r.tmp, 0);
            o = r.tmp[0];
            s = r.tmp[1];
            "encrypt" === this.type ? this._encrypt(r, o, s, r.tmp, 0) : this._decrypt(r, o, s, r.tmp, 0);
            o = r.tmp[0];
            s = r.tmp[1];
            a.writeUInt32BE(i, o, n);
            a.writeUInt32BE(i, s, n + 4);
        };
        s.prototype._pad = function (t, e) {
            for (var i = t.length - e, n = e; n < t.length; n++) t[n] = i;
            return !0;
        };
        s.prototype._unpad = function (t) {
            for (var e = t[t.length - 1], n = t.length - e; n < t.length; n++) i.equal(t[n], e);
            return t.slice(0, t.length - e);
        };
        s.prototype._encrypt = function (t, e, i, n, r) {
            for (var o = e, s = i, c = 0; c < t.keys.length; c += 2) {
                var l = t.keys[c], h = t.keys[c + 1];
                a.expand(s, t.tmp, 0);
                l ^= t.tmp[0];
                h ^= t.tmp[1];
                var u = a.substitute(l, h), p = s;
                s = (o ^ a.permute(u)) >>> 0;
                o = p;
            }
            a.rip(s, o, n, r);
        };
        s.prototype._decrypt = function (t, e, i, n, r) {
            for (var o = i, s = e, c = t.keys.length - 2; c >= 0; c -= 2) {
                var l = t.keys[c], h = t.keys[c + 1];
                a.expand(o, t.tmp, 0);
                l ^= t.tmp[0];
                h ^= t.tmp[1];
                var u = a.substitute(l, h), p = o;
                o = (s ^ a.permute(u)) >>> 0;
                s = p;
            }
            a.rip(o, s, n, r);
        };
    }, {
        "./cipher": 78,
        "./utils": 81,
        inherits: 138,
        "minimalistic-assert": 143
    }],
    80: [function (t, e) {
        "use strict";
        var i = t("minimalistic-assert"), n = t("inherits"), a = t("./cipher"), r = t("./des");
        function o(t, e) {
            i.equal(e.length, 24, "Invalid key length");
            var n = e.slice(0, 8), a = e.slice(8, 16), o = e.slice(16, 24);
            this.ciphers = "encrypt" === t ? [r.create({
                type: "encrypt",
                key: n
            }), r.create({
                type: "decrypt",
                key: a
            }), r.create({
                type: "encrypt",
                key: o
            })] : [r.create({
                type: "decrypt",
                key: o
            }), r.create({
                type: "encrypt",
                key: a
            }), r.create({
                type: "decrypt",
                key: n
            })];
        }
        function s(t) {
            a.call(this, t);
            var e = new o(this.type, this.options.key);
            this._edeState = e;
        }
        n(s, a);
        e.exports = s;
        s.create = function (t) {
            return new s(t);
        };
        s.prototype._update = function (t, e, i, n) {
            var a = this._edeState;
            a.ciphers[0]._update(t, e, i, n);
            a.ciphers[1]._update(i, n, i, n);
            a.ciphers[2]._update(i, n, i, n);
        };
        s.prototype._pad = r.prototype._pad;
        s.prototype._unpad = r.prototype._unpad;
    }, {
        "./cipher": 78,
        "./des": 79,
        inherits: 138,
        "minimalistic-assert": 143
    }],
    81: [function (t, e, i) {
        "use strict";
        i.readUInt32BE = function (t, e) {
            return (t[0 + e] << 24 | t[1 + e] << 16 | t[2 + e] << 8 | t[3 + e]) >>> 0;
        };
        i.writeUInt32BE = function (t, e, i) {
            t[0 + i] = e >>> 24;
            t[1 + i] = e >>> 16 & 255;
            t[2 + i] = e >>> 8 & 255;
            t[3 + i] = 255 & e;
        };
        i.ip = function (t, e, i, n) {
            for (var a = 0, r = 0, o = 6; o >= 0; o -= 2) {
                for (var s = 0; s <= 24; s += 8) {
                    a <<= 1;
                    a |= e >>> s + o & 1;
                }
                for (s = 0; s <= 24; s += 8) {
                    a <<= 1;
                    a |= t >>> s + o & 1;
                }
            }
            for (o = 6; o >= 0; o -= 2) {
                for (s = 1; s <= 25; s += 8) {
                    r <<= 1;
                    r |= e >>> s + o & 1;
                }
                for (s = 1; s <= 25; s += 8) {
                    r <<= 1;
                    r |= t >>> s + o & 1;
                }
            }
            i[n + 0] = a >>> 0;
            i[n + 1] = r >>> 0;
        };
        i.rip = function (t, e, i, n) {
            for (var a = 0, r = 0, o = 0; o < 4; o++) for (var s = 24; s >= 0; s -= 8) {
                a <<= 1;
                a |= e >>> s + o & 1;
                a <<= 1;
                a |= t >>> s + o & 1;
            }
            for (o = 4; o < 8; o++) for (s = 24; s >= 0; s -= 8) {
                r <<= 1;
                r |= e >>> s + o & 1;
                r <<= 1;
                r |= t >>> s + o & 1;
            }
            i[n + 0] = a >>> 0;
            i[n + 1] = r >>> 0;
        };
        i.pc1 = function (t, e, i, n) {
            for (var a = 0, r = 0, o = 7; o >= 5; o--) {
                for (var s = 0; s <= 24; s += 8) {
                    a <<= 1;
                    a |= e >> s + o & 1;
                }
                for (s = 0; s <= 24; s += 8) {
                    a <<= 1;
                    a |= t >> s + o & 1;
                }
            }
            for (s = 0; s <= 24; s += 8) {
                a <<= 1;
                a |= e >> s + o & 1;
            }
            for (o = 1; o <= 3; o++) {
                for (s = 0; s <= 24; s += 8) {
                    r <<= 1;
                    r |= e >> s + o & 1;
                }
                for (s = 0; s <= 24; s += 8) {
                    r <<= 1;
                    r |= t >> s + o & 1;
                }
            }
            for (s = 0; s <= 24; s += 8) {
                r <<= 1;
                r |= t >> s + o & 1;
            }
            i[n + 0] = a >>> 0;
            i[n + 1] = r >>> 0;
        };
        i.r28shl = function (t, e) {
            return t << e & 268435455 | t >>> 28 - e;
        };
        var n = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
        i.pc2 = function (t, e, i, a) {
            for (var r = 0, o = 0, s = n.length >>> 1, c = 0; c < s; c++) {
                r <<= 1;
                r |= t >>> n[c] & 1;
            }
            for (c = s; c < n.length; c++) {
                o <<= 1;
                o |= e >>> n[c] & 1;
            }
            i[a + 0] = r >>> 0;
            i[a + 1] = o >>> 0;
        };
        i.expand = function (t, e, i) {
            var n = 0, a = 0;
            n = (1 & t) << 5 | t >>> 27;
            for (var r = 23; r >= 15; r -= 4) {
                n <<= 6;
                n |= t >>> r & 63;
            }
            for (r = 11; r >= 3; r -= 4) {
                a |= t >>> r & 63;
                a <<= 6;
            }
            a |= (31 & t) << 1 | t >>> 31;
            e[i + 0] = n >>> 0;
            e[i + 1] = a >>> 0;
        };
        var a = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
        i.substitute = function (t, e) {
            for (var i = 0, n = 0; n < 4; n++) {
                i <<= 4;
                i |= a[64 * n + (t >>> 18 - 6 * n & 63)];
            }
            for (n = 0; n < 4; n++) {
                i <<= 4;
                i |= a[256 + 64 * n + (e >>> 18 - 6 * n & 63)];
            }
            return i >>> 0;
        };
        var r = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
        i.permute = function (t) {
            for (var e = 0, i = 0; i < r.length; i++) {
                e <<= 1;
                e |= t >>> r[i] & 1;
            }
            return e >>> 0;
        };
        i.padSplit = function (t, e, i) {
            for (var n = t.toString(2); n.length < e;) n = "0" + n;
            for (var a = [], r = 0; r < e; r += i) a.push(n.slice(r, r + i));
            return a.join(" ");
        };
    }, {}],
    82: [function (t, e, i) {
        (function (e) {
            var n = t("./lib/generatePrime"), a = t("./lib/primes.json"), r = t("./lib/dh"), o = {
                binary: !0,
                hex: !0,
                base64: !0
            };
            i.DiffieHellmanGroup = i.createDiffieHellmanGroup = i.getDiffieHellman = function (t) {
                var i = new e(a[t].prime, "hex"), n = new e(a[t].gen, "hex");
                return new r(i, n);
            };
            i.createDiffieHellman = i.DiffieHellman = function t(i, a, s, c) {
                if (e.isBuffer(a) || void 0 === o[a]) return t(i, "binary", a, s);
                a = a || "binary";
                c = c || "binary";
                s = s || new e([2]);
                e.isBuffer(s) || (s = new e(s, c));
                if ("number" == typeof i) return new r(n(i, s), s, !0);
                e.isBuffer(i) || (i = new e(i, a));
                return new r(i, s, !0);
            };
        }).call(this, t("buffer").Buffer);
    }, {
        "./lib/dh": 83,
        "./lib/generatePrime": 84,
        "./lib/primes.json": 85,
        buffer: 65
    }],
    83: [function (t, e) {
        (function (i) {
            var n = t("bn.js"), a = new (t("miller-rabin"))(), r = new n(24), o = new n(11), s = new n(10), c = new n(3), l = new n(7), h = t("./generatePrime"), u = t("randombytes");
            e.exports = g;
            function p(t, e) {
                e = e || "utf8";
                i.isBuffer(t) || (t = new i(t, e));
                this._pub = new n(t);
                return this;
            }
            function d(t, e) {
                e = e || "utf8";
                i.isBuffer(t) || (t = new i(t, e));
                this._priv = new n(t);
                return this;
            }
            var f = {};
            function m(t, e) {
                var i = e.toString("hex"), n = [i, t.toString(16)].join("_");
                if (n in f) return f[n];
                var u, p = 0;
                if (t.isEven() || !h.simpleSieve || !h.fermatTest(t) || !a.test(t)) {
                    p += 1;
                    p += "02" === i || "05" === i ? 8 : 4;
                    f[n] = p;
                    return p;
                }
                a.test(t.shrn(1)) || (p += 2);
                switch (i) {
                    case "02":
                        t.mod(r).cmp(o) && (p += 8);
                        break;

                    case "05":
                        (u = t.mod(s)).cmp(c) && u.cmp(l) && (p += 8);
                        break;

                    default:
                        p += 4;
                }
                f[n] = p;
                return p;
            }
            function g(t, e, i) {
                this.setGenerator(e);
                this.__prime = new n(t);
                this._prime = n.mont(this.__prime);
                this._primeLen = t.length;
                this._pub = void 0;
                this._priv = void 0;
                this._primeCode = void 0;
                if (i) {
                    this.setPublicKey = p;
                    this.setPrivateKey = d;
                } else this._primeCode = 8;
            }
            Object.defineProperty(g.prototype, "verifyError", {
                enumerable: !0,
                get: function () {
                    "number" != typeof this._primeCode && (this._primeCode = m(this.__prime, this.__gen));
                    return this._primeCode;
                }
            });
            g.prototype.generateKeys = function () {
                this._priv || (this._priv = new n(u(this._primeLen)));
                this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
                return this.getPublicKey();
            };
            g.prototype.computeSecret = function (t) {
                var e = (t = (t = new n(t)).toRed(this._prime)).redPow(this._priv).fromRed(), a = new i(e.toArray()), r = this.getPrime();
                if (a.length < r.length) {
                    var o = new i(r.length - a.length);
                    o.fill(0);
                    a = i.concat([o, a]);
                }
                return a;
            };
            g.prototype.getPublicKey = function (t) {
                return _(this._pub, t);
            };
            g.prototype.getPrivateKey = function (t) {
                return _(this._priv, t);
            };
            g.prototype.getPrime = function (t) {
                return _(this.__prime, t);
            };
            g.prototype.getGenerator = function (t) {
                return _(this._gen, t);
            };
            g.prototype.setGenerator = function (t, e) {
                e = e || "utf8";
                i.isBuffer(t) || (t = new i(t, e));
                this.__gen = t;
                this._gen = new n(t);
                return this;
            };
            function _(t, e) {
                var n = new i(t.toArray());
                return e ? n.toString(e) : n;
            }
        }).call(this, t("buffer").Buffer);
    }, {
        "./generatePrime": 84,
        "bn.js": 86,
        buffer: 65,
        "miller-rabin": 141,
        randombytes: 159
    }],
    84: [function (t, e) {
        var i = t("randombytes");
        e.exports = _;
        _.simpleSieve = m;
        _.fermatTest = g;
        var n = t("bn.js"), a = new n(24), r = new (t("miller-rabin"))(), o = new n(1), s = new n(2), c = new n(5), l = (new n(16),
            new n(8), new n(10)), h = new n(3), u = (new n(7), new n(11)), p = new n(4), d = (new n(12),
                null);
        function f() {
            if (null !== d) return d;
            var t = [];
            t[0] = 2;
            for (var e = 1, i = 3; i < 1048576; i += 2) {
                for (var n = Math.ceil(Math.sqrt(i)), a = 0; a < e && t[a] <= n && i % t[a] != 0; a++);
                e !== a && t[a] <= n || (t[e++] = i);
            }
            d = t;
            return t;
        }
        function m(t) {
            for (var e = f(), i = 0; i < e.length; i++) if (0 === t.modn(e[i])) return 0 === t.cmpn(e[i]);
            return !0;
        }
        function g(t) {
            var e = n.mont(t);
            return 0 === s.toRed(e).redPow(t.subn(1)).fromRed().cmpn(1);
        }
        function _(t, e) {
            if (t < 16) return new n(2 === e || 5 === e ? [140, 123] : [140, 39]);
            e = new n(e);
            for (var d, f; ;) {
                d = new n(i(Math.ceil(t / 8)));
                for (; d.bitLength() > t;) d.ishrn(1);
                d.isEven() && d.iadd(o);
                d.testn(1) || d.iadd(s);
                if (e.cmp(s)) {
                    if (!e.cmp(c)) for (; d.mod(l).cmp(h);) d.iadd(p);
                } else for (; d.mod(a).cmp(u);) d.iadd(p);
                if (m(f = d.shrn(1)) && m(d) && g(f) && g(d) && r.test(f) && r.test(d)) return d;
            }
        }
    }, {
        "bn.js": 86,
        "miller-rabin": 141,
        randombytes: 159
    }],
    85: [function (t, e) {
        e.exports = {
            modp1: {
                gen: "02",
                prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
            },
            modp2: {
                gen: "02",
                prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
            },
            modp5: {
                gen: "02",
                prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
            },
            modp14: {
                gen: "02",
                prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
            },
            modp15: {
                gen: "02",
                prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
            },
            modp16: {
                gen: "02",
                prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
            },
            modp17: {
                gen: "02",
                prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
            },
            modp18: {
                gen: "02",
                prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
            }
        };
    }, {}],
    86: [function (t, e, i) {
        arguments[4][15][0].apply(i, arguments);
    }, {
        buffer: 19,
        dup: 15
    }],
    87: [function (t, e, i) {
        "use strict";
        var n = i;
        n.version = t("../package.json").version;
        n.utils = t("./elliptic/utils");
        n.rand = t("brorand");
        n.curve = t("./elliptic/curve");
        n.curves = t("./elliptic/curves");
        n.ec = t("./elliptic/ec");
        n.eddsa = t("./elliptic/eddsa");
    }, {
        "../package.json": 103,
        "./elliptic/curve": 90,
        "./elliptic/curves": 93,
        "./elliptic/ec": 94,
        "./elliptic/eddsa": 97,
        "./elliptic/utils": 101,
        brorand: 18
    }],
    88: [function (t, e) {
        "use strict";
        var i = t("bn.js"), n = t("../utils"), a = n.getNAF, r = n.getJSF, o = n.assert;
        function s(t, e) {
            this.type = t;
            this.p = new i(e.p, 16);
            this.red = e.prime ? i.red(e.prime) : i.mont(this.p);
            this.zero = new i(0).toRed(this.red);
            this.one = new i(1).toRed(this.red);
            this.two = new i(2).toRed(this.red);
            this.n = e.n && new i(e.n, 16);
            this.g = e.g && this.pointFromJSON(e.g, e.gRed);
            this._wnafT1 = new Array(4);
            this._wnafT2 = new Array(4);
            this._wnafT3 = new Array(4);
            this._wnafT4 = new Array(4);
            this._bitLength = this.n ? this.n.bitLength() : 0;
            var n = this.n && this.p.div(this.n);
            if (!n || n.cmpn(100) > 0) this.redN = null; else {
                this._maxwellTrick = !0;
                this.redN = this.n.toRed(this.red);
            }
        }
        e.exports = s;
        s.prototype.point = function () {
            throw new Error("Not implemented");
        };
        s.prototype.validate = function () {
            throw new Error("Not implemented");
        };
        s.prototype._fixedNafMul = function (t, e) {
            o(t.precomputed);
            var i = t._getDoubles(), n = a(e, 1, this._bitLength), r = (1 << i.step + 1) - (i.step % 2 == 0 ? 2 : 1);
            r /= 3;
            var s, c, l = [];
            for (s = 0; s < n.length; s += i.step) {
                c = 0;
                for (var h = s + i.step - 1; h >= s; h--) c = (c << 1) + n[h];
                l.push(c);
            }
            for (var u = this.jpoint(null, null, null), p = this.jpoint(null, null, null), d = r; d > 0; d--) {
                for (s = 0; s < l.length; s++) (c = l[s]) === d ? p = p.mixedAdd(i.points[s]) : c === -d && (p = p.mixedAdd(i.points[s].neg()));
                u = u.add(p);
            }
            return u.toP();
        };
        s.prototype._wnafMul = function (t, e) {
            var i = 4, n = t._getNAFPoints(i);
            i = n.wnd;
            for (var r = n.points, s = a(e, i, this._bitLength), c = this.jpoint(null, null, null), l = s.length - 1; l >= 0; l--) {
                for (var h = 0; l >= 0 && 0 === s[l]; l--) h++;
                l >= 0 && h++;
                c = c.dblp(h);
                if (l < 0) break;
                var u = s[l];
                o(0 !== u);
                c = "affine" === t.type ? u > 0 ? c.mixedAdd(r[u - 1 >> 1]) : c.mixedAdd(r[-u - 1 >> 1].neg()) : u > 0 ? c.add(r[u - 1 >> 1]) : c.add(r[-u - 1 >> 1].neg());
            }
            return "affine" === t.type ? c.toP() : c;
        };
        s.prototype._wnafMulAdd = function (t, e, i, n, o) {
            var s, c, l, h = this._wnafT1, u = this._wnafT2, p = this._wnafT3, d = 0;
            for (s = 0; s < n; s++) {
                var f = (l = e[s])._getNAFPoints(t);
                h[s] = f.wnd;
                u[s] = f.points;
            }
            for (s = n - 1; s >= 1; s -= 2) {
                var m = s - 1, g = s;
                if (1 === h[m] && 1 === h[g]) {
                    var _ = [e[m], null, null, e[g]];
                    if (0 === e[m].y.cmp(e[g].y)) {
                        _[1] = e[m].add(e[g]);
                        _[2] = e[m].toJ().mixedAdd(e[g].neg());
                    } else if (0 === e[m].y.cmp(e[g].y.redNeg())) {
                        _[1] = e[m].toJ().mixedAdd(e[g]);
                        _[2] = e[m].add(e[g].neg());
                    } else {
                        _[1] = e[m].toJ().mixedAdd(e[g]);
                        _[2] = e[m].toJ().mixedAdd(e[g].neg());
                    }
                    var y = [-3, -1, -5, -7, 0, 7, 5, 1, 3], v = r(i[m], i[g]);
                    d = Math.max(v[0].length, d);
                    p[m] = new Array(d);
                    p[g] = new Array(d);
                    for (c = 0; c < d; c++) {
                        var b = 0 | v[0][c], M = 0 | v[1][c];
                        p[m][c] = y[3 * (b + 1) + (M + 1)];
                        p[g][c] = 0;
                        u[m] = _;
                    }
                } else {
                    p[m] = a(i[m], h[m], this._bitLength);
                    p[g] = a(i[g], h[g], this._bitLength);
                    d = Math.max(p[m].length, d);
                    d = Math.max(p[g].length, d);
                }
            }
            var S = this.jpoint(null, null, null), k = this._wnafT4;
            for (s = d; s >= 0; s--) {
                for (var C = 0; s >= 0;) {
                    var w = !0;
                    for (c = 0; c < n; c++) {
                        k[c] = 0 | p[c][s];
                        0 !== k[c] && (w = !1);
                    }
                    if (!w) break;
                    C++;
                    s--;
                }
                s >= 0 && C++;
                S = S.dblp(C);
                if (s < 0) break;
                for (c = 0; c < n; c++) {
                    var A = k[c];
                    if (0 !== A) {
                        A > 0 ? l = u[c][A - 1 >> 1] : A < 0 && (l = u[c][-A - 1 >> 1].neg());
                        S = "affine" === l.type ? S.mixedAdd(l) : S.add(l);
                    }
                }
            }
            for (s = 0; s < n; s++) u[s] = null;
            return o ? S : S.toP();
        };
        function c(t, e) {
            this.curve = t;
            this.type = e;
            this.precomputed = null;
        }
        s.BasePoint = c;
        c.prototype.eq = function () {
            throw new Error("Not implemented");
        };
        c.prototype.validate = function () {
            return this.curve.validate(this);
        };
        s.prototype.decodePoint = function (t, e) {
            t = n.toArray(t, e);
            var i = this.p.byteLength();
            if ((4 === t[0] || 6 === t[0] || 7 === t[0]) && t.length - 1 == 2 * i) {
                6 === t[0] ? o(t[t.length - 1] % 2 == 0) : 7 === t[0] && o(t[t.length - 1] % 2 == 1);
                return this.point(t.slice(1, 1 + i), t.slice(1 + i, 1 + 2 * i));
            }
            if ((2 === t[0] || 3 === t[0]) && t.length - 1 === i) return this.pointFromX(t.slice(1, 1 + i), 3 === t[0]);
            throw new Error("Unknown point format");
        };
        c.prototype.encodeCompressed = function (t) {
            return this.encode(t, !0);
        };
        c.prototype._encode = function (t) {
            var e = this.curve.p.byteLength(), i = this.getX().toArray("be", e);
            return t ? [this.getY().isEven() ? 2 : 3].concat(i) : [4].concat(i, this.getY().toArray("be", e));
        };
        c.prototype.encode = function (t, e) {
            return n.encode(this._encode(e), t);
        };
        c.prototype.precompute = function (t) {
            if (this.precomputed) return this;
            var e = {
                doubles: null,
                naf: null,
                beta: null
            };
            e.naf = this._getNAFPoints(8);
            e.doubles = this._getDoubles(4, t);
            e.beta = this._getBeta();
            this.precomputed = e;
            return this;
        };
        c.prototype._hasDoubles = function (t) {
            if (!this.precomputed) return !1;
            var e = this.precomputed.doubles;
            return !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step);
        };
        c.prototype._getDoubles = function (t, e) {
            if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
            for (var i = [this], n = this, a = 0; a < e; a += t) {
                for (var r = 0; r < t; r++) n = n.dbl();
                i.push(n);
            }
            return {
                step: t,
                points: i
            };
        };
        c.prototype._getNAFPoints = function (t) {
            if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
            for (var e = [this], i = (1 << t) - 1, n = 1 === i ? null : this.dbl(), a = 1; a < i; a++) e[a] = e[a - 1].add(n);
            return {
                wnd: t,
                points: e
            };
        };
        c.prototype._getBeta = function () {
            return null;
        };
        c.prototype.dblp = function (t) {
            for (var e = this, i = 0; i < t; i++) e = e.dbl();
            return e;
        };
    }, {
        "../utils": 101,
        "bn.js": 102
    }],
    89: [function (t, e) {
        "use strict";
        var i = t("../utils"), n = t("bn.js"), a = t("inherits"), r = t("./base"), o = i.assert;
        function s(t) {
            this.twisted = 1 != (0 | t.a);
            this.mOneA = this.twisted && -1 == (0 | t.a);
            this.extended = this.mOneA;
            r.call(this, "edwards", t);
            this.a = new n(t.a, 16).umod(this.red.m);
            this.a = this.a.toRed(this.red);
            this.c = new n(t.c, 16).toRed(this.red);
            this.c2 = this.c.redSqr();
            this.d = new n(t.d, 16).toRed(this.red);
            this.dd = this.d.redAdd(this.d);
            o(!this.twisted || 0 === this.c.fromRed().cmpn(1));
            this.oneC = 1 == (0 | t.c);
        }
        a(s, r);
        e.exports = s;
        s.prototype._mulA = function (t) {
            return this.mOneA ? t.redNeg() : this.a.redMul(t);
        };
        s.prototype._mulC = function (t) {
            return this.oneC ? t : this.c.redMul(t);
        };
        s.prototype.jpoint = function (t, e, i, n) {
            return this.point(t, e, i, n);
        };
        s.prototype.pointFromX = function (t, e) {
            (t = new n(t, 16)).red || (t = t.toRed(this.red));
            var i = t.redSqr(), a = this.c2.redSub(this.a.redMul(i)), r = this.one.redSub(this.c2.redMul(this.d).redMul(i)), o = a.redMul(r.redInvm()), s = o.redSqrt();
            if (0 !== s.redSqr().redSub(o).cmp(this.zero)) throw new Error("invalid point");
            var c = s.fromRed().isOdd();
            (e && !c || !e && c) && (s = s.redNeg());
            return this.point(t, s);
        };
        s.prototype.pointFromY = function (t, e) {
            (t = new n(t, 16)).red || (t = t.toRed(this.red));
            var i = t.redSqr(), a = i.redSub(this.c2), r = i.redMul(this.d).redMul(this.c2).redSub(this.a), o = a.redMul(r.redInvm());
            if (0 === o.cmp(this.zero)) {
                if (e) throw new Error("invalid point");
                return this.point(this.zero, t);
            }
            var s = o.redSqrt();
            if (0 !== s.redSqr().redSub(o).cmp(this.zero)) throw new Error("invalid point");
            s.fromRed().isOdd() !== e && (s = s.redNeg());
            return this.point(s, t);
        };
        s.prototype.validate = function (t) {
            if (t.isInfinity()) return !0;
            t.normalize();
            var e = t.x.redSqr(), i = t.y.redSqr(), n = e.redMul(this.a).redAdd(i), a = this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(i)));
            return 0 === n.cmp(a);
        };
        function c(t, e, i, a, o) {
            r.BasePoint.call(this, t, "projective");
            if (null === e && null === i && null === a) {
                this.x = this.curve.zero;
                this.y = this.curve.one;
                this.z = this.curve.one;
                this.t = this.curve.zero;
                this.zOne = !0;
            } else {
                this.x = new n(e, 16);
                this.y = new n(i, 16);
                this.z = a ? new n(a, 16) : this.curve.one;
                this.t = o && new n(o, 16);
                this.x.red || (this.x = this.x.toRed(this.curve.red));
                this.y.red || (this.y = this.y.toRed(this.curve.red));
                this.z.red || (this.z = this.z.toRed(this.curve.red));
                this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red));
                this.zOne = this.z === this.curve.one;
                if (this.curve.extended && !this.t) {
                    this.t = this.x.redMul(this.y);
                    this.zOne || (this.t = this.t.redMul(this.z.redInvm()));
                }
            }
        }
        a(c, r.BasePoint);
        s.prototype.pointFromJSON = function (t) {
            return c.fromJSON(this, t);
        };
        s.prototype.point = function (t, e, i, n) {
            return new c(this, t, e, i, n);
        };
        c.fromJSON = function (t, e) {
            return new c(t, e[0], e[1], e[2]);
        };
        c.prototype.inspect = function () {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
        };
        c.prototype.isInfinity = function () {
            return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c));
        };
        c.prototype._extDbl = function () {
            var t = this.x.redSqr(), e = this.y.redSqr(), i = this.z.redSqr();
            i = i.redIAdd(i);
            var n = this.curve._mulA(t), a = this.x.redAdd(this.y).redSqr().redISub(t).redISub(e), r = n.redAdd(e), o = r.redSub(i), s = n.redSub(e), c = a.redMul(o), l = r.redMul(s), h = a.redMul(s), u = o.redMul(r);
            return this.curve.point(c, l, u, h);
        };
        c.prototype._projDbl = function () {
            var t, e, i, n, a, r, o = this.x.redAdd(this.y).redSqr(), s = this.x.redSqr(), c = this.y.redSqr();
            if (this.curve.twisted) {
                var l = (n = this.curve._mulA(s)).redAdd(c);
                if (this.zOne) {
                    t = o.redSub(s).redSub(c).redMul(l.redSub(this.curve.two));
                    e = l.redMul(n.redSub(c));
                    i = l.redSqr().redSub(l).redSub(l);
                } else {
                    a = this.z.redSqr();
                    r = l.redSub(a).redISub(a);
                    t = o.redSub(s).redISub(c).redMul(r);
                    e = l.redMul(n.redSub(c));
                    i = l.redMul(r);
                }
            } else {
                n = s.redAdd(c);
                a = this.curve._mulC(this.z).redSqr();
                r = n.redSub(a).redSub(a);
                t = this.curve._mulC(o.redISub(n)).redMul(r);
                e = this.curve._mulC(n).redMul(s.redISub(c));
                i = n.redMul(r);
            }
            return this.curve.point(t, e, i);
        };
        c.prototype.dbl = function () {
            return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
        };
        c.prototype._extAdd = function (t) {
            var e = this.y.redSub(this.x).redMul(t.y.redSub(t.x)), i = this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)), n = this.t.redMul(this.curve.dd).redMul(t.t), a = this.z.redMul(t.z.redAdd(t.z)), r = i.redSub(e), o = a.redSub(n), s = a.redAdd(n), c = i.redAdd(e), l = r.redMul(o), h = s.redMul(c), u = r.redMul(c), p = o.redMul(s);
            return this.curve.point(l, h, p, u);
        };
        c.prototype._projAdd = function (t) {
            var e, i, n = this.z.redMul(t.z), a = n.redSqr(), r = this.x.redMul(t.x), o = this.y.redMul(t.y), s = this.curve.d.redMul(r).redMul(o), c = a.redSub(s), l = a.redAdd(s), h = this.x.redAdd(this.y).redMul(t.x.redAdd(t.y)).redISub(r).redISub(o), u = n.redMul(c).redMul(h);
            if (this.curve.twisted) {
                e = n.redMul(l).redMul(o.redSub(this.curve._mulA(r)));
                i = c.redMul(l);
            } else {
                e = n.redMul(l).redMul(o.redSub(r));
                i = this.curve._mulC(c).redMul(l);
            }
            return this.curve.point(u, e, i);
        };
        c.prototype.add = function (t) {
            return this.isInfinity() ? t : t.isInfinity() ? this : this.curve.extended ? this._extAdd(t) : this._projAdd(t);
        };
        c.prototype.mul = function (t) {
            return this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve._wnafMul(this, t);
        };
        c.prototype.mulAdd = function (t, e, i) {
            return this.curve._wnafMulAdd(1, [this, e], [t, i], 2, !1);
        };
        c.prototype.jmulAdd = function (t, e, i) {
            return this.curve._wnafMulAdd(1, [this, e], [t, i], 2, !0);
        };
        c.prototype.normalize = function () {
            if (this.zOne) return this;
            var t = this.z.redInvm();
            this.x = this.x.redMul(t);
            this.y = this.y.redMul(t);
            this.t && (this.t = this.t.redMul(t));
            this.z = this.curve.one;
            this.zOne = !0;
            return this;
        };
        c.prototype.neg = function () {
            return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
        };
        c.prototype.getX = function () {
            this.normalize();
            return this.x.fromRed();
        };
        c.prototype.getY = function () {
            this.normalize();
            return this.y.fromRed();
        };
        c.prototype.eq = function (t) {
            return this === t || 0 === this.getX().cmp(t.getX()) && 0 === this.getY().cmp(t.getY());
        };
        c.prototype.eqXToP = function (t) {
            var e = t.toRed(this.curve.red).redMul(this.z);
            if (0 === this.x.cmp(e)) return !0;
            for (var i = t.clone(), n = this.curve.redN.redMul(this.z); ;) {
                i.iadd(this.curve.n);
                if (i.cmp(this.curve.p) >= 0) return !1;
                e.redIAdd(n);
                if (0 === this.x.cmp(e)) return !0;
            }
        };
        c.prototype.toP = c.prototype.normalize;
        c.prototype.mixedAdd = c.prototype.add;
    }, {
        "../utils": 101,
        "./base": 88,
        "bn.js": 102,
        inherits: 138
    }],
    90: [function (t, e, i) {
        "use strict";
        var n = i;
        n.base = t("./base");
        n.short = t("./short");
        n.mont = t("./mont");
        n.edwards = t("./edwards");
    }, {
        "./base": 88,
        "./edwards": 89,
        "./mont": 91,
        "./short": 92
    }],
    91: [function (t, e) {
        "use strict";
        var i = t("bn.js"), n = t("inherits"), a = t("./base"), r = t("../utils");
        function o(t) {
            a.call(this, "mont", t);
            this.a = new i(t.a, 16).toRed(this.red);
            this.b = new i(t.b, 16).toRed(this.red);
            this.i4 = new i(4).toRed(this.red).redInvm();
            this.two = new i(2).toRed(this.red);
            this.a24 = this.i4.redMul(this.a.redAdd(this.two));
        }
        n(o, a);
        e.exports = o;
        o.prototype.validate = function (t) {
            var e = t.normalize().x, i = e.redSqr(), n = i.redMul(e).redAdd(i.redMul(this.a)).redAdd(e);
            return 0 === n.redSqrt().redSqr().cmp(n);
        };
        function s(t, e, n) {
            a.BasePoint.call(this, t, "projective");
            if (null === e && null === n) {
                this.x = this.curve.one;
                this.z = this.curve.zero;
            } else {
                this.x = new i(e, 16);
                this.z = new i(n, 16);
                this.x.red || (this.x = this.x.toRed(this.curve.red));
                this.z.red || (this.z = this.z.toRed(this.curve.red));
            }
        }
        n(s, a.BasePoint);
        o.prototype.decodePoint = function (t, e) {
            return this.point(r.toArray(t, e), 1);
        };
        o.prototype.point = function (t, e) {
            return new s(this, t, e);
        };
        o.prototype.pointFromJSON = function (t) {
            return s.fromJSON(this, t);
        };
        s.prototype.precompute = function () { };
        s.prototype._encode = function () {
            return this.getX().toArray("be", this.curve.p.byteLength());
        };
        s.fromJSON = function (t, e) {
            return new s(t, e[0], e[1] || t.one);
        };
        s.prototype.inspect = function () {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
        };
        s.prototype.isInfinity = function () {
            return 0 === this.z.cmpn(0);
        };
        s.prototype.dbl = function () {
            var t = this.x.redAdd(this.z).redSqr(), e = this.x.redSub(this.z).redSqr(), i = t.redSub(e), n = t.redMul(e), a = i.redMul(e.redAdd(this.curve.a24.redMul(i)));
            return this.curve.point(n, a);
        };
        s.prototype.add = function () {
            throw new Error("Not supported on Montgomery curve");
        };
        s.prototype.diffAdd = function (t, e) {
            var i = this.x.redAdd(this.z), n = this.x.redSub(this.z), a = t.x.redAdd(t.z), r = t.x.redSub(t.z).redMul(i), o = a.redMul(n), s = e.z.redMul(r.redAdd(o).redSqr()), c = e.x.redMul(r.redISub(o).redSqr());
            return this.curve.point(s, c);
        };
        s.prototype.mul = function (t) {
            for (var e = t.clone(), i = this, n = this.curve.point(null, null), a = []; 0 !== e.cmpn(0); e.iushrn(1)) a.push(e.andln(1));
            for (var r = a.length - 1; r >= 0; r--) if (0 === a[r]) {
                i = i.diffAdd(n, this);
                n = n.dbl();
            } else {
                n = i.diffAdd(n, this);
                i = i.dbl();
            }
            return n;
        };
        s.prototype.mulAdd = function () {
            throw new Error("Not supported on Montgomery curve");
        };
        s.prototype.jumlAdd = function () {
            throw new Error("Not supported on Montgomery curve");
        };
        s.prototype.eq = function (t) {
            return 0 === this.getX().cmp(t.getX());
        };
        s.prototype.normalize = function () {
            this.x = this.x.redMul(this.z.redInvm());
            this.z = this.curve.one;
            return this;
        };
        s.prototype.getX = function () {
            this.normalize();
            return this.x.fromRed();
        };
    }, {
        "../utils": 101,
        "./base": 88,
        "bn.js": 102,
        inherits: 138
    }],
    92: [function (t, e) {
        "use strict";
        var i = t("../utils"), n = t("bn.js"), a = t("inherits"), r = t("./base"), o = i.assert;
        function s(t) {
            r.call(this, "short", t);
            this.a = new n(t.a, 16).toRed(this.red);
            this.b = new n(t.b, 16).toRed(this.red);
            this.tinv = this.two.redInvm();
            this.zeroA = 0 === this.a.fromRed().cmpn(0);
            this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3);
            this.endo = this._getEndomorphism(t);
            this._endoWnafT1 = new Array(4);
            this._endoWnafT2 = new Array(4);
        }
        a(s, r);
        e.exports = s;
        s.prototype._getEndomorphism = function (t) {
            if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
                var e, i;
                if (t.beta) e = new n(t.beta, 16).toRed(this.red); else {
                    var a = this._getEndoRoots(this.p);
                    e = (e = a[0].cmp(a[1]) < 0 ? a[0] : a[1]).toRed(this.red);
                }
                if (t.lambda) i = new n(t.lambda, 16); else {
                    var r = this._getEndoRoots(this.n);
                    if (0 === this.g.mul(r[0]).x.cmp(this.g.x.redMul(e))) i = r[0]; else {
                        i = r[1];
                        o(0 === this.g.mul(i).x.cmp(this.g.x.redMul(e)));
                    }
                }
                return {
                    beta: e,
                    lambda: i,
                    basis: t.basis ? t.basis.map(function (t) {
                        return {
                            a: new n(t.a, 16),
                            b: new n(t.b, 16)
                        };
                    }) : this._getEndoBasis(i)
                };
            }
        };
        s.prototype._getEndoRoots = function (t) {
            var e = t === this.p ? this.red : n.mont(t), i = new n(2).toRed(e).redInvm(), a = i.redNeg(), r = new n(3).toRed(e).redNeg().redSqrt().redMul(i);
            return [a.redAdd(r).fromRed(), a.redSub(r).fromRed()];
        };
        s.prototype._getEndoBasis = function (t) {
            for (var e, i, a, r, o, s, c, l, h, u = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), p = t, d = this.n.clone(), f = new n(1), m = new n(0), g = new n(0), _ = new n(1), y = 0; 0 !== p.cmpn(0);) {
                var v = d.div(p);
                l = d.sub(v.mul(p));
                h = g.sub(v.mul(f));
                var b = _.sub(v.mul(m));
                if (!a && l.cmp(u) < 0) {
                    e = c.neg();
                    i = f;
                    a = l.neg();
                    r = h;
                } else if (a && 2 == ++y) break;
                c = l;
                d = p;
                p = l;
                g = f;
                f = h;
                _ = m;
                m = b;
            }
            o = l.neg();
            s = h;
            var M = a.sqr().add(r.sqr());
            if (o.sqr().add(s.sqr()).cmp(M) >= 0) {
                o = e;
                s = i;
            }
            if (a.negative) {
                a = a.neg();
                r = r.neg();
            }
            if (o.negative) {
                o = o.neg();
                s = s.neg();
            }
            return [{
                a: a,
                b: r
            }, {
                a: o,
                b: s
            }];
        };
        s.prototype._endoSplit = function (t) {
            var e = this.endo.basis, i = e[0], n = e[1], a = n.b.mul(t).divRound(this.n), r = i.b.neg().mul(t).divRound(this.n), o = a.mul(i.a), s = r.mul(n.a), c = a.mul(i.b), l = r.mul(n.b);
            return {
                k1: t.sub(o).sub(s),
                k2: c.add(l).neg()
            };
        };
        s.prototype.pointFromX = function (t, e) {
            (t = new n(t, 16)).red || (t = t.toRed(this.red));
            var i = t.redSqr().redMul(t).redIAdd(t.redMul(this.a)).redIAdd(this.b), a = i.redSqrt();
            if (0 !== a.redSqr().redSub(i).cmp(this.zero)) throw new Error("invalid point");
            var r = a.fromRed().isOdd();
            (e && !r || !e && r) && (a = a.redNeg());
            return this.point(t, a);
        };
        s.prototype.validate = function (t) {
            if (t.inf) return !0;
            var e = t.x, i = t.y, n = this.a.redMul(e), a = e.redSqr().redMul(e).redIAdd(n).redIAdd(this.b);
            return 0 === i.redSqr().redISub(a).cmpn(0);
        };
        s.prototype._endoWnafMulAdd = function (t, e, i) {
            for (var n = this._endoWnafT1, a = this._endoWnafT2, r = 0; r < t.length; r++) {
                var o = this._endoSplit(e[r]), s = t[r], c = s._getBeta();
                if (o.k1.negative) {
                    o.k1.ineg();
                    s = s.neg(!0);
                }
                if (o.k2.negative) {
                    o.k2.ineg();
                    c = c.neg(!0);
                }
                n[2 * r] = s;
                n[2 * r + 1] = c;
                a[2 * r] = o.k1;
                a[2 * r + 1] = o.k2;
            }
            for (var l = this._wnafMulAdd(1, n, a, 2 * r, i), h = 0; h < 2 * r; h++) {
                n[h] = null;
                a[h] = null;
            }
            return l;
        };
        function c(t, e, i, a) {
            r.BasePoint.call(this, t, "affine");
            if (null === e && null === i) {
                this.x = null;
                this.y = null;
                this.inf = !0;
            } else {
                this.x = new n(e, 16);
                this.y = new n(i, 16);
                if (a) {
                    this.x.forceRed(this.curve.red);
                    this.y.forceRed(this.curve.red);
                }
                this.x.red || (this.x = this.x.toRed(this.curve.red));
                this.y.red || (this.y = this.y.toRed(this.curve.red));
                this.inf = !1;
            }
        }
        a(c, r.BasePoint);
        s.prototype.point = function (t, e, i) {
            return new c(this, t, e, i);
        };
        s.prototype.pointFromJSON = function (t, e) {
            return c.fromJSON(this, t, e);
        };
        c.prototype._getBeta = function () {
            if (this.curve.endo) {
                var t = this.precomputed;
                if (t && t.beta) return t.beta;
                var e = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
                if (t) {
                    var i = this.curve, n = function (t) {
                        return i.point(t.x.redMul(i.endo.beta), t.y);
                    };
                    t.beta = e;
                    e.precomputed = {
                        beta: null,
                        naf: t.naf && {
                            wnd: t.naf.wnd,
                            points: t.naf.points.map(n)
                        },
                        doubles: t.doubles && {
                            step: t.doubles.step,
                            points: t.doubles.points.map(n)
                        }
                    };
                }
                return e;
            }
        };
        c.prototype.toJSON = function () {
            return this.precomputed ? [this.x, this.y, this.precomputed && {
                doubles: this.precomputed.doubles && {
                    step: this.precomputed.doubles.step,
                    points: this.precomputed.doubles.points.slice(1)
                },
                naf: this.precomputed.naf && {
                    wnd: this.precomputed.naf.wnd,
                    points: this.precomputed.naf.points.slice(1)
                }
            }] : [this.x, this.y];
        };
        c.fromJSON = function (t, e, i) {
            "string" == typeof e && (e = JSON.parse(e));
            var n = t.point(e[0], e[1], i);
            if (!e[2]) return n;
            function a(e) {
                return t.point(e[0], e[1], i);
            }
            var r = e[2];
            n.precomputed = {
                beta: null,
                doubles: r.doubles && {
                    step: r.doubles.step,
                    points: [n].concat(r.doubles.points.map(a))
                },
                naf: r.naf && {
                    wnd: r.naf.wnd,
                    points: [n].concat(r.naf.points.map(a))
                }
            };
            return n;
        };
        c.prototype.inspect = function () {
            return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
        };
        c.prototype.isInfinity = function () {
            return this.inf;
        };
        c.prototype.add = function (t) {
            if (this.inf) return t;
            if (t.inf) return this;
            if (this.eq(t)) return this.dbl();
            if (this.neg().eq(t)) return this.curve.point(null, null);
            if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
            var e = this.y.redSub(t.y);
            0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
            var i = e.redSqr().redISub(this.x).redISub(t.x), n = e.redMul(this.x.redSub(i)).redISub(this.y);
            return this.curve.point(i, n);
        };
        c.prototype.dbl = function () {
            if (this.inf) return this;
            var t = this.y.redAdd(this.y);
            if (0 === t.cmpn(0)) return this.curve.point(null, null);
            var e = this.curve.a, i = this.x.redSqr(), n = t.redInvm(), a = i.redAdd(i).redIAdd(i).redIAdd(e).redMul(n), r = a.redSqr().redISub(this.x.redAdd(this.x)), o = a.redMul(this.x.redSub(r)).redISub(this.y);
            return this.curve.point(r, o);
        };
        c.prototype.getX = function () {
            return this.x.fromRed();
        };
        c.prototype.getY = function () {
            return this.y.fromRed();
        };
        c.prototype.mul = function (t) {
            t = new n(t, 16);
            return this.isInfinity() ? this : this._hasDoubles(t) ? this.curve._fixedNafMul(this, t) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t]) : this.curve._wnafMul(this, t);
        };
        c.prototype.mulAdd = function (t, e, i) {
            var n = [this, e], a = [t, i];
            return this.curve.endo ? this.curve._endoWnafMulAdd(n, a) : this.curve._wnafMulAdd(1, n, a, 2);
        };
        c.prototype.jmulAdd = function (t, e, i) {
            var n = [this, e], a = [t, i];
            return this.curve.endo ? this.curve._endoWnafMulAdd(n, a, !0) : this.curve._wnafMulAdd(1, n, a, 2, !0);
        };
        c.prototype.eq = function (t) {
            return this === t || this.inf === t.inf && (this.inf || 0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y));
        };
        c.prototype.neg = function (t) {
            if (this.inf) return this;
            var e = this.curve.point(this.x, this.y.redNeg());
            if (t && this.precomputed) {
                var i = this.precomputed, n = function (t) {
                    return t.neg();
                };
                e.precomputed = {
                    naf: i.naf && {
                        wnd: i.naf.wnd,
                        points: i.naf.points.map(n)
                    },
                    doubles: i.doubles && {
                        step: i.doubles.step,
                        points: i.doubles.points.map(n)
                    }
                };
            }
            return e;
        };
        c.prototype.toJ = function () {
            return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
        };
        function l(t, e, i, a) {
            r.BasePoint.call(this, t, "jacobian");
            if (null === e && null === i && null === a) {
                this.x = this.curve.one;
                this.y = this.curve.one;
                this.z = new n(0);
            } else {
                this.x = new n(e, 16);
                this.y = new n(i, 16);
                this.z = new n(a, 16);
            }
            this.x.red || (this.x = this.x.toRed(this.curve.red));
            this.y.red || (this.y = this.y.toRed(this.curve.red));
            this.z.red || (this.z = this.z.toRed(this.curve.red));
            this.zOne = this.z === this.curve.one;
        }
        a(l, r.BasePoint);
        s.prototype.jpoint = function (t, e, i) {
            return new l(this, t, e, i);
        };
        l.prototype.toP = function () {
            if (this.isInfinity()) return this.curve.point(null, null);
            var t = this.z.redInvm(), e = t.redSqr(), i = this.x.redMul(e), n = this.y.redMul(e).redMul(t);
            return this.curve.point(i, n);
        };
        l.prototype.neg = function () {
            return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
        };
        l.prototype.add = function (t) {
            if (this.isInfinity()) return t;
            if (t.isInfinity()) return this;
            var e = t.z.redSqr(), i = this.z.redSqr(), n = this.x.redMul(e), a = t.x.redMul(i), r = this.y.redMul(e.redMul(t.z)), o = t.y.redMul(i.redMul(this.z)), s = n.redSub(a), c = r.redSub(o);
            if (0 === s.cmpn(0)) return 0 !== c.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
            var l = s.redSqr(), h = l.redMul(s), u = n.redMul(l), p = c.redSqr().redIAdd(h).redISub(u).redISub(u), d = c.redMul(u.redISub(p)).redISub(r.redMul(h)), f = this.z.redMul(t.z).redMul(s);
            return this.curve.jpoint(p, d, f);
        };
        l.prototype.mixedAdd = function (t) {
            if (this.isInfinity()) return t.toJ();
            if (t.isInfinity()) return this;
            var e = this.z.redSqr(), i = this.x, n = t.x.redMul(e), a = this.y, r = t.y.redMul(e).redMul(this.z), o = i.redSub(n), s = a.redSub(r);
            if (0 === o.cmpn(0)) return 0 !== s.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
            var c = o.redSqr(), l = c.redMul(o), h = i.redMul(c), u = s.redSqr().redIAdd(l).redISub(h).redISub(h), p = s.redMul(h.redISub(u)).redISub(a.redMul(l)), d = this.z.redMul(o);
            return this.curve.jpoint(u, p, d);
        };
        l.prototype.dblp = function (t) {
            if (0 === t) return this;
            if (this.isInfinity()) return this;
            if (!t) return this.dbl();
            var e;
            if (this.curve.zeroA || this.curve.threeA) {
                var i = this;
                for (e = 0; e < t; e++) i = i.dbl();
                return i;
            }
            var n = this.curve.a, a = this.curve.tinv, r = this.x, o = this.y, s = this.z, c = s.redSqr().redSqr(), l = o.redAdd(o);
            for (e = 0; e < t; e++) {
                var h = r.redSqr(), u = l.redSqr(), p = u.redSqr(), d = h.redAdd(h).redIAdd(h).redIAdd(n.redMul(c)), f = r.redMul(u), m = d.redSqr().redISub(f.redAdd(f)), g = f.redISub(m), _ = d.redMul(g);
                _ = _.redIAdd(_).redISub(p);
                var y = l.redMul(s);
                e + 1 < t && (c = c.redMul(p));
                r = m;
                s = y;
                l = _;
            }
            return this.curve.jpoint(r, l.redMul(a), s);
        };
        l.prototype.dbl = function () {
            return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
        };
        l.prototype._zeroDbl = function () {
            var t, e, i;
            if (this.zOne) {
                var n = this.x.redSqr(), a = this.y.redSqr(), r = a.redSqr(), o = this.x.redAdd(a).redSqr().redISub(n).redISub(r);
                o = o.redIAdd(o);
                var s = n.redAdd(n).redIAdd(n), c = s.redSqr().redISub(o).redISub(o), l = r.redIAdd(r);
                l = (l = l.redIAdd(l)).redIAdd(l);
                t = c;
                e = s.redMul(o.redISub(c)).redISub(l);
                i = this.y.redAdd(this.y);
            } else {
                var h = this.x.redSqr(), u = this.y.redSqr(), p = u.redSqr(), d = this.x.redAdd(u).redSqr().redISub(h).redISub(p);
                d = d.redIAdd(d);
                var f = h.redAdd(h).redIAdd(h), m = f.redSqr(), g = p.redIAdd(p);
                g = (g = g.redIAdd(g)).redIAdd(g);
                t = m.redISub(d).redISub(d);
                e = f.redMul(d.redISub(t)).redISub(g);
                i = (i = this.y.redMul(this.z)).redIAdd(i);
            }
            return this.curve.jpoint(t, e, i);
        };
        l.prototype._threeDbl = function () {
            var t, e, i;
            if (this.zOne) {
                var n = this.x.redSqr(), a = this.y.redSqr(), r = a.redSqr(), o = this.x.redAdd(a).redSqr().redISub(n).redISub(r);
                o = o.redIAdd(o);
                var s = n.redAdd(n).redIAdd(n).redIAdd(this.curve.a), c = s.redSqr().redISub(o).redISub(o);
                t = c;
                var l = r.redIAdd(r);
                l = (l = l.redIAdd(l)).redIAdd(l);
                e = s.redMul(o.redISub(c)).redISub(l);
                i = this.y.redAdd(this.y);
            } else {
                var h = this.z.redSqr(), u = this.y.redSqr(), p = this.x.redMul(u), d = this.x.redSub(h).redMul(this.x.redAdd(h));
                d = d.redAdd(d).redIAdd(d);
                var f = p.redIAdd(p), m = (f = f.redIAdd(f)).redAdd(f);
                t = d.redSqr().redISub(m);
                i = this.y.redAdd(this.z).redSqr().redISub(u).redISub(h);
                var g = u.redSqr();
                g = (g = (g = g.redIAdd(g)).redIAdd(g)).redIAdd(g);
                e = d.redMul(f.redISub(t)).redISub(g);
            }
            return this.curve.jpoint(t, e, i);
        };
        l.prototype._dbl = function () {
            var t = this.curve.a, e = this.x, i = this.y, n = this.z, a = n.redSqr().redSqr(), r = e.redSqr(), o = i.redSqr(), s = r.redAdd(r).redIAdd(r).redIAdd(t.redMul(a)), c = e.redAdd(e), l = (c = c.redIAdd(c)).redMul(o), h = s.redSqr().redISub(l.redAdd(l)), u = l.redISub(h), p = o.redSqr();
            p = (p = (p = p.redIAdd(p)).redIAdd(p)).redIAdd(p);
            var d = s.redMul(u).redISub(p), f = i.redAdd(i).redMul(n);
            return this.curve.jpoint(h, d, f);
        };
        l.prototype.trpl = function () {
            if (!this.curve.zeroA) return this.dbl().add(this);
            var t = this.x.redSqr(), e = this.y.redSqr(), i = this.z.redSqr(), n = e.redSqr(), a = t.redAdd(t).redIAdd(t), r = a.redSqr(), o = this.x.redAdd(e).redSqr().redISub(t).redISub(n), s = (o = (o = (o = o.redIAdd(o)).redAdd(o).redIAdd(o)).redISub(r)).redSqr(), c = n.redIAdd(n);
            c = (c = (c = c.redIAdd(c)).redIAdd(c)).redIAdd(c);
            var l = a.redIAdd(o).redSqr().redISub(r).redISub(s).redISub(c), h = e.redMul(l);
            h = (h = h.redIAdd(h)).redIAdd(h);
            var u = this.x.redMul(s).redISub(h);
            u = (u = u.redIAdd(u)).redIAdd(u);
            var p = this.y.redMul(l.redMul(c.redISub(l)).redISub(o.redMul(s)));
            p = (p = (p = p.redIAdd(p)).redIAdd(p)).redIAdd(p);
            var d = this.z.redAdd(o).redSqr().redISub(i).redISub(s);
            return this.curve.jpoint(u, p, d);
        };
        l.prototype.mul = function (t, e) {
            t = new n(t, e);
            return this.curve._wnafMul(this, t);
        };
        l.prototype.eq = function (t) {
            if ("affine" === t.type) return this.eq(t.toJ());
            if (this === t) return !0;
            var e = this.z.redSqr(), i = t.z.redSqr();
            if (0 !== this.x.redMul(i).redISub(t.x.redMul(e)).cmpn(0)) return !1;
            var n = e.redMul(this.z), a = i.redMul(t.z);
            return 0 === this.y.redMul(a).redISub(t.y.redMul(n)).cmpn(0);
        };
        l.prototype.eqXToP = function (t) {
            var e = this.z.redSqr(), i = t.toRed(this.curve.red).redMul(e);
            if (0 === this.x.cmp(i)) return !0;
            for (var n = t.clone(), a = this.curve.redN.redMul(e); ;) {
                n.iadd(this.curve.n);
                if (n.cmp(this.curve.p) >= 0) return !1;
                i.redIAdd(a);
                if (0 === this.x.cmp(i)) return !0;
            }
        };
        l.prototype.inspect = function () {
            return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
        };
        l.prototype.isInfinity = function () {
            return 0 === this.z.cmpn(0);
        };
    }, {
        "../utils": 101,
        "./base": 88,
        "bn.js": 102,
        inherits: 138
    }],
    93: [function (t, e, i) {
        "use strict";
        var n, a = i, r = t("hash.js"), o = t("./curve"), s = t("./utils").assert;
        function c(t) {
            "short" === t.type ? this.curve = new o.short(t) : "edwards" === t.type ? this.curve = new o.edwards(t) : this.curve = new o.mont(t);
            this.g = this.curve.g;
            this.n = this.curve.n;
            this.hash = t.hash;
            s(this.g.validate(), "Invalid curve");
            s(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
        }
        a.PresetCurve = c;
        function l(t, e) {
            Object.defineProperty(a, t, {
                configurable: !0,
                enumerable: !0,
                get: function () {
                    var i = new c(e);
                    Object.defineProperty(a, t, {
                        configurable: !0,
                        enumerable: !0,
                        value: i
                    });
                    return i;
                }
            });
        }
        l("p192", {
            type: "short",
            prime: "p192",
            p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
            a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
            b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
            n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
            hash: r.sha256,
            gRed: !1,
            g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]
        });
        l("p224", {
            type: "short",
            prime: "p224",
            p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
            a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
            b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
            n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
            hash: r.sha256,
            gRed: !1,
            g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]
        });
        l("p256", {
            type: "short",
            prime: null,
            p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
            a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
            b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
            n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
            hash: r.sha256,
            gRed: !1,
            g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]
        });
        l("p384", {
            type: "short",
            prime: null,
            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
            a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
            b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
            n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
            hash: r.sha384,
            gRed: !1,
            g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]
        });
        l("p521", {
            type: "short",
            prime: null,
            p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
            a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
            b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
            n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
            hash: r.sha512,
            gRed: !1,
            g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]
        });
        l("curve25519", {
            type: "mont",
            prime: "p25519",
            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
            a: "76d06",
            b: "1",
            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
            hash: r.sha256,
            gRed: !1,
            g: ["9"]
        });
        l("ed25519", {
            type: "edwards",
            prime: "p25519",
            p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
            a: "-1",
            c: "1",
            d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
            n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
            hash: r.sha256,
            gRed: !1,
            g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"]
        });
        try {
            n = t("./precomputed/secp256k1");
        } catch (t) {
            n = void 0;
        }
        l("secp256k1", {
            type: "short",
            prime: "k256",
            p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
            a: "0",
            b: "7",
            n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
            h: "1",
            hash: r.sha256,
            beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
            lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
            basis: [{
                a: "3086d221a7d46bcde86c90e49284eb15",
                b: "-e4437ed6010e88286f547fa90abfe4c3"
            }, {
                a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
                b: "3086d221a7d46bcde86c90e49284eb15"
            }],
            gRed: !1,
            g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", n]
        });
    }, {
        "./curve": 90,
        "./precomputed/secp256k1": 100,
        "./utils": 101,
        "hash.js": 124
    }],
    94: [function (t, e) {
        "use strict";
        var i = t("bn.js"), n = t("hmac-drbg"), a = t("../utils"), r = t("../curves"), o = t("brorand"), s = a.assert, c = t("./key"), l = t("./signature");
        function h(t) {
            if (!(this instanceof h)) return new h(t);
            if ("string" == typeof t) {
                s(Object.prototype.hasOwnProperty.call(r, t), "Unknown curve " + t);
                t = r[t];
            }
            t instanceof r.PresetCurve && (t = {
                curve: t
            });
            this.curve = t.curve.curve;
            this.n = this.curve.n;
            this.nh = this.n.ushrn(1);
            this.g = this.curve.g;
            this.g = t.curve.g;
            this.g.precompute(t.curve.n.bitLength() + 1);
            this.hash = t.hash || t.curve.hash;
        }
        e.exports = h;
        h.prototype.keyPair = function (t) {
            return new c(this, t);
        };
        h.prototype.keyFromPrivate = function (t, e) {
            return c.fromPrivate(this, t, e);
        };
        h.prototype.keyFromPublic = function (t, e) {
            return c.fromPublic(this, t, e);
        };
        h.prototype.genKeyPair = function (t) {
            t || (t = {});
            for (var e = new n({
                hash: this.hash,
                pers: t.pers,
                persEnc: t.persEnc || "utf8",
                entropy: t.entropy || o(this.hash.hmacStrength),
                entropyEnc: t.entropy && t.entropyEnc || "utf8",
                nonce: this.n.toArray()
            }), a = this.n.byteLength(), r = this.n.sub(new i(2)); ;) {
                var s = new i(e.generate(a));
                if (!(s.cmp(r) > 0)) {
                    s.iaddn(1);
                    return this.keyFromPrivate(s);
                }
            }
        };
        h.prototype._truncateToN = function (t, e) {
            var i = 8 * t.byteLength() - this.n.bitLength();
            i > 0 && (t = t.ushrn(i));
            return !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t;
        };
        h.prototype.sign = function (t, e, a, r) {
            if ("object" == typeof a) {
                r = a;
                a = null;
            }
            r || (r = {});
            e = this.keyFromPrivate(e, a);
            t = this._truncateToN(new i(t, 16));
            for (var o = this.n.byteLength(), s = e.getPrivate().toArray("be", o), c = t.toArray("be", o), h = new n({
                hash: this.hash,
                entropy: s,
                nonce: c,
                pers: r.pers,
                persEnc: r.persEnc || "utf8"
            }), u = this.n.sub(new i(1)), p = 0; ; p++) {
                var d = r.k ? r.k(p) : new i(h.generate(this.n.byteLength()));
                if (!((d = this._truncateToN(d, !0)).cmpn(1) <= 0 || d.cmp(u) >= 0)) {
                    var f = this.g.mul(d);
                    if (!f.isInfinity()) {
                        var m = f.getX(), g = m.umod(this.n);
                        if (0 !== g.cmpn(0)) {
                            var _ = d.invm(this.n).mul(g.mul(e.getPrivate()).iadd(t));
                            if (0 !== (_ = _.umod(this.n)).cmpn(0)) {
                                var y = (f.getY().isOdd() ? 1 : 0) | (0 !== m.cmp(g) ? 2 : 0);
                                if (r.canonical && _.cmp(this.nh) > 0) {
                                    _ = this.n.sub(_);
                                    y ^= 1;
                                }
                                return new l({
                                    r: g,
                                    s: _,
                                    recoveryParam: y
                                });
                            }
                        }
                    }
                }
            }
        };
        h.prototype.verify = function (t, e, n, a) {
            t = this._truncateToN(new i(t, 16));
            n = this.keyFromPublic(n, a);
            var r = (e = new l(e, "hex")).r, o = e.s;
            if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return !1;
            if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
            var s, c = o.invm(this.n), h = c.mul(t).umod(this.n), u = c.mul(r).umod(this.n);
            return this.curve._maxwellTrick ? !(s = this.g.jmulAdd(h, n.getPublic(), u)).isInfinity() && s.eqXToP(r) : !(s = this.g.mulAdd(h, n.getPublic(), u)).isInfinity() && 0 === s.getX().umod(this.n).cmp(r);
        };
        h.prototype.recoverPubKey = function (t, e, n, a) {
            s((3 & n) === n, "The recovery param is more than two bits");
            e = new l(e, a);
            var r = this.n, o = new i(t), c = e.r, h = e.s, u = 1 & n, p = n >> 1;
            if (c.cmp(this.curve.p.umod(this.curve.n)) >= 0 && p) throw new Error("Unable to find sencond key candinate");
            c = p ? this.curve.pointFromX(c.add(this.curve.n), u) : this.curve.pointFromX(c, u);
            var d = e.r.invm(r), f = r.sub(o).mul(d).umod(r), m = h.mul(d).umod(r);
            return this.g.mulAdd(f, c, m);
        };
        h.prototype.getKeyRecoveryParam = function (t, e, i, n) {
            if (null !== (e = new l(e, n)).recoveryParam) return e.recoveryParam;
            for (var a = 0; a < 4; a++) {
                var r;
                try {
                    r = this.recoverPubKey(t, e, a);
                } catch (t) {
                    continue;
                }
                if (r.eq(i)) return a;
            }
            throw new Error("Unable to find valid recovery factor");
        };
    }, {
        "../curves": 93,
        "../utils": 101,
        "./key": 95,
        "./signature": 96,
        "bn.js": 102,
        brorand: 18,
        "hmac-drbg": 136
    }],
    95: [function (t, e) {
        "use strict";
        var i = t("bn.js"), n = t("../utils").assert;
        function a(t, e) {
            this.ec = t;
            this.priv = null;
            this.pub = null;
            e.priv && this._importPrivate(e.priv, e.privEnc);
            e.pub && this._importPublic(e.pub, e.pubEnc);
        }
        e.exports = a;
        a.fromPublic = function (t, e, i) {
            return e instanceof a ? e : new a(t, {
                pub: e,
                pubEnc: i
            });
        };
        a.fromPrivate = function (t, e, i) {
            return e instanceof a ? e : new a(t, {
                priv: e,
                privEnc: i
            });
        };
        a.prototype.validate = function () {
            var t = this.getPublic();
            return t.isInfinity() ? {
                result: !1,
                reason: "Invalid public key"
            } : t.validate() ? t.mul(this.ec.curve.n).isInfinity() ? {
                result: !0,
                reason: null
            } : {
                result: !1,
                reason: "Public key * N != O"
            } : {
                result: !1,
                reason: "Public key is not a point"
            };
        };
        a.prototype.getPublic = function (t, e) {
            if ("string" == typeof t) {
                e = t;
                t = null;
            }
            this.pub || (this.pub = this.ec.g.mul(this.priv));
            return e ? this.pub.encode(e, t) : this.pub;
        };
        a.prototype.getPrivate = function (t) {
            return "hex" === t ? this.priv.toString(16, 2) : this.priv;
        };
        a.prototype._importPrivate = function (t, e) {
            this.priv = new i(t, e || 16);
            this.priv = this.priv.umod(this.ec.curve.n);
        };
        a.prototype._importPublic = function (t, e) {
            if (t.x || t.y) {
                "mont" === this.ec.curve.type ? n(t.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || n(t.x && t.y, "Need both x and y coordinate");
                this.pub = this.ec.curve.point(t.x, t.y);
            } else this.pub = this.ec.curve.decodePoint(t, e);
        };
        a.prototype.derive = function (t) {
            t.validate() || n(t.validate(), "public point not validated");
            return t.mul(this.priv).getX();
        };
        a.prototype.sign = function (t, e, i) {
            return this.ec.sign(t, this, e, i);
        };
        a.prototype.verify = function (t, e) {
            return this.ec.verify(t, e, this);
        };
        a.prototype.inspect = function () {
            return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
        };
    }, {
        "../utils": 101,
        "bn.js": 102
    }],
    96: [function (t, e) {
        "use strict";
        var i = t("bn.js"), n = t("../utils"), a = n.assert;
        function r(t, e) {
            if (t instanceof r) return t;
            if (!this._importDER(t, e)) {
                a(t.r && t.s, "Signature without r or s");
                this.r = new i(t.r, 16);
                this.s = new i(t.s, 16);
                void 0 === t.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t.recoveryParam;
            }
        }
        e.exports = r;
        function o() {
            this.place = 0;
        }
        function s(t, e) {
            var i = t[e.place++];
            if (!(128 & i)) return i;
            var n = 15 & i;
            if (0 === n || n > 4) return !1;
            for (var a = 0, r = 0, o = e.place; r < n; r++, o++) {
                a <<= 8;
                a |= t[o];
                a >>>= 0;
            }
            if (a <= 127) return !1;
            e.place = o;
            return a;
        }
        function c(t) {
            for (var e = 0, i = t.length - 1; !t[e] && !(128 & t[e + 1]) && e < i;) e++;
            return 0 === e ? t : t.slice(e);
        }
        r.prototype._importDER = function (t, e) {
            t = n.toArray(t, e);
            var a = new o();
            if (48 !== t[a.place++]) return !1;
            var r = s(t, a);
            if (!1 === r) return !1;
            if (r + a.place !== t.length) return !1;
            if (2 !== t[a.place++]) return !1;
            var c = s(t, a);
            if (!1 === c) return !1;
            var l = t.slice(a.place, c + a.place);
            a.place += c;
            if (2 !== t[a.place++]) return !1;
            var h = s(t, a);
            if (!1 === h) return !1;
            if (t.length !== h + a.place) return !1;
            var u = t.slice(a.place, h + a.place);
            if (0 === l[0]) {
                if (!(128 & l[1])) return !1;
                l = l.slice(1);
            }
            if (0 === u[0]) {
                if (!(128 & u[1])) return !1;
                u = u.slice(1);
            }
            this.r = new i(l);
            this.s = new i(u);
            this.recoveryParam = null;
            return !0;
        };
        function l(t, e) {
            if (e < 128) t.push(e); else {
                var i = 1 + (Math.log(e) / Math.LN2 >>> 3);
                t.push(128 | i);
                for (; --i;) t.push(e >>> (i << 3) & 255);
                t.push(e);
            }
        }
        r.prototype.toDER = function (t) {
            var e = this.r.toArray(), i = this.s.toArray();
            128 & e[0] && (e = [0].concat(e));
            128 & i[0] && (i = [0].concat(i));
            e = c(e);
            i = c(i);
            for (; !(i[0] || 128 & i[1]);) i = i.slice(1);
            var a = [2];
            l(a, e.length);
            (a = a.concat(e)).push(2);
            l(a, i.length);
            var r = a.concat(i), o = [48];
            l(o, r.length);
            o = o.concat(r);
            return n.encode(o, t);
        };
    }, {
        "../utils": 101,
        "bn.js": 102
    }],
    97: [function (t, e) {
        "use strict";
        var i = t("hash.js"), n = t("../curves"), a = t("../utils"), r = a.assert, o = a.parseBytes, s = t("./key"), c = t("./signature");
        function l(t) {
            r("ed25519" === t, "only tested with ed25519 so far");
            if (!(this instanceof l)) return new l(t);
            t = n[t].curve;
            this.curve = t;
            this.g = t.g;
            this.g.precompute(t.n.bitLength() + 1);
            this.pointClass = t.point().constructor;
            this.encodingLength = Math.ceil(t.n.bitLength() / 8);
            this.hash = i.sha512;
        }
        e.exports = l;
        l.prototype.sign = function (t, e) {
            t = o(t);
            var i = this.keyFromSecret(e), n = this.hashInt(i.messagePrefix(), t), a = this.g.mul(n), r = this.encodePoint(a), s = this.hashInt(r, i.pubBytes(), t).mul(i.priv()), c = n.add(s).umod(this.curve.n);
            return this.makeSignature({
                R: a,
                S: c,
                Rencoded: r
            });
        };
        l.prototype.verify = function (t, e, i) {
            t = o(t);
            e = this.makeSignature(e);
            var n = this.keyFromPublic(i), a = this.hashInt(e.Rencoded(), n.pubBytes(), t), r = this.g.mul(e.S());
            return e.R().add(n.pub().mul(a)).eq(r);
        };
        l.prototype.hashInt = function () {
            for (var t = this.hash(), e = 0; e < arguments.length; e++) t.update(arguments[e]);
            return a.intFromLE(t.digest()).umod(this.curve.n);
        };
        l.prototype.keyFromPublic = function (t) {
            return s.fromPublic(this, t);
        };
        l.prototype.keyFromSecret = function (t) {
            return s.fromSecret(this, t);
        };
        l.prototype.makeSignature = function (t) {
            return t instanceof c ? t : new c(this, t);
        };
        l.prototype.encodePoint = function (t) {
            var e = t.getY().toArray("le", this.encodingLength);
            e[this.encodingLength - 1] |= t.getX().isOdd() ? 128 : 0;
            return e;
        };
        l.prototype.decodePoint = function (t) {
            var e = (t = a.parseBytes(t)).length - 1, i = t.slice(0, e).concat(-129 & t[e]), n = 0 != (128 & t[e]), r = a.intFromLE(i);
            return this.curve.pointFromY(r, n);
        };
        l.prototype.encodeInt = function (t) {
            return t.toArray("le", this.encodingLength);
        };
        l.prototype.decodeInt = function (t) {
            return a.intFromLE(t);
        };
        l.prototype.isPoint = function (t) {
            return t instanceof this.pointClass;
        };
    }, {
        "../curves": 93,
        "../utils": 101,
        "./key": 98,
        "./signature": 99,
        "hash.js": 124
    }],
    98: [function (t, e) {
        "use strict";
        var i = t("../utils"), n = i.assert, a = i.parseBytes, r = i.cachedProperty;
        function o(t, e) {
            this.eddsa = t;
            this._secret = a(e.secret);
            t.isPoint(e.pub) ? this._pub = e.pub : this._pubBytes = a(e.pub);
        }
        o.fromPublic = function (t, e) {
            return e instanceof o ? e : new o(t, {
                pub: e
            });
        };
        o.fromSecret = function (t, e) {
            return e instanceof o ? e : new o(t, {
                secret: e
            });
        };
        o.prototype.secret = function () {
            return this._secret;
        };
        r(o, "pubBytes", function () {
            return this.eddsa.encodePoint(this.pub());
        });
        r(o, "pub", function () {
            return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
        });
        r(o, "privBytes", function () {
            var t = this.eddsa, e = this.hash(), i = t.encodingLength - 1, n = e.slice(0, t.encodingLength);
            n[0] &= 248;
            n[i] &= 127;
            n[i] |= 64;
            return n;
        });
        r(o, "priv", function () {
            return this.eddsa.decodeInt(this.privBytes());
        });
        r(o, "hash", function () {
            return this.eddsa.hash().update(this.secret()).digest();
        });
        r(o, "messagePrefix", function () {
            return this.hash().slice(this.eddsa.encodingLength);
        });
        o.prototype.sign = function (t) {
            n(this._secret, "KeyPair can only verify");
            return this.eddsa.sign(t, this);
        };
        o.prototype.verify = function (t, e) {
            return this.eddsa.verify(t, e, this);
        };
        o.prototype.getSecret = function (t) {
            n(this._secret, "KeyPair is public only");
            return i.encode(this.secret(), t);
        };
        o.prototype.getPublic = function (t) {
            return i.encode(this.pubBytes(), t);
        };
        e.exports = o;
    }, {
        "../utils": 101
    }],
    99: [function (t, e) {
        "use strict";
        var i = t("bn.js"), n = t("../utils"), a = n.assert, r = n.cachedProperty, o = n.parseBytes;
        function s(t, e) {
            this.eddsa = t;
            "object" != typeof e && (e = o(e));
            Array.isArray(e) && (e = {
                R: e.slice(0, t.encodingLength),
                S: e.slice(t.encodingLength)
            });
            a(e.R && e.S, "Signature without R or S");
            t.isPoint(e.R) && (this._R = e.R);
            e.S instanceof i && (this._S = e.S);
            this._Rencoded = Array.isArray(e.R) ? e.R : e.Rencoded;
            this._Sencoded = Array.isArray(e.S) ? e.S : e.Sencoded;
        }
        r(s, "S", function () {
            return this.eddsa.decodeInt(this.Sencoded());
        });
        r(s, "R", function () {
            return this.eddsa.decodePoint(this.Rencoded());
        });
        r(s, "Rencoded", function () {
            return this.eddsa.encodePoint(this.R());
        });
        r(s, "Sencoded", function () {
            return this.eddsa.encodeInt(this.S());
        });
        s.prototype.toBytes = function () {
            return this.Rencoded().concat(this.Sencoded());
        };
        s.prototype.toHex = function () {
            return n.encode(this.toBytes(), "hex").toUpperCase();
        };
        e.exports = s;
    }, {
        "../utils": 101,
        "bn.js": 102
    }],
    100: [function (t, e) {
        e.exports = {
            doubles: {
                step: 4,
                points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]
            },
            naf: {
                wnd: 7,
                points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]
            }
        };
    }, {}],
    101: [function (t, e, i) {
        "use strict";
        var n = i, a = t("bn.js"), r = t("minimalistic-assert"), o = t("minimalistic-crypto-utils");
        n.assert = r;
        n.toArray = o.toArray;
        n.zero2 = o.zero2;
        n.toHex = o.toHex;
        n.encode = o.encode;
        n.getNAF = function (t, e, i) {
            var n = new Array(Math.max(t.bitLength(), i) + 1);
            n.fill(0);
            for (var a = 1 << e + 1, r = t.clone(), o = 0; o < n.length; o++) {
                var s, c = r.andln(a - 1);
                if (r.isOdd()) {
                    s = c > (a >> 1) - 1 ? (a >> 1) - c : c;
                    r.isubn(s);
                } else s = 0;
                n[o] = s;
                r.iushrn(1);
            }
            return n;
        };
        n.getJSF = function (t, e) {
            var i = [[], []];
            t = t.clone();
            e = e.clone();
            for (var n, a = 0, r = 0; t.cmpn(-a) > 0 || e.cmpn(-r) > 0;) {
                var o, s, c = t.andln(3) + a & 3, l = e.andln(3) + r & 3;
                3 === c && (c = -1);
                3 === l && (l = -1);
                o = 0 == (1 & c) ? 0 : 3 != (n = t.andln(7) + a & 7) && 5 !== n || 2 !== l ? c : -c;
                i[0].push(o);
                s = 0 == (1 & l) ? 0 : 3 != (n = e.andln(7) + r & 7) && 5 !== n || 2 !== c ? l : -l;
                i[1].push(s);
                2 * a === o + 1 && (a = 1 - a);
                2 * r === s + 1 && (r = 1 - r);
                t.iushrn(1);
                e.iushrn(1);
            }
            return i;
        };
        n.cachedProperty = function (t, e, i) {
            var n = "_" + e;
            t.prototype[e] = function () {
                return void 0 !== this[n] ? this[n] : this[n] = i.call(this);
            };
        };
        n.parseBytes = function (t) {
            return "string" == typeof t ? n.toArray(t, "hex") : t;
        };
        n.intFromLE = function (t) {
            return new a(t, "hex", "le");
        };
    }, {
        "bn.js": 102,
        "minimalistic-assert": 143,
        "minimalistic-crypto-utils": 144
    }],
    102: [function (t, e, i) {
        arguments[4][15][0].apply(i, arguments);
    }, {
        buffer: 19,
        dup: 15
    }],
    103: [function (t, e) {
        e.exports = {
            _from: "elliptic@^6.5.3",
            _id: "elliptic@6.5.4",
            _inBundle: !1,
            _integrity: "sha512-iLhC6ULemrljPZb+QutR5TQGB+pdW6KGD5RSegS+8sorOZT+rdQFbsQFJgvN3eRqNALqJer4oQ16YvJHlU8hzQ==",
            _location: "/elliptic",
            _phantomChildren: {},
            _requested: {
                type: "range",
                registry: !0,
                raw: "elliptic@^6.5.3",
                name: "elliptic",
                escapedName: "elliptic",
                rawSpec: "^6.5.3",
                saveSpec: null,
                fetchSpec: "^6.5.3"
            },
            _requiredBy: ["/browserify-sign", "/create-ecdh"],
            _resolved: "https://registry.npmjs.org/elliptic/-/elliptic-6.5.4.tgz",
            _shasum: "da37cebd31e79a1367e941b592ed1fbebd58abbb",
            _spec: "elliptic@^6.5.3",
            _where: "/Users/nantas/jenkins/workspace/Creator_2D/fireball/mac/fireball/dist/CocosCreator.app/Contents/Resources/app/node_modules/browserify-sign",
            author: {
                name: "Fedor Indutny",
                email: "fedor@indutny.com"
            },
            bugs: {
                url: "https://github.com/indutny/elliptic/issues"
            },
            bundleDependencies: !1,
            dependencies: {
                "bn.js": "^4.11.9",
                brorand: "^1.1.0",
                "hash.js": "^1.0.0",
                "hmac-drbg": "^1.0.1",
                inherits: "^2.0.4",
                "minimalistic-assert": "^1.0.1",
                "minimalistic-crypto-utils": "^1.0.1"
            },
            deprecated: !1,
            description: "EC cryptography",
            devDependencies: {
                brfs: "^2.0.2",
                coveralls: "^3.1.0",
                eslint: "^7.6.0",
                grunt: "^1.2.1",
                "grunt-browserify": "^5.3.0",
                "grunt-cli": "^1.3.2",
                "grunt-contrib-connect": "^3.0.0",
                "grunt-contrib-copy": "^1.0.0",
                "grunt-contrib-uglify": "^5.0.0",
                "grunt-mocha-istanbul": "^5.0.2",
                "grunt-saucelabs": "^9.0.1",
                istanbul: "^0.4.5",
                mocha: "^8.0.1"
            },
            files: ["lib"],
            homepage: "https://github.com/indutny/elliptic",
            keywords: ["EC", "Elliptic", "curve", "Cryptography"],
            license: "MIT",
            main: "lib/elliptic.js",
            name: "elliptic",
            repository: {
                type: "git",
                url: "git+ssh://git@github.com/indutny/elliptic.git"
            },
            scripts: {
                lint: "eslint lib test",
                "lint:fix": "npm run lint -- --fix",
                test: "npm run lint && npm run unit",
                unit: "istanbul test _mocha --reporter=spec test/index.js",
                version: "grunt dist && git add dist/"
            },
            version: "6.5.4"
        };
    }, {}],
    104: [function (t, e) {
        function i() {
            this._events = this._events || {};
            this._maxListeners = this._maxListeners || void 0;
        }
        e.exports = i;
        i.EventEmitter = i;
        i.prototype._events = void 0;
        i.prototype._maxListeners = void 0;
        i.defaultMaxListeners = 10;
        i.prototype.setMaxListeners = function (t) {
            if (!(e = t, "number" == typeof e) || t < 0 || isNaN(t)) throw TypeError("n must be a positive number");
            var e;
            this._maxListeners = t;
            return this;
        };
        i.prototype.emit = function (t) {
            var e, i, o, s, c, l;
            this._events || (this._events = {});
            if ("error" === t && (!this._events.error || a(this._events.error) && !this._events.error.length)) {
                if ((e = arguments[1]) instanceof Error) throw e;
                var h = new Error('Uncaught, unspecified "error" event. (' + e + ")");
                h.context = e;
                throw h;
            }
            if (r(i = this._events[t])) return !1;
            if (n(i)) switch (arguments.length) {
                case 1:
                    i.call(this);
                    break;

                case 2:
                    i.call(this, arguments[1]);
                    break;

                case 3:
                    i.call(this, arguments[1], arguments[2]);
                    break;

                default:
                    s = Array.prototype.slice.call(arguments, 1);
                    i.apply(this, s);
            } else if (a(i)) {
                s = Array.prototype.slice.call(arguments, 1);
                o = (l = i.slice()).length;
                for (c = 0; c < o; c++) l[c].apply(this, s);
            }
            return !0;
        };
        i.prototype.addListener = function (t, e) {
            var o;
            if (!n(e)) throw TypeError("listener must be a function");
            this._events || (this._events = {});
            this._events.newListener && this.emit("newListener", t, n(e.listener) ? e.listener : e);
            this._events[t] ? a(this._events[t]) ? this._events[t].push(e) : this._events[t] = [this._events[t], e] : this._events[t] = e;
            if (a(this._events[t]) && !this._events[t].warned && (o = r(this._maxListeners) ? i.defaultMaxListeners : this._maxListeners) && o > 0 && this._events[t].length > o) {
                this._events[t].warned = !0;
                console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[t].length);
                "function" == typeof console.trace && console.trace();
            }
            return this;
        };
        i.prototype.on = i.prototype.addListener;
        i.prototype.once = function (t, e) {
            if (!n(e)) throw TypeError("listener must be a function");
            var i = !1;
            function a() {
                this.removeListener(t, a);
                if (!i) {
                    i = !0;
                    e.apply(this, arguments);
                }
            }
            a.listener = e;
            this.on(t, a);
            return this;
        };
        i.prototype.removeListener = function (t, e) {
            var i, r, o, s;
            if (!n(e)) throw TypeError("listener must be a function");
            if (!this._events || !this._events[t]) return this;
            o = (i = this._events[t]).length;
            r = -1;
            if (i === e || n(i.listener) && i.listener === e) {
                delete this._events[t];
                this._events.removeListener && this.emit("removeListener", t, e);
            } else if (a(i)) {
                for (s = o; s-- > 0;) if (i[s] === e || i[s].listener && i[s].listener === e) {
                    r = s;
                    break;
                }
                if (r < 0) return this;
                if (1 === i.length) {
                    i.length = 0;
                    delete this._events[t];
                } else i.splice(r, 1);
                this._events.removeListener && this.emit("removeListener", t, e);
            }
            return this;
        };
        i.prototype.removeAllListeners = function (t) {
            var e, i;
            if (!this._events) return this;
            if (!this._events.removeListener) {
                0 === arguments.length ? this._events = {} : this._events[t] && delete this._events[t];
                return this;
            }
            if (0 === arguments.length) {
                for (e in this._events) "removeListener" !== e && this.removeAllListeners(e);
                this.removeAllListeners("removeListener");
                this._events = {};
                return this;
            }
            if (n(i = this._events[t])) this.removeListener(t, i); else if (i) for (; i.length;) this.removeListener(t, i[i.length - 1]);
            delete this._events[t];
            return this;
        };
        i.prototype.listeners = function (t) {
            return this._events && this._events[t] ? n(this._events[t]) ? [this._events[t]] : this._events[t].slice() : [];
        };
        i.prototype.listenerCount = function (t) {
            if (this._events) {
                var e = this._events[t];
                if (n(e)) return 1;
                if (e) return e.length;
            }
            return 0;
        };
        i.listenerCount = function (t, e) {
            return t.listenerCount(e);
        };
        function n(t) {
            return "function" == typeof t;
        }
        function a(t) {
            return "object" == typeof t && null !== t;
        }
        function r(t) {
            return void 0 === t;
        }
    }, {}],
    105: [function (t, e) {
        var i = t("safe-buffer").Buffer, n = t("md5.js");
        e.exports = function (t, e, a, r) {
            i.isBuffer(t) || (t = i.from(t, "binary"));
            if (e) {
                i.isBuffer(e) || (e = i.from(e, "binary"));
                if (8 !== e.length) throw new RangeError("salt should be Buffer with 8 byte length");
            }
            for (var o = a / 8, s = i.alloc(o), c = i.alloc(r || 0), l = i.alloc(0); o > 0 || r > 0;) {
                var h = new n();
                h.update(l);
                h.update(t);
                e && h.update(e);
                l = h.digest();
                var u = 0;
                if (o > 0) {
                    var p = s.length - o;
                    u = Math.min(o, l.length);
                    l.copy(s, p, 0, u);
                    o -= u;
                }
                if (u < l.length && r > 0) {
                    var d = c.length - r, f = Math.min(r, l.length - u);
                    l.copy(c, d, u, u + f);
                    r -= f;
                }
            }
            l.fill(0);
            return {
                key: s,
                iv: c
            };
        };
    }, {
        "md5.js": 140,
        "safe-buffer": 176
    }],
    106: [function (t, e) {
        "use strict";
        var i = t("safe-buffer").Buffer, n = t("readable-stream").Transform;
        function a(t, e) {
            if (!i.isBuffer(t) && "string" != typeof t) throw new TypeError(e + " must be a string or a buffer");
        }
        function r(t) {
            n.call(this);
            this._block = i.allocUnsafe(t);
            this._blockSize = t;
            this._blockOffset = 0;
            this._length = [0, 0, 0, 0];
            this._finalized = !1;
        }
        t("inherits")(r, n);
        r.prototype._transform = function (t, e, i) {
            var n = null;
            try {
                this.update(t, e);
            } catch (t) {
                n = t;
            }
            i(n);
        };
        r.prototype._flush = function (t) {
            var e = null;
            try {
                this.push(this.digest());
            } catch (t) {
                e = t;
            }
            t(e);
        };
        r.prototype.update = function (t, e) {
            a(t, "Data");
            if (this._finalized) throw new Error("Digest already called");
            i.isBuffer(t) || (t = i.from(t, e));
            for (var n = this._block, r = 0; this._blockOffset + t.length - r >= this._blockSize;) {
                for (var o = this._blockOffset; o < this._blockSize;) n[o++] = t[r++];
                this._update();
                this._blockOffset = 0;
            }
            for (; r < t.length;) n[this._blockOffset++] = t[r++];
            for (var s = 0, c = 8 * t.length; c > 0; ++s) {
                this._length[s] += c;
                (c = this._length[s] / 4294967296 | 0) > 0 && (this._length[s] -= 4294967296 * c);
            }
            return this;
        };
        r.prototype._update = function () {
            throw new Error("_update is not implemented");
        };
        r.prototype.digest = function (t) {
            if (this._finalized) throw new Error("Digest already called");
            this._finalized = !0;
            var e = this._digest();
            void 0 !== t && (e = e.toString(t));
            this._block.fill(0);
            this._blockOffset = 0;
            for (var i = 0; i < 4; ++i) this._length[i] = 0;
            return e;
        };
        r.prototype._digest = function () {
            throw new Error("_digest is not implemented");
        };
        e.exports = r;
    }, {
        inherits: 138,
        "readable-stream": 121,
        "safe-buffer": 122
    }],
    107: [function (t, e, i) {
        arguments[4][47][0].apply(i, arguments);
    }, {
        dup: 47
    }],
    108: [function (t, e, i) {
        arguments[4][48][0].apply(i, arguments);
    }, {
        "./_stream_readable": 110,
        "./_stream_writable": 112,
        _process: 151,
        dup: 48,
        inherits: 138
    }],
    109: [function (t, e, i) {
        arguments[4][49][0].apply(i, arguments);
    }, {
        "./_stream_transform": 111,
        dup: 49,
        inherits: 138
    }],
    110: [function (t, e, i) {
        arguments[4][50][0].apply(i, arguments);
    }, {
        "../errors": 107,
        "./_stream_duplex": 108,
        "./internal/streams/async_iterator": 113,
        "./internal/streams/buffer_list": 114,
        "./internal/streams/destroy": 115,
        "./internal/streams/from": 117,
        "./internal/streams/state": 119,
        "./internal/streams/stream": 120,
        _process: 151,
        buffer: 65,
        dup: 50,
        events: 104,
        inherits: 138,
        "string_decoder/": 123,
        util: 19
    }],
    111: [function (t, e, i) {
        arguments[4][51][0].apply(i, arguments);
    }, {
        "../errors": 107,
        "./_stream_duplex": 108,
        dup: 51,
        inherits: 138
    }],
    112: [function (t, e, i) {
        arguments[4][52][0].apply(i, arguments);
    }, {
        "../errors": 107,
        "./_stream_duplex": 108,
        "./internal/streams/destroy": 115,
        "./internal/streams/state": 119,
        "./internal/streams/stream": 120,
        _process: 151,
        buffer: 65,
        dup: 52,
        inherits: 138,
        "util-deprecate": 188
    }],
    113: [function (t, e, i) {
        arguments[4][53][0].apply(i, arguments);
    }, {
        "./end-of-stream": 116,
        _process: 151,
        dup: 53
    }],
    114: [function (t, e, i) {
        arguments[4][54][0].apply(i, arguments);
    }, {
        buffer: 65,
        dup: 54,
        util: 19
    }],
    115: [function (t, e, i) {
        arguments[4][55][0].apply(i, arguments);
    }, {
        _process: 151,
        dup: 55
    }],
    116: [function (t, e, i) {
        arguments[4][56][0].apply(i, arguments);
    }, {
        "../../../errors": 107,
        dup: 56
    }],
    117: [function (t, e, i) {
        arguments[4][57][0].apply(i, arguments);
    }, {
        dup: 57
    }],
    118: [function (t, e, i) {
        arguments[4][58][0].apply(i, arguments);
    }, {
        "../../../errors": 107,
        "./end-of-stream": 116,
        dup: 58
    }],
    119: [function (t, e, i) {
        arguments[4][59][0].apply(i, arguments);
    }, {
        "../../../errors": 107,
        dup: 59
    }],
    120: [function (t, e, i) {
        arguments[4][60][0].apply(i, arguments);
    }, {
        dup: 60,
        events: 104
    }],
    121: [function (t, e, i) {
        arguments[4][61][0].apply(i, arguments);
    }, {
        "./lib/_stream_duplex.js": 108,
        "./lib/_stream_passthrough.js": 109,
        "./lib/_stream_readable.js": 110,
        "./lib/_stream_transform.js": 111,
        "./lib/_stream_writable.js": 112,
        "./lib/internal/streams/end-of-stream.js": 116,
        "./lib/internal/streams/pipeline.js": 118,
        dup: 61
    }],
    122: [function (t, e, i) {
        arguments[4][62][0].apply(i, arguments);
    }, {
        buffer: 65,
        dup: 62
    }],
    123: [function (t, e, i) {
        arguments[4][63][0].apply(i, arguments);
    }, {
        dup: 63,
        "safe-buffer": 122
    }],
    124: [function (t, e, i) {
        var n = i;
        n.utils = t("./hash/utils");
        n.common = t("./hash/common");
        n.sha = t("./hash/sha");
        n.ripemd = t("./hash/ripemd");
        n.hmac = t("./hash/hmac");
        n.sha1 = n.sha.sha1;
        n.sha256 = n.sha.sha256;
        n.sha224 = n.sha.sha224;
        n.sha384 = n.sha.sha384;
        n.sha512 = n.sha.sha512;
        n.ripemd160 = n.ripemd.ripemd160;
    }, {
        "./hash/common": 125,
        "./hash/hmac": 126,
        "./hash/ripemd": 127,
        "./hash/sha": 128,
        "./hash/utils": 135
    }],
    125: [function (t, e, i) {
        "use strict";
        var n = t("./utils"), a = t("minimalistic-assert");
        function r() {
            this.pending = null;
            this.pendingTotal = 0;
            this.blockSize = this.constructor.blockSize;
            this.outSize = this.constructor.outSize;
            this.hmacStrength = this.constructor.hmacStrength;
            this.padLength = this.constructor.padLength / 8;
            this.endian = "big";
            this._delta8 = this.blockSize / 8;
            this._delta32 = this.blockSize / 32;
        }
        i.BlockHash = r;
        r.prototype.update = function (t, e) {
            t = n.toArray(t, e);
            this.pending ? this.pending = this.pending.concat(t) : this.pending = t;
            this.pendingTotal += t.length;
            if (this.pending.length >= this._delta8) {
                var i = (t = this.pending).length % this._delta8;
                this.pending = t.slice(t.length - i, t.length);
                0 === this.pending.length && (this.pending = null);
                t = n.join32(t, 0, t.length - i, this.endian);
                for (var a = 0; a < t.length; a += this._delta32) this._update(t, a, a + this._delta32);
            }
            return this;
        };
        r.prototype.digest = function (t) {
            this.update(this._pad());
            a(null === this.pending);
            return this._digest(t);
        };
        r.prototype._pad = function () {
            var t = this.pendingTotal, e = this._delta8, i = e - (t + this.padLength) % e, n = new Array(i + this.padLength);
            n[0] = 128;
            for (var a = 1; a < i; a++) n[a] = 0;
            t <<= 3;
            if ("big" === this.endian) {
                for (var r = 8; r < this.padLength; r++) n[a++] = 0;
                n[a++] = 0;
                n[a++] = 0;
                n[a++] = 0;
                n[a++] = 0;
                n[a++] = t >>> 24 & 255;
                n[a++] = t >>> 16 & 255;
                n[a++] = t >>> 8 & 255;
                n[a++] = 255 & t;
            } else {
                n[a++] = 255 & t;
                n[a++] = t >>> 8 & 255;
                n[a++] = t >>> 16 & 255;
                n[a++] = t >>> 24 & 255;
                n[a++] = 0;
                n[a++] = 0;
                n[a++] = 0;
                n[a++] = 0;
                for (r = 8; r < this.padLength; r++) n[a++] = 0;
            }
            return n;
        };
    }, {
        "./utils": 135,
        "minimalistic-assert": 143
    }],
    126: [function (t, e) {
        "use strict";
        var i = t("./utils"), n = t("minimalistic-assert");
        function a(t, e, n) {
            if (!(this instanceof a)) return new a(t, e, n);
            this.Hash = t;
            this.blockSize = t.blockSize / 8;
            this.outSize = t.outSize / 8;
            this.inner = null;
            this.outer = null;
            this._init(i.toArray(e, n));
        }
        e.exports = a;
        a.prototype._init = function (t) {
            t.length > this.blockSize && (t = new this.Hash().update(t).digest());
            n(t.length <= this.blockSize);
            for (var e = t.length; e < this.blockSize; e++) t.push(0);
            for (e = 0; e < t.length; e++) t[e] ^= 54;
            this.inner = new this.Hash().update(t);
            for (e = 0; e < t.length; e++) t[e] ^= 106;
            this.outer = new this.Hash().update(t);
        };
        a.prototype.update = function (t, e) {
            this.inner.update(t, e);
            return this;
        };
        a.prototype.digest = function (t) {
            this.outer.update(this.inner.digest());
            return this.outer.digest(t);
        };
    }, {
        "./utils": 135,
        "minimalistic-assert": 143
    }],
    127: [function (t, e, i) {
        "use strict";
        var n = t("./utils"), a = t("./common"), r = n.rotl32, o = n.sum32, s = n.sum32_3, c = n.sum32_4, l = a.BlockHash;
        function h() {
            if (!(this instanceof h)) return new h();
            l.call(this);
            this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
            this.endian = "little";
        }
        n.inherits(h, l);
        i.ripemd160 = h;
        h.blockSize = 512;
        h.outSize = 160;
        h.hmacStrength = 192;
        h.padLength = 64;
        h.prototype._update = function (t, e) {
            for (var i = this.h[0], n = this.h[1], a = this.h[2], l = this.h[3], h = this.h[4], y = i, v = n, b = a, M = l, S = h, k = 0; k < 80; k++) {
                var C = o(r(c(i, u(k, n, a, l), t[f[k] + e], p(k)), g[k]), h);
                i = h;
                h = l;
                l = r(a, 10);
                a = n;
                n = C;
                C = o(r(c(y, u(79 - k, v, b, M), t[m[k] + e], d(k)), _[k]), S);
                y = S;
                S = M;
                M = r(b, 10);
                b = v;
                v = C;
            }
            C = s(this.h[1], a, M);
            this.h[1] = s(this.h[2], l, S);
            this.h[2] = s(this.h[3], h, y);
            this.h[3] = s(this.h[4], i, v);
            this.h[4] = s(this.h[0], n, b);
            this.h[0] = C;
        };
        h.prototype._digest = function (t) {
            return "hex" === t ? n.toHex32(this.h, "little") : n.split32(this.h, "little");
        };
        function u(t, e, i, n) {
            return t <= 15 ? e ^ i ^ n : t <= 31 ? e & i | ~e & n : t <= 47 ? (e | ~i) ^ n : t <= 63 ? e & n | i & ~n : e ^ (i | ~n);
        }
        function p(t) {
            return t <= 15 ? 0 : t <= 31 ? 1518500249 : t <= 47 ? 1859775393 : t <= 63 ? 2400959708 : 2840853838;
        }
        function d(t) {
            return t <= 15 ? 1352829926 : t <= 31 ? 1548603684 : t <= 47 ? 1836072691 : t <= 63 ? 2053994217 : 0;
        }
        var f = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], m = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], g = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], _ = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
    }, {
        "./common": 125,
        "./utils": 135
    }],
    128: [function (t, e, i) {
        "use strict";
        i.sha1 = t("./sha/1");
        i.sha224 = t("./sha/224");
        i.sha256 = t("./sha/256");
        i.sha384 = t("./sha/384");
        i.sha512 = t("./sha/512");
    }, {
        "./sha/1": 129,
        "./sha/224": 130,
        "./sha/256": 131,
        "./sha/384": 132,
        "./sha/512": 133
    }],
    129: [function (t, e) {
        "use strict";
        var i = t("../utils"), n = t("../common"), a = t("./common"), r = i.rotl32, o = i.sum32, s = i.sum32_5, c = a.ft_1, l = n.BlockHash, h = [1518500249, 1859775393, 2400959708, 3395469782];
        function u() {
            if (!(this instanceof u)) return new u();
            l.call(this);
            this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
            this.W = new Array(80);
        }
        i.inherits(u, l);
        e.exports = u;
        u.blockSize = 512;
        u.outSize = 160;
        u.hmacStrength = 80;
        u.padLength = 64;
        u.prototype._update = function (t, e) {
            for (var i = this.W, n = 0; n < 16; n++) i[n] = t[e + n];
            for (; n < i.length; n++) i[n] = r(i[n - 3] ^ i[n - 8] ^ i[n - 14] ^ i[n - 16], 1);
            var a = this.h[0], l = this.h[1], u = this.h[2], p = this.h[3], d = this.h[4];
            for (n = 0; n < i.length; n++) {
                var f = ~~(n / 20), m = s(r(a, 5), c(f, l, u, p), d, i[n], h[f]);
                d = p;
                p = u;
                u = r(l, 30);
                l = a;
                a = m;
            }
            this.h[0] = o(this.h[0], a);
            this.h[1] = o(this.h[1], l);
            this.h[2] = o(this.h[2], u);
            this.h[3] = o(this.h[3], p);
            this.h[4] = o(this.h[4], d);
        };
        u.prototype._digest = function (t) {
            return "hex" === t ? i.toHex32(this.h, "big") : i.split32(this.h, "big");
        };
    }, {
        "../common": 125,
        "../utils": 135,
        "./common": 134
    }],
    130: [function (t, e) {
        "use strict";
        var i = t("../utils"), n = t("./256");
        function a() {
            if (!(this instanceof a)) return new a();
            n.call(this);
            this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
        }
        i.inherits(a, n);
        e.exports = a;
        a.blockSize = 512;
        a.outSize = 224;
        a.hmacStrength = 192;
        a.padLength = 64;
        a.prototype._digest = function (t) {
            return "hex" === t ? i.toHex32(this.h.slice(0, 7), "big") : i.split32(this.h.slice(0, 7), "big");
        };
    }, {
        "../utils": 135,
        "./256": 131
    }],
    131: [function (t, e) {
        "use strict";
        var i = t("../utils"), n = t("../common"), a = t("./common"), r = t("minimalistic-assert"), o = i.sum32, s = i.sum32_4, c = i.sum32_5, l = a.ch32, h = a.maj32, u = a.s0_256, p = a.s1_256, d = a.g0_256, f = a.g1_256, m = n.BlockHash, g = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
        function _() {
            if (!(this instanceof _)) return new _();
            m.call(this);
            this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];
            this.k = g;
            this.W = new Array(64);
        }
        i.inherits(_, m);
        e.exports = _;
        _.blockSize = 512;
        _.outSize = 256;
        _.hmacStrength = 192;
        _.padLength = 64;
        _.prototype._update = function (t, e) {
            for (var i = this.W, n = 0; n < 16; n++) i[n] = t[e + n];
            for (; n < i.length; n++) i[n] = s(f(i[n - 2]), i[n - 7], d(i[n - 15]), i[n - 16]);
            var a = this.h[0], m = this.h[1], g = this.h[2], _ = this.h[3], y = this.h[4], v = this.h[5], b = this.h[6], M = this.h[7];
            r(this.k.length === i.length);
            for (n = 0; n < i.length; n++) {
                var S = c(M, p(y), l(y, v, b), this.k[n], i[n]), k = o(u(a), h(a, m, g));
                M = b;
                b = v;
                v = y;
                y = o(_, S);
                _ = g;
                g = m;
                m = a;
                a = o(S, k);
            }
            this.h[0] = o(this.h[0], a);
            this.h[1] = o(this.h[1], m);
            this.h[2] = o(this.h[2], g);
            this.h[3] = o(this.h[3], _);
            this.h[4] = o(this.h[4], y);
            this.h[5] = o(this.h[5], v);
            this.h[6] = o(this.h[6], b);
            this.h[7] = o(this.h[7], M);
        };
        _.prototype._digest = function (t) {
            return "hex" === t ? i.toHex32(this.h, "big") : i.split32(this.h, "big");
        };
    }, {
        "../common": 125,
        "../utils": 135,
        "./common": 134,
        "minimalistic-assert": 143
    }],
    132: [function (t, e) {
        "use strict";
        var i = t("../utils"), n = t("./512");
        function a() {
            if (!(this instanceof a)) return new a();
            n.call(this);
            this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
        }
        i.inherits(a, n);
        e.exports = a;
        a.blockSize = 1024;
        a.outSize = 384;
        a.hmacStrength = 192;
        a.padLength = 128;
        a.prototype._digest = function (t) {
            return "hex" === t ? i.toHex32(this.h.slice(0, 12), "big") : i.split32(this.h.slice(0, 12), "big");
        };
    }, {
        "../utils": 135,
        "./512": 133
    }],
    133: [function (t, e) {
        "use strict";
        var i = t("../utils"), n = t("../common"), a = t("minimalistic-assert"), r = i.rotr64_hi, o = i.rotr64_lo, s = i.shr64_hi, c = i.shr64_lo, l = i.sum64, h = i.sum64_hi, u = i.sum64_lo, p = i.sum64_4_hi, d = i.sum64_4_lo, f = i.sum64_5_hi, m = i.sum64_5_lo, g = n.BlockHash, _ = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
        function y() {
            if (!(this instanceof y)) return new y();
            g.call(this);
            this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209];
            this.k = _;
            this.W = new Array(160);
        }
        i.inherits(y, g);
        e.exports = y;
        y.blockSize = 1024;
        y.outSize = 512;
        y.hmacStrength = 192;
        y.padLength = 128;
        y.prototype._prepareBlock = function (t, e) {
            for (var i = this.W, n = 0; n < 32; n++) i[n] = t[e + n];
            for (; n < i.length; n += 2) {
                var a = P(i[n - 4], i[n - 3]), r = E(i[n - 4], i[n - 3]), o = i[n - 14], s = i[n - 13], c = T(i[n - 30], i[n - 29]), l = D(i[n - 30], i[n - 29]), h = i[n - 32], u = i[n - 31];
                i[n] = p(a, r, o, s, c, l, h, u);
                i[n + 1] = d(a, r, o, s, c, l, h, u);
            }
        };
        y.prototype._update = function (t, e) {
            this._prepareBlock(t, e);
            var i = this.W, n = this.h[0], r = this.h[1], o = this.h[2], s = this.h[3], c = this.h[4], p = this.h[5], d = this.h[6], g = this.h[7], _ = this.h[8], y = this.h[9], T = this.h[10], D = this.h[11], P = this.h[12], E = this.h[13], B = this.h[14], F = this.h[15];
            a(this.k.length === i.length);
            for (var N = 0; N < i.length; N += 2) {
                var x = B, R = F, I = w(_, y), G = A(_, y), O = v(_, 0, T, 0, P), L = b(0, y, 0, D, 0, E), j = this.k[N], U = this.k[N + 1], Y = i[N], H = i[N + 1], W = f(x, R, I, G, O, L, j, U, Y, H), V = m(x, R, I, G, O, L, j, U, Y, H);
                x = k(n, r);
                R = C(n, r);
                I = M(n, 0, o, 0, c);
                G = S(0, r, 0, s, 0, p);
                var z = h(x, R, I, G), J = u(x, R, I, G);
                B = P;
                F = E;
                P = T;
                E = D;
                T = _;
                D = y;
                _ = h(d, g, W, V);
                y = u(g, g, W, V);
                d = c;
                g = p;
                c = o;
                p = s;
                o = n;
                s = r;
                n = h(W, V, z, J);
                r = u(W, V, z, J);
            }
            l(this.h, 0, n, r);
            l(this.h, 2, o, s);
            l(this.h, 4, c, p);
            l(this.h, 6, d, g);
            l(this.h, 8, _, y);
            l(this.h, 10, T, D);
            l(this.h, 12, P, E);
            l(this.h, 14, B, F);
        };
        y.prototype._digest = function (t) {
            return "hex" === t ? i.toHex32(this.h, "big") : i.split32(this.h, "big");
        };
        function v(t, e, i, n, a) {
            var r = t & i ^ ~t & a;
            r < 0 && (r += 4294967296);
            return r;
        }
        function b(t, e, i, n, a, r) {
            var o = e & n ^ ~e & r;
            o < 0 && (o += 4294967296);
            return o;
        }
        function M(t, e, i, n, a) {
            var r = t & i ^ t & a ^ i & a;
            r < 0 && (r += 4294967296);
            return r;
        }
        function S(t, e, i, n, a, r) {
            var o = e & n ^ e & r ^ n & r;
            o < 0 && (o += 4294967296);
            return o;
        }
        function k(t, e) {
            var i = r(t, e, 28) ^ r(e, t, 2) ^ r(e, t, 7);
            i < 0 && (i += 4294967296);
            return i;
        }
        function C(t, e) {
            var i = o(t, e, 28) ^ o(e, t, 2) ^ o(e, t, 7);
            i < 0 && (i += 4294967296);
            return i;
        }
        function w(t, e) {
            var i = r(t, e, 14) ^ r(t, e, 18) ^ r(e, t, 9);
            i < 0 && (i += 4294967296);
            return i;
        }
        function A(t, e) {
            var i = o(t, e, 14) ^ o(t, e, 18) ^ o(e, t, 9);
            i < 0 && (i += 4294967296);
            return i;
        }
        function T(t, e) {
            var i = r(t, e, 1) ^ r(t, e, 8) ^ s(t, e, 7);
            i < 0 && (i += 4294967296);
            return i;
        }
        function D(t, e) {
            var i = o(t, e, 1) ^ o(t, e, 8) ^ c(t, e, 7);
            i < 0 && (i += 4294967296);
            return i;
        }
        function P(t, e) {
            var i = r(t, e, 19) ^ r(e, t, 29) ^ s(t, e, 6);
            i < 0 && (i += 4294967296);
            return i;
        }
        function E(t, e) {
            var i = o(t, e, 19) ^ o(e, t, 29) ^ c(t, e, 6);
            i < 0 && (i += 4294967296);
            return i;
        }
    }, {
        "../common": 125,
        "../utils": 135,
        "minimalistic-assert": 143
    }],
    134: [function (t, e, i) {
        "use strict";
        var n = t("../utils").rotr32;
        i.ft_1 = function (t, e, i, n) {
            return 0 === t ? a(e, i, n) : 1 === t || 3 === t ? o(e, i, n) : 2 === t ? r(e, i, n) : void 0;
        };
        function a(t, e, i) {
            return t & e ^ ~t & i;
        }
        i.ch32 = a;
        function r(t, e, i) {
            return t & e ^ t & i ^ e & i;
        }
        i.maj32 = r;
        function o(t, e, i) {
            return t ^ e ^ i;
        }
        i.p32 = o;
        i.s0_256 = function (t) {
            return n(t, 2) ^ n(t, 13) ^ n(t, 22);
        };
        i.s1_256 = function (t) {
            return n(t, 6) ^ n(t, 11) ^ n(t, 25);
        };
        i.g0_256 = function (t) {
            return n(t, 7) ^ n(t, 18) ^ t >>> 3;
        };
        i.g1_256 = function (t) {
            return n(t, 17) ^ n(t, 19) ^ t >>> 10;
        };
    }, {
        "../utils": 135
    }],
    135: [function (t, e, i) {
        "use strict";
        var n = t("minimalistic-assert"), a = t("inherits");
        i.inherits = a;
        function r(t, e) {
            return 55296 == (64512 & t.charCodeAt(e)) && !(e < 0 || e + 1 >= t.length) && 56320 == (64512 & t.charCodeAt(e + 1));
        }
        i.toArray = function (t, e) {
            if (Array.isArray(t)) return t.slice();
            if (!t) return [];
            var i = [];
            if ("string" == typeof t) if (e) {
                if ("hex" === e) {
                    (t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t);
                    for (a = 0; a < t.length; a += 2) i.push(parseInt(t[a] + t[a + 1], 16));
                }
            } else for (var n = 0, a = 0; a < t.length; a++) {
                var o = t.charCodeAt(a);
                if (o < 128) i[n++] = o; else if (o < 2048) {
                    i[n++] = o >> 6 | 192;
                    i[n++] = 63 & o | 128;
                } else if (r(t, a)) {
                    o = 65536 + ((1023 & o) << 10) + (1023 & t.charCodeAt(++a));
                    i[n++] = o >> 18 | 240;
                    i[n++] = o >> 12 & 63 | 128;
                    i[n++] = o >> 6 & 63 | 128;
                    i[n++] = 63 & o | 128;
                } else {
                    i[n++] = o >> 12 | 224;
                    i[n++] = o >> 6 & 63 | 128;
                    i[n++] = 63 & o | 128;
                }
            } else for (a = 0; a < t.length; a++) i[a] = 0 | t[a];
            return i;
        };
        i.toHex = function (t) {
            for (var e = "", i = 0; i < t.length; i++) e += s(t[i].toString(16));
            return e;
        };
        function o(t) {
            return (t >>> 24 | t >>> 8 & 65280 | t << 8 & 16711680 | (255 & t) << 24) >>> 0;
        }
        i.htonl = o;
        i.toHex32 = function (t, e) {
            for (var i = "", n = 0; n < t.length; n++) {
                var a = t[n];
                "little" === e && (a = o(a));
                i += c(a.toString(16));
            }
            return i;
        };
        function s(t) {
            return 1 === t.length ? "0" + t : t;
        }
        i.zero2 = s;
        function c(t) {
            return 7 === t.length ? "0" + t : 6 === t.length ? "00" + t : 5 === t.length ? "000" + t : 4 === t.length ? "0000" + t : 3 === t.length ? "00000" + t : 2 === t.length ? "000000" + t : 1 === t.length ? "0000000" + t : t;
        }
        i.zero8 = c;
        i.join32 = function (t, e, i, a) {
            var r = i - e;
            n(r % 4 == 0);
            for (var o = new Array(r / 4), s = 0, c = e; s < o.length; s++, c += 4) {
                var l;
                l = "big" === a ? t[c] << 24 | t[c + 1] << 16 | t[c + 2] << 8 | t[c + 3] : t[c + 3] << 24 | t[c + 2] << 16 | t[c + 1] << 8 | t[c];
                o[s] = l >>> 0;
            }
            return o;
        };
        i.split32 = function (t, e) {
            for (var i = new Array(4 * t.length), n = 0, a = 0; n < t.length; n++, a += 4) {
                var r = t[n];
                if ("big" === e) {
                    i[a] = r >>> 24;
                    i[a + 1] = r >>> 16 & 255;
                    i[a + 2] = r >>> 8 & 255;
                    i[a + 3] = 255 & r;
                } else {
                    i[a + 3] = r >>> 24;
                    i[a + 2] = r >>> 16 & 255;
                    i[a + 1] = r >>> 8 & 255;
                    i[a] = 255 & r;
                }
            }
            return i;
        };
        i.rotr32 = function (t, e) {
            return t >>> e | t << 32 - e;
        };
        i.rotl32 = function (t, e) {
            return t << e | t >>> 32 - e;
        };
        i.sum32 = function (t, e) {
            return t + e >>> 0;
        };
        i.sum32_3 = function (t, e, i) {
            return t + e + i >>> 0;
        };
        i.sum32_4 = function (t, e, i, n) {
            return t + e + i + n >>> 0;
        };
        i.sum32_5 = function (t, e, i, n, a) {
            return t + e + i + n + a >>> 0;
        };
        i.sum64 = function (t, e, i, n) {
            var a = t[e], r = n + t[e + 1] >>> 0, o = (r < n ? 1 : 0) + i + a;
            t[e] = o >>> 0;
            t[e + 1] = r;
        };
        i.sum64_hi = function (t, e, i, n) {
            return (e + n >>> 0 < e ? 1 : 0) + t + i >>> 0;
        };
        i.sum64_lo = function (t, e, i, n) {
            return e + n >>> 0;
        };
        i.sum64_4_hi = function (t, e, i, n, a, r, o, s) {
            var c = 0, l = e;
            c += (l = l + n >>> 0) < e ? 1 : 0;
            c += (l = l + r >>> 0) < r ? 1 : 0;
            return t + i + a + o + (c += (l = l + s >>> 0) < s ? 1 : 0) >>> 0;
        };
        i.sum64_4_lo = function (t, e, i, n, a, r, o, s) {
            return e + n + r + s >>> 0;
        };
        i.sum64_5_hi = function (t, e, i, n, a, r, o, s, c, l) {
            var h = 0, u = e;
            h += (u = u + n >>> 0) < e ? 1 : 0;
            h += (u = u + r >>> 0) < r ? 1 : 0;
            h += (u = u + s >>> 0) < s ? 1 : 0;
            return t + i + a + o + c + (h += (u = u + l >>> 0) < l ? 1 : 0) >>> 0;
        };
        i.sum64_5_lo = function (t, e, i, n, a, r, o, s, c, l) {
            return e + n + r + s + l >>> 0;
        };
        i.rotr64_hi = function (t, e, i) {
            return (e << 32 - i | t >>> i) >>> 0;
        };
        i.rotr64_lo = function (t, e, i) {
            return (t << 32 - i | e >>> i) >>> 0;
        };
        i.shr64_hi = function (t, e, i) {
            return t >>> i;
        };
        i.shr64_lo = function (t, e, i) {
            return (t << 32 - i | e >>> i) >>> 0;
        };
    }, {
        inherits: 138,
        "minimalistic-assert": 143
    }],
    136: [function (t, e) {
        "use strict";
        var i = t("hash.js"), n = t("minimalistic-crypto-utils"), a = t("minimalistic-assert");
        function r(t) {
            if (!(this instanceof r)) return new r(t);
            this.hash = t.hash;
            this.predResist = !!t.predResist;
            this.outLen = this.hash.outSize;
            this.minEntropy = t.minEntropy || this.hash.hmacStrength;
            this._reseed = null;
            this.reseedInterval = null;
            this.K = null;
            this.V = null;
            var e = n.toArray(t.entropy, t.entropyEnc || "hex"), i = n.toArray(t.nonce, t.nonceEnc || "hex"), o = n.toArray(t.pers, t.persEnc || "hex");
            a(e.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
            this._init(e, i, o);
        }
        e.exports = r;
        r.prototype._init = function (t, e, i) {
            var n = t.concat(e).concat(i);
            this.K = new Array(this.outLen / 8);
            this.V = new Array(this.outLen / 8);
            for (var a = 0; a < this.V.length; a++) {
                this.K[a] = 0;
                this.V[a] = 1;
            }
            this._update(n);
            this._reseed = 1;
            this.reseedInterval = 281474976710656;
        };
        r.prototype._hmac = function () {
            return new i.hmac(this.hash, this.K);
        };
        r.prototype._update = function (t) {
            var e = this._hmac().update(this.V).update([0]);
            t && (e = e.update(t));
            this.K = e.digest();
            this.V = this._hmac().update(this.V).digest();
            if (t) {
                this.K = this._hmac().update(this.V).update([1]).update(t).digest();
                this.V = this._hmac().update(this.V).digest();
            }
        };
        r.prototype.reseed = function (t, e, i, r) {
            if ("string" != typeof e) {
                r = i;
                i = e;
                e = null;
            }
            t = n.toArray(t, e);
            i = n.toArray(i, r);
            a(t.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
            this._update(t.concat(i || []));
            this._reseed = 1;
        };
        r.prototype.generate = function (t, e, i, a) {
            if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
            if ("string" != typeof e) {
                a = i;
                i = e;
                e = null;
            }
            if (i) {
                i = n.toArray(i, a || "hex");
                this._update(i);
            }
            for (var r = []; r.length < t;) {
                this.V = this._hmac().update(this.V).digest();
                r = r.concat(this.V);
            }
            var o = r.slice(0, t);
            this._update(i);
            this._reseed++;
            return n.encode(o, e);
        };
    }, {
        "hash.js": 124,
        "minimalistic-assert": 143,
        "minimalistic-crypto-utils": 144
    }],
    137: [function (t, e, i) {
        i.read = function (t, e, i, n, a) {
            var r, o, s = 8 * a - n - 1, c = (1 << s) - 1, l = c >> 1, h = -7, u = i ? a - 1 : 0, p = i ? -1 : 1, d = t[e + u];
            u += p;
            r = d & (1 << -h) - 1;
            d >>= -h;
            h += s;
            for (; h > 0; r = 256 * r + t[e + u], u += p, h -= 8);
            o = r & (1 << -h) - 1;
            r >>= -h;
            h += n;
            for (; h > 0; o = 256 * o + t[e + u], u += p, h -= 8);
            if (0 === r) r = 1 - l; else {
                if (r === c) return o ? NaN : Infinity * (d ? -1 : 1);
                o += Math.pow(2, n);
                r -= l;
            }
            return (d ? -1 : 1) * o * Math.pow(2, r - n);
        };
        i.write = function (t, e, i, n, a, r) {
            var o, s, c, l = 8 * r - a - 1, h = (1 << l) - 1, u = h >> 1, p = 23 === a ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = n ? 0 : r - 1, f = n ? 1 : -1, m = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
            e = Math.abs(e);
            if (isNaN(e) || Infinity === e) {
                s = isNaN(e) ? 1 : 0;
                o = h;
            } else {
                o = Math.floor(Math.log(e) / Math.LN2);
                if (e * (c = Math.pow(2, -o)) < 1) {
                    o--;
                    c *= 2;
                }
                if ((e += o + u >= 1 ? p / c : p * Math.pow(2, 1 - u)) * c >= 2) {
                    o++;
                    c /= 2;
                }
                if (o + u >= h) {
                    s = 0;
                    o = h;
                } else if (o + u >= 1) {
                    s = (e * c - 1) * Math.pow(2, a);
                    o += u;
                } else {
                    s = e * Math.pow(2, u - 1) * Math.pow(2, a);
                    o = 0;
                }
            }
            for (; a >= 8; t[i + d] = 255 & s, d += f, s /= 256, a -= 8);
            o = o << a | s;
            l += a;
            for (; l > 0; t[i + d] = 255 & o, d += f, o /= 256, l -= 8);
            t[i + d - f] |= 128 * m;
        };
    }, {}],
    138: [function (t, e) {
        "function" == typeof Object.create ? e.exports = function (t, e) {
            if (e) {
                t.super_ = e;
                t.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                });
            }
        } : e.exports = function (t, e) {
            if (e) {
                t.super_ = e;
                var i = function () { };
                i.prototype = e.prototype;
                t.prototype = new i();
                t.prototype.constructor = t;
            }
        };
    }, {}],
    139: [function (t, e) {
        e.exports = function (t) {
            return null != t && (i(t) || n(t) || !!t._isBuffer);
        };
        function i(t) {
            return !!t.constructor && "function" == typeof t.constructor.isBuffer && t.constructor.isBuffer(t);
        }
        function n(t) {
            return "function" == typeof t.readFloatLE && "function" == typeof t.slice && i(t.slice(0, 0));
        }
    }, {}],
    140: [function (t, e) {
        "use strict";
        var i = t("inherits"), n = t("hash-base"), a = t("safe-buffer").Buffer, r = new Array(16);
        function o() {
            n.call(this, 64);
            this._a = 1732584193;
            this._b = 4023233417;
            this._c = 2562383102;
            this._d = 271733878;
        }
        i(o, n);
        o.prototype._update = function () {
            for (var t = r, e = 0; e < 16; ++e) t[e] = this._block.readInt32LE(4 * e);
            var i = this._a, n = this._b, a = this._c, o = this._d;
            i = c(i, n, a, o, t[0], 3614090360, 7);
            o = c(o, i, n, a, t[1], 3905402710, 12);
            a = c(a, o, i, n, t[2], 606105819, 17);
            n = c(n, a, o, i, t[3], 3250441966, 22);
            i = c(i, n, a, o, t[4], 4118548399, 7);
            o = c(o, i, n, a, t[5], 1200080426, 12);
            a = c(a, o, i, n, t[6], 2821735955, 17);
            n = c(n, a, o, i, t[7], 4249261313, 22);
            i = c(i, n, a, o, t[8], 1770035416, 7);
            o = c(o, i, n, a, t[9], 2336552879, 12);
            a = c(a, o, i, n, t[10], 4294925233, 17);
            n = c(n, a, o, i, t[11], 2304563134, 22);
            i = c(i, n, a, o, t[12], 1804603682, 7);
            o = c(o, i, n, a, t[13], 4254626195, 12);
            a = c(a, o, i, n, t[14], 2792965006, 17);
            i = l(i, n = c(n, a, o, i, t[15], 1236535329, 22), a, o, t[1], 4129170786, 5);
            o = l(o, i, n, a, t[6], 3225465664, 9);
            a = l(a, o, i, n, t[11], 643717713, 14);
            n = l(n, a, o, i, t[0], 3921069994, 20);
            i = l(i, n, a, o, t[5], 3593408605, 5);
            o = l(o, i, n, a, t[10], 38016083, 9);
            a = l(a, o, i, n, t[15], 3634488961, 14);
            n = l(n, a, o, i, t[4], 3889429448, 20);
            i = l(i, n, a, o, t[9], 568446438, 5);
            o = l(o, i, n, a, t[14], 3275163606, 9);
            a = l(a, o, i, n, t[3], 4107603335, 14);
            n = l(n, a, o, i, t[8], 1163531501, 20);
            i = l(i, n, a, o, t[13], 2850285829, 5);
            o = l(o, i, n, a, t[2], 4243563512, 9);
            a = l(a, o, i, n, t[7], 1735328473, 14);
            i = h(i, n = l(n, a, o, i, t[12], 2368359562, 20), a, o, t[5], 4294588738, 4);
            o = h(o, i, n, a, t[8], 2272392833, 11);
            a = h(a, o, i, n, t[11], 1839030562, 16);
            n = h(n, a, o, i, t[14], 4259657740, 23);
            i = h(i, n, a, o, t[1], 2763975236, 4);
            o = h(o, i, n, a, t[4], 1272893353, 11);
            a = h(a, o, i, n, t[7], 4139469664, 16);
            n = h(n, a, o, i, t[10], 3200236656, 23);
            i = h(i, n, a, o, t[13], 681279174, 4);
            o = h(o, i, n, a, t[0], 3936430074, 11);
            a = h(a, o, i, n, t[3], 3572445317, 16);
            n = h(n, a, o, i, t[6], 76029189, 23);
            i = h(i, n, a, o, t[9], 3654602809, 4);
            o = h(o, i, n, a, t[12], 3873151461, 11);
            a = h(a, o, i, n, t[15], 530742520, 16);
            i = u(i, n = h(n, a, o, i, t[2], 3299628645, 23), a, o, t[0], 4096336452, 6);
            o = u(o, i, n, a, t[7], 1126891415, 10);
            a = u(a, o, i, n, t[14], 2878612391, 15);
            n = u(n, a, o, i, t[5], 4237533241, 21);
            i = u(i, n, a, o, t[12], 1700485571, 6);
            o = u(o, i, n, a, t[3], 2399980690, 10);
            a = u(a, o, i, n, t[10], 4293915773, 15);
            n = u(n, a, o, i, t[1], 2240044497, 21);
            i = u(i, n, a, o, t[8], 1873313359, 6);
            o = u(o, i, n, a, t[15], 4264355552, 10);
            a = u(a, o, i, n, t[6], 2734768916, 15);
            n = u(n, a, o, i, t[13], 1309151649, 21);
            i = u(i, n, a, o, t[4], 4149444226, 6);
            o = u(o, i, n, a, t[11], 3174756917, 10);
            a = u(a, o, i, n, t[2], 718787259, 15);
            n = u(n, a, o, i, t[9], 3951481745, 21);
            this._a = this._a + i | 0;
            this._b = this._b + n | 0;
            this._c = this._c + a | 0;
            this._d = this._d + o | 0;
        };
        o.prototype._digest = function () {
            this._block[this._blockOffset++] = 128;
            if (this._blockOffset > 56) {
                this._block.fill(0, this._blockOffset, 64);
                this._update();
                this._blockOffset = 0;
            }
            this._block.fill(0, this._blockOffset, 56);
            this._block.writeUInt32LE(this._length[0], 56);
            this._block.writeUInt32LE(this._length[1], 60);
            this._update();
            var t = a.allocUnsafe(16);
            t.writeInt32LE(this._a, 0);
            t.writeInt32LE(this._b, 4);
            t.writeInt32LE(this._c, 8);
            t.writeInt32LE(this._d, 12);
            return t;
        };
        function s(t, e) {
            return t << e | t >>> 32 - e;
        }
        function c(t, e, i, n, a, r, o) {
            return s(t + (e & i | ~e & n) + a + r | 0, o) + e | 0;
        }
        function l(t, e, i, n, a, r, o) {
            return s(t + (e & n | i & ~n) + a + r | 0, o) + e | 0;
        }
        function h(t, e, i, n, a, r, o) {
            return s(t + (e ^ i ^ n) + a + r | 0, o) + e | 0;
        }
        function u(t, e, i, n, a, r, o) {
            return s(t + (i ^ (e | ~n)) + a + r | 0, o) + e | 0;
        }
        e.exports = o;
    }, {
        "hash-base": 106,
        inherits: 138,
        "safe-buffer": 176
    }],
    141: [function (t, e) {
        var i = t("bn.js"), n = t("brorand");
        function a(t) {
            this.rand = t || new n.Rand();
        }
        e.exports = a;
        a.create = function (t) {
            return new a(t);
        };
        a.prototype._randbelow = function (t) {
            var e = t.bitLength(), n = Math.ceil(e / 8);
            do {
                var a = new i(this.rand.generate(n));
            } while (a.cmp(t) >= 0);
            return a;
        };
        a.prototype._randrange = function (t, e) {
            var i = e.sub(t);
            return t.add(this._randbelow(i));
        };
        a.prototype.test = function (t, e, n) {
            var a = t.bitLength(), r = i.mont(t), o = new i(1).toRed(r);
            e || (e = Math.max(1, a / 48 | 0));
            for (var s = t.subn(1), c = 0; !s.testn(c); c++);
            for (var l = t.shrn(c), h = s.toRed(r); e > 0; e--) {
                var u = this._randrange(new i(2), s);
                n && n(u);
                var p = u.toRed(r).redPow(l);
                if (0 !== p.cmp(o) && 0 !== p.cmp(h)) {
                    for (var d = 1; d < c; d++) {
                        if (0 === (p = p.redSqr()).cmp(o)) return !1;
                        if (0 === p.cmp(h)) break;
                    }
                    if (d === c) return !1;
                }
            }
            return !0;
        };
        a.prototype.getDivisor = function (t, e) {
            var n = t.bitLength(), a = i.mont(t), r = new i(1).toRed(a);
            e || (e = Math.max(1, n / 48 | 0));
            for (var o = t.subn(1), s = 0; !o.testn(s); s++);
            for (var c = t.shrn(s), l = o.toRed(a); e > 0; e--) {
                var h = this._randrange(new i(2), o), u = t.gcd(h);
                if (0 !== u.cmpn(1)) return u;
                var p = h.toRed(a).redPow(c);
                if (0 !== p.cmp(r) && 0 !== p.cmp(l)) {
                    for (var d = 1; d < s; d++) {
                        if (0 === (p = p.redSqr()).cmp(r)) return p.fromRed().subn(1).gcd(t);
                        if (0 === p.cmp(l)) break;
                    }
                    if (d === s) return (p = p.redSqr()).fromRed().subn(1).gcd(t);
                }
            }
            return !1;
        };
    }, {
        "bn.js": 142,
        brorand: 18
    }],
    142: [function (t, e, i) {
        arguments[4][15][0].apply(i, arguments);
    }, {
        buffer: 19,
        dup: 15
    }],
    143: [function (t, e) {
        e.exports = i;
        function i(t, e) {
            if (!t) throw new Error(e || "Assertion failed");
        }
        i.equal = function (t, e, i) {
            if (t != e) throw new Error(i || "Assertion failed: " + t + " != " + e);
        };
    }, {}],
    144: [function (t, e, i) {
        "use strict";
        var n = i;
        n.toArray = function (t, e) {
            if (Array.isArray(t)) return t.slice();
            if (!t) return [];
            var i = [];
            if ("string" != typeof t) {
                for (var n = 0; n < t.length; n++) i[n] = 0 | t[n];
                return i;
            }
            if ("hex" === e) {
                (t = t.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t = "0" + t);
                for (n = 0; n < t.length; n += 2) i.push(parseInt(t[n] + t[n + 1], 16));
            } else for (n = 0; n < t.length; n++) {
                var a = t.charCodeAt(n), r = a >> 8, o = 255 & a;
                r ? i.push(r, o) : i.push(o);
            }
            return i;
        };
        function a(t) {
            return 1 === t.length ? "0" + t : t;
        }
        n.zero2 = a;
        function r(t) {
            for (var e = "", i = 0; i < t.length; i++) e += a(t[i].toString(16));
            return e;
        }
        n.toHex = r;
        n.encode = function (t, e) {
            return "hex" === e ? r(t) : t;
        };
    }, {}],
    145: [function (t, e) {
        e.exports = {
            "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
            "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
            "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
            "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
            "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
            "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
            "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
            "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
            "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
            "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
            "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
            "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
        };
    }, {}],
    146: [function (t, e, i) {
        "use strict";
        var n = t("asn1.js");
        i.certificate = t("./certificate");
        var a = n.define("RSAPrivateKey", function () {
            this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
        });
        i.RSAPrivateKey = a;
        var r = n.define("RSAPublicKey", function () {
            this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
        });
        i.RSAPublicKey = r;
        var o = n.define("SubjectPublicKeyInfo", function () {
            this.seq().obj(this.key("algorithm").use(s), this.key("subjectPublicKey").bitstr());
        });
        i.PublicKey = o;
        var s = n.define("AlgorithmIdentifier", function () {
            this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
        }), c = n.define("PrivateKeyInfo", function () {
            this.seq().obj(this.key("version").int(), this.key("algorithm").use(s), this.key("subjectPrivateKey").octstr());
        });
        i.PrivateKey = c;
        var l = n.define("EncryptedPrivateKeyInfo", function () {
            this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
        });
        i.EncryptedPrivateKey = l;
        var h = n.define("DSAPrivateKey", function () {
            this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
        });
        i.DSAPrivateKey = h;
        i.DSAparam = n.define("DSAparam", function () {
            this.int();
        });
        var u = n.define("ECPrivateKey", function () {
            this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(p), this.key("publicKey").optional().explicit(1).bitstr());
        });
        i.ECPrivateKey = u;
        var p = n.define("ECParameters", function () {
            this.choice({
                namedCurve: this.objid()
            });
        });
        i.signature = n.define("signature", function () {
            this.seq().obj(this.key("r").int(), this.key("s").int());
        });
    }, {
        "./certificate": 147,
        "asn1.js": 1
    }],
    147: [function (t, e) {
        "use strict";
        var i = t("asn1.js"), n = i.define("Time", function () {
            this.choice({
                utcTime: this.utctime(),
                generalTime: this.gentime()
            });
        }), a = i.define("AttributeTypeValue", function () {
            this.seq().obj(this.key("type").objid(), this.key("value").any());
        }), r = i.define("AlgorithmIdentifier", function () {
            this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
        }), o = i.define("SubjectPublicKeyInfo", function () {
            this.seq().obj(this.key("algorithm").use(r), this.key("subjectPublicKey").bitstr());
        }), s = i.define("RelativeDistinguishedName", function () {
            this.setof(a);
        }), c = i.define("RDNSequence", function () {
            this.seqof(s);
        }), l = i.define("Name", function () {
            this.choice({
                rdnSequence: this.use(c)
            });
        }), h = i.define("Validity", function () {
            this.seq().obj(this.key("notBefore").use(n), this.key("notAfter").use(n));
        }), u = i.define("Extension", function () {
            this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(!1), this.key("extnValue").octstr());
        }), p = i.define("TBSCertificate", function () {
            this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(r), this.key("issuer").use(l), this.key("validity").use(h), this.key("subject").use(l), this.key("subjectPublicKeyInfo").use(o), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(u).optional());
        }), d = i.define("X509Certificate", function () {
            this.seq().obj(this.key("tbsCertificate").use(p), this.key("signatureAlgorithm").use(r), this.key("signatureValue").bitstr());
        });
        e.exports = d;
    }, {
        "asn1.js": 1
    }],
    148: [function (t, e) {
        var i = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, n = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, a = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, r = t("evp_bytestokey"), o = t("browserify-aes"), s = t("safe-buffer").Buffer;
        e.exports = function (t, e) {
            var c, l = t.toString(), h = l.match(i);
            if (h) {
                var u = "aes" + h[1], p = s.from(h[2], "hex"), d = s.from(h[3].replace(/[\r\n]/g, ""), "base64"), f = r(e, p.slice(0, 8), parseInt(h[1], 10)).key, m = [], g = o.createDecipheriv(u, f, p);
                m.push(g.update(d));
                m.push(g.final());
                c = s.concat(m);
            } else {
                var _ = l.match(a);
                c = s.from(_[2].replace(/[\r\n]/g, ""), "base64");
            }
            return {
                tag: l.match(n)[1],
                data: c
            };
        };
    }, {
        "browserify-aes": 22,
        evp_bytestokey: 105,
        "safe-buffer": 176
    }],
    149: [function (t, e) {
        var i = t("./asn1"), n = t("./aesid.json"), a = t("./fixProc"), r = t("browserify-aes"), o = t("pbkdf2"), s = t("safe-buffer").Buffer;
        e.exports = c;
        function c(t) {
            var e;
            if ("object" == typeof t && !s.isBuffer(t)) {
                e = t.passphrase;
                t = t.key;
            }
            "string" == typeof t && (t = s.from(t));
            var n, r, o = a(t, e), c = o.tag, h = o.data;
            switch (c) {
                case "CERTIFICATE":
                    r = i.certificate.decode(h, "der").tbsCertificate.subjectPublicKeyInfo;

                case "PUBLIC KEY":
                    r || (r = i.PublicKey.decode(h, "der"));
                    switch (n = r.algorithm.algorithm.join(".")) {
                        case "1.2.840.113549.1.1.1":
                            return i.RSAPublicKey.decode(r.subjectPublicKey.data, "der");

                        case "1.2.840.10045.2.1":
                            r.subjectPrivateKey = r.subjectPublicKey;
                            return {
                                type: "ec",
                                data: r
                            };

                        case "1.2.840.10040.4.1":
                            r.algorithm.params.pub_key = i.DSAparam.decode(r.subjectPublicKey.data, "der");
                            return {
                                type: "dsa",
                                data: r.algorithm.params
                            };

                        default:
                            throw new Error("unknown key id " + n);
                    }

                case "ENCRYPTED PRIVATE KEY":
                    h = l(h = i.EncryptedPrivateKey.decode(h, "der"), e);

                case "PRIVATE KEY":
                    switch (n = (r = i.PrivateKey.decode(h, "der")).algorithm.algorithm.join(".")) {
                        case "1.2.840.113549.1.1.1":
                            return i.RSAPrivateKey.decode(r.subjectPrivateKey, "der");

                        case "1.2.840.10045.2.1":
                            return {
                                curve: r.algorithm.curve,
                                privateKey: i.ECPrivateKey.decode(r.subjectPrivateKey, "der").privateKey
                            };

                        case "1.2.840.10040.4.1":
                            r.algorithm.params.priv_key = i.DSAparam.decode(r.subjectPrivateKey, "der");
                            return {
                                type: "dsa",
                                params: r.algorithm.params
                            };

                        default:
                            throw new Error("unknown key id " + n);
                    }

                case "RSA PUBLIC KEY":
                    return i.RSAPublicKey.decode(h, "der");

                case "RSA PRIVATE KEY":
                    return i.RSAPrivateKey.decode(h, "der");

                case "DSA PRIVATE KEY":
                    return {
                        type: "dsa",
                        params: i.DSAPrivateKey.decode(h, "der")
                    };

                case "EC PRIVATE KEY":
                    return {
                        curve: (h = i.ECPrivateKey.decode(h, "der")).parameters.value,
                        privateKey: h.privateKey
                    };

                default:
                    throw new Error("unknown key type " + c);
            }
        }
        c.signature = i.signature;
        function l(t, e) {
            var i = t.algorithm.decrypt.kde.kdeparams.salt, a = parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), c = n[t.algorithm.decrypt.cipher.algo.join(".")], l = t.algorithm.decrypt.cipher.iv, h = t.subjectPrivateKey, u = parseInt(c.split("-")[1], 10) / 8, p = o.pbkdf2Sync(e, i, a, u, "sha1"), d = r.createDecipheriv(c, p, l), f = [];
            f.push(d.update(h));
            f.push(d.final());
            return s.concat(f);
        }
    }, {
        "./aesid.json": 145,
        "./asn1": 146,
        "./fixProc": 148,
        "browserify-aes": 22,
        pbkdf2: "pbkdf2",
        "safe-buffer": 176
    }],
    150: [function (t, e) {
        (function (t) {
            "use strict";
            "undefined" == typeof t || !t.version || 0 === t.version.indexOf("v0.") || 0 === t.version.indexOf("v1.") && 0 !== t.version.indexOf("v1.8.") ? e.exports = {
                nextTick: function (e, i, n, a) {
                    if ("function" != typeof e) throw new TypeError('"callback" argument must be a function');
                    var r, o, s = arguments.length;
                    switch (s) {
                        case 0:
                        case 1:
                            return t.nextTick(e);

                        case 2:
                            return t.nextTick(function () {
                                e.call(null, i);
                            });

                        case 3:
                            return t.nextTick(function () {
                                e.call(null, i, n);
                            });

                        case 4:
                            return t.nextTick(function () {
                                e.call(null, i, n, a);
                            });

                        default:
                            r = new Array(s - 1);
                            o = 0;
                            for (; o < r.length;) r[o++] = arguments[o];
                            return t.nextTick(function () {
                                e.apply(null, r);
                            });
                    }
                }
            } : e.exports = t;
        }).call(this, t("_process"));
    }, {
        _process: 151
    }],
    151: [function (t, e) {
        var i, n, a = e.exports = {};
        function r() {
            throw new Error("setTimeout has not been defined");
        }
        function o() {
            throw new Error("clearTimeout has not been defined");
        }
        (function () {
            try {
                i = "function" == typeof setTimeout ? setTimeout : r;
            } catch (t) {
                i = r;
            }
            try {
                n = "function" == typeof clearTimeout ? clearTimeout : o;
            } catch (t) {
                n = o;
            }
        })();
        function s(t) {
            if (i === setTimeout) return setTimeout(t, 0);
            if ((i === r || !i) && setTimeout) {
                i = setTimeout;
                return setTimeout(t, 0);
            }
            try {
                return i(t, 0);
            } catch (e) {
                try {
                    return i.call(null, t, 0);
                } catch (e) {
                    return i.call(this, t, 0);
                }
            }
        }
        function c(t) {
            if (n === clearTimeout) return clearTimeout(t);
            if ((n === o || !n) && clearTimeout) {
                n = clearTimeout;
                return clearTimeout(t);
            }
            try {
                return n(t);
            } catch (e) {
                try {
                    return n.call(null, t);
                } catch (e) {
                    return n.call(this, t);
                }
            }
        }
        var l, h = [], u = !1, p = -1;
        function d() {
            if (u && l) {
                u = !1;
                l.length ? h = l.concat(h) : p = -1;
                h.length && f();
            }
        }
        function f() {
            if (!u) {
                var t = s(d);
                u = !0;
                for (var e = h.length; e;) {
                    l = h;
                    h = [];
                    for (; ++p < e;) l && l[p].run();
                    p = -1;
                    e = h.length;
                }
                l = null;
                u = !1;
                c(t);
            }
        }
        a.nextTick = function (t) {
            var e = new Array(arguments.length - 1);
            if (arguments.length > 1) for (var i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
            h.push(new m(t, e));
            1 !== h.length || u || s(f);
        };
        function m(t, e) {
            this.fun = t;
            this.array = e;
        }
        m.prototype.run = function () {
            this.fun.apply(null, this.array);
        };
        a.title = "browser";
        a.browser = !0;
        a.env = {};
        a.argv = [];
        a.version = "";
        a.versions = {};
        function g() { }
        a.on = g;
        a.addListener = g;
        a.once = g;
        a.off = g;
        a.removeListener = g;
        a.removeAllListeners = g;
        a.emit = g;
        a.prependListener = g;
        a.prependOnceListener = g;
        a.listeners = function () {
            return [];
        };
        a.binding = function () {
            throw new Error("process.binding is not supported");
        };
        a.cwd = function () {
            return "/";
        };
        a.chdir = function () {
            throw new Error("process.chdir is not supported");
        };
        a.umask = function () {
            return 0;
        };
    }, {}],
    152: [function (t, e, i) {
        i.publicEncrypt = t("./publicEncrypt");
        i.privateDecrypt = t("./privateDecrypt");
        i.privateEncrypt = function (t, e) {
            return i.publicEncrypt(t, e, !0);
        };
        i.publicDecrypt = function (t, e) {
            return i.privateDecrypt(t, e, !0);
        };
    }, {
        "./privateDecrypt": 155,
        "./publicEncrypt": 156
    }],
    153: [function (t, e) {
        var i = t("create-hash"), n = t("safe-buffer").Buffer;
        e.exports = function (t, e) {
            for (var r, o = n.alloc(0), s = 0; o.length < e;) {
                r = a(s++);
                o = n.concat([o, i("sha1").update(t).update(r).digest()]);
            }
            return o.slice(0, e);
        };
        function a(t) {
            var e = n.allocUnsafe(4);
            e.writeUInt32BE(t, 0);
            return e;
        }
    }, {
        "create-hash": 71,
        "safe-buffer": 176
    }],
    154: [function (t, e, i) {
        arguments[4][15][0].apply(i, arguments);
    }, {
        buffer: 19,
        dup: 15
    }],
    155: [function (t, e) {
        var i = t("parse-asn1"), n = t("./mgf"), a = t("./xor"), r = t("bn.js"), o = t("browserify-rsa"), s = t("create-hash"), c = t("./withPublic"), l = t("safe-buffer").Buffer;
        e.exports = function (t, e, n) {
            var a;
            a = t.padding ? t.padding : n ? 1 : 4;
            var s, p = i(t), d = p.modulus.byteLength();
            if (e.length > d || new r(e).cmp(p.modulus) >= 0) throw new Error("decryption error");
            s = n ? c(new r(e), p) : o(e, p);
            var f = l.alloc(d - s.length);
            s = l.concat([f, s], d);
            if (4 === a) return h(p, s);
            if (1 === a) return u(0, s, n);
            if (3 === a) return s;
            throw new Error("unknown padding");
        };
        function h(t, e) {
            var i = t.modulus.byteLength(), r = s("sha1").update(l.alloc(0)).digest(), o = r.length;
            if (0 !== e[0]) throw new Error("decryption error");
            var c = e.slice(1, o + 1), h = e.slice(o + 1), u = a(c, n(h, o)), d = a(h, n(u, i - o - 1));
            if (p(r, d.slice(0, o))) throw new Error("decryption error");
            for (var f = o; 0 === d[f];) f++;
            if (1 !== d[f++]) throw new Error("decryption error");
            return d.slice(f);
        }
        function u(t, e, i) {
            for (var n = e.slice(0, 2), a = 2, r = 0; 0 !== e[a++];) if (a >= e.length) {
                r++;
                break;
            }
            var o = e.slice(2, a - 1);
            ("0002" !== n.toString("hex") && !i || "0001" !== n.toString("hex") && i) && r++;
            o.length < 8 && r++;
            if (r) throw new Error("decryption error");
            return e.slice(a);
        }
        function p(t, e) {
            t = l.from(t);
            e = l.from(e);
            var i = 0, n = t.length;
            if (t.length !== e.length) {
                i++;
                n = Math.min(t.length, e.length);
            }
            for (var a = -1; ++a < n;) i += t[a] ^ e[a];
            return i;
        }
    }, {
        "./mgf": 153,
        "./withPublic": 157,
        "./xor": 158,
        "bn.js": 154,
        "browserify-rsa": 40,
        "create-hash": 71,
        "parse-asn1": 149,
        "safe-buffer": 176
    }],
    156: [function (t, e) {
        var i = t("parse-asn1"), n = t("randombytes"), a = t("create-hash"), r = t("./mgf"), o = t("./xor"), s = t("bn.js"), c = t("./withPublic"), l = t("browserify-rsa"), h = t("safe-buffer").Buffer;
        e.exports = function (t, e, n) {
            var a;
            a = t.padding ? t.padding : n ? 1 : 4;
            var r, o = i(t);
            if (4 === a) r = u(o, e); else if (1 === a) r = p(o, e, n); else {
                if (3 !== a) throw new Error("unknown padding");
                if ((r = new s(e)).cmp(o.modulus) >= 0) throw new Error("data too long for modulus");
            }
            return n ? l(r, o) : c(r, o);
        };
        function u(t, e) {
            var i = t.modulus.byteLength(), c = e.length, l = a("sha1").update(h.alloc(0)).digest(), u = l.length, p = 2 * u;
            if (c > i - p - 2) throw new Error("message too long");
            var d = h.alloc(i - c - p - 2), f = i - u - 1, m = n(u), g = o(h.concat([l, d, h.alloc(1, 1), e], f), r(m, f)), _ = o(m, r(g, u));
            return new s(h.concat([h.alloc(1), _, g], i));
        }
        function p(t, e, i) {
            var n, a = e.length, r = t.modulus.byteLength();
            if (a > r - 11) throw new Error("message too long");
            n = i ? h.alloc(r - a - 3, 255) : d(r - a - 3);
            return new s(h.concat([h.from([0, i ? 1 : 2]), n, h.alloc(1), e], r));
        }
        function d(t) {
            for (var e, i = h.allocUnsafe(t), a = 0, r = n(2 * t), o = 0; a < t;) {
                if (o === r.length) {
                    r = n(2 * t);
                    o = 0;
                }
                (e = r[o++]) && (i[a++] = e);
            }
            return i;
        }
    }, {
        "./mgf": 153,
        "./withPublic": 157,
        "./xor": 158,
        "bn.js": 154,
        "browserify-rsa": 40,
        "create-hash": 71,
        "parse-asn1": 149,
        randombytes: 159,
        "safe-buffer": 176
    }],
    157: [function (t, e) {
        var i = t("bn.js"), n = t("safe-buffer").Buffer;
        e.exports = function (t, e) {
            return n.from(t.toRed(i.mont(e.modulus)).redPow(new i(e.publicExponent)).fromRed().toArray());
        };
    }, {
        "bn.js": 154,
        "safe-buffer": 176
    }],
    158: [function (t, e) {
        e.exports = function (t, e) {
            for (var i = t.length, n = -1; ++n < i;) t[n] ^= e[n];
            return t;
        };
    }, {}],
    159: [function (t, e) {
        (function (i, n) {
            "use strict";
            var a = t("safe-buffer").Buffer, r = n.crypto || n.msCrypto;
            r && r.getRandomValues ? e.exports = function (t, e) {
                if (t > 4294967295) throw new RangeError("requested too many random bytes");
                var n = a.allocUnsafe(t);
                if (t > 0) if (t > 65536) for (var o = 0; o < t; o += 65536) r.getRandomValues(n.slice(o, o + 65536)); else r.getRandomValues(n);
                return "function" == typeof e ? i.nextTick(function () {
                    e(null, n);
                }) : n;
            } : e.exports = function () {
                throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
            };
        }).call(this, t("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
        _process: 151,
        "safe-buffer": 176
    }],
    160: [function (t, e, i) {
        (function (e, n) {
            "use strict";
            function a() {
                throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
            }
            var r = t("safe-buffer"), o = t("randombytes"), s = r.Buffer, c = r.kMaxLength, l = n.crypto || n.msCrypto, h = Math.pow(2, 32) - 1;
            function u(t, e) {
                if ("number" != typeof t || t != t) throw new TypeError("offset must be a number");
                if (t > h || t < 0) throw new TypeError("offset must be a uint32");
                if (t > c || t > e) throw new RangeError("offset out of range");
            }
            function p(t, e, i) {
                if ("number" != typeof t || t != t) throw new TypeError("size must be a number");
                if (t > h || t < 0) throw new TypeError("size must be a uint32");
                if (t + e > i || t > c) throw new RangeError("buffer too small");
            }
            if (l && l.getRandomValues || !e.browser) {
                i.randomFill = function (t, e, i, a) {
                    if (!(s.isBuffer(t) || t instanceof n.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                    if ("function" == typeof e) {
                        a = e;
                        e = 0;
                        i = t.length;
                    } else if ("function" == typeof i) {
                        a = i;
                        i = t.length - e;
                    } else if ("function" != typeof a) throw new TypeError('"cb" argument must be a function');
                    u(e, t.length);
                    p(i, e, t.length);
                    return d(t, e, i, a);
                };
                i.randomFillSync = function (t, e, i) {
                    "undefined" == typeof e && (e = 0);
                    if (!(s.isBuffer(t) || t instanceof n.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
                    u(e, t.length);
                    void 0 === i && (i = t.length - e);
                    p(i, e, t.length);
                    return d(t, e, i);
                };
            } else {
                i.randomFill = a;
                i.randomFillSync = a;
            }
            function d(t, i, n, a) {
                if (e.browser) {
                    var r = t.buffer, s = new Uint8Array(r, i, n);
                    l.getRandomValues(s);
                    if (a) {
                        e.nextTick(function () {
                            a(null, t);
                        });
                        return;
                    }
                    return t;
                }
                if (!a) {
                    o(n).copy(t, i);
                    return t;
                }
                o(n, function (e, n) {
                    if (e) return a(e);
                    n.copy(t, i);
                    a(null, t);
                });
            }
        }).call(this, t("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
        _process: 151,
        randombytes: 159,
        "safe-buffer": 176
    }],
    161: [function (t, e) {
        e.exports = t("./lib/_stream_duplex.js");
    }, {
        "./lib/_stream_duplex.js": 162
    }],
    162: [function (t, e) {
        "use strict";
        var i = t("process-nextick-args"), n = Object.keys || function (t) {
            var e = [];
            for (var i in t) e.push(i);
            return e;
        };
        e.exports = h;
        var a = Object.create(t("core-util-is"));
        a.inherits = t("inherits");
        var r = t("./_stream_readable"), o = t("./_stream_writable");
        a.inherits(h, r);
        for (var s = n(o.prototype), c = 0; c < s.length; c++) {
            var l = s[c];
            h.prototype[l] || (h.prototype[l] = o.prototype[l]);
        }
        function h(t) {
            if (!(this instanceof h)) return new h(t);
            r.call(this, t);
            o.call(this, t);
            t && !1 === t.readable && (this.readable = !1);
            t && !1 === t.writable && (this.writable = !1);
            this.allowHalfOpen = !0;
            t && !1 === t.allowHalfOpen && (this.allowHalfOpen = !1);
            this.once("end", u);
        }
        Object.defineProperty(h.prototype, "writableHighWaterMark", {
            enumerable: !1,
            get: function () {
                return this._writableState.highWaterMark;
            }
        });
        function u() {
            this.allowHalfOpen || this._writableState.ended || i.nextTick(p, this);
        }
        function p(t) {
            t.end();
        }
        Object.defineProperty(h.prototype, "destroyed", {
            get: function () {
                return void 0 !== this._readableState && void 0 !== this._writableState && this._readableState.destroyed && this._writableState.destroyed;
            },
            set: function (t) {
                if (void 0 !== this._readableState && void 0 !== this._writableState) {
                    this._readableState.destroyed = t;
                    this._writableState.destroyed = t;
                }
            }
        });
        h.prototype._destroy = function (t, e) {
            this.push(null);
            this.end();
            i.nextTick(e, t);
        };
    }, {
        "./_stream_readable": 164,
        "./_stream_writable": 166,
        "core-util-is": 68,
        inherits: 138,
        "process-nextick-args": 150
    }],
    163: [function (t, e) {
        "use strict";
        e.exports = a;
        var i = t("./_stream_transform"), n = Object.create(t("core-util-is"));
        n.inherits = t("inherits");
        n.inherits(a, i);
        function a(t) {
            if (!(this instanceof a)) return new a(t);
            i.call(this, t);
        }
        a.prototype._transform = function (t, e, i) {
            i(null, t);
        };
    }, {
        "./_stream_transform": 165,
        "core-util-is": 68,
        inherits: 138
    }],
    164: [function (t, e) {
        (function (i, n) {
            "use strict";
            var a = t("process-nextick-args");
            e.exports = M;
            var r, o = t("isarray");
            M.ReadableState = b;
            t("events").EventEmitter;
            var s = function (t, e) {
                return t.listeners(e).length;
            }, c = t("./internal/streams/stream"), l = t("safe-buffer").Buffer, h = n.Uint8Array || function () { };
            function u(t) {
                return l.from(t);
            }
            var p = Object.create(t("core-util-is"));
            p.inherits = t("inherits");
            var d = t("util"), f = void 0;
            f = d && d.debuglog ? d.debuglog("stream") : function () { };
            var m, g = t("./internal/streams/BufferList"), _ = t("./internal/streams/destroy");
            p.inherits(M, c);
            var y = ["error", "close", "destroy", "pause", "resume"];
            function v(t, e, i) {
                if ("function" == typeof t.prependListener) return t.prependListener(e, i);
                t._events && t._events[e] ? o(t._events[e]) ? t._events[e].unshift(i) : t._events[e] = [i, t._events[e]] : t.on(e, i);
            }
            function b(e, i) {
                e = e || {};
                var n = i instanceof (r = r || t("./_stream_duplex"));
                this.objectMode = !!e.objectMode;
                n && (this.objectMode = this.objectMode || !!e.readableObjectMode);
                var a = e.highWaterMark, o = e.readableHighWaterMark, s = this.objectMode ? 16 : 16384;
                this.highWaterMark = a || 0 === a ? a : n && (o || 0 === o) ? o : s;
                this.highWaterMark = Math.floor(this.highWaterMark);
                this.buffer = new g();
                this.length = 0;
                this.pipes = null;
                this.pipesCount = 0;
                this.flowing = null;
                this.ended = !1;
                this.endEmitted = !1;
                this.reading = !1;
                this.sync = !0;
                this.needReadable = !1;
                this.emittedReadable = !1;
                this.readableListening = !1;
                this.resumeScheduled = !1;
                this.destroyed = !1;
                this.defaultEncoding = e.defaultEncoding || "utf8";
                this.awaitDrain = 0;
                this.readingMore = !1;
                this.decoder = null;
                this.encoding = null;
                if (e.encoding) {
                    m || (m = t("string_decoder/").StringDecoder);
                    this.decoder = new m(e.encoding);
                    this.encoding = e.encoding;
                }
            }
            function M(e) {
                r = r || t("./_stream_duplex");
                if (!(this instanceof M)) return new M(e);
                this._readableState = new b(e, this);
                this.readable = !0;
                if (e) {
                    "function" == typeof e.read && (this._read = e.read);
                    "function" == typeof e.destroy && (this._destroy = e.destroy);
                }
                c.call(this);
            }
            Object.defineProperty(M.prototype, "destroyed", {
                get: function () {
                    return void 0 !== this._readableState && this._readableState.destroyed;
                },
                set: function (t) {
                    this._readableState && (this._readableState.destroyed = t);
                }
            });
            M.prototype.destroy = _.destroy;
            M.prototype._undestroy = _.undestroy;
            M.prototype._destroy = function (t, e) {
                this.push(null);
                e(t);
            };
            M.prototype.push = function (t, e) {
                var i, n = this._readableState;
                if (n.objectMode) i = !0; else if ("string" == typeof t) {
                    if ((e = e || n.defaultEncoding) !== n.encoding) {
                        t = l.from(t, e);
                        e = "";
                    }
                    i = !0;
                }
                return S(this, t, e, !1, i);
            };
            M.prototype.unshift = function (t) {
                return S(this, t, null, !0, !1);
            };
            function S(t, e, i, n, a) {
                var r = t._readableState;
                if (null === e) {
                    r.reading = !1;
                    P(t, r);
                } else {
                    var o;
                    a || (o = C(r, e));
                    if (o) t.emit("error", o); else if (r.objectMode || e && e.length > 0) {
                        "string" == typeof e || r.objectMode || Object.getPrototypeOf(e) === l.prototype || (e = u(e));
                        if (n) r.endEmitted ? t.emit("error", new Error("stream.unshift() after end event")) : k(t, r, e, !0); else if (r.ended) t.emit("error", new Error("stream.push() after EOF")); else {
                            r.reading = !1;
                            if (r.decoder && !i) {
                                e = r.decoder.write(e);
                                r.objectMode || 0 !== e.length ? k(t, r, e, !1) : F(t, r);
                            } else k(t, r, e, !1);
                        }
                    } else n || (r.reading = !1);
                }
                return w(r);
            }
            function k(t, e, i, n) {
                if (e.flowing && 0 === e.length && !e.sync) {
                    t.emit("data", i);
                    t.read(0);
                } else {
                    e.length += e.objectMode ? 1 : i.length;
                    n ? e.buffer.unshift(i) : e.buffer.push(i);
                    e.needReadable && E(t);
                }
                F(t, e);
            }
            function C(t, e) {
                var i, n;
                (n = e, l.isBuffer(n) || n instanceof h) || "string" == typeof e || void 0 === e || t.objectMode || (i = new TypeError("Invalid non-string/buffer chunk"));
                return i;
            }
            function w(t) {
                return !t.ended && (t.needReadable || t.length < t.highWaterMark || 0 === t.length);
            }
            M.prototype.isPaused = function () {
                return !1 === this._readableState.flowing;
            };
            M.prototype.setEncoding = function (e) {
                m || (m = t("string_decoder/").StringDecoder);
                this._readableState.decoder = new m(e);
                this._readableState.encoding = e;
                return this;
            };
            var A = 8388608;
            function T(t) {
                if (t >= A) t = A; else {
                    t--;
                    t |= t >>> 1;
                    t |= t >>> 2;
                    t |= t >>> 4;
                    t |= t >>> 8;
                    t |= t >>> 16;
                    t++;
                }
                return t;
            }
            function D(t, e) {
                if (t <= 0 || 0 === e.length && e.ended) return 0;
                if (e.objectMode) return 1;
                if (t != t) return e.flowing && e.length ? e.buffer.head.data.length : e.length;
                t > e.highWaterMark && (e.highWaterMark = T(t));
                if (t <= e.length) return t;
                if (!e.ended) {
                    e.needReadable = !0;
                    return 0;
                }
                return e.length;
            }
            M.prototype.read = function (t) {
                f("read", t);
                t = parseInt(t, 10);
                var e = this._readableState, i = t;
                0 !== t && (e.emittedReadable = !1);
                if (0 === t && e.needReadable && (e.length >= e.highWaterMark || e.ended)) {
                    f("read: emitReadable", e.length, e.ended);
                    0 === e.length && e.ended ? H(this) : E(this);
                    return null;
                }
                if (0 === (t = D(t, e)) && e.ended) {
                    0 === e.length && H(this);
                    return null;
                }
                var n, a = e.needReadable;
                f("need readable", a);
                (0 === e.length || e.length - t < e.highWaterMark) && f("length less than watermark", a = !0);
                if (e.ended || e.reading) f("reading or ended", a = !1); else if (a) {
                    f("do read");
                    e.reading = !0;
                    e.sync = !0;
                    0 === e.length && (e.needReadable = !0);
                    this._read(e.highWaterMark);
                    e.sync = !1;
                    e.reading || (t = D(i, e));
                }
                if (null === (n = t > 0 ? L(t, e) : null)) {
                    e.needReadable = !0;
                    t = 0;
                } else e.length -= t;
                if (0 === e.length) {
                    e.ended || (e.needReadable = !0);
                    i !== t && e.ended && H(this);
                }
                null !== n && this.emit("data", n);
                return n;
            };
            function P(t, e) {
                if (!e.ended) {
                    if (e.decoder) {
                        var i = e.decoder.end();
                        if (i && i.length) {
                            e.buffer.push(i);
                            e.length += e.objectMode ? 1 : i.length;
                        }
                    }
                    e.ended = !0;
                    E(t);
                }
            }
            function E(t) {
                var e = t._readableState;
                e.needReadable = !1;
                if (!e.emittedReadable) {
                    f("emitReadable", e.flowing);
                    e.emittedReadable = !0;
                    e.sync ? a.nextTick(B, t) : B(t);
                }
            }
            function B(t) {
                f("emit readable");
                t.emit("readable");
                O(t);
            }
            function F(t, e) {
                if (!e.readingMore) {
                    e.readingMore = !0;
                    a.nextTick(N, t, e);
                }
            }
            function N(t, e) {
                for (var i = e.length; !e.reading && !e.flowing && !e.ended && e.length < e.highWaterMark;) {
                    f("maybeReadMore read 0");
                    t.read(0);
                    if (i === e.length) break;
                    i = e.length;
                }
                e.readingMore = !1;
            }
            M.prototype._read = function () {
                this.emit("error", new Error("_read() is not implemented"));
            };
            M.prototype.pipe = function (t, e) {
                var n = this, r = this._readableState;
                switch (r.pipesCount) {
                    case 0:
                        r.pipes = t;
                        break;

                    case 1:
                        r.pipes = [r.pipes, t];
                        break;

                    default:
                        r.pipes.push(t);
                }
                r.pipesCount += 1;
                f("pipe count=%d opts=%j", r.pipesCount, e);
                var o = e && !1 === e.end || t === i.stdout || t === i.stderr ? b : l;
                r.endEmitted ? a.nextTick(o) : n.once("end", o);
                t.on("unpipe", c);
                function c(t, e) {
                    f("onunpipe");
                    if (t === n && e && !1 === e.hasUnpiped) {
                        e.hasUnpiped = !0;
                        p();
                    }
                }
                function l() {
                    f("onend");
                    t.end();
                }
                var h = x(n);
                t.on("drain", h);
                var u = !1;
                function p() {
                    f("cleanup");
                    t.removeListener("close", _);
                    t.removeListener("finish", y);
                    t.removeListener("drain", h);
                    t.removeListener("error", g);
                    t.removeListener("unpipe", c);
                    n.removeListener("end", l);
                    n.removeListener("end", b);
                    n.removeListener("data", m);
                    u = !0;
                    !r.awaitDrain || t._writableState && !t._writableState.needDrain || h();
                }
                var d = !1;
                n.on("data", m);
                function m(e) {
                    f("ondata");
                    d = !1;
                    if (!1 === t.write(e) && !d) {
                        if ((1 === r.pipesCount && r.pipes === t || r.pipesCount > 1 && -1 !== V(r.pipes, t)) && !u) {
                            f("false write response, pause", n._readableState.awaitDrain);
                            n._readableState.awaitDrain++;
                            d = !0;
                        }
                        n.pause();
                    }
                }
                function g(e) {
                    f("onerror", e);
                    b();
                    t.removeListener("error", g);
                    0 === s(t, "error") && t.emit("error", e);
                }
                v(t, "error", g);
                function _() {
                    t.removeListener("finish", y);
                    b();
                }
                t.once("close", _);
                function y() {
                    f("onfinish");
                    t.removeListener("close", _);
                    b();
                }
                t.once("finish", y);
                function b() {
                    f("unpipe");
                    n.unpipe(t);
                }
                t.emit("pipe", n);
                if (!r.flowing) {
                    f("pipe resume");
                    n.resume();
                }
                return t;
            };
            function x(t) {
                return function () {
                    var e = t._readableState;
                    f("pipeOnDrain", e.awaitDrain);
                    e.awaitDrain && e.awaitDrain--;
                    if (0 === e.awaitDrain && s(t, "data")) {
                        e.flowing = !0;
                        O(t);
                    }
                };
            }
            M.prototype.unpipe = function (t) {
                var e = this._readableState, i = {
                    hasUnpiped: !1
                };
                if (0 === e.pipesCount) return this;
                if (1 === e.pipesCount) {
                    if (t && t !== e.pipes) return this;
                    t || (t = e.pipes);
                    e.pipes = null;
                    e.pipesCount = 0;
                    e.flowing = !1;
                    t && t.emit("unpipe", this, i);
                    return this;
                }
                if (!t) {
                    var n = e.pipes, a = e.pipesCount;
                    e.pipes = null;
                    e.pipesCount = 0;
                    e.flowing = !1;
                    for (var r = 0; r < a; r++) n[r].emit("unpipe", this, i);
                    return this;
                }
                var o = V(e.pipes, t);
                if (-1 === o) return this;
                e.pipes.splice(o, 1);
                e.pipesCount -= 1;
                1 === e.pipesCount && (e.pipes = e.pipes[0]);
                t.emit("unpipe", this, i);
                return this;
            };
            M.prototype.on = function (t, e) {
                var i = c.prototype.on.call(this, t, e);
                if ("data" === t) !1 !== this._readableState.flowing && this.resume(); else if ("readable" === t) {
                    var n = this._readableState;
                    if (!n.endEmitted && !n.readableListening) {
                        n.readableListening = n.needReadable = !0;
                        n.emittedReadable = !1;
                        n.reading ? n.length && E(this) : a.nextTick(R, this);
                    }
                }
                return i;
            };
            M.prototype.addListener = M.prototype.on;
            function R(t) {
                f("readable nexttick read 0");
                t.read(0);
            }
            M.prototype.resume = function () {
                var t = this._readableState;
                if (!t.flowing) {
                    f("resume");
                    t.flowing = !0;
                    I(this, t);
                }
                return this;
            };
            function I(t, e) {
                if (!e.resumeScheduled) {
                    e.resumeScheduled = !0;
                    a.nextTick(G, t, e);
                }
            }
            function G(t, e) {
                if (!e.reading) {
                    f("resume read 0");
                    t.read(0);
                }
                e.resumeScheduled = !1;
                e.awaitDrain = 0;
                t.emit("resume");
                O(t);
                e.flowing && !e.reading && t.read(0);
            }
            M.prototype.pause = function () {
                f("call pause flowing=%j", this._readableState.flowing);
                if (!1 !== this._readableState.flowing) {
                    f("pause");
                    this._readableState.flowing = !1;
                    this.emit("pause");
                }
                return this;
            };
            function O(t) {
                var e = t._readableState;
                f("flow", e.flowing);
                for (; e.flowing && null !== t.read(););
            }
            M.prototype.wrap = function (t) {
                var e = this, i = this._readableState, n = !1;
                t.on("end", function () {
                    f("wrapped end");
                    if (i.decoder && !i.ended) {
                        var t = i.decoder.end();
                        t && t.length && e.push(t);
                    }
                    e.push(null);
                });
                t.on("data", function (a) {
                    f("wrapped data");
                    i.decoder && (a = i.decoder.write(a));
                    if ((!i.objectMode || null != a) && (i.objectMode || a && a.length) && !e.push(a)) {
                        n = !0;
                        t.pause();
                    }
                });
                for (var a in t) void 0 === this[a] && "function" == typeof t[a] && (this[a] = function (e) {
                    return function () {
                        return t[e].apply(t, arguments);
                    };
                }(a));
                for (var r = 0; r < y.length; r++) t.on(y[r], this.emit.bind(this, y[r]));
                this._read = function (e) {
                    f("wrapped _read", e);
                    if (n) {
                        n = !1;
                        t.resume();
                    }
                };
                return this;
            };
            Object.defineProperty(M.prototype, "readableHighWaterMark", {
                enumerable: !1,
                get: function () {
                    return this._readableState.highWaterMark;
                }
            });
            M._fromList = L;
            function L(t, e) {
                if (0 === e.length) return null;
                var i;
                if (e.objectMode) i = e.buffer.shift(); else if (!t || t >= e.length) {
                    i = e.decoder ? e.buffer.join("") : 1 === e.buffer.length ? e.buffer.head.data : e.buffer.concat(e.length);
                    e.buffer.clear();
                } else i = j(t, e.buffer, e.decoder);
                return i;
            }
            function j(t, e, i) {
                var n;
                if (t < e.head.data.length) {
                    n = e.head.data.slice(0, t);
                    e.head.data = e.head.data.slice(t);
                } else n = t === e.head.data.length ? e.shift() : i ? U(t, e) : Y(t, e);
                return n;
            }
            function U(t, e) {
                var i = e.head, n = 1, a = i.data;
                t -= a.length;
                for (; i = i.next;) {
                    var r = i.data, o = t > r.length ? r.length : t;
                    o === r.length ? a += r : a += r.slice(0, t);
                    if (0 == (t -= o)) {
                        if (o === r.length) {
                            ++n;
                            i.next ? e.head = i.next : e.head = e.tail = null;
                        } else {
                            e.head = i;
                            i.data = r.slice(o);
                        }
                        break;
                    }
                    ++n;
                }
                e.length -= n;
                return a;
            }
            function Y(t, e) {
                var i = l.allocUnsafe(t), n = e.head, a = 1;
                n.data.copy(i);
                t -= n.data.length;
                for (; n = n.next;) {
                    var r = n.data, o = t > r.length ? r.length : t;
                    r.copy(i, i.length - t, 0, o);
                    if (0 == (t -= o)) {
                        if (o === r.length) {
                            ++a;
                            n.next ? e.head = n.next : e.head = e.tail = null;
                        } else {
                            e.head = n;
                            n.data = r.slice(o);
                        }
                        break;
                    }
                    ++a;
                }
                e.length -= a;
                return i;
            }
            function H(t) {
                var e = t._readableState;
                if (e.length > 0) throw new Error('"endReadable()" called on non-empty stream');
                if (!e.endEmitted) {
                    e.ended = !0;
                    a.nextTick(W, e, t);
                }
            }
            function W(t, e) {
                if (!t.endEmitted && 0 === t.length) {
                    t.endEmitted = !0;
                    e.readable = !1;
                    e.emit("end");
                }
            }
            function V(t, e) {
                for (var i = 0, n = t.length; i < n; i++) if (t[i] === e) return i;
                return -1;
            }
        }).call(this, t("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
        "./_stream_duplex": 162,
        "./internal/streams/BufferList": 167,
        "./internal/streams/destroy": 168,
        "./internal/streams/stream": 169,
        _process: 151,
        "core-util-is": 68,
        events: 104,
        inherits: 138,
        isarray: 170,
        "process-nextick-args": 150,
        "safe-buffer": 176,
        "string_decoder/": 171,
        util: 19
    }],
    165: [function (t, e) {
        "use strict";
        e.exports = r;
        var i = t("./_stream_duplex"), n = Object.create(t("core-util-is"));
        n.inherits = t("inherits");
        n.inherits(r, i);
        function a(t, e) {
            var i = this._transformState;
            i.transforming = !1;
            var n = i.writecb;
            if (!n) return this.emit("error", new Error("write callback called multiple times"));
            i.writechunk = null;
            i.writecb = null;
            null != e && this.push(e);
            n(t);
            var a = this._readableState;
            a.reading = !1;
            (a.needReadable || a.length < a.highWaterMark) && this._read(a.highWaterMark);
        }
        function r(t) {
            if (!(this instanceof r)) return new r(t);
            i.call(this, t);
            this._transformState = {
                afterTransform: a.bind(this),
                needTransform: !1,
                transforming: !1,
                writecb: null,
                writechunk: null,
                writeencoding: null
            };
            this._readableState.needReadable = !0;
            this._readableState.sync = !1;
            if (t) {
                "function" == typeof t.transform && (this._transform = t.transform);
                "function" == typeof t.flush && (this._flush = t.flush);
            }
            this.on("prefinish", o);
        }
        function o() {
            var t = this;
            "function" == typeof this._flush ? this._flush(function (e, i) {
                s(t, e, i);
            }) : s(this, null, null);
        }
        r.prototype.push = function (t, e) {
            this._transformState.needTransform = !1;
            return i.prototype.push.call(this, t, e);
        };
        r.prototype._transform = function () {
            throw new Error("_transform() is not implemented");
        };
        r.prototype._write = function (t, e, i) {
            var n = this._transformState;
            n.writecb = i;
            n.writechunk = t;
            n.writeencoding = e;
            if (!n.transforming) {
                var a = this._readableState;
                (n.needTransform || a.needReadable || a.length < a.highWaterMark) && this._read(a.highWaterMark);
            }
        };
        r.prototype._read = function () {
            var t = this._transformState;
            if (null !== t.writechunk && t.writecb && !t.transforming) {
                t.transforming = !0;
                this._transform(t.writechunk, t.writeencoding, t.afterTransform);
            } else t.needTransform = !0;
        };
        r.prototype._destroy = function (t, e) {
            var n = this;
            i.prototype._destroy.call(this, t, function (t) {
                e(t);
                n.emit("close");
            });
        };
        function s(t, e, i) {
            if (e) return t.emit("error", e);
            null != i && t.push(i);
            if (t._writableState.length) throw new Error("Calling transform done when ws.length != 0");
            if (t._transformState.transforming) throw new Error("Calling transform done when still transforming");
            return t.push(null);
        }
    }, {
        "./_stream_duplex": 162,
        "core-util-is": 68,
        inherits: 138
    }],
    166: [function (t, e) {
        (function (i, n) {
            "use strict";
            var a = t("process-nextick-args");
            e.exports = y;
            function r(t) {
                var e = this;
                this.next = null;
                this.entry = null;
                this.finish = function () {
                    R(e, t);
                };
            }
            var o, s = !i.browser && ["v0.10", "v0.9."].indexOf(i.version.slice(0, 5)) > -1 ? setImmediate : a.nextTick;
            y.WritableState = _;
            var c = Object.create(t("core-util-is"));
            c.inherits = t("inherits");
            var l = {
                deprecate: t("util-deprecate")
            }, h = t("./internal/streams/stream"), u = t("safe-buffer").Buffer, p = n.Uint8Array || function () { };
            function d(t) {
                return u.from(t);
            }
            var f, m = t("./internal/streams/destroy");
            c.inherits(y, h);
            function g() { }
            function _(e, i) {
                o = o || t("./_stream_duplex");
                e = e || {};
                var n = i instanceof o;
                this.objectMode = !!e.objectMode;
                n && (this.objectMode = this.objectMode || !!e.writableObjectMode);
                var a = e.highWaterMark, s = e.writableHighWaterMark, c = this.objectMode ? 16 : 16384;
                this.highWaterMark = a || 0 === a ? a : n && (s || 0 === s) ? s : c;
                this.highWaterMark = Math.floor(this.highWaterMark);
                this.finalCalled = !1;
                this.needDrain = !1;
                this.ending = !1;
                this.ended = !1;
                this.finished = !1;
                this.destroyed = !1;
                var l = !1 === e.decodeStrings;
                this.decodeStrings = !l;
                this.defaultEncoding = e.defaultEncoding || "utf8";
                this.length = 0;
                this.writing = !1;
                this.corked = 0;
                this.sync = !0;
                this.bufferProcessing = !1;
                this.onwrite = function (t) {
                    A(i, t);
                };
                this.writecb = null;
                this.writelen = 0;
                this.bufferedRequest = null;
                this.lastBufferedRequest = null;
                this.pendingcb = 0;
                this.prefinished = !1;
                this.errorEmitted = !1;
                this.bufferedRequestCount = 0;
                this.corkedRequestsFree = new r(this);
            }
            _.prototype.getBuffer = function () {
                for (var t = this.bufferedRequest, e = []; t;) {
                    e.push(t);
                    t = t.next;
                }
                return e;
            };
            (function () {
                try {
                    Object.defineProperty(_.prototype, "buffer", {
                        get: l.deprecate(function () {
                            return this.getBuffer();
                        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                    });
                } catch (t) { }
            })();
            if ("function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance]) {
                f = Function.prototype[Symbol.hasInstance];
                Object.defineProperty(y, Symbol.hasInstance, {
                    value: function (t) {
                        return !!f.call(this, t) || this === y && t && t._writableState instanceof _;
                    }
                });
            } else f = function (t) {
                return t instanceof this;
            };
            function y(e) {
                o = o || t("./_stream_duplex");
                if (!(f.call(y, this) || this instanceof o)) return new y(e);
                this._writableState = new _(e, this);
                this.writable = !0;
                if (e) {
                    "function" == typeof e.write && (this._write = e.write);
                    "function" == typeof e.writev && (this._writev = e.writev);
                    "function" == typeof e.destroy && (this._destroy = e.destroy);
                    "function" == typeof e.final && (this._final = e.final);
                }
                h.call(this);
            }
            y.prototype.pipe = function () {
                this.emit("error", new Error("Cannot pipe, not readable"));
            };
            function v(t, e) {
                var i = new Error("write after end");
                t.emit("error", i);
                a.nextTick(e, i);
            }
            function b(t, e, i, n) {
                var r = !0, o = !1;
                null === i ? o = new TypeError("May not write null values to stream") : "string" == typeof i || void 0 === i || e.objectMode || (o = new TypeError("Invalid non-string/buffer chunk"));
                if (o) {
                    t.emit("error", o);
                    a.nextTick(n, o);
                    r = !1;
                }
                return r;
            }
            y.prototype.write = function (t, e, i) {
                var n, a = this._writableState, r = !1, o = !a.objectMode && (n = t, u.isBuffer(n) || n instanceof p);
                o && !u.isBuffer(t) && (t = d(t));
                if ("function" == typeof e) {
                    i = e;
                    e = null;
                }
                o ? e = "buffer" : e || (e = a.defaultEncoding);
                "function" != typeof i && (i = g);
                if (a.ended) v(this, i); else if (o || b(this, a, t, i)) {
                    a.pendingcb++;
                    r = S(this, a, o, t, e, i);
                }
                return r;
            };
            y.prototype.cork = function () {
                this._writableState.corked++;
            };
            y.prototype.uncork = function () {
                var t = this._writableState;
                if (t.corked) {
                    t.corked--;
                    t.writing || t.corked || t.finished || t.bufferProcessing || !t.bufferedRequest || P(this, t);
                }
            };
            y.prototype.setDefaultEncoding = function (t) {
                "string" == typeof t && (t = t.toLowerCase());
                if (!(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((t + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + t);
                this._writableState.defaultEncoding = t;
                return this;
            };
            function M(t, e, i) {
                t.objectMode || !1 === t.decodeStrings || "string" != typeof e || (e = u.from(e, i));
                return e;
            }
            Object.defineProperty(y.prototype, "writableHighWaterMark", {
                enumerable: !1,
                get: function () {
                    return this._writableState.highWaterMark;
                }
            });
            function S(t, e, i, n, a, r) {
                if (!i) {
                    var o = M(e, n, a);
                    if (n !== o) {
                        i = !0;
                        a = "buffer";
                        n = o;
                    }
                }
                var s = e.objectMode ? 1 : n.length;
                e.length += s;
                var c = e.length < e.highWaterMark;
                c || (e.needDrain = !0);
                if (e.writing || e.corked) {
                    var l = e.lastBufferedRequest;
                    e.lastBufferedRequest = {
                        chunk: n,
                        encoding: a,
                        isBuf: i,
                        callback: r,
                        next: null
                    };
                    l ? l.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest;
                    e.bufferedRequestCount += 1;
                } else k(t, e, !1, s, n, a, r);
                return c;
            }
            function k(t, e, i, n, a, r, o) {
                e.writelen = n;
                e.writecb = o;
                e.writing = !0;
                e.sync = !0;
                i ? t._writev(a, e.onwrite) : t._write(a, r, e.onwrite);
                e.sync = !1;
            }
            function C(t, e, i, n, r) {
                --e.pendingcb;
                if (i) {
                    a.nextTick(r, n);
                    a.nextTick(N, t, e);
                    t._writableState.errorEmitted = !0;
                    t.emit("error", n);
                } else {
                    r(n);
                    t._writableState.errorEmitted = !0;
                    t.emit("error", n);
                    N(t, e);
                }
            }
            function w(t) {
                t.writing = !1;
                t.writecb = null;
                t.length -= t.writelen;
                t.writelen = 0;
            }
            function A(t, e) {
                var i = t._writableState, n = i.sync, a = i.writecb;
                w(i);
                if (e) C(t, i, n, e, a); else {
                    var r = E(i);
                    r || i.corked || i.bufferProcessing || !i.bufferedRequest || P(t, i);
                    n ? s(T, t, i, r, a) : T(t, i, r, a);
                }
            }
            function T(t, e, i, n) {
                i || D(t, e);
                e.pendingcb--;
                n();
                N(t, e);
            }
            function D(t, e) {
                if (0 === e.length && e.needDrain) {
                    e.needDrain = !1;
                    t.emit("drain");
                }
            }
            function P(t, e) {
                e.bufferProcessing = !0;
                var i = e.bufferedRequest;
                if (t._writev && i && i.next) {
                    var n = e.bufferedRequestCount, a = new Array(n), o = e.corkedRequestsFree;
                    o.entry = i;
                    for (var s = 0, c = !0; i;) {
                        a[s] = i;
                        i.isBuf || (c = !1);
                        i = i.next;
                        s += 1;
                    }
                    a.allBuffers = c;
                    k(t, e, !0, e.length, a, "", o.finish);
                    e.pendingcb++;
                    e.lastBufferedRequest = null;
                    if (o.next) {
                        e.corkedRequestsFree = o.next;
                        o.next = null;
                    } else e.corkedRequestsFree = new r(e);
                    e.bufferedRequestCount = 0;
                } else {
                    for (; i;) {
                        var l = i.chunk, h = i.encoding, u = i.callback;
                        k(t, e, !1, e.objectMode ? 1 : l.length, l, h, u);
                        i = i.next;
                        e.bufferedRequestCount--;
                        if (e.writing) break;
                    }
                    null === i && (e.lastBufferedRequest = null);
                }
                e.bufferedRequest = i;
                e.bufferProcessing = !1;
            }
            y.prototype._write = function (t, e, i) {
                i(new Error("_write() is not implemented"));
            };
            y.prototype._writev = null;
            y.prototype.end = function (t, e, i) {
                var n = this._writableState;
                if ("function" == typeof t) {
                    i = t;
                    t = null;
                    e = null;
                } else if ("function" == typeof e) {
                    i = e;
                    e = null;
                }
                null != t && this.write(t, e);
                if (n.corked) {
                    n.corked = 1;
                    this.uncork();
                }
                n.ending || n.finished || x(this, n, i);
            };
            function E(t) {
                return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;
            }
            function B(t, e) {
                t._final(function (i) {
                    e.pendingcb--;
                    i && t.emit("error", i);
                    e.prefinished = !0;
                    t.emit("prefinish");
                    N(t, e);
                });
            }
            function F(t, e) {
                if (!e.prefinished && !e.finalCalled) if ("function" == typeof t._final) {
                    e.pendingcb++;
                    e.finalCalled = !0;
                    a.nextTick(B, t, e);
                } else {
                    e.prefinished = !0;
                    t.emit("prefinish");
                }
            }
            function N(t, e) {
                var i = E(e);
                if (i) {
                    F(t, e);
                    if (0 === e.pendingcb) {
                        e.finished = !0;
                        t.emit("finish");
                    }
                }
                return i;
            }
            function x(t, e, i) {
                e.ending = !0;
                N(t, e);
                i && (e.finished ? a.nextTick(i) : t.once("finish", i));
                e.ended = !0;
                t.writable = !1;
            }
            function R(t, e, i) {
                var n = t.entry;
                t.entry = null;
                for (; n;) {
                    var a = n.callback;
                    e.pendingcb--;
                    a(i);
                    n = n.next;
                }
                e.corkedRequestsFree ? e.corkedRequestsFree.next = t : e.corkedRequestsFree = t;
            }
            Object.defineProperty(y.prototype, "destroyed", {
                get: function () {
                    return void 0 !== this._writableState && this._writableState.destroyed;
                },
                set: function (t) {
                    this._writableState && (this._writableState.destroyed = t);
                }
            });
            y.prototype.destroy = m.destroy;
            y.prototype._undestroy = m.undestroy;
            y.prototype._destroy = function (t, e) {
                this.end();
                e(t);
            };
        }).call(this, t("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
        "./_stream_duplex": 162,
        "./internal/streams/destroy": 168,
        "./internal/streams/stream": 169,
        _process: 151,
        "core-util-is": 68,
        inherits: 138,
        "process-nextick-args": 150,
        "safe-buffer": 176,
        "util-deprecate": 188
    }],
    167: [function (t, e) {
        "use strict";
        function i(t, e) {
            if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
        }
        var n = t("safe-buffer").Buffer, a = t("util");
        e.exports = function () {
            function t() {
                i(this, t);
                this.head = null;
                this.tail = null;
                this.length = 0;
            }
            t.prototype.push = function (t) {
                var e = {
                    data: t,
                    next: null
                };
                this.length > 0 ? this.tail.next = e : this.head = e;
                this.tail = e;
                ++this.length;
            };
            t.prototype.unshift = function (t) {
                var e = {
                    data: t,
                    next: this.head
                };
                0 === this.length && (this.tail = e);
                this.head = e;
                ++this.length;
            };
            t.prototype.shift = function () {
                if (0 !== this.length) {
                    var t = this.head.data;
                    1 === this.length ? this.head = this.tail = null : this.head = this.head.next;
                    --this.length;
                    return t;
                }
            };
            t.prototype.clear = function () {
                this.head = this.tail = null;
                this.length = 0;
            };
            t.prototype.join = function (t) {
                if (0 === this.length) return "";
                for (var e = this.head, i = "" + e.data; e = e.next;) i += t + e.data;
                return i;
            };
            t.prototype.concat = function (t) {
                if (0 === this.length) return n.alloc(0);
                if (1 === this.length) return this.head.data;
                for (var e, i, a = n.allocUnsafe(t >>> 0), r = this.head, o = 0; r;) {
                    e = a, i = o, r.data.copy(e, i);
                    o += r.data.length;
                    r = r.next;
                }
                return a;
            };
            return t;
        }();
        a && a.inspect && a.inspect.custom && (e.exports.prototype[a.inspect.custom] = function () {
            var t = a.inspect({
                length: this.length
            });
            return this.constructor.name + " " + t;
        });
    }, {
        "safe-buffer": 176,
        util: 19
    }],
    168: [function (t, e) {
        "use strict";
        var i = t("process-nextick-args");
        function n(t, e) {
            t.emit("error", e);
        }
        e.exports = {
            destroy: function (t, e) {
                var a = this, r = this._readableState && this._readableState.destroyed, o = this._writableState && this._writableState.destroyed;
                if (r || o) {
                    e ? e(t) : !t || this._writableState && this._writableState.errorEmitted || i.nextTick(n, this, t);
                    return this;
                }
                this._readableState && (this._readableState.destroyed = !0);
                this._writableState && (this._writableState.destroyed = !0);
                this._destroy(t || null, function (t) {
                    if (!e && t) {
                        i.nextTick(n, a, t);
                        a._writableState && (a._writableState.errorEmitted = !0);
                    } else e && e(t);
                });
                return this;
            },
            undestroy: function () {
                if (this._readableState) {
                    this._readableState.destroyed = !1;
                    this._readableState.reading = !1;
                    this._readableState.ended = !1;
                    this._readableState.endEmitted = !1;
                }
                if (this._writableState) {
                    this._writableState.destroyed = !1;
                    this._writableState.ended = !1;
                    this._writableState.ending = !1;
                    this._writableState.finished = !1;
                    this._writableState.errorEmitted = !1;
                }
            }
        };
    }, {
        "process-nextick-args": 150
    }],
    169: [function (t, e, i) {
        arguments[4][60][0].apply(i, arguments);
    }, {
        dup: 60,
        events: 104
    }],
    170: [function (t, e, i) {
        arguments[4][66][0].apply(i, arguments);
    }, {
        dup: 66
    }],
    171: [function (t, e, i) {
        arguments[4][63][0].apply(i, arguments);
    }, {
        dup: 63,
        "safe-buffer": 176
    }],
    172: [function (t, e) {
        e.exports = t("./readable").PassThrough;
    }, {
        "./readable": 173
    }],
    173: [function (t, e, i) {
        (i = e.exports = t("./lib/_stream_readable.js")).Stream = i;
        i.Readable = i;
        i.Writable = t("./lib/_stream_writable.js");
        i.Duplex = t("./lib/_stream_duplex.js");
        i.Transform = t("./lib/_stream_transform.js");
        i.PassThrough = t("./lib/_stream_passthrough.js");
    }, {
        "./lib/_stream_duplex.js": 162,
        "./lib/_stream_passthrough.js": 163,
        "./lib/_stream_readable.js": 164,
        "./lib/_stream_transform.js": 165,
        "./lib/_stream_writable.js": 166
    }],
    174: [function (t, e) {
        e.exports = t("./readable").Transform;
    }, {
        "./readable": 173
    }],
    175: [function (t, e) {
        e.exports = t("./lib/_stream_writable.js");
    }, {
        "./lib/_stream_writable.js": 166
    }],
    176: [function (t, e, i) {
        var n = t("buffer"), a = n.Buffer;
        function r(t, e) {
            for (var i in t) e[i] = t[i];
        }
        if (a.from && a.alloc && a.allocUnsafe && a.allocUnsafeSlow) e.exports = n; else {
            r(n, i);
            i.Buffer = o;
        }
        function o(t, e, i) {
            return a(t, e, i);
        }
        r(a, o);
        o.from = function (t, e, i) {
            if ("number" == typeof t) throw new TypeError("Argument must not be a number");
            return a(t, e, i);
        };
        o.alloc = function (t, e, i) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            var n = a(t);
            void 0 !== e ? "string" == typeof i ? n.fill(e, i) : n.fill(e) : n.fill(0);
            return n;
        };
        o.allocUnsafe = function (t) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            return a(t);
        };
        o.allocUnsafeSlow = function (t) {
            if ("number" != typeof t) throw new TypeError("Argument must be a number");
            return n.SlowBuffer(t);
        };
    }, {
        buffer: 65
    }],
    177: [function (t, e) {
        (function (i) {
            "use strict";
            var n, a = t("buffer"), r = a.Buffer, o = {};
            for (n in a) a.hasOwnProperty(n) && "SlowBuffer" !== n && "Buffer" !== n && (o[n] = a[n]);
            var s = o.Buffer = {};
            for (n in r) r.hasOwnProperty(n) && "allocUnsafe" !== n && "allocUnsafeSlow" !== n && (s[n] = r[n]);
            o.Buffer.prototype = r.prototype;
            s.from && s.from !== Uint8Array.from || (s.from = function (t, e, i) {
                if ("number" == typeof t) throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof t);
                if (t && "undefined" == typeof t.length) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t);
                return r(t, e, i);
            });
            s.alloc || (s.alloc = function (t, e, i) {
                if ("number" != typeof t) throw new TypeError('The "size" argument must be of type number. Received type ' + typeof t);
                if (t < 0 || t >= 2 * (1 << 30)) throw new RangeError('The value "' + t + '" is invalid for option "size"');
                var n = r(t);
                e && 0 !== e.length ? "string" == typeof i ? n.fill(e, i) : n.fill(e) : n.fill(0);
                return n;
            });
            if (!o.kStringMaxLength) try {
                o.kStringMaxLength = i.binding("buffer").kStringMaxLength;
            } catch (t) { }
            if (!o.constants) {
                o.constants = {
                    MAX_LENGTH: o.kMaxLength
                };
                o.kStringMaxLength && (o.constants.MAX_STRING_LENGTH = o.kStringMaxLength);
            }
            e.exports = o;
        }).call(this, t("_process"));
    }, {
        _process: 151,
        buffer: 65
    }],
    178: [function (t, e) {
        var i = t("safe-buffer").Buffer;
        function n(t, e) {
            this._block = i.alloc(t);
            this._finalSize = e;
            this._blockSize = t;
            this._len = 0;
        }
        n.prototype.update = function (t, e) {
            if ("string" == typeof t) {
                e = e || "utf8";
                t = i.from(t, e);
            }
            for (var n = this._block, a = this._blockSize, r = t.length, o = this._len, s = 0; s < r;) {
                for (var c = o % a, l = Math.min(r - s, a - c), h = 0; h < l; h++) n[c + h] = t[s + h];
                s += l;
                (o += l) % a == 0 && this._update(n);
            }
            this._len += r;
            return this;
        };
        n.prototype.digest = function (t) {
            var e = this._len % this._blockSize;
            this._block[e] = 128;
            this._block.fill(0, e + 1);
            if (e >= this._finalSize) {
                this._update(this._block);
                this._block.fill(0);
            }
            var i = 8 * this._len;
            if (i <= 4294967295) this._block.writeUInt32BE(i, this._blockSize - 4); else {
                var n = (4294967295 & i) >>> 0, a = (i - n) / 4294967296;
                this._block.writeUInt32BE(a, this._blockSize - 8);
                this._block.writeUInt32BE(n, this._blockSize - 4);
            }
            this._update(this._block);
            var r = this._hash();
            return t ? r.toString(t) : r;
        };
        n.prototype._update = function () {
            throw new Error("_update must be implemented by subclass");
        };
        e.exports = n;
    }, {
        "safe-buffer": 176
    }],
    179: [function (t, e, i) {
        (i = e.exports = function (t) {
            t = t.toLowerCase();
            var e = i[t];
            if (!e) throw new Error(t + " is not supported (we accept pull requests)");
            return new e();
        }).sha = t("./sha");
        i.sha1 = t("./sha1");
        i.sha224 = t("./sha224");
        i.sha256 = t("./sha256");
        i.sha384 = t("./sha384");
        i.sha512 = t("./sha512");
    }, {
        "./sha": 180,
        "./sha1": 181,
        "./sha224": 182,
        "./sha256": 183,
        "./sha384": 184,
        "./sha512": 185
    }],
    180: [function (t, e) {
        var i = t("inherits"), n = t("./hash"), a = t("safe-buffer").Buffer, r = [1518500249, 1859775393, -1894007588, -899497514], o = new Array(80);
        function s() {
            this.init();
            this._w = o;
            n.call(this, 64, 56);
        }
        i(s, n);
        s.prototype.init = function () {
            this._a = 1732584193;
            this._b = 4023233417;
            this._c = 2562383102;
            this._d = 271733878;
            this._e = 3285377520;
            return this;
        };
        function c(t) {
            return t << 30 | t >>> 2;
        }
        function l(t, e, i, n) {
            return 0 === t ? e & i | ~e & n : 2 === t ? e & i | e & n | i & n : e ^ i ^ n;
        }
        s.prototype._update = function (t) {
            for (var e, i = this._w, n = 0 | this._a, a = 0 | this._b, o = 0 | this._c, s = 0 | this._d, h = 0 | this._e, u = 0; u < 16; ++u) i[u] = t.readInt32BE(4 * u);
            for (; u < 80; ++u) i[u] = i[u - 3] ^ i[u - 8] ^ i[u - 14] ^ i[u - 16];
            for (var p = 0; p < 80; ++p) {
                var d = ~~(p / 20), f = ((e = n) << 5 | e >>> 27) + l(d, a, o, s) + h + i[p] + r[d] | 0;
                h = s;
                s = o;
                o = c(a);
                a = n;
                n = f;
            }
            this._a = n + this._a | 0;
            this._b = a + this._b | 0;
            this._c = o + this._c | 0;
            this._d = s + this._d | 0;
            this._e = h + this._e | 0;
        };
        s.prototype._hash = function () {
            var t = a.allocUnsafe(20);
            t.writeInt32BE(0 | this._a, 0);
            t.writeInt32BE(0 | this._b, 4);
            t.writeInt32BE(0 | this._c, 8);
            t.writeInt32BE(0 | this._d, 12);
            t.writeInt32BE(0 | this._e, 16);
            return t;
        };
        e.exports = s;
    }, {
        "./hash": 178,
        inherits: 138,
        "safe-buffer": 176
    }],
    181: [function (t, e) {
        var i = t("inherits"), n = t("./hash"), a = t("safe-buffer").Buffer, r = [1518500249, 1859775393, -1894007588, -899497514], o = new Array(80);
        function s() {
            this.init();
            this._w = o;
            n.call(this, 64, 56);
        }
        i(s, n);
        s.prototype.init = function () {
            this._a = 1732584193;
            this._b = 4023233417;
            this._c = 2562383102;
            this._d = 271733878;
            this._e = 3285377520;
            return this;
        };
        function c(t) {
            return t << 5 | t >>> 27;
        }
        function l(t) {
            return t << 30 | t >>> 2;
        }
        function h(t, e, i, n) {
            return 0 === t ? e & i | ~e & n : 2 === t ? e & i | e & n | i & n : e ^ i ^ n;
        }
        s.prototype._update = function (t) {
            for (var e, i = this._w, n = 0 | this._a, a = 0 | this._b, o = 0 | this._c, s = 0 | this._d, u = 0 | this._e, p = 0; p < 16; ++p) i[p] = t.readInt32BE(4 * p);
            for (; p < 80; ++p) i[p] = (e = i[p - 3] ^ i[p - 8] ^ i[p - 14] ^ i[p - 16]) << 1 | e >>> 31;
            for (var d = 0; d < 80; ++d) {
                var f = ~~(d / 20), m = c(n) + h(f, a, o, s) + u + i[d] + r[f] | 0;
                u = s;
                s = o;
                o = l(a);
                a = n;
                n = m;
            }
            this._a = n + this._a | 0;
            this._b = a + this._b | 0;
            this._c = o + this._c | 0;
            this._d = s + this._d | 0;
            this._e = u + this._e | 0;
        };
        s.prototype._hash = function () {
            var t = a.allocUnsafe(20);
            t.writeInt32BE(0 | this._a, 0);
            t.writeInt32BE(0 | this._b, 4);
            t.writeInt32BE(0 | this._c, 8);
            t.writeInt32BE(0 | this._d, 12);
            t.writeInt32BE(0 | this._e, 16);
            return t;
        };
        e.exports = s;
    }, {
        "./hash": 178,
        inherits: 138,
        "safe-buffer": 176
    }],
    182: [function (t, e) {
        var i = t("inherits"), n = t("./sha256"), a = t("./hash"), r = t("safe-buffer").Buffer, o = new Array(64);
        function s() {
            this.init();
            this._w = o;
            a.call(this, 64, 56);
        }
        i(s, n);
        s.prototype.init = function () {
            this._a = 3238371032;
            this._b = 914150663;
            this._c = 812702999;
            this._d = 4144912697;
            this._e = 4290775857;
            this._f = 1750603025;
            this._g = 1694076839;
            this._h = 3204075428;
            return this;
        };
        s.prototype._hash = function () {
            var t = r.allocUnsafe(28);
            t.writeInt32BE(this._a, 0);
            t.writeInt32BE(this._b, 4);
            t.writeInt32BE(this._c, 8);
            t.writeInt32BE(this._d, 12);
            t.writeInt32BE(this._e, 16);
            t.writeInt32BE(this._f, 20);
            t.writeInt32BE(this._g, 24);
            return t;
        };
        e.exports = s;
    }, {
        "./hash": 178,
        "./sha256": 183,
        inherits: 138,
        "safe-buffer": 176
    }],
    183: [function (t, e) {
        var i = t("inherits"), n = t("./hash"), a = t("safe-buffer").Buffer, r = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], o = new Array(64);
        function s() {
            this.init();
            this._w = o;
            n.call(this, 64, 56);
        }
        i(s, n);
        s.prototype.init = function () {
            this._a = 1779033703;
            this._b = 3144134277;
            this._c = 1013904242;
            this._d = 2773480762;
            this._e = 1359893119;
            this._f = 2600822924;
            this._g = 528734635;
            this._h = 1541459225;
            return this;
        };
        function c(t, e, i) {
            return i ^ t & (e ^ i);
        }
        function l(t, e, i) {
            return t & e | i & (t | e);
        }
        function h(t) {
            return (t >>> 2 | t << 30) ^ (t >>> 13 | t << 19) ^ (t >>> 22 | t << 10);
        }
        function u(t) {
            return (t >>> 6 | t << 26) ^ (t >>> 11 | t << 21) ^ (t >>> 25 | t << 7);
        }
        function p(t) {
            return (t >>> 7 | t << 25) ^ (t >>> 18 | t << 14) ^ t >>> 3;
        }
        s.prototype._update = function (t) {
            for (var e, i = this._w, n = 0 | this._a, a = 0 | this._b, o = 0 | this._c, s = 0 | this._d, d = 0 | this._e, f = 0 | this._f, m = 0 | this._g, g = 0 | this._h, _ = 0; _ < 16; ++_) i[_] = t.readInt32BE(4 * _);
            for (; _ < 64; ++_) i[_] = (((e = i[_ - 2]) >>> 17 | e << 15) ^ (e >>> 19 | e << 13) ^ e >>> 10) + i[_ - 7] + p(i[_ - 15]) + i[_ - 16] | 0;
            for (var y = 0; y < 64; ++y) {
                var v = g + u(d) + c(d, f, m) + r[y] + i[y] | 0, b = h(n) + l(n, a, o) | 0;
                g = m;
                m = f;
                f = d;
                d = s + v | 0;
                s = o;
                o = a;
                a = n;
                n = v + b | 0;
            }
            this._a = n + this._a | 0;
            this._b = a + this._b | 0;
            this._c = o + this._c | 0;
            this._d = s + this._d | 0;
            this._e = d + this._e | 0;
            this._f = f + this._f | 0;
            this._g = m + this._g | 0;
            this._h = g + this._h | 0;
        };
        s.prototype._hash = function () {
            var t = a.allocUnsafe(32);
            t.writeInt32BE(this._a, 0);
            t.writeInt32BE(this._b, 4);
            t.writeInt32BE(this._c, 8);
            t.writeInt32BE(this._d, 12);
            t.writeInt32BE(this._e, 16);
            t.writeInt32BE(this._f, 20);
            t.writeInt32BE(this._g, 24);
            t.writeInt32BE(this._h, 28);
            return t;
        };
        e.exports = s;
    }, {
        "./hash": 178,
        inherits: 138,
        "safe-buffer": 176
    }],
    184: [function (t, e) {
        var i = t("inherits"), n = t("./sha512"), a = t("./hash"), r = t("safe-buffer").Buffer, o = new Array(160);
        function s() {
            this.init();
            this._w = o;
            a.call(this, 128, 112);
        }
        i(s, n);
        s.prototype.init = function () {
            this._ah = 3418070365;
            this._bh = 1654270250;
            this._ch = 2438529370;
            this._dh = 355462360;
            this._eh = 1731405415;
            this._fh = 2394180231;
            this._gh = 3675008525;
            this._hh = 1203062813;
            this._al = 3238371032;
            this._bl = 914150663;
            this._cl = 812702999;
            this._dl = 4144912697;
            this._el = 4290775857;
            this._fl = 1750603025;
            this._gl = 1694076839;
            this._hl = 3204075428;
            return this;
        };
        s.prototype._hash = function () {
            var t = r.allocUnsafe(48);
            function e(e, i, n) {
                t.writeInt32BE(e, n);
                t.writeInt32BE(i, n + 4);
            }
            e(this._ah, this._al, 0);
            e(this._bh, this._bl, 8);
            e(this._ch, this._cl, 16);
            e(this._dh, this._dl, 24);
            e(this._eh, this._el, 32);
            e(this._fh, this._fl, 40);
            return t;
        };
        e.exports = s;
    }, {
        "./hash": 178,
        "./sha512": 185,
        inherits: 138,
        "safe-buffer": 176
    }],
    185: [function (t, e) {
        var i = t("inherits"), n = t("./hash"), a = t("safe-buffer").Buffer, r = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], o = new Array(160);
        function s() {
            this.init();
            this._w = o;
            n.call(this, 128, 112);
        }
        i(s, n);
        s.prototype.init = function () {
            this._ah = 1779033703;
            this._bh = 3144134277;
            this._ch = 1013904242;
            this._dh = 2773480762;
            this._eh = 1359893119;
            this._fh = 2600822924;
            this._gh = 528734635;
            this._hh = 1541459225;
            this._al = 4089235720;
            this._bl = 2227873595;
            this._cl = 4271175723;
            this._dl = 1595750129;
            this._el = 2917565137;
            this._fl = 725511199;
            this._gl = 4215389547;
            this._hl = 327033209;
            return this;
        };
        function c(t, e, i) {
            return i ^ t & (e ^ i);
        }
        function l(t, e, i) {
            return t & e | i & (t | e);
        }
        function h(t, e) {
            return (t >>> 28 | e << 4) ^ (e >>> 2 | t << 30) ^ (e >>> 7 | t << 25);
        }
        function u(t, e) {
            return (t >>> 14 | e << 18) ^ (t >>> 18 | e << 14) ^ (e >>> 9 | t << 23);
        }
        function p(t, e) {
            return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ t >>> 7;
        }
        function d(t, e) {
            return (t >>> 1 | e << 31) ^ (t >>> 8 | e << 24) ^ (t >>> 7 | e << 25);
        }
        function f(t, e) {
            return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ t >>> 6;
        }
        function m(t, e) {
            return (t >>> 19 | e << 13) ^ (e >>> 29 | t << 3) ^ (t >>> 6 | e << 26);
        }
        function g(t, e) {
            return t >>> 0 < e >>> 0 ? 1 : 0;
        }
        s.prototype._update = function (t) {
            for (var e = this._w, i = 0 | this._ah, n = 0 | this._bh, a = 0 | this._ch, o = 0 | this._dh, s = 0 | this._eh, _ = 0 | this._fh, y = 0 | this._gh, v = 0 | this._hh, b = 0 | this._al, M = 0 | this._bl, S = 0 | this._cl, k = 0 | this._dl, C = 0 | this._el, w = 0 | this._fl, A = 0 | this._gl, T = 0 | this._hl, D = 0; D < 32; D += 2) {
                e[D] = t.readInt32BE(4 * D);
                e[D + 1] = t.readInt32BE(4 * D + 4);
            }
            for (; D < 160; D += 2) {
                var P = e[D - 30], E = e[D - 30 + 1], B = p(P, E), F = d(E, P), N = f(P = e[D - 4], E = e[D - 4 + 1]), x = m(E, P), R = e[D - 14], I = e[D - 14 + 1], G = e[D - 32], O = e[D - 32 + 1], L = F + I | 0, j = B + R + g(L, F) | 0;
                j = (j = j + N + g(L = L + x | 0, x) | 0) + G + g(L = L + O | 0, O) | 0;
                e[D] = j;
                e[D + 1] = L;
            }
            for (var U = 0; U < 160; U += 2) {
                j = e[U];
                L = e[U + 1];
                var Y = l(i, n, a), H = l(b, M, S), W = h(i, b), V = h(b, i), z = u(s, C), J = u(C, s), X = r[U], q = r[U + 1], K = c(s, _, y), Z = c(C, w, A), Q = T + J | 0, $ = v + z + g(Q, T) | 0;
                $ = ($ = ($ = $ + K + g(Q = Q + Z | 0, Z) | 0) + X + g(Q = Q + q | 0, q) | 0) + j + g(Q = Q + L | 0, L) | 0;
                var tt = V + H | 0, et = W + Y + g(tt, V) | 0;
                v = y;
                T = A;
                y = _;
                A = w;
                _ = s;
                w = C;
                s = o + $ + g(C = k + Q | 0, k) | 0;
                o = a;
                k = S;
                a = n;
                S = M;
                n = i;
                M = b;
                i = $ + et + g(b = Q + tt | 0, Q) | 0;
            }
            this._al = this._al + b | 0;
            this._bl = this._bl + M | 0;
            this._cl = this._cl + S | 0;
            this._dl = this._dl + k | 0;
            this._el = this._el + C | 0;
            this._fl = this._fl + w | 0;
            this._gl = this._gl + A | 0;
            this._hl = this._hl + T | 0;
            this._ah = this._ah + i + g(this._al, b) | 0;
            this._bh = this._bh + n + g(this._bl, M) | 0;
            this._ch = this._ch + a + g(this._cl, S) | 0;
            this._dh = this._dh + o + g(this._dl, k) | 0;
            this._eh = this._eh + s + g(this._el, C) | 0;
            this._fh = this._fh + _ + g(this._fl, w) | 0;
            this._gh = this._gh + y + g(this._gl, A) | 0;
            this._hh = this._hh + v + g(this._hl, T) | 0;
        };
        s.prototype._hash = function () {
            var t = a.allocUnsafe(64);
            function e(e, i, n) {
                t.writeInt32BE(e, n);
                t.writeInt32BE(i, n + 4);
            }
            e(this._ah, this._al, 0);
            e(this._bh, this._bl, 8);
            e(this._ch, this._cl, 16);
            e(this._dh, this._dl, 24);
            e(this._eh, this._el, 32);
            e(this._fh, this._fl, 40);
            e(this._gh, this._gl, 48);
            e(this._hh, this._hl, 56);
            return t;
        };
        e.exports = s;
    }, {
        "./hash": 178,
        inherits: 138,
        "safe-buffer": 176
    }],
    186: [function (t, e) {
        e.exports = n;
        var i = t("events").EventEmitter;
        t("inherits")(n, i);
        n.Readable = t("readable-stream/readable.js");
        n.Writable = t("readable-stream/writable.js");
        n.Duplex = t("readable-stream/duplex.js");
        n.Transform = t("readable-stream/transform.js");
        n.PassThrough = t("readable-stream/passthrough.js");
        n.Stream = n;
        function n() {
            i.call(this);
        }
        n.prototype.pipe = function (t, e) {
            var n = this;
            function a(e) {
                t.writable && !1 === t.write(e) && n.pause && n.pause();
            }
            n.on("data", a);
            function r() {
                n.readable && n.resume && n.resume();
            }
            t.on("drain", r);
            if (!(t._isStdio || e && !1 === e.end)) {
                n.on("end", s);
                n.on("close", c);
            }
            var o = !1;
            function s() {
                if (!o) {
                    o = !0;
                    t.end();
                }
            }
            function c() {
                if (!o) {
                    o = !0;
                    "function" == typeof t.destroy && t.destroy();
                }
            }
            function l(t) {
                h();
                if (0 === i.listenerCount(this, "error")) throw t;
            }
            n.on("error", l);
            t.on("error", l);
            function h() {
                n.removeListener("data", a);
                t.removeListener("drain", r);
                n.removeListener("end", s);
                n.removeListener("close", c);
                n.removeListener("error", l);
                t.removeListener("error", l);
                n.removeListener("end", h);
                n.removeListener("close", h);
                t.removeListener("close", h);
            }
            n.on("end", h);
            n.on("close", h);
            t.on("close", h);
            t.emit("pipe", n);
            return t;
        };
    }, {
        events: 104,
        inherits: 138,
        "readable-stream/duplex.js": 161,
        "readable-stream/passthrough.js": 172,
        "readable-stream/readable.js": 173,
        "readable-stream/transform.js": 174,
        "readable-stream/writable.js": 175
    }],
    187: [function (t, e, i) {
        var n = t("buffer").Buffer, a = n.isEncoding || function (t) {
            switch (t && t.toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                case "raw":
                    return !0;

                default:
                    return !1;
            }
        };
        function r(t) {
            if (t && !a(t)) throw new Error("Unknown encoding: " + t);
        }
        var o = i.StringDecoder = function (t) {
            this.encoding = (t || "utf8").toLowerCase().replace(/[-_]/, "");
            r(t);
            switch (this.encoding) {
                case "utf8":
                    this.surrogateSize = 3;
                    break;

                case "ucs2":
                case "utf16le":
                    this.surrogateSize = 2;
                    this.detectIncompleteChar = c;
                    break;

                case "base64":
                    this.surrogateSize = 3;
                    this.detectIncompleteChar = l;
                    break;

                default:
                    this.write = s;
                    return;
            }
            this.charBuffer = new n(6);
            this.charReceived = 0;
            this.charLength = 0;
        };
        o.prototype.write = function (t) {
            for (var e = ""; this.charLength;) {
                var i = t.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : t.length;
                t.copy(this.charBuffer, this.charReceived, 0, i);
                this.charReceived += i;
                if (this.charReceived < this.charLength) return "";
                t = t.slice(i, t.length);
                if (!((n = (e = this.charBuffer.slice(0, this.charLength).toString(this.encoding)).charCodeAt(e.length - 1)) >= 55296 && n <= 56319)) {
                    this.charReceived = this.charLength = 0;
                    if (0 === t.length) return e;
                    break;
                }
                this.charLength += this.surrogateSize;
                e = "";
            }
            this.detectIncompleteChar(t);
            var n, a = t.length;
            if (this.charLength) {
                t.copy(this.charBuffer, 0, t.length - this.charReceived, a);
                a -= this.charReceived;
            }
            a = (e += t.toString(this.encoding, 0, a)).length - 1;
            if ((n = e.charCodeAt(a)) >= 55296 && n <= 56319) {
                var r = this.surrogateSize;
                this.charLength += r;
                this.charReceived += r;
                this.charBuffer.copy(this.charBuffer, r, 0, r);
                t.copy(this.charBuffer, 0, 0, r);
                return e.substring(0, a);
            }
            return e;
        };
        o.prototype.detectIncompleteChar = function (t) {
            for (var e = t.length >= 3 ? 3 : t.length; e > 0; e--) {
                var i = t[t.length - e];
                if (1 == e && i >> 5 == 6) {
                    this.charLength = 2;
                    break;
                }
                if (e <= 2 && i >> 4 == 14) {
                    this.charLength = 3;
                    break;
                }
                if (e <= 3 && i >> 3 == 30) {
                    this.charLength = 4;
                    break;
                }
            }
            this.charReceived = e;
        };
        o.prototype.end = function (t) {
            var e = "";
            t && t.length && (e = this.write(t));
            if (this.charReceived) {
                var i = this.charReceived, n = this.charBuffer, a = this.encoding;
                e += n.slice(0, i).toString(a);
            }
            return e;
        };
        function s(t) {
            return t.toString(this.encoding);
        }
        function c(t) {
            this.charReceived = t.length % 2;
            this.charLength = this.charReceived ? 2 : 0;
        }
        function l(t) {
            this.charReceived = t.length % 3;
            this.charLength = this.charReceived ? 3 : 0;
        }
    }, {
        buffer: 65
    }],
    188: [function (t, e) {
        (function (t) {
            e.exports = function (t, e) {
                if (i("noDeprecation")) return t;
                var n = !1;
                return function () {
                    if (!n) {
                        if (i("throwDeprecation")) throw new Error(e);
                        i("traceDeprecation") ? console.trace(e) : console.warn(e);
                        n = !0;
                    }
                    return t.apply(this, arguments);
                };
            };
            function i(e) {
                try {
                    if (!t.localStorage) return !1;
                } catch (t) {
                    return !1;
                }
                var i = t.localStorage[e];
                return null != i && "true" === String(i).toLowerCase();
            }
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {}],
    AdjustScreen: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "7c9f8zBjR5H5Yt0iZ7h3Pdq", "AdjustScreen");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = cc._decorator, s = o.ccclass, c = o.property, l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.target = null;
                e.xAdjust = !1;
                e.yAdjust = !0;
                return e;
            }
            e.prototype.onLoad = function () {
                if (this.target) {
                    if (this.xAdjust) {
                        var t = this.node.x / 320;
                        this.node.x = (this.target.width >> 1) * t;
                    }
                    if (this.yAdjust) {
                        var e = this.node.y / 640;
                        this.node.y = (this.target.height >> 1) * e;
                    }
                }
            };
            r([c({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "target", void 0);
            r([c({
                tooltip: !1
            })], e.prototype, "xAdjust", void 0);
            r([c({
                tooltip: !1
            })], e.prototype, "yAdjust", void 0);
            return r([s], e);
        }(cc.Component);
        i.default = l;
        cc._RF.pop();
    }, {}],
    AndroidPlatform: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1f8cfuOTFVC759c1ntyxNfL", "AndroidPlatform");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../config/GameEnum"), o = t("../util/Tools"), s = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_type = r.PlatFormType.Android;
                return e;
            }
            e.prototype.init = function () { };
            e.prototype.copyToClipboard = function (t) {
                return jsb.reflection.callStaticMethod("com/tools/jnihelper/JniHelper", "copyToClipboard", "(Ljava/lang/String;)I", t);
            };
            e.prototype.onExitGame = function (t) {
                o.DYTools.warn("exit game");
                t && cc.game.end();
            };
            e.prototype.virbrate = function (t) {
                var e = t ? 800 : 200;
                jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "vibrate", "(I)V", e);
            };
            e.prototype.getRefreshRate = function () {
                return jsb.reflection.callStaticMethod("org/cocos2dx/javascript/AppActivity", "getRefreshRate", "()I");
            };
            e.prototype.playRewardAd = function (t) {
                jsb.reflection.callStaticMethod("com/tools/jnihelper/JniHelper", "playRewardedAd", "(I)V", t);
            };
            e.prototype.onRewardPlay = function () { };
            e.prototype.showBanner = function () { };
            e.prototype.hideBanner = function () { };
            e.prototype.playInterstitialAd = function () { };
            e.prototype.playSplashAd = function () { };
            e.prototype.hideAdLoadingForTimeOut = function () {
                jsb.reflection.callStaticMethod("com/tools/jnihelper/JniHelper", "hideAdLoadingForTimeOut", "()V");
            };
            e.prototype.sendReport = function () { };
            e.prototype.sendReportTest = function () { };
            e.prototype.sendReportRegister = function () { };
            return e;
        }(t("./PlatformBase").default);
        i.default = s;
        cc._RF.pop();
    }, {
        "../config/GameEnum": "GameEnum",
        "../util/Tools": "Tools",
        "./PlatformBase": "PlatformBase"
    }],
    AttrBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1a8c1cBU+hPuKYj48Iq1GRH", "AttrBase");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        cc._RF.pop();
    }, {}],
    AudioManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "30a57KyIVdFA6kkv16XYYNX", "AudioManager");
        var n = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, a = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.AudioMgr = void 0;
        var r = t("../../util/Tools"), o = t("./FrameManager"), s = function () {
            function t() {
                this.m_clips = new Map();
                this.m_audios = new Map();
                this.m_audioCDMap = new Map();
                this.m_music = !1;
                this.m_sound = !1;
                this.m_bgName = "";
                this.m_bgAudioId = -1;
            }
            t.prototype.init = function (t, e) {
                this.m_music = e;
                this.m_sound = t;
                cc.audioEngine.setMaxAudioInstance(30);
            };
            t.prototype.pauseAll = function () {
                cc.audioEngine.pauseAll();
            };
            t.prototype.resumeAll = function () {
                cc.audioEngine.resumeAll();
            };
            t.prototype.getAudioClip = function (t) {
                return n(this, void 0, void 0, function () {
                    var e;
                    return a(this, function (i) {
                        switch (i.label) {
                            case 0:
                                return (e = o.FrameMgr.loadMgr.get(t, cc.AudioClip)) ? [3, 2] : [4, o.FrameMgr.loadMgr.loadAudioAsync(t)];

                            case 1:
                                e = i.sent();
                                i.label = 2;

                            case 2:
                                return [2, e];
                        }
                    });
                });
            };
            t.prototype.stop = function (t) {
                var e = this.m_audios.get(t);
                if (e) {
                    for (var i = 0, n = e; i < n.length; i++) {
                        var a = n[i];
                        cc.audioEngine.stop(a);
                    }
                    this.m_audios.delete(t);
                }
            };
            t.prototype.stopAll = function (t) {
                void 0 === t && (t = !1);
                this.m_audios.forEach(function (t) {
                    for (var e = 0, i = t; e < i.length; e++) {
                        var n = i[e];
                        cc.audioEngine.stop(n);
                    }
                });
                this.m_audios.clear();
                t && this.stopbg();
            };
            t.prototype.stopEffect = function (t, e) {
                cc.audioEngine.stopEffect(t);
                if (e) {
                    var i = this.m_audios.get(e);
                    if (i) {
                        r.DYTools.arrRemove(i, t);
                        this.m_audios.set(e, i);
                    }
                }
            };
            t.prototype.playEffect = function (t, e, i) {
                void 0 === e && (e = !1);
                void 0 === i && (i = null);
                return n(this, void 0, void 0, function () {
                    var n, r, s;
                    return a(this, function (a) {
                        switch (a.label) {
                            case 0:
                                return this.m_sound ? (n = o.FrameMgr.loadMgr.get(t, cc.AudioClip)) ? [3, 2] : [4, this.getAudioClip(t)] : [2, -1];

                            case 1:
                                n = a.sent();
                                a.label = 2;

                            case 2:
                                -1;
                                r = null != i ? cc.audioEngine.play(n, e, i) : cc.audioEngine.playEffect(n, e);
                                if (e) {
                                    (s = this.m_audios.get(t)) || (s = []);
                                    s.push(r);
                                    this.m_audios.set(t, s);
                                }
                                return [2, r];
                        }
                    });
                });
            };
            t.prototype.playEffectSync = function (t, e) {
                void 0 === e && (e = !1);
                if (!this.m_sound) return -1;
                var i = o.FrameMgr.loadMgr.get(t, cc.AudioClip);
                if (!i) return -1;
                var n = cc.audioEngine.playEffect(i, e);
                if (e) {
                    var a = this.m_audios.get(t);
                    a || (a = []);
                    a.push(n);
                    this.m_audios.set(t, a);
                }
                return n;
            };
            t.prototype.playEffectForCD = function (t, e) {
                var i = this;
                if (0 != this.m_audioCDMap.get(t)) {
                    this.playEffect(t);
                    this.m_audioCDMap.set(t, !1);
                    setTimeout(function () {
                        i.m_audioCDMap.set(t, !0);
                    }, 1e3 * e);
                }
            };
            t.prototype.playbg = function (t, e) {
                void 0 === e && (e = !1);
                return n(this, void 0, void 0, function () {
                    var i;
                    return a(this, function (n) {
                        switch (n.label) {
                            case 0:
                                if (!e && this.m_bgName == t) return [2];
                                this.m_bgName = t;
                                return this.m_music ? [4, this.getAudioClip(t)] : [2];

                            case 1:
                                if (i = n.sent()) {
                                    this.m_bgAudioId = cc.audioEngine.playMusic(i, !0);
                                    this.m_bgName = t;
                                }
                                return [2];
                        }
                    });
                });
            };
            t.prototype.stopbg = function () {
                if (this.m_bgAudioId >= 0) {
                    cc.audioEngine.stop(this.m_bgAudioId);
                    this.m_bgAudioId = -1;
                    this.m_bgName = null;
                }
            };
            t.prototype.setMusicOn = function (t) {
                if (this.m_music != t) {
                    this.m_music = t;
                    this.m_music ? this.m_bgName && this.playbg(this.m_bgName, !0) : this.stopbg();
                }
            };
            t.prototype.setSoundOn = function (t) {
                this.m_sound = t;
                this.m_sound || this.stopAll();
            };
            t.instance = new t();
            return t;
        }();
        i.default = s;
        i.AudioMgr = s.instance;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./FrameManager": "FrameManager"
    }],
    BaseDataContainer: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "25196wBQgpGfLOTxfX0/MV1", "BaseDataContainer");
        var n = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, a = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../frame/manager/FrameManager"), o = t("../../util/Tools"), s = function () {
            function t() {
                this.dataMap = new Map();
                this.tableName = "";
            }
            t.prototype.initData = function (t, e) {
                if (t) for (var i = 0; i < t.length; i++) {
                    var n = new e(this.tableName);
                    n.loadJson(t[i]);
                    this.dataMap.set(n.id, n);
                }
            };
            t.prototype.loadDataAsync = function (t, e) {
                return n(this, void 0, Promise, function () {
                    var i;
                    return a(this, function (n) {
                        switch (n.label) {
                            case 0:
                                this.tableName = t;
                                return [4, r.FrameMgr.loadMgr.loadJsonAsync(t)];

                            case 1:
                                i = n.sent();
                                this.initData(i, e);
                                return [2];
                        }
                    });
                });
            };
            t.prototype.loadDataWithComplete = function (t, e, i) {
                var n = this;
                this.tableName = t;
                r.FrameMgr.loadMgr.loadJson(t, function (t) {
                    n.initData(t, e);
                    i && i(t);
                });
            };
            t.prototype.loadDataWithLoaded = function (t, e) {
                this.tableName = t;
                var i = r.FrameMgr.loadMgr.get(t, cc.TextAsset);
                if (i) {
                    var n = i.text, a = o.DYTools.AESDecode(n), s = JSON.parse(a);
                    this.initData(s, e);
                } else o.DYTools.warn("no json", t);
            };
            t.prototype.getData = function (t) {
                return this.dataMap.get(t) || null;
            };
            t.prototype.getAllData = function () {
                return this.dataMap || null;
            };
            t.prototype.setData = function (t, e) {
                this.dataMap.set(t, e);
            };
            t.prototype.getLength = function () {
                return this.dataMap.size;
            };
            t.prototype.clear = function (t) {
                void 0 === t && (t = !0);
                this.dataMap.clear();
                t && r.FrameMgr.loadMgr.release(this.tableName, cc.TextAsset);
            };
            return t;
        }();
        i.default = s;
        cc._RF.pop();
    }, {
        "../../frame/manager/FrameManager": "FrameManager",
        "../../util/Tools": "Tools"
    }],
    BattleFlowManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "99a98qLzd9GU6jn9EScbRf4", "BattleFlowManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.BattleFlowMgr = i.BattleFlowBase = void 0;
        var n = t("../../config/GameEnum"), a = t("./FrameManager"), r = function () {
            function t() {
                this.priority = 0;
                this.__init__();
            }
            t.prototype.__init__ = function () {
                i.BattleFlowMgr.addManager(this);
                i.BattleFlowMgr.addLoadCall(this.addLoadingRes.bind(this));
            };
            t.prototype.getInitTime = function () {
                return 20;
            };
            return t;
        }();
        i.BattleFlowBase = r;
        var o = function () {
            function t() {
                this._loadingLists = new Map();
                this._loadingCalls = [];
                this._loadingTypeArr = [];
                this._loadingResArr = [];
                this._loadingIndex = 0;
                this._overCount = 0;
                this._overCall = null;
                this._progress = new Map();
                this._progressCall = null;
                this._progressNum = 0;
                this._managerList = [];
            }
            t.prototype.addLoadCall = function (t) {
                this._loadingCalls.push(t);
            };
            t.prototype.addManager = function (t) {
                this._managerList.push(t);
            };
            t.prototype.clear = function (t) {
                void 0 === t && (t = !0);
                this._clearManager();
                if (t) {
                    this._releaseRes();
                    this._loadingLists.clear();
                }
                this._overCount = 0;
            };
            t.prototype.loadingRes = function (t, e, i) {
                this._overCall = e;
                this._progressCall = i;
                this._doLoadingCall(t);
                this._loadRes();
            };
            t.prototype.initData = function (t) {
                this._managerList = this._managerList.sort(function (t, e) {
                    return t.priority - e.priority;
                });
                for (var e = this._managerList.length, i = 0; i < e; i++) {
                    var n = this._managerList[i];
                    if (!(n.priority < 0)) {
                        n.initData && n.initData();
                        i == e - 1 && t && t();
                    }
                }
            };
            t.prototype.initManager = function () {
                this._managerList = this._managerList.sort(function (t, e) {
                    return t.priority - e.priority;
                });
                for (var t = this._managerList.length, e = 0; e < t; e++) {
                    var i = this._managerList[e];
                    i.priority < 0 || i.init && i.init();
                }
            };
            t.prototype._clearManager = function () {
                for (var t = this._managerList.length - 1; t >= 0; t--) {
                    var e = this._managerList[t];
                    e.clear && e.clear();
                }
            };
            t.prototype._doLoadingCall = function (t) {
                var e = this;
                this._loadingLists.clear();
                this._loadingCalls.forEach(function (i) {
                    i && i().forEach(function (i) {
                        var a = i.loadType;
                        if (a == t || a == n.LoadType.All) {
                            var r = e._loadingLists.get(i.itemType);
                            r || (r = []);
                            (r = r.concat(i.itemNames)).length > 0 && e._loadingLists.set(i.itemType, r);
                        }
                    });
                });
            };
            t.prototype._loadRes = function () {
                var t = this;
                this._overCount = 0;
                this._progressNum = 0;
                this._progress.clear();
                this._loadingTypeArr.splice(0);
                this._loadingResArr.splice(0);
                this._loadingIndex = 0;
                this._loadingLists.forEach(function (e, i) {
                    t._loadingResArr.push(e);
                    t._loadingTypeArr.push(i);
                });
                this._loadNextRes();
            };
            t.prototype._loadNextRes = function () {
                this._loadingIndex++;
                for (var t = 0; t < this._loadingTypeArr.length; t++) {
                    var e = this._loadingTypeArr[t], i = this._getResTypeIndex(e);
                    if (i == this._loadingIndex) {
                        a.FrameMgr.loadMgr.load(this._loadingResArr[t], e, this._onLoadOver.bind(this, e), this._onLoadFail.bind(this), this._onProgress.bind(this, e));
                        break;
                    }
                    if (-1 == i) {
                        a.FrameMgr.loadMgr.load(this._loadingResArr[t], e, this._onLoadOver.bind(this, e), this._onLoadFail.bind(this), this._onProgress.bind(this, e));
                        break;
                    }
                }
            };
            t.prototype._getResTypeIndex = function (t) {
                switch (t) {
                    case cc.JsonAsset:
                        return 1;

                    case cc.TextAsset:
                        return 2;

                    case sp.SkeletonData:
                        return 3;

                    case cc.AudioClip:
                        return 4;

                    case cc.SpriteAtlas:
                        return 5;

                    case cc.Prefab:
                        return 6;

                    case cc.SpriteFrame:
                        return 7;
                }
                return -1;
            };
            t.prototype._onLoadFail = function () { };
            t.prototype._onLoadOver = function (t) {
                switch (t) {
                    case cc.JsonAsset:
                        a.FrameMgr.reportMgr.sendReportLoading(n.LoadingStep.BattleResJson);
                        break;

                    case cc.TextAsset:
                        a.FrameMgr.reportMgr.sendReportLoading(n.LoadingStep.BattleResTxt);
                        break;

                    case sp.SkeletonData:
                        a.FrameMgr.reportMgr.sendReportLoading(n.LoadingStep.BattleResSpine);
                        break;

                    case cc.AudioClip:
                        a.FrameMgr.reportMgr.sendReportLoading(n.LoadingStep.BattleResAudio);
                        break;

                    case cc.SpriteAtlas:
                        a.FrameMgr.reportMgr.sendReportLoading(n.LoadingStep.BattleResAtlas);
                        break;

                    case cc.Prefab:
                        a.FrameMgr.reportMgr.sendReportLoading(n.LoadingStep.BattleResPrefab);
                        break;

                    case cc.SpriteFrame:
                        a.FrameMgr.reportMgr.sendReportLoading(n.LoadingStep.BattleResTexture);
                }
                this._overCount += 1;
                if (this._overCount == this._loadingLists.size) {
                    this._overCall && this._overCall();
                    this._overCall = null;
                } else this._loadNextRes();
            };
            t.prototype._onProgress = function (t, e, i) {
                var n = i;
                this._progress.set(t, n);
                var a = 0;
                this._progress.forEach(function (t) {
                    a += t;
                });
                this._progressNum = a / this._loadingLists.size;
                this._progressCall && this._progressCall(this._progressNum);
            };
            t.prototype._releaseRes = function () {
                this._loadingLists.forEach(function (t, e) {
                    t.forEach(function (t) {
                        a.FrameMgr.loadMgr.release(t, e);
                    });
                });
            };
            t.instance = new t();
            return t;
        }();
        i.BattleFlowMgr = o.instance;
        cc._RF.pop();
    }, {
        "../../config/GameEnum": "GameEnum",
        "./FrameManager": "FrameManager"
    }],
    BattleManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "15bb78VXUhH0LR3RgcZ7YTB", "BattleManager");
        var n = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, a = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.BattleMgr = void 0;
        var r = t("../../../../config/GameConst"), o = t("../../../../config/GameEnum"), s = t("../../../../data/manager/ConfigDataManager"), c = t("../../../../frame/manager/FrameManager"), l = t("../../../../frame/manager/NoticeManager"), h = t("./BulletManager"), u = t("./CollideManager"), p = t("./EnemyManager"), d = t("./LootManager"), f = t("../../../../frame/manager/PopupManager"), m = t("../../../ui/scene/battle/ui/PopupSettle"), g = t("./GameRuleManager"), _ = t("./SnakeManager"), y = t("./VeinManager"), v = t("../../../../frame/manager/BattleFlowManager"), b = t("../../../../frame/manager/CameraManager"), M = t("../../../ui/scene/battle/ui/PopupRelive"), S = t("../../../../data/storage/GameData"), k = t("../common/GuideManager"), C = t("./BossManager"), w = t("../../../../util/GameFunc"), A = t("../../../../frame/manager/ReportManager"), T = t("../../../../frame/manager/PoolManager"), D = t("./wave/CoinWaveManager"), P = t("./wave/NormalWaveManager"), E = t("./MapManager"), B = t("./EntityManager"), F = t("../../../../util/Tools"), N = function () {
            function t() {
                this.m_battleNode = null;
                this.m_mapNode = null;
                this.m_upEnvNode = null;
                this.touchUI = null;
                this.pauseUI = null;
                this.m_touchEndData = [];
                this.m_timeScale = 1;
                this.m_slowAble = !0;
                this.m_stage = 1;
                this.m_stageInfoData = null;
                this.m_resId = 0;
                this.m_mapId = 1;
                this.m_enemyId = 1;
                this.m_stageRange = cc.Vec2.ZERO;
                this.m_battling = !1;
                this._startCall = null;
                this.m_result = !1;
                this._gameType = o.GameType.Normal;
                this.m_loopAudioId = [];
                this.m_intervalAudio = null;
                this.m_audioTime = 0;
            }
            Object.defineProperty(t.prototype, "battling", {
                get: function () {
                    return this.m_battling;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "slowAble", {
                get: function () {
                    return this.m_slowAble;
                },
                set: function (t) {
                    this.m_slowAble = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "timeScale", {
                get: function () {
                    return this.m_timeScale;
                },
                set: function (t) {
                    this.m_timeScale = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "stage", {
                get: function () {
                    return this.m_stage;
                },
                set: function (t) {
                    this.m_stage = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "stageRange", {
                get: function () {
                    return this.m_stageRange;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "resId", {
                get: function () {
                    return this.m_resId;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "mapId", {
                get: function () {
                    return this.m_mapId;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "enemyId", {
                get: function () {
                    return this.m_enemyId;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "stageInfoData", {
                get: function () {
                    return this.m_stageInfoData;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "battleNode", {
                get: function () {
                    return this.m_battleNode;
                },
                set: function (t) {
                    this.m_battleNode = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "mapNode", {
                get: function () {
                    return this.m_mapNode;
                },
                set: function (t) {
                    this.m_mapNode = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "upEnvNode", {
                get: function () {
                    return this.m_upEnvNode;
                },
                set: function (t) {
                    this.m_upEnvNode = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "result", {
                get: function () {
                    return this.m_result;
                },
                set: function (t) {
                    this.m_result = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "gameType", {
                get: function () {
                    return this._gameType;
                },
                set: function (t) {
                    this._gameType = t;
                },
                enumerable: !1,
                configurable: !0
            });
            t.prototype.isGameType = function (t) {
                return this.gameType == t;
            };
            t.prototype.clear = function (t) {
                void 0 === t && (t = !1);
                this.m_battling = !1;
                c.FrameMgr.audioMgr.stopAll(!0);
                c.FrameMgr.noticeMgr.reset();
                g.GameRuleMgr.reset();
                if (r.GValue.ResFinished && this.resId != r.GValue.CurResId) {
                    v.BattleFlowMgr.clear();
                    r.GValue.ResFinished = !1;
                    r.GValue.CurResId = 0;
                } else v.BattleFlowMgr.clear(!1);
                t || C.BossMgr.releaseBossRes();
                T.PoolMgr.clear();
                r.GValue.BattleCamera = null;
                r.GValue.BattleCameraNode = null;
                this.m_intervalAudio = null;
                for (var e = 0, i = this.m_loopAudioId; e < i.length; e++) {
                    var n = i[e];
                    c.FrameMgr.audioMgr.stopEffect(n);
                }
                this.m_loopAudioId.splice(0);
            };
            t.prototype.setBattleData = function (t) {
                this.stage = t;
                this.m_stageInfoData = s.ConfigDataMgr.getData("ConfigStageInfoData", this.stage);
                this.gameType = this.m_stageInfoData ? this.m_stageInfoData.gameType : o.GameType.Normal;
                var e = w.GFunc.getStageData(this.stage);
                this.m_resId = e.id;
                this.m_stageRange = cc.v2(e.stageMin, e.stageMax);
                this.m_mapId = e.mapType;
                this.m_enemyId = e.enemyType;
            };
            t.prototype.init = function (t) {
                this.m_timeScale = 1;
                this.m_touchEndData = s.ConfigDataMgr.getGlobalDataNumArr(o.GlobalKey.Slow);
                r.GValue.init();
                u.CollideMgr.init();
                v.BattleFlowMgr.initManager();
                g.GameRuleMgr.init();
                l.NoticeMgr.on(o.EventTypeEnum.TouchEnd, this.onTouchEnd.bind(this), this, !0);
                l.NoticeMgr.on(o.EventTypeEnum.TouchStart, this.onTouchStart.bind(this), this, !0);
                l.NoticeMgr.on(o.EventTypeEnum.TouchMove, this.onTouchMove.bind(this), this, !0);
                t && t();
            };
            t.prototype.startBattleReady = function (t) {
                this.slowAble = !0;
                this.m_result = !1;
                var e = s.ConfigDataMgr.getData("ConfigStageInfoData", this.stage);
                _.SnakeMgr.startBattleReady(function () {
                    k.GuideMgr.checkNextGuidePoint(!0);
                });
                this.isGameType(o.GameType.Coin) ? D.CoinWaveMgr.startBattleReady() : P.NormalWaveMgr.startBattleReady();
                b.CameraMgr.startBattleReady(e);
                this.playAudio();
                t && t();
            };
            t.prototype.playAudio = function () {
                return n(this, void 0, void 0, function () {
                    var t, e, i, s, l, h, u = this;
                    return a(this, function (p) {
                        switch (p.label) {
                            case 0:
                                if (!this.isGameType(o.GameType.Coin)) return [3, 1];
                                c.FrameMgr.audioMgr.playbg("bgm_battle_0", !0);
                                return [3, 10];

                            case 1:
                                switch (this.mapId) {
                                    case 1:
                                    case 2:
                                        return [3, 2];

                                    case 3:
                                        return [3, 4];

                                    case 4:
                                        return [3, 7];

                                    case 5:
                                        return [3, 8];
                                }
                                return [3, 9];

                            case 2:
                                c.FrameMgr.audioMgr.playbg("bgm_battle_1", !0);
                                e = (t = this.m_loopAudioId).push;
                                return [4, c.FrameMgr.audioMgr.playEffect("aura_1_water", !0)];

                            case 3:
                                e.apply(t, [p.sent()]);
                                r.GValue.BattleCamera && r.GValue.BattleCamera.scheduleOnce(function () {
                                    return n(u, void 0, void 0, function () {
                                        var t, e;
                                        return a(this, function (i) {
                                            switch (i.label) {
                                                case 0:
                                                    e = (t = this.m_loopAudioId).push;
                                                    return [4, c.FrameMgr.audioMgr.playEffect("aura_1_fire", !0)];

                                                case 1:
                                                    e.apply(t, [i.sent()]);
                                                    return [2];
                                            }
                                        });
                                    });
                                }, 8.7);
                                return [3, 10];

                            case 4:
                                s = (i = this.m_loopAudioId).push;
                                return [4, c.FrameMgr.audioMgr.playEffect("aura_3_water", !0)];

                            case 5:
                                s.apply(i, [p.sent()]);
                                h = (l = this.m_loopAudioId).push;
                                return [4, c.FrameMgr.audioMgr.playEffect("aura_1_fire", !0)];

                            case 6:
                                h.apply(l, [p.sent()]);
                                r.GValue.BattleCamera && r.GValue.BattleCamera.scheduleOnce(function () {
                                    c.FrameMgr.audioMgr.playbg("bgm_battle_3", !0);
                                }, 2);
                                this.m_intervalAudio = "aura_3_bubble";
                                this.m_audioTime = 2;
                                return [3, 10];

                            case 7:
                                r.GValue.BattleCamera && r.GValue.BattleCamera.scheduleOnce(function () {
                                    c.FrameMgr.audioMgr.playbg("bgm_battle_4", !0);
                                }, 2);
                                return [3, 10];

                            case 8:
                                r.GValue.BattleCamera && r.GValue.BattleCamera.scheduleOnce(function () {
                                    c.FrameMgr.audioMgr.playbg("bgm_battle_5", !0);
                                }, 2);
                                return [3, 10];

                            case 9:
                                p.label = 10;

                            case 10:
                                return [2];
                        }
                    });
                });
            };
            t.prototype.updateIntervalAudio = function (t) {
                if (this.m_intervalAudio) {
                    this.m_audioTime -= t;
                    if (this.m_audioTime < 0) {
                        c.FrameMgr.audioMgr.playEffect(this.m_intervalAudio);
                        this.m_audioTime = F.DYTools.random_int(6, 8);
                    }
                }
            };
            t.prototype.snakeIn = function (t) {
                _.SnakeMgr.playSnakeInAnim(t);
            };
            t.prototype.sortieBattle = function (t) {
                var e = this;
                this._startCall = function () {
                    e._startCall = null;
                    t && t();
                };
            };
            t.prototype.startBattle = function (t) {
                u.CollideMgr.enabled = !0;
                this.m_battling = !0;
                this.isGameType(o.GameType.Coin) ? D.CoinWaveMgr.startBattle() : P.NormalWaveMgr.startBattle();
                p.EnemyMgr.startBattle();
                b.CameraMgr.startBattle();
                _.SnakeMgr.startBattle();
                E.MapMgr.startBattle();
                h.BulletMgr.startBattle();
                t && t();
            };
            t.prototype.cameraMove = function (t) {
                b.CameraMgr.onGameWillOver(t);
            };
            t.prototype.snakeOut = function (t) {
                _.SnakeMgr.playSnakeOutAnim(t, function () {
                    g.GameRuleMgr.changeState(o.GameState.Over);
                });
            };
            t.prototype.snakeMoveToDoor = function (t) {
                u.CollideMgr.enabled = !1;
                _.SnakeMgr.playSnakeMoveToDoorAnim(t);
            };
            t.prototype.battleWillOver = function (t) {
                t && t();
            };
            t.prototype.showGameResult = function () {
                this.slowAble = !1;
                this.stopSlowTween();
                this.timeScale = 1;
                1 == this.stage && S.GData.setGuided(o.GuideType.FirstBattle);
                _.SnakeMgr.moveAble = !1;
                A.ReportMgr.sendReportStageOver(this.stage, 1, Math.floor(_.SnakeMgr.liveTime), _.SnakeMgr.getSnakeCurrentLength());
                A.ReportMgr.sendReportStageTime(this.stage, Math.floor(_.SnakeMgr.liveTime));
                f.PopupMgr.show({
                    cls: m.default,
                    options: this.result
                });
                c.FrameMgr.noticeMgr.emit(o.EventTypeEnum.BattleUIHide);
            };
            t.prototype.showGameResultForSuccess = function (t) {
                this.cameraMove(null);
                _.SnakeMgr.moveAble = !0;
                i.BattleMgr.snakeMoveToDoor(function () {
                    B.EntityMgr.getShadowLayer().parent = E.MapMgr.getMapSnakeLayer();
                    _.SnakeMgr.getSnake().node.parent = E.MapMgr.getMapSnakeLayer();
                    i.BattleMgr.snakeOut(t);
                });
            };
            t.prototype.gameOver = function (t) {
                var e = this.result;
                if (!e) {
                    c.FrameMgr.noticeMgr.emit(o.EventTypeEnum.GameOver, e);
                    this.touchUI.node.destroy();
                    this.pauseUI.node.destroy();
                    this.touchUI = null;
                    this.pauseUI = null;
                    if (e); else {
                        A.ReportMgr.sendReportStageOver(this.stage, 0, Math.floor(_.SnakeMgr.liveTime), _.SnakeMgr.getSnakeCurrentLength());
                        A.ReportMgr.sendReportStageTime(this.stage, Math.floor(_.SnakeMgr.liveTime));
                        f.PopupMgr.show({
                            cls: m.default,
                            options: this.result
                        });
                    }
                    t && t();
                }
            };
            t.prototype.snakeDie = function () {
                var t = s.ConfigDataMgr.getData("ConfigStageInfoData", i.BattleMgr.stage).relive;
                if (_.SnakeMgr.dieCount <= t) f.PopupMgr.show({
                    cls: M.default
                }); else {
                    i.BattleMgr.result = !1;
                    g.GameRuleMgr.changeState(o.GameState.Over);
                }
            };
            t.prototype.snakeRelive = function () {
                g.GameRuleMgr.gameStart();
            };
            t.prototype.quitBattle = function () {
                return n(this, void 0, void 0, function () {
                    var t;
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, c.FrameMgr.loadMgr.loadBundleSceneAsync("mainScene", "scene/MainScene")];

                            case 1:
                                t = e.sent();
                                cc.director.runScene(t);
                                this.clear(!0);
                                return [2];
                        }
                    });
                });
            };
            t.prototype.updateLogic = function (t) {
                this.updateIntervalAudio(t);
                if (g.GameRuleMgr.isCanUpdate()) {
                    P.NormalWaveMgr.updateLogic(t);
                    t /= this.timeScale;
                    D.CoinWaveMgr.updateLogic(t);
                    k.GuideMgr.updateLogic(t);
                    u.CollideMgr.updateLogic(t);
                    _.SnakeMgr.updateLogic(t, this.timeScale);
                    p.EnemyMgr.updateLogic(t);
                    C.BossMgr.updateLogic(t);
                    h.BulletMgr.updateLogic(t);
                    d.LootMgr.updateLogic(t);
                    y.VeinMgr.updateLogic(t);
                    b.CameraMgr.updateLogic(t);
                    g.GameRuleMgr.updateLogic(t);
                    E.MapMgr.updateLogic(t);
                }
            };
            t.prototype.lateUpdate = function () { };
            t.prototype.onTouchEnd = function () {
                if (this.slowAble && this.m_touchEndData.length >= 3) {
                    var t = !0;
                    if (this.isGameType(o.GameType.Normal)) {
                        if (p.EnemyMgr.allEnemyDead) {
                            t = !1;
                            this.slowAble = !1;
                        }
                    } else if (this.isGameType(o.GameType.Boss) && C.BossMgr.getBossTotalHp() > 0 && C.BossMgr.getBossCurHp() <= 0) {
                        t = !1;
                        this.slowAble = !1;
                    }
                    if (t) {
                        this.stopSlowTween();
                        this.startSlowTween();
                    } else {
                        this.stopSlowTween();
                        this.timeScale = 1;
                    }
                }
            };
            t.prototype.onTouchStart = function () {
                this.stopSlowTween();
                this.timeScale = 1;
            };
            t.prototype.onTouchMove = function () {
                this._startCall && this._startCall();
                if (1 != this.timeScale) {
                    this.stopSlowTween();
                    this.timeScale = 1;
                }
            };
            t.prototype.startSlowTween = function () {
                var t = this;
                this.m_timeTween = cc.tween(i.BattleMgr).delay(this.m_touchEndData[0]).to(this.m_touchEndData[1], {
                    timeScale: this.m_touchEndData[2]
                }).call(function () {
                    t.m_timeTween = null;
                }).start();
            };
            t.prototype.stopSlowTween = function () {
                if (this.m_timeTween) {
                    this.m_timeTween.stop();
                    this.m_timeTween = null;
                }
            };
            t.prototype.onBossTipEnd = function () {
                w.GFunc.addLog("boss onBossTipEnd");
                b.CameraMgr.cameraFocus(_.SnakeMgr.getSnakePosition(), function () {
                    w.GFunc.addLog("boss camera focus end");
                    b.CameraMgr.enabled = !0;
                    g.GameRuleMgr.gameResume();
                    c.FrameMgr.noticeMgr.emit(o.EventTypeEnum.BossBattle);
                });
            };
            t.instance = new t();
            return t;
        }();
        i.BattleMgr = N.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../data/storage/GameData": "GameData",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/CameraManager": "CameraManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/manager/NoticeManager": "NoticeManager",
        "../../../../frame/manager/PoolManager": "PoolManager",
        "../../../../frame/manager/PopupManager": "PopupManager",
        "../../../../frame/manager/ReportManager": "ReportManager",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../../../ui/scene/battle/ui/PopupRelive": "PopupRelive",
        "../../../ui/scene/battle/ui/PopupSettle": "PopupSettle",
        "../common/GuideManager": "GuideManager",
        "./BossManager": "BossManager",
        "./BulletManager": "BulletManager",
        "./CollideManager": "CollideManager",
        "./EnemyManager": "EnemyManager",
        "./EntityManager": "EntityManager",
        "./GameRuleManager": "GameRuleManager",
        "./LootManager": "LootManager",
        "./MapManager": "MapManager",
        "./SnakeManager": "SnakeManager",
        "./VeinManager": "VeinManager",
        "./wave/CoinWaveManager": "CoinWaveManager",
        "./wave/NormalWaveManager": "NormalWaveManager"
    }],
    BattleScene: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "f7793beVqlE85zAqZeJ0dzt", "BattleScene");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        }, o = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, s = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var c = t("../../../../config/GameConfig"), l = t("../../../../config/GameConst"), h = t("../../../../config/GameEnum"), u = t("../../../../frame/manager/FrameManager"), p = t("../../../../util/GameFunc"), d = t("../../../../util/Tools"), f = t("../../../battle/manager/battle/BattleManager"), m = t("../../../battle/manager/battle/GameRuleManager"), g = t("../../../battle/manager/common/GuideManager"), _ = t("./ui/TouchNode"), y = t("./ui/WarnUI"), v = t("../../../battle/manager/battle/MapManager"), b = t("../../../../data/manager/ConfigDataManager"), M = t("./ui/PauseNode"), S = t("../../../../data/storage/GameData"), k = t("./ui/BattleUI"), C = t("../../../../frame/ui/FrameAnim"), w = t("../../popup/battle/guide/PopupGuide"), A = cc._decorator, T = A.ccclass, D = A.property, P = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.battleNode = null;
                e.uiNode = null;
                e.popupLayer = [];
                e.camera = null;
                e.touchNode = null;
                e.inBattleUI = null;
                e.pfPause = null;
                e.pfNewEnemy = null;
                e.pfSettle = null;
                e.pfRevive = null;
                e.auraNode = null;
                e.redNode = null;
                e._frameTime = 1 / 60;
                e.m_popupGuide = null;
                e.m_battleUI = null;
                e.shakeParam = [[4, -50, 2, 0, 9, 2, -11, -8, 1, 7, -7, 2, 1, 39, 2, 0, -38, 1, -9, 1, 1, -3, -30, 1, -8, 0, 1, -6, -12, 1, -7, 0, 1, 0, -10, 1, -13, 1, 1, -6, -8, 1, -7, 1, 1, -7, -12, 1, -7, -8, 1], [4, -22, 2, 0, 7, 1, -5, -1, 1, 0, 7, 1, 3, -14, 1, 1, -7, 1, -4, -3, 1, 0, -9, 1, -8, 0, 1, -3, -5, 1, -7, -2, 1, -5, -3, 1, -7, -2, 1, -4, -5, 1, -7, -2, 1, -6, -5, 1, -7, -3, 1], [1, -5, 1, -2, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 2, 0, -11, 2, 0, 0, 2, 0, -11, 2, 0, 0, 2, 0, -11, 2, 0, 0, 2, 0, -11, 2], [-1, -8, 1, 0, 3, 2, -1, -4, 1, 0, 3, 1, 0, -6, 1, 0, 1, 1, 0, 0, 1, -1, -8, 9, 0, 3, 2, -1, -4, 1, 0, 3, 1, 0, -6, 1, 0, 1, 1, 0, 0, 1], [-1, -8, 1, 0, 3, 2, -1, -4, 1, 0, 3, 1, 0, -6, 1, 0, 1, 1, 0, 0, 1, -1, -8, 9, 0, 3, 2, -1, -4, 1, 0, 3, 1, 0, -6, 1, 0, 1, 1, 0, 0, 1, -1, -8, 9, 0, 3, 2, -1, -4, 1, 0, 3, 1, 0, -6, 1, 0, 1, 1, 0, 0, 1]];
                e.m_birdMap = new Map();
                e.m_warnUI = null;
                e.m_shakeTween = null;
                e.editBox = null;
                return e;
            }
            e.prototype.onLoad = function () {
                l.GValue.ScreenFit = cc.winSize.height / cc.winSize.width >= 1.7;
                var t = this.node.getComponent(cc.Canvas);
                if (l.GValue.ScreenFit) {
                    t.fitHeight = !1;
                    t.fitWidth = !0;
                } else {
                    t.fitHeight = !0;
                    t.fitWidth = !0;
                }
                u.FrameMgr.audioMgr.stopbg();
                this.initBird();
                this.initAura();
                u.FrameMgr.noticeMgr.on(h.EventTypeEnum.BossEnter, this.onBossEnter, this, !0);
                u.FrameMgr.noticeMgr.on(h.EventTypeEnum.BossEnterEnd, this.BossEnterEnd, this, !0);
                u.FrameMgr.noticeMgr.on(h.EventTypeEnum.ScreenShake, this.playScreenShake, this, !0);
                u.FrameMgr.noticeMgr.on(h.EventTypeEnum.ScreenShakeParam, this.shakeForParam, this, !0);
                u.FrameMgr.noticeMgr.on(h.EventTypeEnum.ScreenRed, this.playScreenRed, this, !0);
                u.FrameMgr.noticeMgr.on(h.EventTypeEnum.HideScreenRed, this.hideScreenRed, this, !0);
                u.FrameMgr.noticeMgr.on(h.EventTypeEnum.BattleUIHide, this.hideBattleUI, this, !0);
            };
            e.prototype.start = function () {
                u.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.BattleShow);
                f.BattleMgr.battleNode = this.battleNode;
                f.BattleMgr.mapNode = this.battleNode.getChildByName("map");
                f.BattleMgr.upEnvNode = this.battleNode.getChildByName("upEnv");
                this.camera.getComponent(cc.Camera).zoomRatio = 10 === S.GData.getCurStage() ? 1 : b.ConfigDataMgr.getGlobalDataNum(h.GlobalKey.BattleCameraHeight);
                l.GValue.BattleCameraNode = this.camera;
                l.GValue.BattleCamera = this.camera.getComponent(cc.Camera);
                u.FrameMgr.popupMgr.initContainers(this.popupLayer);
                this.initTouch();
                this.initBattleUI();
                this.initPause();
                this.checkGuide();
                m.GameRuleMgr.changeState(h.GameState.Battle);
                u.FrameMgr.loadMgr.releaseBundleAllRes("loading");
                cc.sys.garbageCollect();
                this.schedule(function () {
                    p.GFunc.updateTimestamp();
                }, 1, cc.macro.REPEAT_FOREVER, 0);
                this.playAuraAnim();
                this.playBirdAnim();
            };
            e.prototype.update = function (t) {
                t > .2 && (t = this._frameTime);
                p.GFunc.checkOnline(t);
                f.BattleMgr.updateLogic(t);
            };
            e.prototype.lateUpdate = function (t) {
                t > .2 && (t = this._frameTime);
                f.BattleMgr.lateUpdate(t);
            };
            e.prototype.initAura = function () {
                this.auraNode.active = !0;
                var t = v.MapMgr.floorAtlas, e = new cc.Node("aura2");
                this.auraNode.addChild(e);
                e.addComponent(cc.Sprite).spriteFrame = t.getSpriteFrame("aura_2");
                e.anchorX = 1;
                e.anchorY = 0;
                e.scale = 2;
                e.y = l.GValue.ViewCenter.y > 780 ? l.GValue.ViewCenter.y : 780;
                var i = new cc.Node("aura3");
                this.auraNode.addChild(i);
                i.addComponent(cc.Sprite).spriteFrame = t.getSpriteFrame("aura_3");
                i.anchorY = 0;
                i.scale = 2;
                i.y = l.GValue.ViewCenter.y > 780 ? -l.GValue.ViewCenter.y : -780;
                var n = new cc.Node("aura1");
                this.auraNode.addChild(n);
                n.addComponent(cc.Sprite).spriteFrame = t.getSpriteFrame("aura_1");
                n.anchorY = 1;
                n.scale = 2;
                n.y = l.GValue.ViewCenter.y > 780 ? l.GValue.ViewCenter.y : 780;
            };
            e.prototype.playAuraAnim = function () {
                var t = this, e = this.auraNode.getChildByName("aura2");
                e && cc.tween(e).to(1, {
                    y: e.y + 2 * e.height
                }).start();
                var i = this.auraNode.getChildByName("aura1");
                i && cc.tween(i).to(1, {
                    y: i.y + 2 * i.height
                }).start();
                var n = this.auraNode.getChildByName("aura3");
                n && cc.tween(n).to(1, {
                    y: n.y - 2 * n.height
                }).call(function () {
                    t.m_birdMap[0] || (t.auraNode.active = !1);
                }).start();
            };
            e.prototype.initBird = function () {
                u.FrameMgr.audioMgr.playEffect("aura_bird");
                var t = function (t) {
                    switch (t) {
                        case 1:
                        case 2:
                        case 6:
                            return 9;

                        case 3:
                        case 4:
                        case 7:
                            return 10;

                        case 5:
                            return 5;
                    }
                    return 5;
                }, e = u.FrameMgr.loadMgr.get("TP_Map_Aura", cc.SpriteAtlas);
                if (e) for (var i = 1; i <= 7; i++) {
                    var n = cc.instantiate(l.GValue.pfFrameAnim);
                    n.parent = this.auraNode;
                    n.scale = 2;
                    var a = n.getComponent(C.default);
                    a.init(e, "anim_aura_bird_" + i + "_", t(i), c.GConfig.ActionInterval);
                    a.slowAble = !1;
                    this.m_birdMap.set(i, a);
                }
            };
            e.prototype.playBirdAnim = function () {
                for (var t = this, e = function (t) {
                    switch (t) {
                        case 1:
                            return 0;

                        case 2:
                            return 4 * c.GConfig.ActionInterval;

                        case 3:
                        case 4:
                            return 9 * c.GConfig.ActionInterval;

                        case 5:
                            return 11 * c.GConfig.ActionInterval;

                        case 6:
                            return 15 * c.GConfig.ActionInterval;

                        case 7:
                            return 23 * c.GConfig.ActionInterval;
                    }
                    return 0;
                }, i = function (t) {
                    switch (t) {
                        case 1:
                            return cc.v2(d.DYTools.random_int(100, 260), l.GValue.ViewCenter.y * d.DYTools.random_int(4, 5) / 10);

                        case 2:
                            return cc.v2(d.DYTools.random_int(320, 400), l.GValue.ViewCenter.y * d.DYTools.random_int(3, 4) / 10);

                        case 3:
                            return cc.v2(d.DYTools.random_int(0, 100), l.GValue.ViewCenter.y * d.DYTools.random_int(2, 3) / 10);

                        case 4:
                            return cc.v2(d.DYTools.random_int(400, 450), l.GValue.ViewCenter.y * d.DYTools.random_int(0, 2) / 10);

                        case 5:
                            return cc.v2(d.DYTools.random_int(400, 450), -l.GValue.ViewCenter.y * d.DYTools.random_int(0, 1) / 10);

                        case 6:
                            return cc.v2(d.DYTools.random_int(400, 450), -l.GValue.ViewCenter.y * d.DYTools.random_int(1, 3) / 10);

                        case 7:
                            return cc.v2(d.DYTools.random_int(400, 450), l.GValue.ViewCenter.y * d.DYTools.random_int(3, 5) / 10);
                    }
                    return cc.v2(400, 1e3);
                }, n = function (t) {
                    switch (t) {
                        case 1:
                            return cc.v2(-d.DYTools.random_int(380, 400), -l.GValue.ViewCenter.y * d.DYTools.random_int(5, 7) / 10);

                        case 2:
                            return cc.v2(-d.DYTools.random_int(380, 400), -l.GValue.ViewCenter.y * d.DYTools.random_int(7, 9) / 10);

                        case 3:
                            return cc.v2(-d.DYTools.random_int(380, 400), -l.GValue.ViewCenter.y * d.DYTools.random_int(8, 10) / 10);

                        case 4:
                            return cc.v2(-d.DYTools.random_int(300, 350), -l.GValue.ViewCenter.y * d.DYTools.random_int(11, 13) / 10);

                        case 5:
                            return cc.v2(-d.DYTools.random_int(250, 300), -l.GValue.ViewCenter.y * d.DYTools.random_int(10, 12) / 10);

                        case 6:
                            return cc.v2(-d.DYTools.random_int(200, 250), -l.GValue.ViewCenter.y * d.DYTools.random_int(10, 12) / 10);

                        case 7:
                            return cc.v2(-d.DYTools.random_int(150, 200), -l.GValue.ViewCenter.y * d.DYTools.random_int(10, 12) / 10);
                    }
                    return cc.v2(-400, -1e3);
                }, a = function (a) {
                    var o = r.m_birdMap.get(a);
                    if (o) {
                        o.node.setPosition(n(a));
                        var s = i(a);
                        cc.tween(o.node).delay(e(a)).call(function () {
                            o.play();
                        }).to(.6, {
                            x: s.x,
                            y: s.y
                        }).call(function () {
                            o.stop();
                            o.node.active = !1;
                            7 == a && (t.auraNode.active = !1);
                        }).start();
                    }
                }, r = this, o = 1; o <= 7; o++) a(o);
            };
            e.prototype.initTouch = function () {
                if (this.uiNode && this.touchNode) {
                    var t = cc.instantiate(this.touchNode);
                    t.parent = this.uiNode;
                    f.BattleMgr.touchUI = t.getComponent(_.default);
                    f.BattleMgr.touchUI && (f.BattleMgr.touchUI.enabled = !0);
                    f.BattleMgr.touchUI.node.active = !1;
                }
            };
            e.prototype.initBattleUI = function () {
                if (this.uiNode && this.touchNode) {
                    var t = cc.instantiate(this.inBattleUI);
                    t.parent = this.uiNode;
                    this.m_battleUI = t.getComponent(k.default);
                }
            };
            e.prototype.initPause = function () {
                if (this.uiNode && this.touchNode) {
                    var t = cc.instantiate(this.pfPause);
                    t.parent = this.uiNode;
                    f.BattleMgr.pauseUI = t.getComponent(M.default);
                    f.BattleMgr.pauseUI && (f.BattleMgr.pauseUI.enabled = !0);
                    f.BattleMgr.pauseUI.node.active = !1;
                }
            };
            e.prototype.onBossEnter = function (t) {
                var e = u.FrameMgr.loadMgr.get("WarnUI", cc.Prefab), i = cc.instantiate(e);
                this.uiNode.addChild(i);
                this.m_warnUI = i.getComponent(y.default);
                this.m_warnUI.showWarn(t);
                this.playScreenShake({
                    level: 2,
                    time: 2
                });
                this.showScreenRed();
                u.FrameMgr.noticeMgr.emit(h.EventTypeEnum.BossDropStone);
            };
            e.prototype.BossEnterEnd = function (t) {
                p.GFunc.addLog("boss enter end callback");
                this.m_warnUI.showTip(t, function () {
                    f.BattleMgr.onBossTipEnd();
                });
            };
            e.prototype.checkGuide = function () {
                var t = this;
                if (g.GuideMgr.guideAble(h.GuideType.PopupCircle) || g.GuideMgr.guideAble(h.GuideType.PopupSkill)) {
                    var e = u.FrameMgr.loadMgr.get("PopupGuide", cc.Prefab);
                    if (e) {
                        var i = cc.instantiate(e);
                        this.m_popupGuide = i.getComponent(w.default);
                        this.uiNode.addChild(i, 100);
                        i.active = !1;
                        u.FrameMgr.noticeMgr.once(h.EventTypeEnum.PopupGuideBegin, function (e) {
                            i.active = !0;
                            m.GameRuleMgr.setGameState(h.GameState.Break);
                            t.m_popupGuide.create(e, function () {
                                m.GameRuleMgr.setGameState(h.GameState.Battle);
                                t.m_popupGuide.node.destroy();
                                t.m_popupGuide = null;
                            });
                            f.BattleMgr.touchUI.onTouchEnd();
                        }, this.m_popupGuide);
                    }
                }
            };
            e.prototype.playScreenShake = function (t) {
                var e = this;
                void 0 === t && (t = {
                    level: 0,
                    time: 1
                });
                if (this.m_shakeTween) {
                    this.m_shakeTween.stop();
                    this.m_shakeTween = null;
                }
                t.level || (t.level = 0);
                t.time || (t.time = 1);
                var i = c.GConfig.ActionInterval;
                switch (t.level) {
                    case 0:
                        this.m_shakeTween = cc.tween(this.battleNode).to(0, {
                            y: 8
                        }).to(2 * i, {
                            y: 0
                        }).to(2 * i, {
                            y: -5
                        }).to(2 * i, {
                            y: 7
                        }).to(2 * i, {
                            y: -3
                        }).to(2 * i, {
                            y: 0
                        }).union().repeat(t.time).call(function () {
                            e.m_shakeTween = null;
                        }).start();
                        break;

                    case 1:
                        this.m_shakeTween = cc.tween(this.battleNode).to(0, {
                            y: 2
                        }).to(2 * i, {
                            y: -2
                        }).to(2 * i, {
                            y: 0
                        }).union().repeat(t.time).call(function () {
                            e.m_shakeTween = null;
                        }).start();
                        break;

                    case 2:
                        this.m_shakeTween = cc.tween(this.battleNode).to(0, {
                            y: -10
                        }).to(2 * i, {
                            x: 1,
                            y: 8
                        }).to(2 * i, {
                            x: -1,
                            y: -9
                        }).to(2 * i, {
                            x: 2,
                            y: 2
                        }).to(i, {
                            x: 0,
                            y: 0
                        }).union().repeat(t.time).call(function () {
                            e.m_shakeTween = null;
                        }).start();
                        break;

                    case 3:
                        this.m_shakeTween = cc.tween(this.battleNode).to(0, {
                            y: 12
                        }).to(2 * i, {
                            y: 0
                        }).to(2 * i, {
                            y: -10
                        }).to(2 * i, {
                            y: 8
                        }).to(2 * i, {
                            y: -6
                        }).to(2 * i, {
                            y: 4
                        }).to(2 * i, {
                            y: -2
                        }).to(2 * i, {
                            y: 0
                        }).union().repeat(t.time).call(function () {
                            e.m_shakeTween = null;
                        }).start();
                }
            };
            e.prototype.shakeForParam = function (t) {
                return o(this, void 0, void 0, function () {
                    var e, i, n, a, r;
                    return s(this, function (o) {
                        switch (o.label) {
                            case 0:
                                if (!(e = this.shakeParam[t])) return [2];
                                if (0 === (i = e.length)) return [2];
                                n = Math.floor(i / 3);
                                a = 0;
                                o.label = 1;

                            case 1:
                                if (!(a < n)) return [3, 4];
                                r = 3 * a;
                                this.battleNode.x = e[r];
                                this.battleNode.y = e[r + 1];
                                return [4, d.DYTools.sleep(33 * e[r + 2])];

                            case 2:
                                o.sent();
                                o.label = 3;

                            case 3:
                                a++;
                                return [3, 1];

                            case 4:
                                return [4, d.DYTools.sleep(33 * e[i - 1])];

                            case 5:
                                o.sent();
                                this.battleNode.x = 0;
                                this.battleNode.y = 0;
                                return [2];
                        }
                    });
                });
            };
            e.prototype.playScreenRed = function (t) {
                var e = this, i = t || 0;
                this.redNode.active = !0;
                this.redNode.opacity = 255;
                cc.tween(this.redNode).delay(i).to(16 * c.GConfig.ActionInterval, {
                    opacity: 0
                }).call(function () {
                    e.redNode.active = !1;
                }).start();
            };
            e.prototype.showScreenRed = function () {
                this.redNode.active = !0;
                this.redNode.opacity = 0;
                cc.tween(this.redNode).to(10 * c.GConfig.ActionInterval, {
                    opacity: 200
                }).start();
            };
            e.prototype.hideScreenRed = function () {
                var t = this;
                this.redNode.stopAllActions();
                cc.tween(this.redNode).to(16 * c.GConfig.ActionInterval, {
                    opacity: 0
                }).call(function () {
                    t.redNode.active = !1;
                }).start();
            };
            e.prototype.hideBattleUI = function () {
                this.m_battleUI && this.m_battleUI.playHideAnim();
            };
            e.prototype.onBtnEnemyClicked = function () {
                l.GValue.enemyAtkAble = !l.GValue.enemyAtkAble;
            };
            e.prototype.onBtnccClicked = function () {
                var t = b.ConfigDataMgr.getGlobalDataNumArr(h.GlobalKey.LootCrazyParam);
                u.FrameMgr.noticeMgr.emit(h.EventTypeEnum.SnakeBuffStart, {
                    type: h.SnakeBuffType.Crazy,
                    data: t
                });
            };
            e.prototype.onEditChaning = function () {
                "" != this.editBox.string && (l.GValue.stopEnemyId = parseInt(this.editBox.string));
            };
            r([D(cc.Node)], e.prototype, "battleNode", void 0);
            r([D(cc.Node)], e.prototype, "uiNode", void 0);
            r([D(cc.Node)], e.prototype, "popupLayer", void 0);
            r([D(cc.Node)], e.prototype, "camera", void 0);
            r([D(cc.Prefab)], e.prototype, "touchNode", void 0);
            r([D(cc.Prefab)], e.prototype, "inBattleUI", void 0);
            r([D(cc.Prefab)], e.prototype, "pfPause", void 0);
            r([D(cc.Prefab)], e.prototype, "pfNewEnemy", void 0);
            r([D(cc.Prefab)], e.prototype, "pfSettle", void 0);
            r([D(cc.Prefab)], e.prototype, "pfRevive", void 0);
            r([D(cc.Node)], e.prototype, "auraNode", void 0);
            r([D(cc.Node)], e.prototype, "redNode", void 0);
            r([D(cc.EditBox)], e.prototype, "editBox", void 0);
            return r([T], e);
        }(cc.Component);
        i.default = P;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../data/storage/GameData": "GameData",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../battle/manager/battle/GameRuleManager": "GameRuleManager",
        "../../../battle/manager/battle/MapManager": "MapManager",
        "../../../battle/manager/common/GuideManager": "GuideManager",
        "../../popup/battle/guide/PopupGuide": "PopupGuide",
        "./ui/BattleUI": "BattleUI",
        "./ui/PauseNode": "PauseNode",
        "./ui/TouchNode": "TouchNode",
        "./ui/WarnUI": "WarnUI"
    }],
    BattleUI: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "ca017AU+jVLJrcB5+5nGr+k", "BattleUI");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConfig"), s = t("../../../../../config/GameConst"), c = t("../../../../../config/GameEnum"), l = t("../../../../../data/manager/ConfigDataManager"), h = t("../../../../../frame/manager/FrameManager"), u = t("../../../../../frame/ui/FrameAnim"), p = t("../../../../../frame/ui/UINum"), d = t("../../../../../util/GameFunc"), f = t("../../../../../util/Tools"), m = t("../../../../battle/manager/battle/BattleManager"), g = t("../../../../battle/manager/battle/BossManager"), _ = t("../../../../battle/manager/battle/EnemyManager"), y = t("../../../../battle/manager/battle/wave/CoinWaveManager"), v = t("../../../../battle/manager/battle/wave/NormalWaveManager"), b = t("../../../../battle/manager/battle/GameRuleManager"), M = t("../../../../../frame/ui/UIComponent"), S = cc._decorator, k = S.ccclass, C = S.property, w = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.atlas = null;
                e.normalModelNode = null;
                e.normalTopNode = null;
                e.goldNode = null;
                e.itemNode = null;
                e.stageNode = null;
                e.stageNumNode = null;
                e.barBg = null;
                e.barPro = null;
                e.barPic = null;
                e.coinModelNode = null;
                e.coinGoldNode = null;
                e.coinDiamondNode = null;
                e.coinTimeSpr = null;
                e.topNode = null;
                e.effectNode = null;
                e.pauseNode = null;
                e.triangleParent = null;
                e.stageInfoLabel = null;
                e.handOffset = cc.v2(48, -23);
                e.m_stageNum = null;
                e.m_curGoldCount = 0;
                e.m_goldNum = null;
                e.m_curDiamondCount = 0;
                e.m_diamondNum = null;
                e.m_curItemCount = 0;
                e.m_itemNum = null;
                e.m_coinTime = 0;
                e.m_coinTimeNum = null;
                e.initialEnemyCount = 0;
                e.total = 0;
                e.now = 0;
                e.m_proTween = null;
                e.limitNum = 10;
                e.triangleList = [];
                e.targetList = [];
                e.space = 30;
                e.m_diamondPool = [];
                e.m_diamondAnim = null;
                e.m_goldPool = [];
                e.m_goldAnim = null;
                e.m_itemPool = [];
                e.m_itemAnim = null;
                return e;
            }
            e.prototype.onLoad = function () {
                this.initCommon();
                this.initWithGameType();
                this.createFlyGold();
                m.BattleMgr.isGameType(c.GameType.Coin) && this.createFlyDiamond();
                this.createFlyItem();
                d.GFunc.adjustTopUI(this.topNode);
                d.GFunc.adjustTopUI(this.normalTopNode);
                d.GFunc.adjustTopUI(this.coinModelNode.getChildByName("top"));
                d.GFunc.adjustTopUI(this.stageInfoLabel.node);
                this.refreshLanguage();
            };
            e.prototype.start = function () {
                if (m.BattleMgr.isGameType(c.GameType.Coin)) {
                    this.coinModelNode.active = !0;
                    2 == y.CoinWaveMgr.type && (this.coinTimeSpr.node.parent.active = !1);
                    this.normalModelNode.active = !1;
                } else {
                    this.coinModelNode.active = !1;
                    this.normalModelNode.active = !0;
                }
            };
            e.prototype.refreshLanguage = function () {
                var t = this.stageNumNode.parent;
                h.FrameMgr.languageMgr.language == c.LanguageType.English ? t.children[2].active = !1 : t.children[2].active = !0;
                h.FrameMgr.languageMgr.setImage(t.children[0].getComponent(cc.Sprite), this.atlas, "di");
            };
            e.prototype.update = function () {
                this.calculateEnemy();
                this.updateTrianglePos();
                this.updateCoinTime();
            };
            e.prototype.onBtnPauseClicked = function () {
                b.GameRuleMgr.gamePause();
                m.BattleMgr.pauseUI.node.active = !0;
            };
            e.prototype.initCommon = function () {
                this.initTriangle();
                this.barPro.fillRange = 0;
                h.FrameMgr.noticeMgr.on(c.EventTypeEnum.BattleDataChange, this.onBattleDataChange, this);
                h.FrameMgr.noticeMgr.on(c.EventTypeEnum.BossDropStone, this.showStoneDrop, this);
                h.FrameMgr.noticeMgr.on(c.EventTypeEnum.StopDropStone, this.stopDropStone, this);
            };
            e.prototype.initWithGameType = function () {
                switch (m.BattleMgr.gameType) {
                    case c.GameType.Normal:
                        this.initNormalUI();
                        h.FrameMgr.noticeMgr.on(c.EventTypeEnum.EnemyDie, this.calculateProgressLabel, this);
                        this.barPic.spriteFrame = this.atlas.getSpriteFrame("tb1");
                        this.barBg.spriteFrame = this.atlas.getSpriteFrame("jd1");
                        this.barPro.spriteFrame = this.atlas.getSpriteFrame("jd2");
                        break;

                    case c.GameType.Boss:
                        this.initNormalUI();
                        h.FrameMgr.noticeMgr.on(c.EventTypeEnum.BossCutHp, this.calculateProgressLabel, this);
                        this.barPic.spriteFrame = this.atlas.getSpriteFrame("tb2");
                        this.barBg.spriteFrame = this.atlas.getSpriteFrame("jd11");
                        this.barPro.spriteFrame = this.atlas.getSpriteFrame("jd12");
                        this.barPro.node.x = -12;
                        this.barPro.fillRange = 1;
                        this.barPic.node.x = -216;
                        this.barBg.node.parent.x = 20;
                        break;

                    case c.GameType.Coin:
                        this.initCoinUI();
                        this.m_coinTime = Math.floor(y.CoinWaveMgr.stageTime) + 1;
                }
            };
            e.prototype.initNormalUI = function () {
                if (!this.m_stageNum) {
                    (t = cc.instantiate(s.GValue.pfNum)).parent = this.stageNumNode;
                    this.m_stageNum = t.getComponent(p.default);
                    this.m_stageNum.init();
                    this.m_stageNum.setAtlas(this.atlas);
                    this.m_stageNum.setType(c.NumType.BattleStage);
                    this.m_stageNum.setDistance(3);
                    this.m_stageNum.setColor(cc.color(248, 206, 104));
                    t.scale = .6;
                }
                this.m_stageNum.setString(m.BattleMgr.stage.toString());
                this.stageNumNode.width = this.m_stageNum.getSize().width;
                if (!this.m_goldNum) {
                    (t = cc.instantiate(s.GValue.pfNum)).x = 36;
                    t.scale = .75;
                    t.parent = this.goldNode;
                    this.m_goldNum = t.getComponent(p.default);
                    this.m_goldNum.init();
                    this.m_goldNum.setAtlas(this.atlas);
                    this.m_goldNum.setType(c.NumType.BattleCoin);
                    this.m_goldNum.setAnchor(cc.v2(0, .5));
                    this.m_goldNum.setDistance(2);
                    this.m_goldNum.setDiffY(".", -12);
                }
                this.m_goldNum.setString("0");
                if (!this.m_itemNum) {
                    var t;
                    (t = cc.instantiate(s.GValue.pfNum)).x = 36;
                    t.scale = .75;
                    t.parent = this.itemNode;
                    this.m_itemNum = t.getComponent(p.default);
                    this.m_itemNum.init();
                    this.m_itemNum.setAtlas(this.atlas);
                    this.m_itemNum.setType(c.NumType.BattleCoin);
                    this.m_itemNum.setAnchor(cc.v2(0, .5));
                    this.m_itemNum.setDistance(2);
                    this.m_itemNum.setDiffY(".", -12);
                }
                this.m_itemNum.setString("0");
            };
            e.prototype.initCoinUI = function () {
                if (!this.m_stageNum) {
                    (t = cc.instantiate(s.GValue.pfNum)).parent = this.stageNumNode;
                    this.m_stageNum = t.getComponent(p.default);
                    this.m_stageNum.init();
                    this.m_stageNum.setAtlas(this.atlas);
                    this.m_stageNum.setType(c.NumType.BattleStage);
                    this.m_stageNum.setDistance(3);
                    this.m_stageNum.setColor(cc.color(248, 206, 104));
                    t.scale = .6;
                }
                this.m_stageNum.setString(m.BattleMgr.stage.toString());
                this.stageNumNode.width = this.m_stageNum.getSize().width;
                if (!this.m_goldNum) {
                    (t = cc.instantiate(s.GValue.pfNum)).x = 10;
                    t.scale = .75;
                    t.parent = this.coinGoldNode;
                    this.m_goldNum = t.getComponent(p.default);
                    this.m_goldNum.init();
                    this.m_goldNum.setAtlas(this.atlas);
                    this.m_goldNum.setType(c.NumType.BattleCoin);
                    this.m_goldNum.setDistance(2);
                    this.m_goldNum.setDiffY(".", -12);
                }
                this.m_goldNum.setString("0");
                if (!this.m_diamondNum) {
                    (t = cc.instantiate(s.GValue.pfNum)).x = 10;
                    t.scale = .75;
                    t.parent = this.coinDiamondNode;
                    this.m_diamondNum = t.getComponent(p.default);
                    this.m_diamondNum.init();
                    this.m_diamondNum.setAtlas(this.atlas);
                    this.m_diamondNum.setType(c.NumType.BattleCoin);
                    this.m_diamondNum.setDistance(2);
                    this.m_diamondNum.setDiffY(".", -12);
                }
                this.m_diamondNum.setString("0");
                if (!this.m_coinTimeNum) {
                    var t;
                    (t = cc.instantiate(s.GValue.pfNum)).scale = .75;
                    t.parent = this.coinTimeSpr.node.parent;
                    this.m_coinTimeNum = t.getComponent(p.default);
                    this.m_coinTimeNum.init();
                    this.m_coinTimeNum.setAtlas(this.atlas);
                    this.m_coinTimeNum.setType(c.NumType.BattleCoin);
                    this.m_coinTimeNum.setDistance(2);
                }
                this.m_coinTimeNum.setString(y.CoinWaveMgr.leftTime.toString());
            };
            e.prototype.initTriangle = function () {
                this.limitNum = l.ConfigDataMgr.getGlobalDataNum(c.GlobalKey.TriangleNum);
                this.triangleList = [];
                for (var t = 0; t < this.limitNum; t++) {
                    var e = new cc.Node("triangle");
                    e.addComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame("triangle");
                    e.parent = this.triangleParent;
                    this.triangleList.push(e);
                    e.active = !1;
                }
            };
            e.prototype.onBattleDataChange = function (t) {
                switch (t.type) {
                    case "gold":
                        if (2 == t.data.length) if (t.pos) {
                            this.playGoldFly(t.pos, t.data[1], t.data[0]);
                            f.DYTools.random_int(1, 3);
                        } else {
                            var e = t.data[1];
                            this.m_curGoldCount += e;
                            this.refreshGoldCount();
                        }
                        break;

                    case "diamond":
                        if (2 == t.data.length) if (t.pos) this.playDiamondFly(t.pos, t.data[1], t.data[0]); else {
                            var i = t.data[1];
                            this.m_curDiamondCount += i;
                            this.refreshDiamondCount();
                        }
                        break;

                    case "item":
                        if (3 == t.data.length) {
                            t.data[0];
                            if (t.pos) this.playItemFly(t.pos, t.data[2], t.data[1]); else {
                                i = t.data[1];
                                this.m_curItemCount += i;
                                this.refreshItemCount();
                            }
                        }
                }
            };
            e.prototype.refreshGoldCount = function (t) {
                t && t >= this.m_curGoldCount ? this.m_goldNum.setString(f.DYTools.numberToString(Math.round(t))) : this.m_goldNum.setString(f.DYTools.numberToString(Math.round(this.m_curGoldCount)));
            };
            e.prototype.refreshDiamondCount = function (t) {
                t && t >= this.m_curDiamondCount ? this.m_diamondNum.setString(f.DYTools.numberToString(Math.round(t))) : this.m_diamondNum.setString(f.DYTools.numberToString(Math.round(this.m_curDiamondCount)));
            };
            e.prototype.refreshItemCount = function (t) {
                t && t >= this.m_curItemCount ? this.m_itemNum.setString(f.DYTools.numberToString(Math.round(t))) : this.m_itemNum.setString(f.DYTools.numberToString(Math.round(this.m_curItemCount)));
            };
            e.prototype.calculateProgressLabel = function () {
                var t = this, e = this.total, i = 0, n = 0;
                switch (m.BattleMgr.gameType) {
                    case c.GameType.Normal:
                        0 == this.initialEnemyCount && (this.initialEnemyCount = v.NormalWaveMgr.getTotalWaveEnemy());
                        e = this.initialEnemyCount + _.EnemyMgr.extraEnemyCount;
                        if ((n = (i = _.EnemyMgr.killedEnemyCount) / e) < this.barPro.fillRange) return;
                        break;

                    case c.GameType.Boss:
                        0 == this.total && (e = g.BossMgr.getBossTotalHp());
                        n = (i = g.BossMgr.getBossCurHp()) / e;
                }
                if (e != this.total || i != this.now) {
                    var a = Math.abs(n - this.barPro.fillRange);
                    this.m_proTween && this.m_proTween.stop();
                    this.m_proTween = cc.tween(this.barPro).to(a / .5, {
                        fillRange: n
                    }).call(function () {
                        t.m_proTween = null;
                    }).start();
                    this.total = e;
                    this.now = i;
                }
            };
            e.prototype.calculateEnemy = function () {
                var t = _.EnemyMgr.outScreenEnemys;
                this.targetList = this.sortEnemy(t);
            };
            e.prototype.updateTrianglePos = function () {
                for (var t = _.EnemyMgr.inScreenEnemys.length, e = this.limitNum - t, i = (s.GValue.IPADWidth > 0 ? s.GValue.IPADWidth : s.GValue.ViewWidth) / 2, n = 0; n < this.limitNum; n++) {
                    var a = this.triangleList[n];
                    a.active = !1;
                    if (n < e) {
                        var r = this.targetList[n];
                        if (null != r) {
                            a.active = !0;
                            var o = r.node.x - s.GValue.BattleCameraNode.x, c = r.node.y - s.GValue.BattleCameraNode.y, l = c / o, h = 0, u = 0;
                            ((u = o > 0 ? l * (h = i - this.space) : l * (h = -i + this.space)) > s.GValue.ViewHeight / 2 - this.space || u < -s.GValue.ViewHeight / 2 + this.space) && (h = c > 0 ? (u = s.GValue.ViewHeight / 2 - this.space) / l : (u = -s.GValue.ViewHeight / 2 + this.space) / l);
                            a.x = h;
                            a.y = u;
                            var p = f.DYTools.getAngle(s.GValue.BattleCameraNode.getPosition(), r.node.getPosition());
                            a.angle = p;
                        }
                    }
                }
            };
            e.prototype.sortEnemy = function (t) {
                return t.sort(function (t, e) {
                    return f.DYTools.getDisForVec(t.node, s.GValue.BattleCamera) - f.DYTools.getDisForVec(e.node, s.GValue.BattleCamera);
                });
            };
            e.prototype.updateCoinTime = function () {
                var t = this;
                if (this.coinModelNode.active && this.coinTimeSpr.node.parent.active && m.BattleMgr.battling) {
                    this.coinTimeSpr.fillRange = y.CoinWaveMgr.leftTimeRatio;
                    var e = Math.ceil(y.CoinWaveMgr.leftTime);
                    if (y.CoinWaveMgr.stageTime > 0 && e != this.m_coinTime) {
                        this.m_coinTime = e;
                        this.m_coinTimeNum.setString(this.m_coinTime.toString());
                        h.FrameMgr.audioMgr.playEffect(this.m_coinTime < 10 ? "coin_time_1" : "coin_time_0");
                        0 == e && this.scheduleOnce(function () {
                            t.coinTimeSpr.node.parent.active = !1;
                        }, .5);
                    }
                }
            };
            e.prototype.createFlyDiamond = function () {
                for (var t = 0; t < 10; t++) {
                    var e = this.createNewFlyDiamond();
                    e.active = !1;
                    this.m_diamondPool.push(e);
                }
                var i = cc.instantiate(s.GValue.pfFrameAnim);
                this.m_diamondAnim = i.getComponent(u.default);
                this.m_diamondAnim.node.x = -73;
                i.parent = this.coinDiamondNode;
                i.color = cc.color(0, 255, 204);
                this.m_diamondAnim.init(this.atlas, "anim_gold_arrival_", 6, 2 * o.GConfig.ActionInterval);
            };
            e.prototype.createNewFlyDiamond = function () {
                var t = cc.instantiate(s.GValue.pfFrameAnim);
                t.parent = this.coinDiamondNode;
                t.getComponent(u.default).init(this.atlas, "anim_diamond_", 2, 2 * o.GConfig.ActionInterval);
                return t;
            };
            e.prototype.playDiamondFly = function (t, e, i) {
                for (var n = this, a = this.coinDiamondNode, r = cc.v2(-73, 0), c = t.y > s.GValue.ViewCenter.y ? 7 : 14, l = a.convertToNodeSpaceAR(t), h = o.GConfig.ActionInterval, p = 360 / i, d = p / 2, m = 0, g = function (t) {
                    var a = _.m_diamondPool.pop();
                    a || (a = _.createNewFlyDiamond());
                    a.active = !0;
                    a.setPosition(l);
                    a.scale = 1;
                    var o = a.getComponent(u.default);
                    o.play();
                    var s = cc.v2(0, f.DYTools.random_int(80, 120)).rotate(cc.misc.degreesToRadians(p * t + f.DYTools.random_int(-d, d))), g = e / i;
                    t == i - 1 && (g = e - m);
                    m += g;
                    cc.tween(a).to(h * f.DYTools.random_int(3, 4), {
                        x: l.x + .7 * s.x,
                        y: .7 * s.y + l.y
                    }).to(h * f.DYTools.random_int(5, 6), {
                        x: l.x + s.x,
                        y: l.y + s.y
                    }, {
                        easing: "sineIn"
                    }).to(h * c, {
                        x: r.x,
                        y: r.y
                    }).call(function () {
                        n.m_curDiamondCount += g;
                        n.refreshDiamondCount();
                        o.stop();
                        n.m_diamondPool.push(a);
                        n.m_diamondAnim.isPlaying() || n.m_diamondAnim.play(1);
                    }).start();
                }, _ = this, y = 0; y < i; y++) g(y);
            };
            e.prototype.createFlyGold = function () {
                for (var t = 0; t < 10; t++) {
                    var e = this.createNewFlyGold();
                    e.active = !1;
                    this.m_goldPool.push(e);
                }
                var i = cc.instantiate(s.GValue.pfFrameAnim);
                this.m_goldAnim = i.getComponent(u.default);
                this.m_goldAnim.node.x = -73;
                i.parent = this.coinGoldNode;
                i.color = cc.color(255, 255, 51);
                this.m_goldAnim.init(this.atlas, "anim_gold_arrival_", 6, 2 * o.GConfig.ActionInterval);
            };
            e.prototype.createNewFlyGold = function () {
                var t = cc.instantiate(s.GValue.pfFrameAnim);
                t.parent = m.BattleMgr.isGameType(c.GameType.Coin) ? this.coinGoldNode : this.goldNode;
                t.getComponent(u.default).init(this.atlas, "gold_", 6, o.GConfig.ActionInterval);
                return t;
            };
            e.prototype.playGoldFly = function (t, e, i) {
                var n = this, a = this.goldNode, r = cc.Vec2.ZERO;
                if (this.coinModelNode.active) {
                    a = this.coinGoldNode;
                    r = cc.v2(-75, 0);
                }
                for (var c = t.y > s.GValue.ViewCenter.y ? 7 : 14, l = a.convertToNodeSpaceAR(t), h = o.GConfig.ActionInterval, p = 360 / i, d = p / 2, m = 0, g = function (t) {
                    var a = _.m_goldPool.pop();
                    a || (a = _.createNewFlyGold());
                    a.active = !0;
                    a.setPosition(l);
                    a.scale = 1;
                    var o = a.getComponent(u.default);
                    o.play();
                    var s = cc.v2(0, f.DYTools.random_int(60, 100)).rotate(cc.misc.degreesToRadians(p * t + f.DYTools.random_int(-d, d))), g = e / i;
                    t == i - 1 && (g = e - m);
                    m += g;
                    cc.tween(a).to(h * f.DYTools.random_int(3, 4), {
                        x: l.x + .7 * s.x,
                        y: .7 * s.y + l.y
                    }).to(h * f.DYTools.random_int(5, 6), {
                        x: l.x + s.x,
                        y: l.y + s.y
                    }, {
                        easing: "sineIn"
                    }).to(h * c, {
                        x: r.x,
                        y: r.y
                    }).call(function () {
                        n.m_curGoldCount += g;
                        n.refreshGoldCount();
                        o.stop();
                        n.m_goldPool.push(a);
                        n.m_goldAnim.isPlaying() || n.m_goldAnim.play(1);
                    }).start();
                }, _ = this, y = 0; y < i; y++) g(y);
            };
            e.prototype.createFlyItem = function () {
                for (var t = 0; t < 10; t++) {
                    var e = this.createNewFlyItem();
                    e.active = !1;
                    this.m_itemPool.push(e);
                }
                var i = cc.instantiate(s.GValue.pfFrameAnim);
                this.m_itemAnim = i.getComponent(u.default);
                this.m_itemAnim.node.x = -73;
                i.parent = this.itemNode;
                i.color = cc.color(255, 255, 51);
                this.m_itemAnim.init(this.atlas, "anim_gold_arrival_", 6, 2 * o.GConfig.ActionInterval);
            };
            e.prototype.createNewFlyItem = function () {
                var t = new cc.Node("item");
                t.parent = this.itemNode;
                t.addComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame("cl");
                return t;
            };
            e.prototype.playItemFly = function (t, e, i) {
                for (var n = this, a = this.itemNode, r = cc.Vec2.ZERO, c = t.y > s.GValue.ViewCenter.y ? 7 : 14, l = a.convertToNodeSpaceAR(t), h = o.GConfig.ActionInterval, u = 360 / i, p = u / 2, d = 0, m = function (t) {
                    var a = g.m_itemPool.pop();
                    a || (a = g.createNewFlyItem());
                    a.active = !0;
                    a.setPosition(l);
                    a.scale = 1;
                    var o = cc.v2(0, f.DYTools.random_int(60, 100)).rotate(cc.misc.degreesToRadians(u * t + f.DYTools.random_int(-p, p))), s = e / i;
                    t == i - 1 && (s = e - d);
                    d += s;
                    cc.tween(a).to(h * f.DYTools.random_int(3, 4), {
                        x: l.x + .7 * o.x,
                        y: .7 * o.y + l.y
                    }).to(h * f.DYTools.random_int(5, 6), {
                        x: l.x + o.x,
                        y: l.y + o.y
                    }, {
                        easing: "sineIn"
                    }).to(h * c, {
                        x: r.x,
                        y: r.y
                    }).call(function () {
                        n.m_curItemCount += s;
                        n.refreshItemCount();
                        n.m_itemPool.push(a);
                    }).start();
                }, g = this, _ = 0; _ < i; _++) m(_);
            };
            e.prototype.showStoneDrop = function () {
                var t = this, e = (o.GConfig.ActionInterval, this.effectNode.getChildByName("dropStone"));
                e || ((e = new cc.Node("dropStone")).parent = this.effectNode);
                e.opacity = 255;
                cc.tween(e).call(function () {
                    t.createDropStone();
                }).delay(1).union().repeatForever().start();
            };
            e.prototype.createDropStone = function () {
                for (var t = o.GConfig.ActionInterval, e = this.effectNode.getChildByName("dropStone"), i = (s.GValue.IPADWidth > 0 ? s.GValue.IPADWidth : s.GValue.ViewWidth) / 2, n = s.GValue.ViewHeight / 2, a = f.DYTools.random_int(4, 6), r = (2 * i - 20) / a, c = function (a) {
                    var o = new cc.Node();
                    e.addChild(o);
                    o.addComponent(cc.Sprite).spriteFrame = l.atlas.getSpriteFrame(l._getStoneImage() + f.DYTools.random_int(0, 2));
                    o.zIndex = f.DYTools.random_int(0, 10);
                    o.angle = f.DYTools.random_int(0, 360);
                    o.scale = f.DYTools.random_int(6, 10) / 10;
                    o.position = cc.v3(f.DYTools.random_int(10 - i + r * a, 10 - i + r * (a + 1)), n / l.node.scale + 50);
                    var s = o.position.add(cc.v3(0, 2 * -n - 100)), c = f.DYTools.random_int(20, 40) * t;
                    cc.tween(o).delay(f.DYTools.random_int(3 * a, 7 * a) * t).to(c, {
                        position: s,
                        color: cc.color(16, 42, 71)
                    }).call(function () {
                        o.destroy();
                    }).start();
                }, l = this, h = 0; h < a; h++) c(h);
                a = f.DYTools.random_int(2, 3);
                r = (2 * i - 100) / a;
                var u = function (a) {
                    var o = new cc.Node();
                    o.zIndex = f.DYTools.random_int(0, 10);
                    e.addChild(o);
                    o.addComponent(cc.Sprite).spriteFrame = p.atlas.getSpriteFrame("dust");
                    o.scaleY = f.DYTools.random_int(20, 30) / 10;
                    o.position = cc.v3(f.DYTools.random_int(50 - i + r * a, 50 - i + r * (a + 1)), n / p.node.scale + o.height * o.scaleY);
                    var s = o.position.add(cc.v3(0, -n - o.height * o.scaleY)), c = s.add(cc.v3(0, -f.DYTools.random_int(220, 360))), l = f.DYTools.random_int(80, 120) / 100;
                    cc.tween(o).delay(f.DYTools.random_int(a, 2 * a) * t).to(l, {
                        position: s,
                        scale: 1.8
                    }).to(.2, {
                        opacity: 0,
                        position: c
                    }).call(function () {
                        o.destroy();
                    }).start();
                }, p = this;
                for (h = 0; h < a; h++) u(h);
            };
            e.prototype.stopDropStone = function () {
                var t = o.GConfig.ActionInterval, e = this.effectNode.getChildByName("dropStone");
                if (e) {
                    e.stopAllActions();
                    cc.tween(e).to(5 * t, {
                        opacity: 0
                    }).start();
                }
            };
            e.prototype._getStoneImage = function () {
                switch (m.BattleMgr.mapId) {
                    case 1:
                    case 2:
                        return "stone_1_";

                    case 3:
                        return "stone_2_";

                    case 4:
                    case 5:
                        return "stone_3_";
                }
                return "stone_1_";
            };
            e.prototype.playHideAnim = function () {
                this.showStoneDrop();
                cc.tween(this.normalModelNode).to(1 / 6, {
                    opacity: 0
                }).start();
                cc.tween(this.topNode).to(1 / 6, {
                    opacity: 0
                }).start();
                cc.tween(this.coinModelNode).to(1 / 6, {
                    opacity: 0
                }).start();
                cc.tween(this.node).delay(2).to(.5, {
                    opacity: 0
                }).start();
            };
            r([C(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            r([C(cc.Node)], e.prototype, "normalModelNode", void 0);
            r([C(cc.Node)], e.prototype, "normalTopNode", void 0);
            r([C(cc.Node)], e.prototype, "goldNode", void 0);
            r([C(cc.Node)], e.prototype, "itemNode", void 0);
            r([C(cc.Node)], e.prototype, "stageNode", void 0);
            r([C(cc.Node)], e.prototype, "stageNumNode", void 0);
            r([C(cc.Sprite)], e.prototype, "barBg", void 0);
            r([C(cc.Sprite)], e.prototype, "barPro", void 0);
            r([C(cc.Sprite)], e.prototype, "barPic", void 0);
            r([C(cc.Node)], e.prototype, "coinModelNode", void 0);
            r([C(cc.Node)], e.prototype, "coinGoldNode", void 0);
            r([C(cc.Node)], e.prototype, "coinDiamondNode", void 0);
            r([C(cc.Sprite)], e.prototype, "coinTimeSpr", void 0);
            r([C(cc.Node)], e.prototype, "topNode", void 0);
            r([C(cc.Node)], e.prototype, "effectNode", void 0);
            r([C(cc.Node)], e.prototype, "pauseNode", void 0);
            r([C(cc.Node)], e.prototype, "triangleParent", void 0);
            r([C(cc.Label)], e.prototype, "stageInfoLabel", void 0);
            return r([k], e);
        }(M.default);
        i.default = w;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../frame/ui/UINum": "UINum",
        "../../../../../util/GameFunc": "GameFunc",
        "../../../../../util/Tools": "Tools",
        "../../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../../battle/manager/battle/BossManager": "BossManager",
        "../../../../battle/manager/battle/EnemyManager": "EnemyManager",
        "../../../../battle/manager/battle/GameRuleManager": "GameRuleManager",
        "../../../../battle/manager/battle/wave/CoinWaveManager": "CoinWaveManager",
        "../../../../battle/manager/battle/wave/NormalWaveManager": "NormalWaveManager"
    }],
    BossBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b1831vlDW5OHoZPWcQ1XDZK", "BossBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameConfig"), s = t("../../../config/GameEnum"), c = t("../../../data/manager/ConfigDataManager"), l = t("../../../frame/manager/FrameManager"), h = t("../../../util/GameFunc"), u = t("../../../util/Tools"), p = t("../collide/LineColliderComp"), d = t("../common/EntityBase"), f = t("../manager/battle/EffectManager"), m = t("../manager/battle/LootManager"), g = t("../manager/battle/MapManager"), _ = t("../manager/battle/SnakeManager"), y = t("./BossLaser"), v = cc._decorator, b = v.ccclass, M = (v.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._preGiveGoldPercent = 100;
                    e._preEmitGoldPercent = 0;
                    e._preEmitProgressPercent = 0;
                    e.m_isActive = !1;
                    e._isDead = !1;
                    e._removeAble = !1;
                    e.m_hurtOffsetY = 0;
                    e.m_hurtArr = [];
                    e.m_stopLine = null;
                    e.animNode = null;
                    e.m_arrLaser = [];
                    return e;
                }
                e.prototype.onLoad = function () {
                    l.FrameMgr.noticeMgr.once(s.EventTypeEnum.BossBattle, this.startBattle.bind(this), this);
                    this.setIsDie(!1);
                };
                e.prototype.initStopLine = function (t) {
                    var e = new p.default();
                    if (o.GConfig.ColliderDraw) {
                        var i = new cc.Node();
                        g.MapMgr.wallLayer.addChild(i);
                        e.node = i;
                        e.init([1, t.x - 400, t.y - 200, t.x + 400, t.y - 200], null, i);
                        var n = i.addComponent(cc.Graphics);
                        n.lineWidth = 2;
                        n.strokeColor = cc.Color.RED;
                        n.moveTo(t.x - 400, t.y - 200);
                        n.lineTo(t.x + 400, t.y - 200);
                        n.stroke();
                        n.fill();
                    } else e.init([1, t.x - 400, t.y - 200, t.x + 400, t.y - 200]);
                    this.m_stopLine = e;
                    e.enabled = !0;
                    g.MapMgr.wallCols.push(e);
                };
                e.prototype.hideStopLine = function () {
                    this.m_stopLine && (this.m_stopLine.enabled = !1);
                };
                e.prototype.updateLogic = function () { };
                e.prototype.startBattle = function () { };
                e.prototype.startEnter = function (t, e) {
                    void 0 === t && (t = !1);
                    void 0 === e && (e = -1);
                };
                e.prototype.toDie = function () {
                    this.isDead = !0;
                    this.isActive = !1;
                    this.setIsDie(!0);
                    this.onDie();
                };
                e.prototype.onDie = function () { };
                e.prototype.getBossType = function () {
                    return s.BossType.Normal;
                };
                Object.defineProperty(e.prototype, "maxHp", {
                    get: function () {
                        return 0;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "curHp", {
                    get: function () {
                        return 0;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "preGiveGoldPercent", {
                    get: function () {
                        return this._preGiveGoldPercent;
                    },
                    set: function (t) {
                        this._preGiveGoldPercent = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.hurt = function (t, e, i) {
                    void 0 === e && (e = !1);
                    void 0 === i && (i = !1);
                    return 0;
                };
                e.prototype.showHurtNum = function (t, e, i) {
                    void 0 === e && (e = !1);
                    if (0 != t) {
                        e && (t = -_.SnakeMgr.getEnemyShowAtk(Math.abs(t)));
                        i ? f.EffectMgr.showHurtNum({
                            pos: cc.v2(this.node.x, this.node.y + this.m_hurtOffsetY),
                            num: t,
                            numType: s.NumType.EnemyHurtRed,
                            scale: 2.2
                        }) : f.EffectMgr.showHurtNum({
                            pos: cc.v2(this.node.x, this.node.y + this.m_hurtOffsetY),
                            num: t,
                            numType: s.NumType.EnemyHurt,
                            scale: 2.2
                        });
                    }
                };
                e.prototype.showIgniteAnim = function (t, e) {
                    void 0 === e && (e = 0);
                };
                Object.defineProperty(e.prototype, "isActive", {
                    get: function () {
                        return this.m_isActive;
                    },
                    set: function (t) {
                        this.m_isActive = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "hurtAble", {
                    get: function () {
                        return this.isActive && !this.isDead;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "isDead", {
                    get: function () {
                        return this._isDead;
                    },
                    set: function (t) {
                        this._isDead = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "removeAble", {
                    get: function () {
                        return this._removeAble;
                    },
                    set: function (t) {
                        this._removeAble = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "speed", {
                    get: function () {
                        return cc.Vec2.ZERO;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "rotateType", {
                    get: function () {
                        return 1;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getBossOtherEntity = function () {
                    return null;
                };
                e.prototype.getHurtAbleEntity = function () {
                    return this.m_hurtArr;
                };
                e.prototype.pushHurtAbleEntity = function (t) {
                    u.DYTools.arrContain(this.m_hurtArr, t) || this.m_hurtArr.push(t);
                };
                e.prototype.removeHurtAbleEntity = function (t) {
                    u.DYTools.arrRemove(this.m_hurtArr, t);
                };
                e.prototype.cutHpEmitEvent = function (t) {
                    var e = c.ConfigDataMgr.getGlobalDataNum(s.GlobalKey.RefreshProgress), i = Math.floor(this.curHp / this.maxHp * 100);
                    if (i % e == 0 && i != this._preEmitProgressPercent) {
                        l.FrameMgr.noticeMgr.emit(t, this.node.getPosition());
                        this._preEmitProgressPercent = i;
                    }
                    var n = c.ConfigDataMgr.getGlobalDataNumArr(s.GlobalKey.BossRefreshGold);
                    if (n.length > 0) {
                        var a = n[0], r = n[1] || 0, o = this.preGiveGoldPercent - i;
                        if (o > a) {
                            var u = Math.floor(o / a);
                            this.preGiveGoldPercent -= u * a;
                            var p = (100 - r) / 100 * (u * a / 100);
                            i <= 0 && (p += r / 100);
                            m.LootMgr.addLootGold(h.GFunc.getEnemyWorldPos(this.node), [p, this.maxHp]);
                            m.LootMgr.addLootItem(h.GFunc.getEnemyWorldPos(this.node), [p, this.maxHp]);
                        }
                    }
                };
                e.prototype.createAnimNode = function (t, e) {
                    this.animNode = new cc.Node();
                    this.animNode.parent = this.node;
                    this.animNode.setPosition(t);
                    this.animNode.scale = e;
                    this.animNode.zIndex = 999999;
                };
                e.prototype.hideAllStateEffect = function () { };
                e.prototype.updateStateEffect = function (t) {
                    this.updateBurnInstantHurtDis(t);
                };
                e.prototype.createLaser = function (t, e, i, n, a, r, o, s, c) {
                    void 0 === o && (o = 1);
                    void 0 === s && (s = 1);
                    void 0 === c && (c = 1);
                    var l = new cc.Node();
                    this.node.addChild(l);
                    var h = l.addComponent(y.default);
                    h.initImgCount(n, a, r, o, s, c);
                    h.initLaser(this, t, e);
                    h.setAudioName(i);
                    this.m_arrLaser.push(h);
                    return l;
                };
                e.prototype.removeLaser = function (t) {
                    for (var e = this.m_arrLaser.length - 1; e >= 0; e--) if (t == this.m_arrLaser[e]) {
                        t.destroyLaser();
                        t.destroy();
                        this.m_arrLaser.splice(e, 1);
                        break;
                    }
                };
                e.prototype.removeAllLaser = function () {
                    for (var t = this.m_arrLaser.length - 1; t >= 0; t--) {
                        this.m_arrLaser[t].destroyLaser();
                        this.m_arrLaser[t].destroy();
                    }
                    this.m_arrLaser = [];
                };
                return r([b], e);
            }(d.default));
        i.default = M;
        cc._RF.pop();
    }, {
        "../../../config/GameConfig": "GameConfig",
        "../../../config/GameEnum": "GameEnum",
        "../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../frame/manager/FrameManager": "FrameManager",
        "../../../util/GameFunc": "GameFunc",
        "../../../util/Tools": "Tools",
        "../collide/LineColliderComp": "LineColliderComp",
        "../common/EntityBase": "EntityBase",
        "../manager/battle/EffectManager": "EffectManager",
        "../manager/battle/LootManager": "LootManager",
        "../manager/battle/MapManager": "MapManager",
        "../manager/battle/SnakeManager": "SnakeManager",
        "./BossLaser": "BossLaser"
    }],
    BossDesertHandOneSunFinger: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e1d57aTh4ZHH62YJDiBZdD7", "BossDesertHandOneSunFinger");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../config/GameEnum"), l = t("../../../../frame/manager/FrameManager"), h = t("../../../../frame/ui/FrameAnim"), u = t("../../manager/battle/EnemyManager"), p = t("../../manager/battle/EntityManager"), d = t("../../manager/battle/MapManager"), f = t("../../manager/battle/SnakeManager"), m = t("../fire/BossEntityFire"), g = cc._decorator, _ = g.ccclass, y = (g.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_boss = null;
                    e.m_posEnd = null;
                    e.m_time = 0;
                    e.m_enemyCount = 0;
                    e.m_enemyId = 0;
                    e.m_hurt = 0;
                    e.m_radius = 0;
                    e.m_enemyScaleMin = 1;
                    e.m_enemyScaleMax = 1;
                    e.m_burningTime = 0;
                    e.m_burningRadius = 0;
                    e.m_speedX = 0;
                    e.m_speedY = 0;
                    e.m_fireAnim = null;
                    e.m_wraning = null;
                    e.m_atlas = null;
                    return e;
                }
                e.prototype.initData = function (t, e, i, n, a, r, o, s, c, l, h, u) {
                    this.m_boss = t;
                    this.m_posEnd = e;
                    this.m_time = n;
                    this.m_enemyCount = a;
                    this.m_enemyId = r;
                    this.m_hurt = o;
                    this.m_radius = s;
                    this.m_enemyScaleMin = c;
                    this.m_enemyScaleMax = l;
                    this.m_burningTime = h;
                    this.m_burningRadius = u;
                    this.m_atlas = t.m_atlas;
                    this.initSpeed(e, this.m_time);
                    this.createUI(i);
                };
                e.prototype.createUI = function (t) {
                    if (this.m_fireAnim) this.m_fireAnim.node.active = !0; else {
                        var e = cc.instantiate(s.GValue.pfFrameAnim);
                        this.m_fireAnim = e.getComponent(h.default);
                        this.m_fireAnim.node.setPosition(cc.Vec2.ZERO);
                        this.node.addChild(e);
                    }
                    this.m_fireAnim.init(this.m_atlas, "OneSunFinger_", 1, o.GConfig.ActionInterval);
                    this.m_fireAnim.setAnchor(cc.v2(.5, 0));
                    this.m_fireAnim.play(0);
                    this.m_fireAnim.node.angle = t;
                    this.createWarning(this.m_posEnd);
                };
                e.prototype.initSpeed = function (t, e) {
                    var i = this.node.getPosition();
                    this.m_speedX = (t.x - i.x) / e;
                    this.m_speedY = (t.y - i.y) / e;
                };
                e.prototype.updateLogic = function (t) {
                    var e = this.node.getPosition(), i = !1;
                    if (this.m_speedY > 0) {
                        e.y += this.m_speedY * t;
                        if (e.y > this.m_posEnd.y) {
                            e.y = this.m_posEnd.y;
                            i = !0;
                        }
                    } else if (this.m_speedY < 0) {
                        e.y += this.m_speedY * t;
                        if (e.y < this.m_posEnd.y) {
                            e.y = this.m_posEnd.y;
                            i = !0;
                        }
                    } else i = !0;
                    this.node.setPosition(e);
                    if (i) {
                        this.destroyWraning();
                        if (!this.m_boss.isDead) {
                            f.SnakeMgr.isSnakeHeadInCircle(e.x, e.y, this.m_radius) && f.SnakeMgr.snakeHurt(this.m_hurt);
                            for (var n = this.m_boss, a = function (t) {
                                var e = r.node.getPosition().add(r.getEnemyPos(t, r.m_enemyCount));
                                if (d.MapMgr.isInMap(e)) {
                                    var i = u.EnemyMgr.createNormalEnemy(r.m_enemyId), a = r.m_enemyScaleMin + (r.m_enemyScaleMax - r.m_enemyScaleMin) * Math.random();
                                    i.node.setPosition(e);
                                    i.init();
                                    i.setCallbackDie(function () {
                                        n && n.onEnemyDie(i);
                                    });
                                    u.EnemyMgr.extraEnemyCount += 1;
                                    i.nodeScale = .7 * a;
                                    var o = cc.scaleTo(.3, a), s = cc.callFunc(function () {
                                        i.nodeScale = a;
                                        i.startBattle();
                                    }), c = cc.sequence(o, s);
                                    i.node.runAction(c);
                                }
                            }, r = this, g = 0; g < this.m_enemyCount; g++) a(g);
                            l.FrameMgr.noticeMgr.emit(c.EventTypeEnum.ScreenShake, {
                                level: 2
                            });
                            if (d.MapMgr.isInMap(this.m_posEnd) && this.m_burningTime > 0 && this.m_burningRadius > 0) {
                                var _ = cc.instantiate(s.GValue.pfFrameAnim), y = _.getComponent(h.default);
                                y.node.setPosition(this.m_posEnd.add(cc.v2(.5)));
                                p.EntityMgr.addShadow(_);
                                y.init(this.m_atlas, "FireMeteorBurning_", 10, 2 * o.GConfig.ActionInterval);
                                y.play(0);
                                _.scale = 1;
                                var v = new m.BossFireMeteorBurning();
                                v.nodeAnim = _;
                                v.pos = _.getPosition();
                                v.radius = this.m_burningRadius;
                                v.time = this.m_burningTime;
                                v.triggerTime = this.m_burningTime;
                                v.atk = this.m_hurt;
                                this.m_boss.addFireMeteorBurning(v);
                            }
                        }
                        var b = cc.instantiate(s.GValue.pfFrameAnim), M = b.getComponent(h.default);
                        M.node.setPosition(this.m_posEnd.add(cc.v2(0, 50)));
                        p.EntityMgr.addShadow(b);
                        M.init(this.m_atlas, "oneSunFinger_bomb_", 8, 2 * o.GConfig.ActionInterval);
                        M.setDstBlendFactorMode1();
                        M.setStopCall(function () {
                            M.destroy();
                        });
                        M.play(1);
                        b.scale = 0;
                        var S = cc.scaleTo(5 * o.GConfig.ActionInterval, 1);
                        b.runAction(S);
                        this.m_boss && this.m_boss.removeFireMeteor(this);
                        this.m_fireAnim.node.active = !1;
                        var k = cc.delayTime(5), C = cc.destroySelf(), w = cc.sequence(k, C);
                        this.node.runAction(w);
                    }
                };
                e.prototype.createWarning = function (t) {
                    this.destroyWraning();
                    this.m_wraning = new cc.Node();
                    p.EntityMgr.addShadow(this.m_wraning);
                    this.m_wraning.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("warning_oneSunFinger");
                    this.m_wraning.active = !0;
                    this.m_wraning.opacity = 255;
                    this.m_wraning.setPosition(t.add(cc.v2(0, 20)));
                };
                e.prototype.destroyWraning = function () {
                    if (this.m_wraning) {
                        var t = this.m_wraning.getComponent(sp.Skeleton);
                        t && (t.enabled = !1);
                        this.m_wraning.opacity = 0;
                        this.m_wraning.active = !1;
                        this.m_wraning.destroy();
                        this.m_wraning = null;
                    }
                };
                e.prototype.getEnemyPos = function (t, e) {
                    var i = cc.Vec2.ZERO;
                    if (1 == e) return i;
                    if (2 == e) {
                        if (0 == t) return cc.v2(-50, 0);
                        if (1 == t) return cc.v2(50, 0);
                    } else if (3 == e) {
                        if (0 == t) return cc.v2(0, 50);
                        if (1 == t) return cc.v2(-50, -50);
                        if (2 == t) return cc.v2(50, -50);
                    } else if (4 == e) {
                        if (0 == t) return cc.v2(-50, 50);
                        if (1 == t) return cc.v2(50, 50);
                        if (2 == t) return cc.v2(-50, -50);
                        if (3 == t) return cc.v2(50, -50);
                    } else if (5 == e) {
                        if (0 == t) return cc.v2(-50, 50);
                        if (1 == t) return cc.v2(50, 50);
                        if (2 == t) return cc.v2(-50, -50);
                        if (3 == t) return cc.v2(50, -50);
                        if (4 == t) return cc.v2(0, 0);
                    }
                    return i;
                };
                return r([_], e);
            }(cc.Component));
        i.default = y;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../fire/BossEntityFire": "BossEntityFire"
    }],
    BossEntityDesertHand: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6bcd9agJ4JKGZwkMJVZpgC+", "BossEntityDesertHand");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o, s, c, l, h, u = t("../../../../config/GameConfig"), p = t("../../../../config/GameConst"), d = t("../../../../config/GameEnum"), f = t("../../../../data/config/ConfigBossData"), m = t("../../../../frame/manager/CameraManager"), g = t("../../../../frame/manager/FrameManager"), _ = t("../../../../frame/ui/FrameAnim"), y = t("../../../../util/Tools"), v = t("../../bullet/FirePoint/FirePointEnemy"), b = t("../../collide/CircleColliderComp"), M = t("../../collide/RectColliderComp"), S = t("../../manager/battle/BulletManager"), k = t("../../manager/battle/EnemyManager"), C = t("../../manager/battle/EntityManager"), w = t("../../manager/battle/GameRuleManager"), A = t("../../manager/battle/LootManager"), T = t("../../manager/battle/MapManager"), D = t("../../manager/battle/ShadowManager"), P = t("../../manager/battle/SnakeManager"), E = t("../BossBase"), B = t("../BossMoveBase"), F = t("./BossDesertHandOneSunFinger"), N = cc._decorator, x = N.ccclass, R = (N.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.radius = 0;
                    e.m_group = d.ColliderGroup.Enemy;
                    e.m_data = null;
                    e.m_isSmall = !1;
                    e.m_show = null;
                    e.m_showInitPos = cc.v2(0, 0);
                    e.m_spinePos = cc.v2(0, -180);
                    e.m_spine = null;
                    e.m_effect_front = null;
                    e.m_effect_back = null;
                    e.m_shadow = null;
                    e.m_atlas = null;
                    e.m_collideComp = null;
                    e.m_moveComp = null;
                    e.m_firePoint = null;
                    e.m_state = d.BossState.Node;
                    e.m_atkDuration = 0;
                    e.m_atkOrderArr = [];
                    e.m_atkRandomArr = [];
                    e.m_atkRandomWeight = 0;
                    e.m_curAtkData = null;
                    e.m_atkLastTime = 0;
                    e.m_curHp = 0;
                    e.m_maxHp = 0;
                    e.m_hurtAnim = null;
                    e.m_hurtTween = null;
                    e.m_arrFireMeteor = [];
                    e.m_arrFireMeteorBurning = [];
                    e.m_aimFireMeteorEnemyCur = 0;
                    e.m_noAimFireMeteorEnemyCur = 0;
                    e.m_aimFireMeteorBurningCur = 0;
                    e.m_noAimFireMeteorBurningCur = 0;
                    e.m_audioId_fistLand = -1;
                    e.m_audio_name_fistLand = "boss_hand_fistLand";
                    e.m_dieEnemyNum = 0;
                    e.m_aimCount = 0;
                    e.m_aimDelayTime = 0;
                    e.m_aimDisTime = 0;
                    e.m_noAimCount = 0;
                    e.m_noAimDelayTime = 0;
                    e.m_noAimDisTime = 0;
                    e.m_rulaiPalm_times = 0;
                    e.m_rulaiPalm_readyTime = 0;
                    e.m_rulaiPalm_upTime = 0;
                    e.m_rulaiPalm_warningTime = 0;
                    e.m_rulaiPalm_downTime = 0;
                    e.m_rulaiPalm_stayTime = 0;
                    e.m_rulaiPalm_skyScale = 0;
                    e.m_rulaiPalm_atk = 0;
                    e.m_rulaiPalm_curTimes = 0;
                    e.m_rulaiPalm_curReadyTime = 0;
                    e.m_rulaiPalm_curWarningTime = 0;
                    e.m_rulaiPalm_curStayTime = 0;
                    e.m_rulaiPalm_state = s.Ready;
                    e.m_warning_rulaiPalm = null;
                    e.m_ground_rulaiPalm = null;
                    e.m_offset_hurt_rulaiPalm = cc.v2(-20, -50);
                    e.m_laser_state = c.Ready;
                    e.m_laser_startPoint = null;
                    e.m_laser_isBegin = !1;
                    e.m_laser_offset = cc.v2(0, 83);
                    e.m_fistUp_times = 0;
                    e.m_fistUp_readyTime = 0;
                    e.m_fistUp_warningTime = 0;
                    e.m_fistUp_stayTime = 0;
                    e.m_fistUp_hideTime = 0;
                    e.m_fistUp_atk = 0;
                    e.m_fistUp_curTimes = 0;
                    e.m_fistUp_curReadyTime = 0;
                    e.m_fistUp_curWarningTime = 0;
                    e.m_fistUp_curStayTime = 0;
                    e.m_fistUp_curHideTime = 0;
                    e.m_fistUp_state = l.Ready;
                    e.m_warning_fistUp = null;
                    e.m_offset_hurt_fistUp = cc.v2(0, -100);
                    e.m_fistLand_times = 0;
                    e.m_fistLand_speedAngle = 0;
                    e.m_fistLand_warningTime = 0;
                    e.m_fistLand_speed = 0;
                    e.m_fistLand_distance = 0;
                    e.m_fistLand_stayTime = 0;
                    e.m_fistLand_atk = 0;
                    e.m_fistLand_curTimes = 0;
                    e.m_fistLand_curWarningTime = 0;
                    e.m_fistLand_curDistance = 0;
                    e.m_fistLand_curStayTime = 0;
                    e.m_fistLand_moveDir = cc.v2(0, 1);
                    e.m_fistLand_state = h.Aim;
                    e.m_warning_fistLand = null;
                    e.m_warning_fistLand_height = 0;
                    e.m_fistLand_smoke = null;
                    return e;
                }
                e.prototype.create = function (t) {
                    this.m_data = t;
                    this.m_atlas = g.FrameMgr.loadMgr.get("TP_BossDesertHand", cc.SpriteAtlas);
                    g.FrameMgr.loadMgr.loadAudio(this.m_audio_name_fistLand);
                    g.FrameMgr.loadMgr.loadAudio("boss_hand_laser");
                    this.m_show = new cc.Node();
                    this.m_show.setPosition(this.m_showInitPos);
                    this.m_show.angle = 0;
                    this.m_show.parent = this.node;
                    this.initData();
                    this.initCollide();
                    this.initMoveComp();
                    this.initUI();
                    this.hideAllStateEffect();
                    this.node.opacity = 0;
                    this.m_firePoint = null;
                    this.pushHurtAbleEntity(this);
                    this.m_arrFireMeteor = [];
                    this.m_arrFireMeteorBurning = [];
                };
                e.prototype.test = function () {
                    this.m_data.speed = 100;
                    this.m_data.atkOrder = [2, 2, 10, 9, 10, 10, 10, 2, 9, 2, 2, 2];
                    this.m_data.atkRandom = [cc.v2(1, 10), cc.v2(2, 10), cc.v2(3, 10), cc.v2(4, 10), cc.v2(5, 10), cc.v2(6, 10)];
                    this.m_data.atkParam = [];
                    var t;
                    (t = new f.BossTreeAtkData()).type = o.OneSunFinger;
                    t.param = [];
                    t.param.push([1, 1, 1, 100, 0, 0, 0, 5, 400001, 1, 1, 5, 200, 5, 5]);
                    t.param.push([6, .5, .5, 200, 0, 0, 0, 2, 400001, 1, 1, 5, 200, 5, 5]);
                    this.m_data.atkParam.push(t);
                    (t = new f.BossTreeAtkData()).type = o.RulaiPalm;
                    t.param = [];
                    t.param.push([3, 2, .3, 2, .3, 2, 3, 1]);
                    this.m_data.atkParam.push(t);
                    (t = new f.BossTreeAtkData()).type = o.Bullet;
                    t.param = [];
                    t.param.push([9001]);
                    this.m_data.atkParam.push(t);
                    (t = new f.BossTreeAtkData()).type = o.Laser;
                    t.param = [];
                    t.param.push([1, 2, 100, 3, 0, 0, 3, .5, 100, 1, 2, 2, 2]);
                    this.m_data.atkParam.push(t);
                    (t = new f.BossTreeAtkData()).type = o.Laser;
                    t.param = [];
                    t.param.push([2, 2, 100, 0, 0, 500, 500, 3, .5, 100, 1, 1, 2, 2, 2]);
                    this.m_data.atkParam.push(t);
                    (t = new f.BossTreeAtkData()).type = o.Laser;
                    t.param = [];
                    t.param.push([3, 2, 200, 30, 0, 180, 3, .5, 100, 1, 1, 2, 2, 2]);
                    this.m_data.atkParam.push(t);
                    (t = new f.BossTreeAtkData()).type = o.Laser;
                    t.param = [];
                    t.param.push([2, 2, 800, -200, -200, 0, 300, 5, 0, 0, 2]);
                    t.param.push([2, 2, 800, 0, 300, 200, -200, 5, 0, 0, 2]);
                    t.param.push([2, 2, 800, 200, -200, -200, -200, 5, 0, 0, 2]);
                    this.m_data.atkParam.push(t);
                    (t = new f.BossTreeAtkData()).type = o.FistUp;
                    t.param = [];
                    t.param.push([3, 2, 2, 2, 2, 3]);
                    this.m_data.atkParam.push(t);
                    (t = new f.BossTreeAtkData()).type = o.FistLand;
                    t.param = [];
                    t.param.push([3, 30, 5, 1e3, 500, 2, 1]);
                    this.m_data.atkParam.push(t);
                    (t = new f.BossTreeAtkData()).type = o.SnapFinger;
                    t.param = [];
                    t.param.push([.5, 1]);
                    this.m_data.atkParam.push(t);
                };
                e.prototype.initData = function () {
                    this.m_hurtOffsetY = this.m_data.hurtOffsetY;
                    this.radius = this.m_data.collideData[2];
                    this.preGiveGoldPercent = 100;
                    this.m_curHp = this.m_data.hp;
                    this.m_maxHp = this.m_data.hp;
                    this.m_atkOrderArr = y.DYTools.copyArray(this.m_data.atkOrder);
                    this.m_atkRandomArr = y.DYTools.copyArray(this.m_data.atkRandom);
                    for (var t = 0; t < this.m_atkRandomArr.length; t++) this.m_atkRandomWeight += this.m_atkRandomArr[t].y;
                    this.m_isSmall = "" != this.m_data.resfix;
                };
                e.prototype.initCollide = function () {
                    switch (this.m_data.collideType) {
                        case d.ColliderType.Circle:
                            this.m_collideComp = new b.default();
                            this.m_collideComp.init(this.m_data.collideData, this, this.node);
                            break;

                        case d.ColliderType.Rectangle:
                            this.m_collideComp = new M.default();
                            this.m_collideComp.init(this.m_data.collideData, this, this.node);
                    }
                };
                e.prototype.initMoveComp = function () {
                    this.m_moveComp = new B.default();
                    this.m_moveComp.init(this, this.m_data.speed);
                    this.m_moveComp.setIsAdjustScaleX(!1);
                };
                e.prototype.initUI = function () {
                    this._initShadow();
                    this._initBody();
                    this._initEffect();
                };
                e.prototype._initShadow = function () {
                    if (!this.m_shadow) {
                        var t = new cc.Node();
                        t.parent = this.m_show;
                        t.zIndex = -100;
                        this.setShadowPos();
                        this.m_shadow = t.addComponent(cc.Sprite);
                        this.m_shadow.spriteFrame = D.ShadowMgr.atlas.getSpriteFrame("enemy_1_0");
                        this.setShadowShow(!1);
                    }
                };
                e.prototype.setShadowShow = function (t, e) {
                    void 0 === e && (e = !1);
                    if (this.m_shadow) {
                        this.m_shadow.node.opacity = t ? 255 : 0;
                        if (e) {
                            this.m_shadow.spriteFrame = this.m_atlas.getSpriteFrame("FistLand_shadow");
                            this.m_shadow.node.scale = 2;
                            this.m_shadow.node.setPosition(0, -80);
                        } else {
                            this.m_shadow.spriteFrame = D.ShadowMgr.atlas.getSpriteFrame("enemy_1_0");
                            this.m_shadow.node.scale = 3.5;
                            this.m_shadow.node.setPosition(0, -120);
                        }
                    }
                    this.setShadowPos();
                };
                e.prototype.setShadowPos = function () { };
                e.prototype.setAnimation = function (t, e, i) {
                    this.m_spine.setAnimation(t, e, i);
                    if (this.m_effect_front.findAnimation(e)) {
                        this.m_effect_front.node.active = !0;
                        this.m_effect_front.setAnimation(t, e, i);
                    } else this.m_effect_front.node.active = !1;
                    if (this.m_effect_back.findAnimation(e)) {
                        this.m_effect_back.node.active = !0;
                        this.m_effect_back.setAnimation(t, e, i);
                    } else this.m_effect_back.node.active = !1;
                };
                e.prototype._initEffect = function () {
                    var t = cc.instantiate(p.GValue.pfFrameAnim);
                    t.name = "m_hurtAnim";
                    t.parent = C.EntityMgr.getEffectLayer();
                    this.m_hurtAnim = t.getComponent(_.default);
                    this.m_hurtAnim.init(k.EnemyMgr.enemyEffectAtlas, k.EnemyMgr.hurtImage, k.EnemyMgr.hurtCount, u.GConfig.ActionInterval);
                    t.setPosition(this.m_collideComp.getOffset().add(this.node.getPosition()));
                };
                e.prototype._initBody = function () {
                    var t = this, e = new cc.Node("body");
                    this.m_show.addChild(e);
                    e.setPosition(this.m_spinePos);
                    this.m_spine = e.addComponent(sp.Skeleton);
                    this.m_spine.skeletonData = g.FrameMgr.loadMgr.get("spine_boss_desertHand", sp.SkeletonData);
                    this.m_spine.premultipliedAlpha = !1;
                    var i = "skin_1";
                    this.m_data.resfix && "" != this.m_data.resfix && (i = "skin_" + this.m_data.resfix);
                    this.m_spine.setSkin(i);
                    this.m_spine.setCompleteListener(function (e) {
                        switch (e.animation ? e.animation.name : "") {
                            case "enter":
                                t.scheduleOnce(function () {
                                    t.setState(d.BossState.Move);
                                    g.FrameMgr.noticeMgr.emit(d.EventTypeEnum.BossEnterEnd, t.m_data.tip);
                                    t.setShadowShow(!0);
                                });
                                break;

                            case "die":
                                t.hideStopLine();
                                t.removeAble = !0;
                                break;

                            case "bullet":
                                t.scheduleOnce(function () {
                                    t.m_firePoint && (t.m_firePoint.enabled = !1);
                                    t.attackOver();
                                });
                                break;

                            case "fistLandBegin":
                                t.scheduleOnce(function () {
                                    t.m_fistLand_state = h.Aim;
                                });
                                break;

                            case "fistLandEnd":
                            case "rulaiPalmEnd":
                            case "laserEnd":
                                t.scheduleOnce(function () {
                                    t.attackOver();
                                });
                        }
                    });
                    var n = new cc.Node();
                    this.m_show.addChild(n);
                    n.setPosition(this.m_spinePos);
                    this.m_effect_back = n.addComponent(sp.Skeleton);
                    this.m_effect_back.skeletonData = g.FrameMgr.loadMgr.get("spine_boss_desertHand_back", sp.SkeletonData);
                    this.m_effect_back.premultipliedAlpha = !1;
                    n.zIndex = -1;
                    var a = new cc.Node();
                    this.m_show.addChild(a);
                    a.setPosition(this.m_spinePos);
                    this.m_effect_front = a.addComponent(sp.Skeleton);
                    this.m_effect_front.skeletonData = g.FrameMgr.loadMgr.get("spine_boss_desertHand_front", sp.SkeletonData);
                    this.m_effect_front.premultipliedAlpha = !1;
                };
                e.prototype.update = function () { };
                e.prototype.updateLogic = function (t) {
                    this.updateReduceSpeedLogic(t);
                    this.updateStateEffect(t);
                    for (var e = this.m_arrFireMeteor.length - 1; e >= 0; e--) this.m_arrFireMeteor[e].updateLogic(t);
                    for (e = this.m_arrFireMeteorBurning.length - 1; e >= 0; e--) {
                        var i = this.m_arrFireMeteorBurning[e];
                        i.time = i.time - t;
                        if (i.time <= 0) this.removeFireMeteorBurning(i); else if (i.triggerTime - i.time >= .1) {
                            i.triggerTime = i.time;
                            cc.Vec2.distance(i.pos, P.SnakeMgr.getSnakeHead().node.getPosition()) < i.radius && P.SnakeMgr.snakeHurt(i.atk);
                        }
                    }
                    this.setShadowPos();
                    if (!this.isDead) {
                        this.m_collideComp && this.m_collideComp.updateLogic(t);
                        this.updateState(t);
                    }
                };
                e.prototype.startBattle = function () {
                    this.isActive = !0;
                    this.m_collideComp.enabled = !0;
                    this.setState(d.BossState.Move);
                };
                e.prototype.startEnter = function (t, e) {
                    void 0 === t && (t = !1);
                    void 0 === e && (e = -1);
                    this.enterMove();
                    this.setState(d.BossState.Enter);
                };
                e.prototype.enterMove = function () {
                    g.FrameMgr.noticeMgr.emit(d.EventTypeEnum.ScreenShake, {
                        level: 1,
                        time: 100
                    });
                    g.FrameMgr.noticeMgr.emit(d.EventTypeEnum.ScreenShake, {
                        level: 2
                    });
                    g.FrameMgr.noticeMgr.emit(d.EventTypeEnum.StopDropStone);
                    g.FrameMgr.noticeMgr.emit(d.EventTypeEnum.HideScreenRed);
                    this.setAnimation(0, "enter", !1);
                    this.node.scale = 1;
                    g.FrameMgr.audioMgr.playEffect("boss_hand_enter");
                };
                e.prototype.setState = function (t) {
                    if (!this.isDead && this.m_state != t) {
                        this.m_state = t;
                        switch (this.m_state) {
                            case d.BossState.Enter:
                                this.node.opacity = 255;
                                break;

                            case d.BossState.Idle:
                                this.m_atkDuration = y.DYTools.random_int(10 * this.m_data.atkDuration.x, 10 * this.m_data.atkDuration.y) / 10;
                                this.setAnimation(0, "idle", !0);
                                break;

                            case d.BossState.Attack:
                                break;

                            case d.BossState.Move:
                                this.m_atkDuration = y.DYTools.random_int(10 * this.m_data.atkDuration.x, 10 * this.m_data.atkDuration.y) / 10;
                                this.setAnimation(0, "move", !0);
                        }
                    }
                };
                e.prototype.updateState = function (t) {
                    switch (this.m_state) {
                        case d.BossState.Enter:
                            break;

                        case d.BossState.Idle:
                            this.updateIdle(t);
                            break;

                        case d.BossState.Attack:
                            this.updateAttack(t);
                            break;

                        case d.BossState.Move:
                            this.updateMove(t);
                    }
                };
                e.prototype.updateIdle = function (t) {
                    this.m_atkDuration -= t;
                    this.m_atkDuration < 0 && this.checkNextAttack();
                };
                e.prototype.updateMove = function (t) {
                    this.m_atkDuration -= t;
                    this.m_atkDuration < 0 ? this.checkNextAttack() : this.m_moveComp && this.m_moveComp.updateLogic(t);
                };
                e.prototype.checkNextAttack = function () {
                    if (this.m_atkOrderArr.length > 0) {
                        var t = this.m_atkOrderArr.shift();
                        if (a = this.m_data.atkParam[t - 1]) this.executeAttack(a); else {
                            y.DYTools.error("boss顺序攻击失败", t, this.m_data.atkParam);
                            this.attackOver();
                        }
                    } else {
                        t = 0;
                        for (var e = y.DYTools.random_int(1, this.m_atkRandomWeight), i = 0, n = 0; n < this.m_atkRandomArr.length; n++) if (e <= (i += this.m_atkRandomArr[n].y)) {
                            t = this.m_atkRandomArr[n].x;
                            break;
                        }
                        var a;
                        if (a = this.m_data.atkParam[t - 1]) this.executeAttack(a); else {
                            y.DYTools.error("boss随机攻击失败");
                            this.attackOver();
                        }
                    }
                };
                e.prototype.executeAttack = function (t) {
                    this.m_curAtkData = t;
                    this.setState(d.BossState.Attack);
                    switch (this.m_curAtkData.type) {
                        case o.OneSunFinger:
                            this.attackFireMeteor();
                            break;

                        case o.RulaiPalm:
                            this.attackRulaiPalm();
                            break;

                        case o.Bullet:
                            this.attackBullet(this.m_curAtkData.param[0][0]);
                            break;

                        case o.Laser:
                            this.attackLaser();
                            break;

                        case o.FistUp:
                            this.attackFistUp();
                            break;

                        case o.FistLand:
                            this.attackFistLand();
                            break;

                        case o.SnapFinger:
                            this.attackSnapFinger();
                            break;

                        default:
                            y.DYTools.error("boss开始攻击技能错误", JSON.stringify(this.m_curAtkData));
                            this.attackOver();
                    }
                };
                e.prototype.updateAttack = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type) switch (this.m_curAtkData.type) {
                        case o.OneSunFinger:
                            this.updateFireMeteor(t);
                            break;

                        case o.RulaiPalm:
                            this.updateRulaiPalm(t);
                            break;

                        case o.Bullet:
                            break;

                        case o.Laser:
                            this.updateLaser(t);
                            break;

                        case o.FistUp:
                            this.updateFistUp(t);
                            break;

                        case o.FistLand:
                            this.updateFistLand(t);
                            break;

                        case o.SnapFinger:
                    }
                };
                e.prototype.attackOver = function () {
                    this.m_moveComp && this.m_moveComp.setSpeedFactor(1);
                    this.m_curAtkData = null;
                    this.m_state = d.BossState.Attack;
                    this.setState(d.BossState.Move);
                    this.checkHpAtkLimit();
                    this.setShadowShow(!0);
                };
                e.prototype.attackFireMeteor = function () {
                    this.setAnimation(0, "oneSunFingerReady", !1);
                    this.m_aimCount = 0;
                    this.m_aimDelayTime = 0;
                    this.m_aimDisTime = 0;
                    this.m_noAimCount = 0;
                    this.m_noAimDelayTime = 0;
                    this.m_noAimDisTime = 0;
                    this.m_aimFireMeteorEnemyCur = 0;
                    this.m_noAimFireMeteorEnemyCur = 0;
                    this.m_aimFireMeteorBurningCur = 0;
                    this.m_noAimFireMeteorBurningCur = 0;
                };
                e.prototype.updateFireMeteor = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type == o.OneSunFinger) {
                        var e = !1, i = !1, n = this.m_curAtkData.param;
                        if (15 == n[0].length) {
                            var a = n[0][0], r = n[0][1], s = n[0][2], c = n[0][3], l = n[0][4], h = n[0][5], u = n[0][6], p = n[0][7], d = n[0][8], f = n[0][9], m = n[0][10], g = n[0][11], _ = n[0][12], v = n[0][13], b = n[0][14];
                            if (this.m_aimCount >= a) e = !0; else if (this.m_aimDelayTime < r) this.m_aimDelayTime += t; else if (this.m_aimDisTime >= s) {
                                this.setAnimation(0, "oneSunFingerShoot", !1);
                                this.createFireMeteorUp();
                                var M = P.SnakeMgr.getSnakeHead().node.getPosition().add(cc.v2(l, h)), S = y.DYTools.random_int(1, 360) / 360 * 2 * Math.PI, k = M.add(cc.v2(c * Math.cos(S), c * Math.sin(S))), C = y.DYTools.random_int(u, p);
                                T.MapMgr.isInMap(M) || (C = 0);
                                var w = g - this.m_aimFireMeteorEnemyCur;
                                this.m_aimFireMeteorEnemyCur + C > g && (C = w);
                                if (v > 0 && _ > 0) if (this.m_aimFireMeteorBurningCur >= b) {
                                    v = 0;
                                    _ = 0;
                                } else this.m_aimFireMeteorBurningCur++;
                                this.createFireMeteor(k, C, d, f, m, v, _);
                                this.m_aimDisTime = 0;
                                this.m_aimCount++;
                                this.m_aimFireMeteorEnemyCur += C;
                            } else this.m_aimDisTime += t;
                        } else e = !0;
                        if (15 == n[1].length) {
                            var A = n[1][0], D = n[1][1], E = n[1][2], B = n[1][3], F = n[1][4], N = n[1][5], x = n[1][6], R = n[1][7], I = n[1][8], G = n[1][9], O = n[1][10], L = n[1][11], j = n[1][12], U = n[1][13], Y = n[1][14];
                            if (this.m_noAimCount >= A) i = !0; else if (this.m_noAimDelayTime < D) this.m_noAimDelayTime += t; else if (this.m_noAimDisTime >= E) {
                                this.setAnimation(0, "oneSunFingerShoot", !1);
                                this.createFireMeteorUp();
                                M = P.SnakeMgr.getSnakeHead().node.getPosition().add(cc.v2(F, N)), S = y.DYTools.random_int(1, 360) / 360 * 2 * Math.PI,
                                    k = M.add(cc.v2(B * Math.cos(S), B * Math.sin(S))), C = y.DYTools.random_int(x, R);
                                T.MapMgr.isInMap(M) || (C = 0);
                                w = L - this.m_noAimFireMeteorEnemyCur;
                                this.m_noAimFireMeteorEnemyCur + C > L && (C = w);
                                if (U > 0 && j > 0) if (this.m_noAimFireMeteorBurningCur >= Y) {
                                    U = 0;
                                    j = 0;
                                } else if (y.DYTools.random_int(1, 10) <= 8) this.m_noAimFireMeteorBurningCur++; else {
                                    U = 0;
                                    j = 0;
                                }
                                this.createFireMeteor(k, C, I, G, O, U, j);
                                this.m_noAimDisTime = 0;
                                this.m_noAimCount++;
                                this.m_noAimFireMeteorEnemyCur += C;
                            } else this.m_noAimDisTime += t;
                        } else i = !0;
                        e && i && this.attackOver();
                    }
                };
                e.prototype.createFireMeteorUp = function () {
                    var t = new cc.Node();
                    t.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("OneSunFinger_0");
                    t.angle = 180;
                    C.EntityMgr.addEffect(t);
                    t.setPosition(this.node.getPosition());
                    var e = cc.moveBy(.5, cc.v2(0, 1e3)), i = cc.sequence(e, cc.destroySelf());
                    t.runAction(i);
                    g.FrameMgr.audioMgr.playEffect("boss_hand_oneSunFinger");
                };
                e.prototype.createFireMeteor = function (t, e, i, n, a, r, o) {
                    var s = new cc.Node();
                    s.parent = C.EntityMgr.getEffectLayer();
                    var c = s.addComponent(F.default), l = t.add(cc.v2(0, 1e3));
                    s.setPosition(l);
                    var h = cc.v2(0, -1), u = t.sub(l), p = cc.v2(u).signAngle(h), d = cc.misc.radiansToDegrees(p);
                    c.initData(this, t, -d, .5, e, i, this.m_data.collideAtk, 100, n, a, r, o);
                    this.addFireMeteor(c);
                };
                e.prototype.addFireMeteor = function (t) {
                    this.m_arrFireMeteor && this.m_arrFireMeteor.push(t);
                };
                e.prototype.removeFireMeteor = function (t) {
                    if (this.m_arrFireMeteor) for (var e = this.m_arrFireMeteor.length - 1; e >= 0; e--) if (t == this.m_arrFireMeteor[e]) {
                        this.m_arrFireMeteor.splice(e, 1);
                        break;
                    }
                };
                e.prototype.addFireMeteorBurning = function (t) {
                    this.m_arrFireMeteorBurning && this.m_arrFireMeteorBurning.push(t);
                };
                e.prototype.removeFireMeteorBurning = function (t) {
                    if (this.m_arrFireMeteorBurning) for (var e = this.m_arrFireMeteorBurning.length - 1; e >= 0; e--) if (t == this.m_arrFireMeteorBurning[e]) {
                        var i = this.m_arrFireMeteorBurning[e].nodeAnim;
                        if (i) {
                            var n = cc.fadeOut(.5), a = cc.destroySelf(), r = cc.sequence(n, a);
                            i.runAction(r);
                        }
                        this.m_arrFireMeteorBurning.splice(e, 1);
                        break;
                    }
                };
                e.prototype.attackRulaiPalm = function () {
                    this.m_rulaiPalm_state = s.Ready;
                    this.setAnimation(0, "rulaiPalmReady", !1);
                    this.setIsRulaiPalmSky(!0);
                    var t = this.m_curAtkData.param;
                    this.m_rulaiPalm_times = t[0][0];
                    this.m_rulaiPalm_readyTime = t[0][1];
                    this.m_rulaiPalm_upTime = t[0][2];
                    this.m_rulaiPalm_warningTime = t[0][3];
                    this.m_rulaiPalm_downTime = t[0][4];
                    this.m_rulaiPalm_stayTime = t[0][5];
                    this.m_rulaiPalm_skyScale = t[0][6];
                    this.m_rulaiPalm_atk = t[0][7];
                    this.m_rulaiPalm_curTimes = 0;
                    this.m_rulaiPalm_curReadyTime = 0;
                    this.m_rulaiPalm_curWarningTime = 0;
                    this.m_rulaiPalm_curStayTime = 0;
                    this.setShadowShow(!1);
                };
                e.prototype.updateRulaiPalm = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type == o.RulaiPalm) switch (this.m_rulaiPalm_state) {
                        case s.Ready:
                            this.adjustRulaiPalmReady(t);
                            break;

                        case s.Up:
                            break;

                        case s.Warning:
                            this.adjustRulaiPalmWarning(t);
                            break;

                        case s.Down:
                            break;

                        case s.Stay:
                            this.adjustRulaiPalmStay(t);
                            break;

                        case s.End:
                    }
                };
                e.prototype.adjustRulaiPalmReady = function (t) {
                    var e = this;
                    this.m_rulaiPalm_curReadyTime += t;
                    this.m_rulaiPalm_curReadyTime >= this.m_rulaiPalm_readyTime && this.adjustRulaiPalmUp(!0, function () {
                        e.m_rulaiPalm_state = s.Warning;
                        e.node.setPosition(e.getTargetPosRulaiPalm(P.SnakeMgr.getSnakeHead().node.getPosition()));
                        e.setWarningRulaiPalmShow(!0);
                        e.setIsRulaiPalmSky(!0);
                        e.m_rulaiPalm_curWarningTime = 0;
                    });
                };
                e.prototype.adjustRulaiPalmUp = function (t, e) {
                    this.m_rulaiPalm_state = s.Up;
                    this.setIsRulaiPalmSky(!0);
                    t ? this.actionRulaiPalmReadyUp(this.m_rulaiPalm_upTime, function () {
                        e && e();
                    }) : this.actionRulaiPalmUp(this.m_rulaiPalm_upTime, function () {
                        e && e();
                    });
                };
                e.prototype.adjustRulaiPalmWarning = function (t) {
                    var e = this;
                    this.m_rulaiPalm_curWarningTime += t;
                    if (this.m_rulaiPalm_curWarningTime >= this.m_rulaiPalm_warningTime) {
                        this.m_rulaiPalm_curTimes += 1;
                        this.adjustRulaiPalmDown(function () {
                            e.m_rulaiPalm_state = s.Stay;
                            e.setWarningRulaiPalmShow(!1);
                            e.setIsRulaiPalmSky(!1);
                            e.m_rulaiPalm_curStayTime = 0;
                            e.setGroundRulaiPalmShow(!0);
                            var t = cc.instantiate(p.GValue.pfFrameAnim);
                            C.EntityMgr.addShadow(t);
                            var i = t.getComponent(_.default);
                            i.init(e.m_atlas, "rulaiPalm_", 10, 2 * u.GConfig.ActionInterval);
                            i.setStopCall(function () {
                                t.destroy();
                            });
                            i.play(1);
                            t.setPosition(e.node.getPosition().add(cc.v2(0, -40)));
                            t.scale = 2.2;
                        });
                    }
                };
                e.prototype.adjustRulaiPalmDown = function (t) {
                    var e = this;
                    this.m_rulaiPalm_state = s.Down;
                    this.isRulaiPalmEnd() ? this.setAnimation(0, "idle", !1) : this.setAnimation(0, "rulaiPalmAtk", !1);
                    this.setIsRulaiPalmSky(!0);
                    this.actionRulaiPalmDown(this.m_rulaiPalm_downTime, function () {
                        t && t();
                        if (e.isRulaiPalmEnd()) {
                            e.m_rulaiPalm_state = s.End;
                            e.setAnimation(0, "rulaiPalmEnd", !1);
                            e.setWarningRulaiPalmShow(!1);
                            e.setIsRulaiPalmSky(!1);
                            e.m_show.setPosition(e.m_showInitPos);
                            e.m_show.opacity = 255;
                            e.m_show.scale = 1;
                            e.setGroundRulaiPalmShow(!1);
                            g.FrameMgr.audioMgr.playEffect("boss_hand_rulaiPalm_end");
                        }
                        g.FrameMgr.noticeMgr.emit(d.EventTypeEnum.ScreenShake, {
                            level: 2
                        });
                    });
                };
                e.prototype.adjustRulaiPalmStay = function (t) {
                    var e = this;
                    this.m_rulaiPalm_curStayTime += t;
                    if (this.m_rulaiPalm_curStayTime >= this.m_rulaiPalm_stayTime) {
                        this.scheduleOnce(function () {
                            e.setGroundRulaiPalmShow(!1);
                        }, .7);
                        this.adjustRulaiPalmUp(!1, function () {
                            e.m_rulaiPalm_state = s.Warning;
                            e.node.setPosition(e.getTargetPosRulaiPalm(P.SnakeMgr.getSnakeHead().node.getPosition()));
                            e.setWarningRulaiPalmShow(!0, e.m_rulaiPalm_curTimes == e.m_rulaiPalm_times);
                            e.setIsRulaiPalmSky(!0);
                            e.m_rulaiPalm_curWarningTime = 0;
                        });
                    } else this.checkRulaiPalmHurt();
                };
                e.prototype.isRulaiPalmEnd = function () {
                    return this.m_rulaiPalm_curTimes >= this.m_rulaiPalm_times + 1;
                };
                e.prototype.setWarningRulaiPalmShow = function (t, e) {
                    void 0 === e && (e = !1);
                    if (t) {
                        if (!this.m_warning_rulaiPalm) {
                            this.m_warning_rulaiPalm = new cc.Node();
                            this.m_warning_rulaiPalm.addComponent(cc.Sprite);
                            C.EntityMgr.addShadow(this.m_warning_rulaiPalm);
                        }
                        if (e) {
                            this.m_warning_rulaiPalm.getComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("warning_circle");
                            this.m_warning_rulaiPalm.scale = 3;
                        } else {
                            this.m_warning_rulaiPalm.getComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("warning_rulaiPalm");
                            this.m_warning_rulaiPalm.scale = 1;
                        }
                        this.m_warning_rulaiPalm.setPosition(this.node.getPosition().add(this.m_offset_hurt_rulaiPalm));
                        this.m_warning_rulaiPalm.active = !0;
                    } else this.m_warning_rulaiPalm && (this.m_warning_rulaiPalm.active = !1);
                };
                e.prototype.setGroundRulaiPalmShow = function (t) {
                    if (t) {
                        if (!this.m_ground_rulaiPalm) {
                            this.m_ground_rulaiPalm = new cc.Node();
                            this.m_ground_rulaiPalm.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("rulaiPalm_ground");
                            C.EntityMgr.addShadow(this.m_ground_rulaiPalm);
                            this.m_ground_rulaiPalm.scale = 2;
                        }
                        this.m_ground_rulaiPalm.setPosition(this.node.getPosition().add(cc.v2(-20, -30)));
                        this.m_ground_rulaiPalm.stopAllActions();
                        this.m_ground_rulaiPalm.opacity = 255;
                        g.FrameMgr.audioMgr.playEffect("boss_hand_rulaiPalm_ground");
                    } else if (this.m_ground_rulaiPalm && 255 == this.m_ground_rulaiPalm.opacity) {
                        this.m_ground_rulaiPalm.stopAllActions();
                        this.m_ground_rulaiPalm.runAction(cc.fadeOut(.4));
                    }
                };
                e.prototype.setIsRulaiPalmSky = function (t) {
                    this.m_collideComp.enabled = !t;
                    this.setIsInSky(t);
                };
                e.prototype.actionRulaiPalmReadyUp = function (t, e) {
                    var i = cc.moveTo(t, this.m_showInitPos.add(cc.v2(0, 3e3))), n = cc.fadeTo(0, 0), a = cc.scaleTo(0, this.m_rulaiPalm_skyScale), r = cc.callFunc(function () {
                        e && e();
                    }), o = cc.sequence(i, n, a, r);
                    this.m_show.runAction(o);
                };
                e.prototype.actionRulaiPalmUp = function (t, e) {
                    var i = cc.scaleTo(t, this.m_rulaiPalm_skyScale), n = cc.fadeTo(t, 204), a = cc.spawn(i, n), r = cc.fadeTo(0, 0), o = cc.delayTime(.2), s = cc.callFunc(function () {
                        e && e();
                    }), c = cc.sequence(a, r, o, s);
                    this.m_show.runAction(c);
                };
                e.prototype.actionRulaiPalmDown = function (t, e) {
                    if (this.isRulaiPalmEnd()) {
                        this.m_show.setPosition(0, 1e3);
                        this.m_show.opacity = 255;
                        this.m_show.scale = 1;
                        var i = cc.moveTo(t, this.m_showInitPos), n = cc.callFunc(function () {
                            e && e();
                        }), a = cc.sequence(i, n);
                        this.m_show.runAction(a);
                    } else {
                        this.m_show.setPosition(this.m_showInitPos);
                        var r = cc.fadeTo(0, 204), o = cc.scaleTo(t, 1).easing(cc.easeIn(1.2)), s = cc.fadeTo(0, 255), c = (n = cc.callFunc(function () {
                            e && e();
                        }), cc.spawn(o, s));
                        a = cc.sequence(r, c, n);
                        this.m_show.runAction(a);
                    }
                };
                e.prototype.getTargetPosRulaiPalm = function (t) {
                    var e = cc.Vec2.ZERO;
                    e.x = t.x - this.m_offset_hurt_rulaiPalm.x;
                    e.y = t.y - this.m_offset_hurt_rulaiPalm.y;
                    return e;
                };
                e.prototype.checkRulaiPalmHurt = function () {
                    var t = P.SnakeMgr.getSnakeHead().node.getPosition(), e = this.node.getPosition().add(this.m_offset_hurt_rulaiPalm);
                    t.x < e.x - 140 || t.x > e.x + 140 || t.y < e.y - 125 || t.y > e.y + 125 || P.SnakeMgr.getSnakeHead().hurt(this.m_rulaiPalm_atk);
                };
                e.prototype.attackBullet = function (t) {
                    var e = this;
                    g.FrameMgr.audioMgr.playEffect("boss_hand_bullet");
                    this.setAnimation(0, "bullet", !1);
                    this.scheduleOnce(function () {
                        var i = S.BulletMgr.getFireData(t), n = S.BulletMgr.getBulletData(t, e.m_data.collideAtk);
                        if (i && n) {
                            e.m_firePoint && S.BulletMgr.deleteFirePoint(e.m_firePoint, e);
                            e.m_firePoint = S.BulletMgr.createFirePoint(v.default, e.node, i, n, e, null, null);
                            e.m_firePoint.m_isPlayAudio = !1;
                            e.m_firePoint.enabled = !0;
                        }
                    }, 77 * u.GConfig.ActionInterval);
                };
                e.prototype.attackLaser = function () {
                    this.m_laser_state = c.Ready;
                    this.m_laser_isBegin = !1;
                    this.setAnimation(0, "laserReady", !1);
                    for (var t = 0; t < this.m_curAtkData.param.length; t++) this.createLaser(this.m_atlas, this.m_curAtkData.param[t], "boss_hand_laser", 2, 0, 4).setPosition(this.m_laser_offset);
                    if (!this.m_laser_startPoint) {
                        this.m_laser_startPoint = cc.instantiate(p.GValue.pfFrameAnim);
                        this.m_laser_startPoint.parent = this.node;
                        var e = this.m_laser_startPoint.getComponent(_.default);
                        e.init(this.m_atlas, "LaserStartPoint_", 5, 2 * u.GConfig.ActionInterval);
                        e.setDstBlendFactorMode1();
                        e.play(0);
                    }
                    this.m_laser_startPoint.setPosition(this.m_laser_offset.add(cc.v2(0, -20)));
                    this.m_laser_startPoint.active = !0;
                    this.m_laser_startPoint.scale = 0;
                    var i = cc.scaleTo(5 * u.GConfig.ActionInterval, 1);
                    this.m_laser_startPoint.runAction(i);
                };
                e.prototype.updateLaser = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type == o.Laser && this.m_laser_state != c.End) {
                        for (var e = !1, i = !0, n = this.m_arrLaser.length - 1; n >= 0; n--) {
                            var a = this.m_arrLaser[n];
                            a.updateLaser(t);
                            a.isShoot() && (e = !0);
                            a.isWait() && (e = !0);
                            a.isEnd() || (i = !1);
                        }
                        if (e && !this.m_laser_isBegin) {
                            this.m_laser_isBegin = !0;
                            this.setAnimation(0, "laserShoot", !0);
                            this.m_laser_startPoint.setPosition(this.m_laser_offset);
                            var r = cc.instantiate(p.GValue.pfFrameAnim);
                            r.parent = this.node;
                            var s = r.getComponent(_.default);
                            s.init(this.m_atlas, "LaserStartBomb_", 7, 2 * u.GConfig.ActionInterval);
                            r.setPosition(this.m_laser_offset);
                            s.setStopCall(function () {
                                r.destroy();
                            });
                            s.setDstBlendFactorMode1();
                            s.play(1);
                            r.scale = 0;
                            var l = cc.scaleTo(5 * u.GConfig.ActionInterval, 1);
                            r.runAction(l);
                        }
                        if (i) {
                            this.m_laser_state = c.End;
                            this.setAnimation(0, "laserEnd", !1);
                            this.m_laser_startPoint.active = !1;
                        }
                    }
                };
                e.prototype.attackFistUp = function () {
                    this.m_fistUp_state = l.Ready;
                    this.setAnimation(0, "fistUpReady", !1);
                    this.setIsFistUpUnderGround(!0);
                    var t = this.m_curAtkData.param;
                    this.m_fistUp_times = t[0][0];
                    this.m_fistUp_readyTime = t[0][1];
                    this.m_fistUp_warningTime = t[0][2];
                    this.m_fistUp_stayTime = t[0][3];
                    this.m_fistUp_hideTime = t[0][4];
                    this.m_fistUp_atk = t[0][5];
                    this.m_fistUp_curTimes = 0;
                    this.m_fistUp_curReadyTime = 0;
                    this.m_fistUp_curWarningTime = 0;
                    this.m_fistUp_curStayTime = 0;
                    this.m_fistUp_curHideTime = 0;
                    this.setShadowShow(!1);
                    g.FrameMgr.audioMgr.playEffect("boss_hand_fistUp_hide");
                };
                e.prototype.updateFistUp = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type == o.FistUp) switch (this.m_fistUp_state) {
                        case l.Ready:
                            this.adjustFistUpReady(t);
                            break;

                        case l.Warning:
                            this.adjustFistUpWarning(t);
                            break;

                        case l.Stay:
                            this.adjustFistUpStay(t);
                            break;

                        case l.Hide:
                            this.adjustFistUpHide(t);
                            break;

                        case l.End:
                            this.adjustFistUpEnd(t);
                    }
                };
                e.prototype.adjustFistUpReady = function (t) {
                    this.m_fistUp_curReadyTime += t;
                    if (this.m_fistUp_curReadyTime >= this.m_fistUp_readyTime) {
                        this.m_fistUp_state = l.Warning;
                        this.node.setPosition(this.getTargetPosFistUp(P.SnakeMgr.getSnakeHead().node.getPosition()));
                        this.setWarningFistUpShow(!0);
                        this.setIsFistUpUnderGround(!0);
                        this.m_fistUp_curWarningTime = 0;
                    }
                };
                e.prototype.adjustFistUpWarning = function (t) {
                    this.m_fistUp_curWarningTime += t;
                    if (this.m_fistUp_curWarningTime >= this.m_fistUp_warningTime) {
                        this.m_fistUp_curTimes += 1;
                        this.m_fistUp_state = l.Stay;
                        this.setWarningFistUpShow(!1);
                        this.setAnimation(0, "fistUpStay", !1);
                        this.setIsFistUpUnderGround(!1);
                        this.m_fistUp_curStayTime = 0;
                        g.FrameMgr.noticeMgr.emit(d.EventTypeEnum.ScreenShake, {
                            level: 2
                        });
                        g.FrameMgr.audioMgr.playEffect("boss_hand_fistUp_show");
                    }
                };
                e.prototype.adjustFistUpStay = function (t) {
                    this.m_fistUp_curStayTime += t;
                    if (this.m_fistUp_curStayTime >= this.m_fistUp_stayTime) if (this.isFistUpEnd()) {
                        this.m_fistUp_state = l.End;
                        this.setAnimation(0, "fistUpEnd", !1);
                        this.setWarningFistUpShow(!1);
                        this.setIsFistUpUnderGround(!1);
                    } else {
                        this.m_fistUp_state = l.Hide;
                        this.setAnimation(0, "fistUpHide", !1);
                        this.setIsFistUpUnderGround(!0);
                        this.m_fistUp_curHideTime = 0;
                        g.FrameMgr.audioMgr.playEffect("boss_hand_fistUp_hide");
                    } else this.checkFistUpHurt();
                };
                e.prototype.adjustFistUpHide = function (t) {
                    this.m_fistUp_curHideTime += t;
                    if (this.m_fistUp_curHideTime >= this.m_fistUp_hideTime) {
                        this.m_fistUp_state = l.Warning;
                        this.node.setPosition(this.getTargetPosFistUp(P.SnakeMgr.getSnakeHead().node.getPosition()));
                        this.setWarningFistUpShow(!0);
                        this.setIsFistUpUnderGround(!0);
                        this.m_fistUp_curWarningTime = 0;
                    }
                };
                e.prototype.adjustFistUpEnd = function () {
                    this.attackOver();
                };
                e.prototype.isFistUpEnd = function () {
                    return this.m_fistUp_curTimes >= this.m_fistUp_times;
                };
                e.prototype.setWarningFistUpShow = function (t) {
                    if (t) {
                        if (!this.m_warning_fistUp) {
                            this.m_warning_fistUp = new cc.Node();
                            this.m_warning_fistUp.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("warning_fistUp");
                            C.EntityMgr.addShadow(this.m_warning_fistUp);
                        }
                        this.m_warning_fistUp.setPosition(this.node.getPosition().add(this.m_offset_hurt_fistUp));
                        this.m_warning_fistUp.active = !0;
                    } else this.m_warning_fistUp && (this.m_warning_fistUp.active = !1);
                };
                e.prototype.setIsFistUpUnderGround = function (t) {
                    this.m_collideComp.enabled = !t;
                    this.setIsInSky(t);
                };
                e.prototype.getTargetPosFistUp = function (t) {
                    var e = cc.Vec2.ZERO;
                    e.x = t.x - this.m_offset_hurt_fistUp.x;
                    e.y = t.y - this.m_offset_hurt_fistUp.y;
                    return e;
                };
                e.prototype.checkFistUpHurt = function () {
                    var t = P.SnakeMgr.getSnakeHead().node.getPosition(), e = this.node.getPosition().add(this.m_offset_hurt_fistUp);
                    cc.Vec2.distance(t, e) < 110 && P.SnakeMgr.getSnakeHead().hurt(this.m_fistUp_atk);
                };
                e.prototype.attackFistLand = function () {
                    this.setAnimation(0, "fistLandBegin", !1);
                    this.m_fistLand_state = h.None;
                    var t = this.m_curAtkData.param;
                    this.m_fistLand_times = t[0][0];
                    this.m_fistLand_speedAngle = t[0][1];
                    this.m_fistLand_warningTime = t[0][2];
                    this.m_fistLand_speed = t[0][3];
                    this.m_fistLand_distance = t[0][4];
                    this.m_fistLand_stayTime = t[0][5];
                    this.m_fistLand_atk = t[0][6];
                    this.m_fistLand_curTimes = 0;
                    this.m_fistLand_curWarningTime = 0;
                    this.m_fistLand_curDistance = 0;
                    this.m_fistLand_curStayTime = 0;
                    this.setShadowShow(!0, !0);
                };
                e.prototype.updateFistLand = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type == o.FistLand) switch (this.m_fistLand_state) {
                        case h.Aim:
                            this.adjustFistLandAim(t);
                            break;

                        case h.Warning:
                            this.adjustFistLandWarning(t);
                            break;

                        case h.Move:
                            this.adjustFistLandMove(t);
                            break;

                        case h.Stay:
                            this.adjustFistLandStay(t);
                            break;

                        case h.End:
                            this.adjustFistLandEnd(t);
                    }
                };
                e.prototype.adjustFistLandAim = function (t) {
                    var e = !1, i = this.node.getPosition(), n = P.SnakeMgr.getSnakeHead().node.getPosition(), a = cc.v2(0, 1), r = n.sub(i), o = cc.v2(r).signAngle(a), s = cc.misc.radiansToDegrees(o);
                    s = -s;
                    s = y.DYTools.getResetDegree(s);
                    var c = this.m_show.angle;
                    c = y.DYTools.getResetDegree(c);
                    var l = this.getAngleDiff(c, s), u = this.m_fistLand_speedAngle * t;
                    if (l > 0) {
                        if (u > l) {
                            u = l;
                            e = !0;
                        }
                        var p = c + u;
                        this.m_show.angle = p;
                    } else if (l < 0) {
                        if ((u = -u) < l) {
                            u = l;
                            e = !0;
                        }
                        p = c + u;
                        this.m_show.angle = p;
                    } else e = !0;
                    if (e) {
                        this.m_fistLand_curTimes += 1;
                        this.isFistLandEnd() ? this.m_fistLand_curDistance = cc.Vec2.distance(n, i) : this.m_fistLand_curDistance = cc.Vec2.distance(n, i) + this.m_fistLand_distance;
                        this.m_show.angle = s;
                        this.m_fistLand_moveDir = n.sub(i).normalize();
                        this.m_fistLand_state = h.Warning;
                        this.setWarningFistLandShow(!0, this.m_fistLand_curDistance);
                        this.m_fistLand_curWarningTime = 0;
                    }
                };
                e.prototype.adjustFistLandWarning = function (t) {
                    this.m_fistLand_curWarningTime += t;
                    if (this.m_fistLand_curWarningTime >= this.m_fistLand_warningTime) {
                        this.m_fistLand_state = h.Move;
                        this.setWarningFistLandShow(!1);
                        this.m_fistLand_curWarningTime = 0;
                        this.setSmokeFistLandShow(!0);
                        this.m_audioId_fistLand = g.FrameMgr.audioMgr.playEffectSync(this.m_audio_name_fistLand, !0);
                    }
                };
                e.prototype.adjustFistLandMove = function (t) {
                    var e = !1, i = this.m_fistLand_speed * t;
                    if (i >= this.m_fistLand_curDistance) {
                        i = this.m_fistLand_curDistance;
                        e = !0;
                    }
                    this.m_fistLand_curDistance -= i;
                    this.node.x += this.m_fistLand_moveDir.x * i;
                    this.node.y += this.m_fistLand_moveDir.y * i;
                    if (e) {
                        this.m_fistLand_state = h.Stay;
                        this.m_fistLand_curStayTime = 0;
                        this.setSmokeFistLandShow(!1);
                        g.FrameMgr.audioMgr.stopEffect(this.m_audioId_fistLand);
                    }
                };
                e.prototype.adjustFistLandStay = function (t) {
                    if (this.isFistLandEnd()) this.m_fistLand_state = h.End; else {
                        this.m_fistLand_curStayTime += t;
                        this.m_fistLand_curStayTime >= this.m_fistLand_stayTime && (this.m_fistLand_state = h.Aim);
                    }
                };
                e.prototype.adjustFistLandEnd = function (t) {
                    var e = !1, i = this.m_show.angle;
                    i = y.DYTools.getResetDegree(i);
                    var n = this.getAngleDiff(i, 0), a = this.m_fistLand_speedAngle * t;
                    if (n > 0) {
                        if (a > n) {
                            a = n;
                            e = !0;
                        }
                        var r = i + a;
                        this.m_show.angle = r;
                    } else if (n < 0) {
                        if ((a = -a) < n) {
                            a = n;
                            e = !0;
                        }
                        r = i + a;
                        this.m_show.angle = r;
                    } else e = !0;
                    if (e) {
                        this.m_fistLand_state = h.None;
                        this.m_show.angle = 0;
                        this.setAnimation(0, "fistLandEnd", !1);
                    }
                };
                e.prototype.isFistLandEnd = function () {
                    return this.m_fistLand_curTimes >= this.m_fistLand_times;
                };
                e.prototype.getAngleDiff = function (t, e) {
                    return t == e || 360 == Math.abs(t - e) ? 0 : 180 == Math.abs(t - e) ? 180 : t > e ? (i = t - e) < 180 ? -i : 360 - i : (i = t - e) > -180 ? -i : -360 - i;
                    var i;
                };
                e.prototype.setWarningFistLandShow = function (t, e) {
                    void 0 === e && (e = 0);
                    if (t) {
                        if (!this.m_warning_fistLand) {
                            this.m_warning_fistLand = new cc.Node();
                            var i = this.m_warning_fistLand.addComponent(cc.Sprite);
                            i.spriteFrame = this.m_atlas.getSpriteFrame("warning_arrow");
                            this.m_warning_fistLand_height = this.m_warning_fistLand.height;
                            i.type = cc.Sprite.Type.TILED;
                            this.m_show.addChild(this.m_warning_fistLand, -1);
                            this.m_warning_fistLand.setAnchorPoint(.5, 0);
                            this.m_warning_fistLand.setPosition(cc.v2(0, 0));
                        }
                        var n = Math.ceil(e / this.m_warning_fistLand_height);
                        this.m_warning_fistLand.height = n * this.m_warning_fistLand_height;
                        this.m_warning_fistLand.active = !0;
                    } else this.m_warning_fistLand && (this.m_warning_fistLand.active = !1);
                };
                e.prototype.setSmokeFistLandShow = function (t) {
                    if (t) {
                        if (!this.m_fistLand_smoke) {
                            this.m_fistLand_smoke = cc.instantiate(p.GValue.pfFrameAnim);
                            var e = this.m_fistLand_smoke.getComponent(_.default);
                            this.m_fistLand_smoke.parent = this.m_show;
                            this.m_fistLand_smoke.setPosition(cc.v2(0, -200));
                            this.m_fistLand_smoke.zIndex = -1;
                            e.init(this.m_atlas, "FistLandSmoke_", 7, 2 * u.GConfig.ActionInterval);
                            e.play(0);
                            this.m_fistLand_smoke.scale = 2;
                        }
                        this.m_fistLand_smoke.active = !0;
                    } else this.m_fistLand_smoke && (this.m_fistLand_smoke.active = !1);
                };
                e.prototype.attackSnapFinger = function () {
                    var t = this;
                    m.CameraMgr.enabled = !1;
                    w.GameRuleMgr.gameBreak();
                    var e = cc.Vec2.distance(this.node.getPosition(), P.SnakeMgr.getSnakePosition()) < 1e3 ? .5 : .8;
                    m.CameraMgr.cameraFocus(this.node.getPosition(), function () {
                        t.setAnimation(0, "snapFinger", !1);
                        g.FrameMgr.audioMgr.playEffect("boss_hand_snapFinger");
                        var i = new cc.Node();
                        i.parent = C.EntityMgr.getItemLayer();
                        i.addComponent(cc.Sprite).spriteFrame = t.m_atlas.getSpriteFrame("black_shield");
                        i.setPosition(t.node.getPosition());
                        i.scale = 100;
                        i.zIndex = 1e4;
                        var n = cc.fadeTo(15 * u.GConfig.ActionInterval, 255);
                        i.runAction(n);
                        var a = t.node.parent, r = t.node.zIndex;
                        t.node.parent = C.EntityMgr.getItemLayer();
                        t.node.zIndex = 10001;
                        t.scheduleOnce(function () {
                            var n = new cc.Node();
                            n.parent = C.EntityMgr.getItemLayer();
                            n.addComponent(cc.Sprite).spriteFrame = t.m_atlas.getSpriteFrame("white_shield");
                            n.setPosition(t.node.getPosition());
                            n.scale = 1e3;
                            n.zIndex = 1e4;
                            n.opacity = 204;
                            var o = cc.delayTime(3 * u.GConfig.ActionInterval), s = cc.sequence(o, cc.destroySelf());
                            n.runAction(s);
                            i && i.destroy();
                            t.node.parent = a;
                            t.node.zIndex = r;
                            m.CameraMgr.cameraFocus(P.SnakeMgr.getSnakePosition(), function () {
                                m.CameraMgr.enabled = !0;
                                w.GameRuleMgr.gameResume();
                                t.attackOver();
                            }, e);
                            t.scheduleOnce(function () {
                                t.triggerSnapFinger();
                            }, .7 * e);
                        }, 25 * u.GConfig.ActionInterval);
                        t.scheduleOnce(function () {
                            var e = new cc.Node();
                            e.parent = C.EntityMgr.getItemLayer();
                            e.addComponent(cc.Sprite).spriteFrame = t.m_atlas.getSpriteFrame("snapFingerEffect");
                            e.setPosition(t.node.getPosition().add(cc.v2(0, 0)));
                            e.zIndex = 1e4;
                            e.scale = .46;
                            var i = cc.scaleTo(3 * u.GConfig.ActionInterval, 1), n = cc.scaleTo(13 * u.GConfig.ActionInterval, 2.85), a = cc.scaleTo(130 * u.GConfig.ActionInterval, 30), r = cc.sequence(i, n, a, cc.destroySelf());
                            e.runAction(r);
                        }, 26 * u.GConfig.ActionInterval);
                    }, e);
                };
                e.prototype.triggerSnapFinger = function () {
                    var t = this.m_curAtkData.param, e = t[0][0], i = t[0][1];
                    i = i <= 1 ? 1 : i;
                    var n = P.SnakeMgr.getSnakeCurrentLength() - 2;
                    if (n <= i); else for (var a = Math.floor(n * e), r = n - (a = a <= i ? i : a), o = P.SnakeMgr.getSnakeCurrentLength() - 2, s = 0; s < r; s++) {
                        var c = o - s, l = P.SnakeMgr.getSnake().getSnakeNode(c);
                        if (l) {
                            var h = new cc.Node();
                            C.EntityMgr.addEffect(h);
                            h.addComponent(cc.Sprite).spriteFrame = P.SnakeMgr.getSnake().getBodySpriteFrame();
                            h.setPosition(l.getPosition());
                            var u = h.getPosition().sub(this.node.getPosition()).normalize(), p = cc.moveBy(2, u.mul(3e3)), d = cc.sequence(p, cc.destroySelf());
                            h.runAction(d);
                        }
                        P.SnakeMgr.getSnake().removeSnakeBody(c);
                    }
                };
                e.prototype.onCollide = function (t, e) {
                    switch (t) {
                        case d.ContactType.Enter:
                            if (e && e.entity) switch (e.entity.group) {
                                case d.ColliderGroup.Player:
                                    var i = e.entity;
                                    if (i) {
                                        var n = i.getColliderAtk();
                                        this.hurt(n);
                                    }
                                    break;

                                case d.ColliderGroup.PlayerBullet:
                                    var a = e.entity, r = !0;
                                    this.m_curAtkData && this.m_curAtkData.type == o.FistLand && (r = !1);
                                    if (r && a) {
                                        n = a.getBulletAttack() || 1;
                                        var s = this.node.getPosition(), c = cc.Vec2.ZERO;
                                        if (this.m_collideComp) {
                                            c = this.m_collideComp.getOffset();
                                            s.x += c.x;
                                            s.y += c.y;
                                        }
                                        var l = e.entity.node.getPosition().sub(s), h = c.add(cc.v2(.8 * l.x, .8 * l.y)).add(this.node.getPosition());
                                        this.playHurtAnim(h);
                                        this.hurt(n, !0);
                                    }
                            }
                    }
                };
                e.prototype.hurt = function (t, e, i) {
                    void 0 === e && (e = !1);
                    void 0 === i && (i = !1);
                    var n = this.hpChange(-t);
                    this.showHurtNum(n, e, i);
                    return n;
                };
                e.prototype.hpChange = function (t) {
                    if (this.isDead) return 0;
                    this.m_curHp += t;
                    this.playHpact();
                    if (this.m_curHp <= 0) {
                        this.m_curHp = 0;
                        this.toDie();
                    }
                    t < 0 && this.cutHpEmitEvent(d.EventTypeEnum.BossCutHp);
                    return t;
                };
                e.prototype.playHpact = function () {
                    var t = this;
                    if (!this.m_hurtTween) {
                        var e = u.GConfig.ActionInterval;
                        this.m_hurtTween = cc.tween(this.m_spine.node).to(0, {
                            color: cc.color(255, 0, 0)
                        }).to(2 * e, {
                            color: cc.color(255, 106, 106)
                        }).to(2 * e, {
                            color: cc.color(255, 255, 255)
                        }).call(function () {
                            t.m_hurtTween = null;
                        }).start();
                    }
                };
                e.prototype.playHurtAnim = function (t) {
                    if (this.m_hurtAnim) {
                        this.m_hurtAnim.play(1);
                        this.m_hurtAnim.node.setPosition(t);
                    }
                };
                e.prototype.checkHpAtkLimit = function () {
                    if (this.m_data.attackLimit.length > 1 && this.m_curHp / this.m_maxHp * 100 <= this.m_data.attackLimit[0]) {
                        for (var t = !1, e = 0; e < this.m_atkRandomArr.length; e++) if (this.m_atkRandomArr[e].x == this.m_data.attackLimit[1]) {
                            this.m_atkRandomArr.splice(e, 1);
                            e--;
                            t = !0;
                        }
                        if (t) {
                            this.m_atkRandomWeight = 0;
                            for (e = 0; e < this.m_atkRandomArr.length; e++) this.m_atkRandomWeight += this.m_atkRandomArr[e].y;
                        }
                        for (e = 0; e < this.m_atkOrderArr.length; e++) if (this.m_atkOrderArr[e] == this.m_data.attackLimit[1]) {
                            this.m_atkOrderArr.splice(e, 1);
                            e--;
                        }
                    }
                };
                e.prototype.onEnemyDie = function (t) {
                    for (var e in this.m_data.enemyLoot) for (var i = parseInt(e), n = this.m_data.enemyLoot[i], a = this.m_dieEnemyNum, r = 0; r < n.length && !(r + 1 >= n.length); r += 2) {
                        var o = n[r], s = n[r + 1];
                        if (a == o) {
                            switch (i) {
                                case d.LootType.Snake:
                                    A.LootMgr.addLoot(d.LootType.Snake, t.node.position, s);
                                    break;

                                case d.LootType.Crazy:
                                    y.DYTools.random_int(0, 99) < s && A.LootMgr.addLoot(d.LootType.Crazy, t.node.position);
                            }
                            break;
                        }
                    }
                    this.m_dieEnemyNum++;
                };
                e.prototype.onDie = function () {
                    var t = this;
                    g.FrameMgr.audioMgr.stopEffect(this.m_audioId_fistLand);
                    g.FrameMgr.audioMgr.playEffect("boss_hand_die");
                    g.FrameMgr.noticeMgr.emit(d.EventTypeEnum.ScreenShake, {
                        level: 3,
                        time: 6
                    });
                    this.scheduleOnce(function () {
                        t.setAnimation(0, "die", !1);
                    }, 0);
                    this.hideAllStateEffect();
                    this.m_firePoint && (this.m_firePoint.enabled = !1);
                    this.setShadowShow(!1);
                    this.setWarningFistLandShow(!1);
                    this.setWarningFistUpShow(!1);
                    this.setWarningRulaiPalmShow(!1);
                    this.setGroundRulaiPalmShow(!1);
                    this.removeAllLaser();
                    if (this.m_hurtAnim) {
                        this.m_hurtAnim.destroy();
                        this.m_hurtAnim = null;
                    }
                };
                e.prototype.getColliders = function () {
                    return this.m_collideComp;
                };
                e.prototype.getCollider = function () {
                    return this.m_collideComp;
                };
                Object.defineProperty(e.prototype, "collideAtk", {
                    get: function () {
                        var t = this.m_data.collideAtk;
                        if (!this.m_curAtkData) return t;
                        switch (this.m_curAtkData.type) {
                            case o.OneSunFinger:
                                break;

                            case o.RulaiPalm:
                                t = 0;
                                break;

                            case o.Bullet:
                            case o.Laser:
                                break;

                            case o.FistUp:
                                t = 0;
                                break;

                            case o.FistLand:
                                t = this.m_fistLand_atk;
                        }
                        return t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getBossOtherEntity = function () {
                    return null;
                };
                Object.defineProperty(e.prototype, "maxHp", {
                    get: function () {
                        return this.m_maxHp;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "curHp", {
                    get: function () {
                        return this.m_curHp;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getResName = function (t) {
                    return t + this.m_data.resfix;
                };
                return r([x], e);
            }(E.default));
        i.default = R;
        (function (t) {
            t[t.None = 0] = "None";
            t[t.OneSunFinger = 1] = "OneSunFinger";
            t[t.RulaiPalm = 2] = "RulaiPalm";
            t[t.Bullet = 3] = "Bullet";
            t[t.Laser = 4] = "Laser";
            t[t.FistUp = 5] = "FistUp";
            t[t.FistLand = 6] = "FistLand";
            t[t.SnapFinger = 7] = "SnapFinger";
        })(o || (o = {}));
        (function (t) {
            t[t.Ready = 1] = "Ready";
            t[t.Up = 2] = "Up";
            t[t.Warning = 3] = "Warning";
            t[t.Down = 4] = "Down";
            t[t.Stay = 5] = "Stay";
            t[t.End = 6] = "End";
        })(s || (s = {}));
        (function (t) {
            t[t.Ready = 1] = "Ready";
            t[t.Shoot = 2] = "Shoot";
            t[t.End = 3] = "End";
        })(c || (c = {}));
        (function (t) {
            t[t.Ready = 1] = "Ready";
            t[t.Warning = 2] = "Warning";
            t[t.Stay = 3] = "Stay";
            t[t.Hide = 4] = "Hide";
            t[t.End = 5] = "End";
        })(l || (l = {}));
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Aim = 1] = "Aim";
            t[t.Warning = 2] = "Warning";
            t[t.Move = 3] = "Move";
            t[t.Stay = 4] = "Stay";
            t[t.End = 5] = "End";
        })(h || (h = {}));
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/config/ConfigBossData": "ConfigBossData",
        "../../../../frame/manager/CameraManager": "CameraManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/Tools": "Tools",
        "../../bullet/FirePoint/FirePointEnemy": "FirePointEnemy",
        "../../collide/CircleColliderComp": "CircleColliderComp",
        "../../collide/RectColliderComp": "RectColliderComp",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/GameRuleManager": "GameRuleManager",
        "../../manager/battle/LootManager": "LootManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/ShadowManager": "ShadowManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../BossBase": "BossBase",
        "../BossMoveBase": "BossMoveBase",
        "./BossDesertHandOneSunFinger": "BossDesertHandOneSunFinger"
    }],
    BossEntityFire: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "bb89bF/OLZO95TOBHOX1XZb", "BossEntityFire");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.BossFireMeteorBurning = void 0;
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../config/GameEnum"), l = t("../../../../data/config/ConfigBossData"), h = t("../../../../frame/manager/FrameManager"), u = t("../../../../frame/ui/FrameAnim"), p = t("../../../../util/Tools"), d = t("../../bullet/FirePoint/FirePointEnemy"), f = t("../../collide/CircleColliderComp"), m = t("../../collide/RectColliderComp"), g = t("../../manager/battle/BulletManager"), _ = t("../../manager/battle/EnemyManager"), y = t("../../manager/battle/EntityManager"), v = t("../../manager/battle/LootManager"), b = t("../../manager/battle/MapManager"), M = t("../../manager/battle/ShadowManager"), S = t("../../manager/battle/SnakeManager"), k = t("../BossBase"), C = t("../BossMoveBase"), w = t("./BossFireMeteor"), A = cc._decorator, T = A.ccclass, D = (A.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.radius = 0;
                    e.m_group = c.ColliderGroup.Enemy;
                    e.m_data = null;
                    e.m_isSmall = !1;
                    e.m_spine = null;
                    e.m_effectSpine1 = null;
                    e.m_effectSpine2 = null;
                    e.m_shadow = null;
                    e.m_spine_boss_fire_path = null;
                    e.m_bone_head = null;
                    e.m_bone_leftShoulder = null;
                    e.m_bone_rightShoulder = null;
                    e.m_burning_head = null;
                    e.m_burning_leftShoulder = null;
                    e.m_burning_rightShoulder = null;
                    e.m_bone_effect2_lefthand = null;
                    e.m_bone_effect2_righthand = null;
                    e.m_bone_path_main = null;
                    e.m_bone_path_2 = null;
                    e.m_bone_path_scale = null;
                    e.m_bone_path_4 = null;
                    e.m_spine_path_tornado_2 = null;
                    e.m_spine_path_tornado_scale = null;
                    e.m_spine_path_tornado_4 = null;
                    e.m_lefthand = null;
                    e.m_righthand = null;
                    e.m_atlas = null;
                    e.m_collideComp = null;
                    e.m_moveComp = null;
                    e.m_firePoint = null;
                    e.m_state = c.BossState.Node;
                    e.m_atkDuration = 0;
                    e.m_atkOrderArr = [];
                    e.m_atkRandomArr = [];
                    e.m_atkRandomWeight = 0;
                    e.m_curAtkData = null;
                    e.m_handTotal = 0;
                    e.m_handCount = 0;
                    e.m_dropDisTime = 0;
                    e.m_curDropDisTime = 0;
                    e.m_dropHurtTime = 0;
                    e.m_curDropDisTimeClone = 0;
                    e.m_dropHurtTimeClone = 0;
                    e.m_atkLastTime = 0;
                    e.m_curHp = 0;
                    e.m_maxHp = 0;
                    e.m_hurtAnim = null;
                    e.m_hurtTween = null;
                    e.m_arrFireMeteor = [];
                    e.m_arrFireMeteorBurning = [];
                    e.m_aimFireMeteorEnemyCur = 0;
                    e.m_noAimFireMeteorEnemyCur = 0;
                    e.m_aimFireMeteorBurningCur = 0;
                    e.m_noAimFireMeteorBurningCur = 0;
                    e.m_dieEnemyNum = 0;
                    e.m_arrTornadoClone = [];
                    e.m_arrTornadoCloneEffect = [];
                    e.m_parentTornadoClone = null;
                    e.m_tornadoCloneWaitTime = 0;
                    e.m_audioId_tornado_in = -1;
                    e.m_audioId_tornado = -1;
                    e.m_audio_name_tornado_in = "boss_fire_tornado";
                    e.m_audio_name_tornado = "boss_fire_tornado";
                    e.m_aimCount = 0;
                    e.m_aimDelayTime = 0;
                    e.m_aimDisTime = 0;
                    e.m_noAimCount = 0;
                    e.m_noAimDelayTime = 0;
                    e.m_noAimDisTime = 0;
                    return e;
                }
                e.prototype.create = function (t) {
                    this.m_data = t;
                    this.m_atlas = h.FrameMgr.loadMgr.get("TP_BossFire", cc.SpriteAtlas);
                    h.FrameMgr.loadMgr.loadAudio(this.m_audio_name_tornado_in);
                    h.FrameMgr.loadMgr.loadAudio(this.m_audio_name_tornado);
                    this.initData();
                    this.initCollide();
                    this.initMoveComp();
                    this.initUI();
                    this.hideAllStateEffect();
                    this.node.opacity = 0;
                    this.m_firePoint = null;
                    this.pushHurtAbleEntity(this);
                    this.m_arrFireMeteor = [];
                    this.m_arrFireMeteorBurning = [];
                };
                e.prototype.test = function () {
                    this.m_data.speed = 100;
                    this.m_data.atkOrder = [2, 4, 2, 4, 1, 4];
                    this.m_data.atkRandom = [cc.v2(1, 10), cc.v2(2, 10), cc.v2(3, 10), cc.v2(4, 10), cc.v2(5, 10), cc.v2(6, 10)];
                    this.m_data.atkParam = [];
                    var t;
                    (t = new l.BossTreeAtkData()).type = P.HandLeft;
                    t.param = [];
                    t.param.push([2, 2]);
                    this.m_data.atkParam.push(t);
                    (t = new l.BossTreeAtkData()).type = P.Bullet;
                    t.param = [];
                    t.param.push([9001]);
                    this.m_data.atkParam.push(t);
                    (t = new l.BossTreeAtkData()).type = P.HandRight;
                    t.param = [];
                    t.param.push([2, 2]);
                    this.m_data.atkParam.push(t);
                    (t = new l.BossTreeAtkData()).type = P.FireTornado;
                    t.param = [];
                    t.param.push([10, .5, 10, 200, 3, 2, 0, 120, .5, 150, 250, 60, 5]);
                    this.m_data.atkParam.push(t);
                    (t = new l.BossTreeAtkData()).type = P.HandDouble;
                    t.param = [];
                    t.param.push([2, 2]);
                    this.m_data.atkParam.push(t);
                    (t = new l.BossTreeAtkData()).type = P.FireMeteor;
                    t.param = [];
                    t.param.push([1, 1, 1, 100, 0, 0, 0, 5, 220001, 1, 1, 5, 200, 5, 5]);
                    t.param.push([6, .5, .5, 200, 0, 0, 0, 2, 220001, 1, 1, 5, 200, 5, 5]);
                    this.m_data.atkParam.push(t);
                };
                e.prototype.initData = function () {
                    this.m_hurtOffsetY = this.m_data.hurtOffsetY;
                    this.radius = this.m_data.collideData[2];
                    this.preGiveGoldPercent = 100;
                    this.m_curHp = this.m_data.hp;
                    this.m_maxHp = this.m_data.hp;
                    this.m_atkOrderArr = p.DYTools.copyArray(this.m_data.atkOrder);
                    this.m_atkRandomArr = p.DYTools.copyArray(this.m_data.atkRandom);
                    for (var t = 0; t < this.m_atkRandomArr.length; t++) this.m_atkRandomWeight += this.m_atkRandomArr[t].y;
                    this.m_isSmall = "" != this.m_data.resfix;
                };
                e.prototype.initCollide = function () {
                    switch (this.m_data.collideType) {
                        case c.ColliderType.Circle:
                            this.m_collideComp = new f.default();
                            this.m_collideComp.init(this.m_data.collideData, this, this.node);
                            break;

                        case c.ColliderType.Rectangle:
                            this.m_collideComp = new m.default();
                            this.m_collideComp.init(this.m_data.collideData, this, this.node);
                    }
                };
                e.prototype.initMoveComp = function () {
                    this.m_moveComp = new C.default();
                    this.m_moveComp.init(this, this.m_data.speed);
                };
                e.prototype.initUI = function () {
                    this._initShadow();
                    this._initBody();
                    this._initBurning();
                    this._initEffect();
                };
                e.prototype._initShadow = function () {
                    if (!this.m_shadow) {
                        this.m_shadow = new cc.Node();
                        y.EntityMgr.addShadow(this.m_shadow);
                        this.setShadowPos();
                        this.m_shadow.addComponent(cc.Sprite).spriteFrame = M.ShadowMgr.atlas.getSpriteFrame("enemy_1_0");
                        this.setShadowShow(!1);
                        this.m_shadow.scale = 2;
                    }
                };
                e.prototype.setShadowShow = function () {
                    this.m_shadow && (this.m_shadow.opacity = 0);
                };
                e.prototype.setShadowPos = function () {
                    this.m_shadow && (this.m_shadow.position = this.node.position.add(cc.v3(0, -60, 0)));
                };
                e.prototype._initEffect = function () {
                    var t = cc.instantiate(s.GValue.pfFrameAnim);
                    t.name = "m_hurtAnim";
                    t.parent = this.node;
                    this.m_hurtAnim = t.getComponent(u.default);
                    this.m_hurtAnim.init(_.EnemyMgr.enemyEffectAtlas, _.EnemyMgr.hurtImage, _.EnemyMgr.hurtCount, o.GConfig.ActionInterval);
                    t.setPosition(this.m_collideComp.getOffset());
                };
                e.prototype._initBody = function () {
                    var t = this, e = new cc.Node("body");
                    this.node.addChild(e);
                    this.m_spine = e.addComponent(sp.Skeleton);
                    this.m_spine.skeletonData = h.FrameMgr.loadMgr.get(this.getResName("spine_boss_fire"), sp.SkeletonData);
                    this.m_spine.premultipliedAlpha = !1;
                    this.m_spine.setSkin("skin_1");
                    this.m_spine.setStartListener(function (e) {
                        if ("fireTornado" == (e.animation ? e.animation.name : "")) {
                            t.m_spine.node.opacity = 0;
                            t.setShadowShow(!1);
                            t.setBurningShow(!1);
                        } else {
                            t.m_spine.node.opacity = 255;
                            t.setShadowShow(!0);
                            t.setBurningShow(!0);
                        }
                    });
                    this.m_spine.setCompleteListener(function (e) {
                        switch (e.animation ? e.animation.name : "") {
                            case "show":
                                t.scheduleOnce(function () {
                                    t.setState(c.BossState.Move);
                                    h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.BossEnterEnd, t.m_data.tip);
                                });
                                break;

                            case "die":
                                t.hideStopLine();
                                t.removeAble = !0;
                                break;

                            case "left_hand":
                                t.scheduleOnce(function () {
                                    t.m_handCount < t.m_handTotal ? t.attackLeftHand() : t.attackOver();
                                });
                                break;

                            case "right_hand":
                                t.scheduleOnce(function () {
                                    t.m_handCount < t.m_handTotal ? t.attackRightHand() : t.attackOver();
                                });
                                break;

                            case "double_hand":
                                t.scheduleOnce(function () {
                                    t.m_handCount < t.m_handTotal ? t.attackDoubleHand() : t.attackOver();
                                });
                                break;

                            case "bullet":
                                t.scheduleOnce(function () {
                                    t.m_firePoint && (t.m_firePoint.enabled = !1);
                                    t.attackOver();
                                });
                        }
                    });
                    this.m_spine.setMix("show", "walk", .5);
                    this.m_spine.setMix("left_hand", "walk", .5);
                    this.m_spine.setMix("right_hand", "walk", .5);
                    this.m_spine.setMix("double_hand", "walk", .5);
                    this.m_spine.setMix("bullet", "walk", .5);
                    this.m_spine.setMix("fireMeteor", "walk", .5);
                    this.m_spine.setMix("fireTornado", "walk", .5);
                    this.m_spine.setMix("walk", "left_hand", .5);
                    this.m_spine.setMix("walk", "right_hand", .5);
                    this.m_spine.setMix("walk", "double_hand", .5);
                    this.m_spine.setMix("walk", "bullet", .5);
                    this.m_spine.setMix("walk", "fireMeteor", .5);
                    this.m_spine.setMix("walk", "fireTornado", .5);
                    e = new cc.Node("effect1");
                    this.node.addChild(e);
                    this.m_effectSpine1 = e.addComponent(sp.Skeleton);
                    this.m_effectSpine1.skeletonData = h.FrameMgr.loadMgr.get(this.getResName("spine_boss_fire_effect1"), sp.SkeletonData);
                    this.m_effectSpine1.premultipliedAlpha = !1;
                    this.m_effectSpine1.setCompleteListener(function (e) {
                        switch (e.animation ? e.animation.name : "") {
                            case "in":
                                t.m_effectSpine1.setAnimation(0, "idle", !0);
                                break;

                            case "hide":
                                t.m_effectSpine1.node.active = !1;
                        }
                    });
                    this.m_effectSpine1.node.active = !1;
                    e.scale = 1.2;
                    this.m_parentTornadoClone = new cc.Node();
                    this.node.parent.addChild(this.m_parentTornadoClone);
                    e = new cc.Node("effect2");
                    this.node.addChild(e);
                    this.m_effectSpine2 = e.addComponent(sp.Skeleton);
                    this.m_effectSpine2.skeletonData = h.FrameMgr.loadMgr.get("spine_boss_fire_effect2", sp.SkeletonData);
                    this.m_effectSpine2.premultipliedAlpha = !1;
                    this.m_effectSpine2.node.active = !1;
                    this.m_bone_effect2_lefthand = this.m_effectSpine2.findBone("sh-zuo");
                    this.m_bone_effect2_righthand = this.m_effectSpine2.findBone("sh-you");
                };
                e.prototype._initBurning = function () {
                    this.m_bone_head = this.m_spine.findBone("tou");
                    if (this.m_bone_head) {
                        this.m_burning_head = cc.instantiate(s.GValue.pfFrameAnim);
                        this.m_burning_head.parent = this.m_spine.node.parent;
                        var t = this.m_burning_head.getComponent(u.default);
                        t.init(this.m_atlas, "FireBurning_", 8, 2 * o.GConfig.ActionInterval);
                        t.setDstBlendFactorMode1();
                        t.slowAble = !1;
                        t.node.scale = 2;
                        t.node.opacity = 229.5;
                        t.play(0);
                    }
                    this.m_bone_leftShoulder = this.m_spine.findBone("zuo");
                    if (this.m_bone_leftShoulder) {
                        this.m_burning_leftShoulder = cc.instantiate(s.GValue.pfFrameAnim);
                        this.m_burning_leftShoulder.parent = this.m_spine.node.parent;
                        var e = this.m_burning_leftShoulder.getComponent(u.default);
                        e.init(this.m_atlas, "FireBurning_", 8, 2 * o.GConfig.ActionInterval);
                        e.setDstBlendFactorMode1();
                        e.slowAble = !1;
                        e.node.scale = 2;
                        e.node.opacity = 204;
                        e.play(0);
                    }
                    this.m_bone_rightShoulder = this.m_spine.findBone("you");
                    if (this.m_bone_rightShoulder) {
                        this.m_burning_rightShoulder = cc.instantiate(s.GValue.pfFrameAnim);
                        this.m_burning_rightShoulder.parent = this.m_spine.node.parent;
                        var i = this.m_burning_rightShoulder.getComponent(u.default);
                        i.init(this.m_atlas, "FireBurning_", 8, 2 * o.GConfig.ActionInterval);
                        i.setDstBlendFactorMode1();
                        i.slowAble = !1;
                        i.node.scale = 2;
                        i.node.opacity = 204;
                        i.play(0);
                    }
                    this.updateBurning();
                    this.setBurningShow(!1);
                };
                e.prototype.updateBurning = function () {
                    if (this.m_bone_head && this.m_burning_head) {
                        var t = this.m_bone_head.worldX + this.m_spine.node.x, e = this.m_bone_head.worldY + this.m_spine.node.y;
                        this.m_burning_head.setPosition(t, e);
                    }
                    if (this.m_bone_leftShoulder && this.m_burning_leftShoulder) {
                        t = this.m_bone_leftShoulder.worldX + this.m_spine.node.x, e = this.m_bone_leftShoulder.worldY + this.m_spine.node.y;
                        this.m_burning_leftShoulder.setPosition(t, e);
                    }
                    if (this.m_bone_rightShoulder && this.m_burning_rightShoulder) {
                        t = this.m_bone_rightShoulder.worldX + this.m_spine.node.x, e = this.m_bone_rightShoulder.worldY + this.m_spine.node.y;
                        this.m_burning_rightShoulder.setPosition(t, e);
                    }
                };
                e.prototype.setBurningShow = function (t) {
                    this.m_burning_head && (this.m_burning_head.active = t);
                    this.m_burning_leftShoulder && (this.m_burning_leftShoulder.active = t);
                    this.m_burning_rightShoulder && (this.m_burning_rightShoulder.active = t);
                    this.updateBurning();
                };
                e.prototype.update = function () {
                    this.updatePath();
                    this.updateBurning();
                };
                e.prototype.updateLogic = function (t) {
                    this.updateReduceSpeedLogic(t);
                    this.updateStateEffect(t);
                    for (var e = this.m_arrFireMeteor.length - 1; e >= 0; e--) this.m_arrFireMeteor[e].updateLogic(t);
                    for (e = this.m_arrFireMeteorBurning.length - 1; e >= 0; e--) {
                        var i = this.m_arrFireMeteorBurning[e];
                        i.time = i.time - t;
                        if (i.time <= 0) this.removeFireMeteorBurning(i); else if (i.triggerTime - i.time >= .1) {
                            i.triggerTime = i.time;
                            cc.Vec2.distance(i.pos, S.SnakeMgr.getSnakeHead().node.getPosition()) < i.radius && S.SnakeMgr.snakeHurt(i.atk);
                        }
                    }
                    this.setShadowPos();
                    if (!this.isDead) {
                        this.m_collideComp && this.m_collideComp.updateLogic(t);
                        this.updateState(t);
                    }
                };
                e.prototype.startBattle = function () {
                    this.isActive = !0;
                    this.m_collideComp.enabled = !0;
                    this.setState(c.BossState.Move);
                };
                e.prototype.startEnter = function (t, e) {
                    void 0 === t && (t = !1);
                    void 0 === e && (e = -1);
                    this.m_audioId_tornado_in = h.FrameMgr.audioMgr.playEffectSync(this.m_audio_name_tornado_in, !0);
                    this.enterMove2();
                    this.setState(c.BossState.Enter);
                };
                e.prototype.enterMove2 = function () {
                    var t = this, e = new cc.Node("path");
                    e.parent = this.node.parent;
                    e.setPosition(this.node.getPosition());
                    this.m_spine_boss_fire_path = e.addComponent(sp.Skeleton);
                    this.m_spine_boss_fire_path.skeletonData = h.FrameMgr.loadMgr.get("spine_boss_fire_path", sp.SkeletonData);
                    this.m_spine_boss_fire_path.premultipliedAlpha = !1;
                    this.m_spine_boss_fire_path.setCompleteListener(function (e) {
                        switch (e.animation ? e.animation.name : "") {
                            case "show":
                                t.scheduleOnce(function () {
                                    h.FrameMgr.audioMgr.stopEffect(t.m_audioId_tornado_in);
                                    h.FrameMgr.audioMgr.playEffect("boss_fire_show");
                                    if (t.m_spine_boss_fire_path) {
                                        t.m_spine_boss_fire_path.node.destroy();
                                        t.m_spine_boss_fire_path = null;
                                    }
                                    if (t.m_spine_path_tornado_2) {
                                        t.m_spine_path_tornado_2.node.destroy();
                                        t.m_spine_path_tornado_2 = null;
                                    }
                                    if (t.m_spine_path_tornado_scale) {
                                        t.m_spine_path_tornado_scale.node.destroy();
                                        t.m_spine_path_tornado_scale = null;
                                    }
                                    if (t.m_spine_path_tornado_4) {
                                        t.m_spine_path_tornado_4.node.destroy();
                                        t.m_spine_path_tornado_4 = null;
                                    }
                                    h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.ScreenShake, {
                                        level: 2
                                    });
                                    h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.StopDropStone);
                                    h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.HideScreenRed);
                                    t.m_effectSpine1.setAnimation(0, "hide", !1);
                                    t.m_spine.setAnimation(0, "show", !1);
                                    t.node.scale = 1;
                                });
                        }
                    });
                    this.m_spine_boss_fire_path.setAnimation(0, "show", !1);
                    this.m_spine.setAnimation(0, "fireTornado", !0);
                    this.m_effectSpine1.node.active = !0;
                    this.m_effectSpine1.setAnimation(0, "in", !1);
                    this.m_bone_path_main = this.m_spine_boss_fire_path.findBone("f1");
                    this.m_bone_path_2 = this.m_spine_boss_fire_path.findBone("f2");
                    this.m_bone_path_scale = this.m_spine_boss_fire_path.findBone("f3");
                    this.m_bone_path_4 = this.m_spine_boss_fire_path.findBone("f4");
                    this.m_spine_path_tornado_2 = this.createTornadoIn();
                    this.m_spine_path_tornado_scale = this.createTornadoIn();
                    this.m_isSmall || (this.m_spine_path_tornado_4 = this.createTornadoIn());
                    var i = cc.fadeTo(20 * o.GConfig.ActionInterval, 0);
                    this.m_spine_path_tornado_scale.node.runAction(i);
                    h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.ScreenShake, {
                        level: 1,
                        time: 100
                    });
                    this.updatePath();
                };
                e.prototype.createTornadoIn = function () {
                    var t = new cc.Node();
                    t.parent = this.node.parent;
                    t.setPosition(0, 1e4);
                    var e = t.addComponent(sp.Skeleton);
                    e.skeletonData = h.FrameMgr.loadMgr.get(this.getResName("spine_boss_fire_effect1"), sp.SkeletonData);
                    e.premultipliedAlpha = !1;
                    e.setCompleteListener(function (t) {
                        switch (t.animation ? t.animation.name : "") {
                            case "in":
                                e.setAnimation(0, "idle", !0);
                                break;

                            case "hide":
                                e.node.active = !1;
                        }
                    });
                    e.setAnimation(0, "in", !1);
                    return e;
                };
                e.prototype.updatePath = function () {
                    if (this.m_spine_boss_fire_path) {
                        var t = this.m_spine_boss_fire_path.node.getPosition();
                        if (this.m_spine && this.m_bone_path_main) {
                            var e = this.m_bone_path_main.worldX + t.x, i = this.m_bone_path_main.worldY + t.y;
                            this.node.setPosition(e, i);
                            var n = this.m_bone_path_main.getWorldScaleX(), a = this.m_bone_path_main.getWorldScaleY();
                            this.node.setScale(n, a);
                        }
                        if (this.m_spine_path_tornado_2 && this.m_bone_path_2) {
                            e = this.m_bone_path_2.worldX + t.x, i = this.m_bone_path_2.worldY + t.y;
                            this.m_spine_path_tornado_2.node.setPosition(e, i);
                            n = this.m_bone_path_2.getWorldScaleX(), a = this.m_bone_path_2.getWorldScaleY();
                            this.m_spine_path_tornado_2.node.setScale(n, a);
                        }
                        if (this.m_spine_path_tornado_scale && this.m_bone_path_scale) {
                            e = this.m_bone_path_scale.worldX + t.x, i = this.m_bone_path_scale.worldY + t.y;
                            this.m_spine_path_tornado_scale.node.setPosition(e, i);
                            n = this.m_bone_path_scale.getWorldScaleX(), a = this.m_bone_path_scale.getWorldScaleY();
                            this.m_spine_path_tornado_scale.node.setScale(n, a);
                        }
                        if (this.m_spine_path_tornado_4 && this.m_bone_path_4) {
                            e = this.m_bone_path_4.worldX + t.x, i = this.m_bone_path_4.worldY + t.y;
                            this.m_spine_path_tornado_4.node.setPosition(e, i);
                            n = this.m_bone_path_4.getWorldScaleX(), a = this.m_bone_path_4.getWorldScaleY();
                            this.m_spine_path_tornado_4.node.setScale(n, a);
                        }
                    }
                };
                e.prototype.enterMove = function () {
                    var t = this, e = [], i = [], n = [], a = this.m_data.speedEnter, r = this.m_data.enterScale, o = 1, s = 1;
                    r.length >= 1 && (o = r[0]);
                    r.length >= 2 && (s = r[1]);
                    for (var c = this.node.getPosition(), l = 0; l < this.m_data.enterPosArr.length; l++) {
                        var u = c.add(this.m_data.enterPosArr[l]);
                        e.push(u);
                    }
                    for (l = 0; l < this.m_data.enterPosArr2.length; l++) {
                        u = c.add(this.m_data.enterPosArr2[l]);
                        i.push(u);
                    }
                    for (l = 0; l < this.m_data.enterPosArr3.length; l++) {
                        u = c.add(this.m_data.enterPosArr3[l]);
                        n.push(u);
                    }
                    e.push(c);
                    i.push(c);
                    n.push(c);
                    this.node.setPosition(e[0]);
                    this.m_spine.setAnimation(0, "fireTornado", !0);
                    this.m_effectSpine1.node.active = !0;
                    this.m_effectSpine1.setAnimation(0, "in", !1);
                    var p = null, d = null;
                    if (a > 0) {
                        if (this.m_data.enterPosArr2.length > 0) {
                            (p = new cc.Node()).parent = this.node.parent;
                            p.setPosition(i[0]);
                            p.scale = o;
                            var f = p.addComponent(sp.Skeleton);
                            f.skeletonData = h.FrameMgr.loadMgr.get(this.getResName("spine_boss_fire_effect1"), sp.SkeletonData);
                            f.premultipliedAlpha = !1;
                            f.setCompleteListener(function (t) {
                                switch (t.animation ? t.animation.name : "") {
                                    case "in":
                                        f.setAnimation(0, "idle", !0);
                                        break;

                                    case "hide":
                                        f.node.active = !1;
                                }
                            });
                            f.setAnimation(0, "in", !1);
                            this.startEnterAction(p, a, i, null);
                        }
                        if (this.m_data.enterPosArr3.length > 0) {
                            (d = new cc.Node()).parent = this.node.parent;
                            d.setPosition(n[0]);
                            d.scale = s;
                            var m = d.addComponent(sp.Skeleton);
                            m.skeletonData = h.FrameMgr.loadMgr.get(this.getResName("spine_boss_fire_effect1"), sp.SkeletonData);
                            m.premultipliedAlpha = !1;
                            m.setCompleteListener(function (t) {
                                switch (t.animation ? t.animation.name : "") {
                                    case "in":
                                        m.setAnimation(0, "idle", !0);
                                        break;

                                    case "hide":
                                        m.node.active = !1;
                                }
                            });
                            m.setAnimation(0, "in", !1);
                            this.startEnterAction(d, a, n, null);
                        }
                    }
                    this.startEnterAction(this.node, a, e, function () {
                        p && p.destroy();
                        d && d.destroy();
                        h.FrameMgr.audioMgr.stopEffect(t.m_audioId_tornado_in);
                        h.FrameMgr.audioMgr.playEffect("boss_fire_show");
                    });
                };
                e.prototype.startEnterAction = function (t, e, i, n) {
                    var a = this, r = t.getPosition(), o = [];
                    o.push(cc.delayTime(.8));
                    if (e > 0) for (var s = 0; s < i.length; s++) {
                        var l = i[s], u = cc.Vec2.distance(r, l);
                        r = l;
                        var p = u / e, d = cc.moveTo(p, l);
                        o.push(d);
                    }
                    o.push(cc.delayTime(.2));
                    o.push(cc.callFunc(function () {
                        if (n) {
                            h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.ScreenShake, {
                                level: 2
                            });
                            h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.StopDropStone);
                            h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.HideScreenRed);
                            a.m_effectSpine1.setAnimation(0, "hide", !1);
                            a.m_spine.setAnimation(0, "show", !1);
                            n();
                        }
                    }));
                    var f = cc.sequence(o);
                    t.runAction(f);
                };
                e.prototype.setState = function (t) {
                    if (!this.isDead && this.m_state != t) {
                        this.m_state = t;
                        switch (this.m_state) {
                            case c.BossState.Enter:
                                this.node.opacity = 255;
                                break;

                            case c.BossState.Idle:
                                this.m_atkDuration = p.DYTools.random_int(10 * this.m_data.atkDuration.x, 10 * this.m_data.atkDuration.y) / 10;
                                this.m_spine.setAnimation(0, "idle", !0);
                                break;

                            case c.BossState.Attack:
                                break;

                            case c.BossState.Move:
                                this.m_atkDuration = p.DYTools.random_int(10 * this.m_data.atkDuration.x, 10 * this.m_data.atkDuration.y) / 10;
                                this.m_spine.setAnimation(0, "walk", !0);
                        }
                    }
                };
                e.prototype.updateState = function (t) {
                    switch (this.m_state) {
                        case c.BossState.Enter:
                            break;

                        case c.BossState.Idle:
                            this.updateIdle(t);
                            break;

                        case c.BossState.Attack:
                            this.updateAttack(t);
                            break;

                        case c.BossState.Move:
                            this.updateMove(t);
                    }
                };
                e.prototype.updateIdle = function (t) {
                    this.m_atkDuration -= t;
                    this.m_atkDuration < 0 && this.checkNextAttack();
                };
                e.prototype.updateMove = function (t) {
                    this.m_atkDuration -= t;
                    this.m_atkDuration < 0 ? this.checkNextAttack() : this.m_moveComp && this.m_moveComp.updateLogic(t);
                };
                e.prototype.checkNextAttack = function () {
                    if (this.m_atkOrderArr.length > 0) {
                        var t = this.m_atkOrderArr.shift();
                        if (a = this.m_data.atkParam[t - 1]) this.executeAttack(a); else {
                            p.DYTools.error("boss顺序攻击失败", t, this.m_data.atkParam);
                            this.attackOver();
                        }
                    } else {
                        t = 0;
                        for (var e = p.DYTools.random_int(1, this.m_atkRandomWeight), i = 0, n = 0; n < this.m_atkRandomArr.length; n++) if (e <= (i += this.m_atkRandomArr[n].y)) {
                            t = this.m_atkRandomArr[n].x;
                            break;
                        }
                        var a;
                        if (a = this.m_data.atkParam[t - 1]) this.executeAttack(a); else {
                            p.DYTools.error("boss随机攻击失败");
                            this.attackOver();
                        }
                    }
                };
                e.prototype.executeAttack = function (t) {
                    this.m_curAtkData = t;
                    this.setState(c.BossState.Attack);
                    switch (this.m_curAtkData.type) {
                        case P.FireMeteor:
                            this.attackFireMeteor();
                            break;

                        case P.FireTornado:
                            this.attackFireTornado(this.m_curAtkData.param[0][0], this.m_curAtkData.param[0][1], this.m_curAtkData.param[0][2], this.m_curAtkData.param[0][3], this.m_curAtkData.param[0][12]);
                            break;

                        case P.HandLeft:
                            this.m_handCount = 0;
                            this.m_handTotal = p.DYTools.random_int(this.m_curAtkData.param[0][0], this.m_curAtkData.param[0][1]);
                            this.attackLeftHand();
                            break;

                        case P.HandRight:
                            this.m_handCount = 0;
                            this.m_handTotal = p.DYTools.random_int(this.m_curAtkData.param[0][0], this.m_curAtkData.param[0][1]);
                            this.attackRightHand();
                            break;

                        case P.HandDouble:
                            this.m_handCount = 0;
                            this.m_handTotal = p.DYTools.random_int(this.m_curAtkData.param[0][0], this.m_curAtkData.param[0][1]);
                            this.attackDoubleHand();
                            break;

                        case P.Bullet:
                            this.attackBullet(this.m_curAtkData.param[0][0]);
                            break;

                        default:
                            p.DYTools.error("boss开始攻击技能错误", JSON.stringify(this.m_curAtkData));
                            this.attackOver();
                    }
                };
                e.prototype.updateAttack = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type) switch (this.m_curAtkData.type) {
                        case P.FireMeteor:
                            this.updateFireMeteor(t);
                            break;

                        case P.FireTornado:
                            this.updateFireTornado(t);
                            break;

                        case P.HandLeft:
                            this.updateLeftHand();
                            break;

                        case P.HandRight:
                            this.updateRightHand();
                            break;

                        case P.HandDouble:
                            this.updateDoubleHand();
                            break;

                        case P.Bullet:
                    }
                };
                e.prototype.attackOver = function () {
                    this.m_moveComp && this.m_moveComp.setSpeedFactor(1);
                    this.m_state = c.BossState.Attack;
                    this.setState(c.BossState.Move);
                    this.checkHpAtkLimit();
                    this.m_effectSpine1.node.active && this.m_effectSpine1.setAnimation(0, "hide", !1);
                    this.m_effectSpine2.node.active = !1;
                };
                e.prototype.attackFireMeteor = function () {
                    this.m_spine.setAnimation(0, "fireMeteor", !0);
                    this.m_effectSpine2.node.active = !0;
                    this.m_effectSpine2.setAnimation(0, "burn", !0);
                    this.m_aimCount = 0;
                    this.m_aimDelayTime = 0;
                    this.m_aimDisTime = 0;
                    this.m_noAimCount = 0;
                    this.m_noAimDelayTime = 0;
                    this.m_noAimDisTime = 0;
                    this.m_aimFireMeteorEnemyCur = 0;
                    this.m_noAimFireMeteorEnemyCur = 0;
                    this.m_aimFireMeteorBurningCur = 0;
                    this.m_noAimFireMeteorBurningCur = 0;
                };
                e.prototype.updateFireMeteor = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type == P.FireMeteor) {
                        var e = !1, i = !1, n = this.m_curAtkData.param;
                        if (15 == n[0].length) {
                            var a = n[0][0], r = n[0][1], o = n[0][2], s = n[0][3], c = n[0][4], l = n[0][5], h = n[0][6], u = n[0][7], d = n[0][8], f = n[0][9], m = n[0][10], g = n[0][11], _ = n[0][12], y = n[0][13], v = n[0][14];
                            if (this.m_aimCount >= a) e = !0; else if (this.m_aimDelayTime < r) this.m_aimDelayTime += t; else if (this.m_aimDisTime >= o) {
                                var M = S.SnakeMgr.getSnakeHead().node.getPosition().add(cc.v2(c, l)), k = p.DYTools.random_int(1, 360) / 360 * 2 * Math.PI, C = M.add(cc.v2(s * Math.cos(k), s * Math.sin(k))), w = p.DYTools.random_int(h, u);
                                b.MapMgr.isInMap(M) || (w = 0);
                                var A = g - this.m_aimFireMeteorEnemyCur;
                                this.m_aimFireMeteorEnemyCur + w > g && (w = A);
                                if (y > 0 && _ > 0) if (this.m_aimFireMeteorBurningCur >= v) {
                                    y = 0;
                                    _ = 0;
                                } else this.m_aimFireMeteorBurningCur++;
                                this.createFireMeteor(C, w, d, f, m, y, _);
                                this.m_aimDisTime = 0;
                                this.m_aimCount++;
                                this.m_aimFireMeteorEnemyCur += w;
                            } else this.m_aimDisTime += t;
                        } else e = !0;
                        if (15 == n[1].length) {
                            var T = n[1][0], D = n[1][1], E = n[1][2], B = n[1][3], F = n[1][4], N = n[1][5], x = n[1][6], R = n[1][7], I = n[1][8], G = n[1][9], O = n[1][10], L = n[1][11], j = n[1][12], U = n[1][13], Y = n[1][14];
                            if (this.m_noAimCount >= T) i = !0; else if (this.m_noAimDelayTime < D) this.m_noAimDelayTime += t; else if (this.m_noAimDisTime >= E) {
                                M = S.SnakeMgr.getSnakeHead().node.getPosition().add(cc.v2(F, N)), k = p.DYTools.random_int(1, 360) / 360 * 2 * Math.PI,
                                    C = M.add(cc.v2(B * Math.cos(k), B * Math.sin(k))), w = p.DYTools.random_int(x, R);
                                b.MapMgr.isInMap(M) || (w = 0);
                                A = L - this.m_noAimFireMeteorEnemyCur;
                                this.m_noAimFireMeteorEnemyCur + w > L && (w = A);
                                if (U > 0 && j > 0) if (this.m_noAimFireMeteorBurningCur >= Y) {
                                    U = 0;
                                    j = 0;
                                } else if (p.DYTools.random_int(1, 10) <= 8) this.m_noAimFireMeteorBurningCur++; else {
                                    U = 0;
                                    j = 0;
                                }
                                this.createFireMeteor(C, w, I, G, O, U, j);
                                this.m_noAimDisTime = 0;
                                this.m_noAimCount++;
                                this.m_noAimFireMeteorEnemyCur += w;
                            } else this.m_noAimDisTime += t;
                        } else i = !0;
                        e && i && this.attackOver();
                    }
                };
                e.prototype.createFireMeteor = function (t, e, i, n, a, r, o) {
                    var s = new cc.Node();
                    s.parent = y.EntityMgr.getEffectLayer();
                    var c = s.addComponent(w.default), l = t.add(cc.v2(-50, 500));
                    s.setPosition(l);
                    var u = cc.v2(0, -1), p = t.sub(l), d = cc.v2(p).signAngle(u), f = cc.misc.radiansToDegrees(d);
                    c.initData(this, t, -f, .3, e, i, this.m_data.collideAtk, 100, n, a, r, o);
                    this.addFireMeteor(c);
                    h.FrameMgr.audioMgr.playEffect("boss_fire_meteor");
                };
                e.prototype.addFireMeteor = function (t) {
                    this.m_arrFireMeteor && this.m_arrFireMeteor.push(t);
                };
                e.prototype.removeFireMeteor = function (t) {
                    if (this.m_arrFireMeteor) for (var e = this.m_arrFireMeteor.length - 1; e >= 0; e--) if (t == this.m_arrFireMeteor[e]) {
                        this.m_arrFireMeteor.splice(e, 1);
                        break;
                    }
                };
                e.prototype.addFireMeteorBurning = function (t) {
                    this.m_arrFireMeteorBurning && this.m_arrFireMeteorBurning.push(t);
                };
                e.prototype.removeFireMeteorBurning = function (t) {
                    if (this.m_arrFireMeteorBurning) for (var e = this.m_arrFireMeteorBurning.length - 1; e >= 0; e--) if (t == this.m_arrFireMeteorBurning[e]) {
                        var i = this.m_arrFireMeteorBurning[e].nodeAnim;
                        if (i) {
                            var n = cc.fadeOut(.5), a = cc.destroySelf(), r = cc.sequence(n, a);
                            i.runAction(r);
                        }
                        this.m_arrFireMeteorBurning.splice(e, 1);
                        break;
                    }
                };
                e.prototype.attackFireTornado = function (t, e, i, n, a) {
                    this.m_atkLastTime = t;
                    this.m_dropDisTime = e;
                    this.m_dropHurtTime = i;
                    this.m_dropHurtTimeClone = a;
                    this.m_curDropDisTime = 0;
                    this.m_curDropDisTimeClone = 0;
                    this.m_audioId_tornado = h.FrameMgr.audioMgr.playEffectSync(this.m_audio_name_tornado, !0);
                    this.m_spine.setAnimation(0, "fireTornado", !0);
                    this.m_effectSpine1.node.active = !0;
                    this.m_effectSpine1.setAnimation(0, "idle", !0);
                    this.m_moveComp && this.m_moveComp.setSpeedValue(n);
                };
                e.prototype.updateFireTornado = function (t) {
                    this.m_atkLastTime -= t;
                    if (this.m_atkLastTime <= 0) {
                        h.FrameMgr.audioMgr.stopEffect(this.m_audioId_tornado);
                        this.removeAllTornadoClone();
                        this.m_tornadoCloneWaitTime = 0;
                        this.m_parentTornadoClone.angle = 0;
                        this.attackOver();
                    } else {
                        this.m_moveComp && this.m_moveComp.updateLogic(t);
                        this.updateFireTornadoClone(t);
                        this.m_curDropDisTime += t;
                        if (this.m_curDropDisTime >= this.m_dropDisTime) {
                            this.m_curDropDisTime = 0;
                            this.dropFireTornadoGround(this.node.position, 1, !1);
                        }
                        this.m_curDropDisTimeClone += t;
                        if (this.m_curDropDisTimeClone >= .5 * this.m_dropDisTime) {
                            this.m_curDropDisTimeClone = 0;
                            for (var e = 0; e < this.m_arrTornadoCloneEffect.length; e++) {
                                var i = this.m_arrTornadoCloneEffect[e];
                                this.dropFireTornadoGround(i.position, 1, !0);
                            }
                        }
                    }
                };
                e.prototype.dropFireTornadoGround = function (t, e, i) {
                    var n = this, a = cc.instantiate(s.GValue.pfFrameAnim), r = a.getComponent(u.default);
                    a.parent = this.node.parent;
                    a.position = t;
                    a.scale = e;
                    r.init(this.m_atlas, "FireTornado_", 10, 2 * o.GConfig.ActionInterval);
                    r.play(0);
                    var c = new cc.Node();
                    c.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("FireTornadoGround");
                    y.EntityMgr.addShadow(c);
                    c.setPosition(a.getPosition());
                    c.scale = e;
                    if (this.m_moveComp) {
                        var l = this.m_moveComp.getDir();
                        if (l) {
                            var h = cc.v2(0, 1), p = cc.v2(l).signAngle(h), d = cc.misc.radiansToDegrees(p);
                            c.angle = d;
                        }
                    }
                    for (var f = 100 * e, m = i ? this.m_dropHurtTimeClone : this.m_dropHurtTime, g = Math.ceil(m / .2), _ = [], v = 0; v < g; v++) {
                        _.push(cc.delayTime(.2));
                        _.push(cc.callFunc(function () {
                            S.SnakeMgr.isSnakeHeadInCircle(a.x, a.y, f) && S.SnakeMgr.snakeHurt(n.m_data.collideAtk);
                        }));
                    }
                    _.push(cc.callFunc(function () {
                        c.destroy();
                    }));
                    _.push(cc.destroySelf());
                    var b = cc.sequence(_);
                    a.runAction(b);
                };
                e.prototype.updateFireTornadoClone = function (t) {
                    var e = this.m_curAtkData.param[0];
                    if (13 == e.length) {
                        this.m_tornadoCloneWaitTime += t;
                        this.m_parentTornadoClone && this.m_parentTornadoClone.setPosition(this.node.getPosition());
                        var i = e[4], n = e[5], a = e[6], r = e[7], o = e[8], s = e[9], c = e[10], l = e[11];
                        if (this.m_arrTornadoClone.length > 0) {
                            for (var u = 0; u < this.m_arrTornadoClone.length; u++) {
                                var p = this.m_arrTornadoCloneEffect[u], d = this.m_arrTornadoClone[u], f = d.y + s * t;
                                f > c && (f = c);
                                d.y = f;
                                var m = this.node.parent.convertToNodeSpaceAR(d.convertToWorldSpaceAR(cc.Vec2.ZERO));
                                p.setPosition(m);
                                var g;
                                (g = m.y > this.node.y ? this.node.zIndex - 1 : this.node.zIndex + 1) != p.zIndex && (p.zIndex = g);
                                cc.Vec2.distance(m.add(cc.v2(0, 100)), S.SnakeMgr.getSnakeHead().node.getPosition()) < 100 && S.SnakeMgr.snakeHurt(this.m_data.collideAtk);
                            }
                            var _ = this.m_parentTornadoClone.angle + l * t;
                            this.m_parentTornadoClone.angle = _;
                        } else if (i > 0 && this.m_tornadoCloneWaitTime >= n) {
                            var y = function (t) {
                                var e = a + t * r, i = new cc.Node();
                                v.m_parentTornadoClone.addChild(i);
                                i.angle = e;
                                var n = new cc.Node();
                                n.parent = i;
                                var s = new cc.Node();
                                s.parent = v.node.parent;
                                s.setPosition(v.node.getPosition());
                                var c = s.addComponent(sp.Skeleton);
                                c.skeletonData = h.FrameMgr.loadMgr.get(v.getResName("spine_boss_fire_effect1"), sp.SkeletonData);
                                c.premultipliedAlpha = !1;
                                c.setCompleteListener(function (t) {
                                    switch (t.animation ? t.animation.name : "") {
                                        case "hide":
                                            c.node.destroy();
                                    }
                                });
                                c.setAnimation(0, "idle", !0);
                                s.scale = o;
                                v.m_arrTornadoClone.push(n);
                                v.m_arrTornadoCloneEffect.push(s);
                            }, v = this;
                            for (u = 0; u < i; u++) y(u);
                        }
                    }
                };
                e.prototype.removeAllTornadoClone = function () {
                    for (var t = 0; t < this.m_arrTornadoCloneEffect.length; t++) this.m_arrTornadoCloneEffect[t].getComponent(sp.Skeleton).setAnimation(0, "hide", !1);
                    this.m_arrTornadoCloneEffect = [];
                    this.m_arrTornadoClone = [];
                    this.m_parentTornadoClone.removeAllChildren();
                };
                e.prototype.attackLeftHand = function () {
                    this.m_handCount++;
                    h.FrameMgr.audioMgr.playEffect("boss_fire_left_hand");
                    this.m_spine.setAnimation(0, "left_hand", !1);
                    this.m_effectSpine2.node.active = !0;
                    this.m_effectSpine2.setAnimation(0, "left_hand", !1);
                };
                e.prototype.updateLeftHand = function () {
                    var t = !1;
                    if (this.m_bone_effect2_lefthand) {
                        var e = this.m_bone_effect2_lefthand.worldX + this.node.x, i = this.m_bone_effect2_lefthand.worldY + this.node.y;
                        t = S.SnakeMgr.isSnakeHeadInCircle(e, i, 180);
                    }
                    t && S.SnakeMgr.snakeHurt(this.m_data.collideAtk);
                    return t;
                };
                e.prototype.attackRightHand = function () {
                    this.m_handCount++;
                    h.FrameMgr.audioMgr.playEffect("boss_fire_left_hand");
                    this.m_spine.setAnimation(0, "right_hand", !1);
                    this.m_effectSpine2.node.active = !0;
                    this.m_effectSpine2.setAnimation(0, "right_hand", !1);
                };
                e.prototype.updateRightHand = function () {
                    var t = !1;
                    if (this.m_bone_effect2_righthand) {
                        var e = this.m_bone_effect2_righthand.worldX + this.node.x, i = this.m_bone_effect2_righthand.worldY + this.node.y;
                        t = S.SnakeMgr.isSnakeHeadInCircle(e, i, 180);
                    }
                    t && S.SnakeMgr.snakeHurt(this.m_data.collideAtk);
                    return t;
                };
                e.prototype.attackDoubleHand = function () {
                    this.m_handCount++;
                    h.FrameMgr.audioMgr.playEffect("boss_fire_double_hand");
                    this.m_spine.setAnimation(0, "double_hand", !1);
                    this.m_effectSpine2.node.active = !0;
                    this.m_effectSpine2.setAnimation(0, "double_hand", !1);
                };
                e.prototype.updateDoubleHand = function () {
                    var t = this.updateRightHand();
                    t || (t = this.updateLeftHand());
                    return t;
                };
                e.prototype.attackBullet = function (t) {
                    var e = this;
                    h.FrameMgr.audioMgr.playEffect("boss_fire_bullet_begin");
                    this.m_spine.setAnimation(0, "bullet", !1);
                    this.scheduleOnce(function () {
                        var i = g.BulletMgr.getFireData(t), n = g.BulletMgr.getBulletData(t, e.m_data.collideAtk);
                        if (i && n) {
                            e.m_firePoint && g.BulletMgr.deleteFirePoint(e.m_firePoint, e);
                            e.m_firePoint = g.BulletMgr.createFirePoint(d.default, e.node, i, n, e, null, null);
                            e.m_firePoint.m_isPlayAudio = !1;
                            e.m_firePoint.enabled = !0;
                            h.FrameMgr.audioMgr.playEffect("boss_fire_bullet_end");
                        }
                    }, 1.2);
                };
                e.prototype.onCollide = function (t, e) {
                    switch (t) {
                        case c.ContactType.Enter:
                            if (e && e.entity) switch (e.entity.group) {
                                case c.ColliderGroup.Player:
                                    var i = e.entity;
                                    if (i) {
                                        var n = i.getColliderAtk();
                                        this.hurt(n);
                                    }
                                    break;

                                case c.ColliderGroup.PlayerBullet:
                                    var a = e.entity;
                                    if (a) {
                                        n = a.getBulletAttack() || 1;
                                        var r = this.node.getPosition(), o = cc.Vec2.ZERO;
                                        if (this.m_collideComp) {
                                            o = this.m_collideComp.getOffset();
                                            r.x += o.x;
                                            r.y += o.y;
                                        }
                                        var s = e.entity.node.getPosition().sub(r), l = o.add(cc.v2(.8 * s.x, .8 * s.y));
                                        this.playHurtAnim(l);
                                        this.hurt(n, !0);
                                    }
                            }
                    }
                };
                e.prototype.hurt = function (t, e, i) {
                    void 0 === e && (e = !1);
                    void 0 === i && (i = !1);
                    var n = this.hpChange(-t);
                    this.showHurtNum(n, e, i);
                    return n;
                };
                e.prototype.hpChange = function (t) {
                    if (this.isDead) return 0;
                    this.m_curHp += t;
                    this.playHpact();
                    if (this.m_curHp <= 0) {
                        this.m_curHp = 0;
                        this.toDie();
                    }
                    t < 0 && this.cutHpEmitEvent(c.EventTypeEnum.BossCutHp);
                    return t;
                };
                e.prototype.playHpact = function () {
                    var t = this;
                    if (!this.m_hurtTween) {
                        var e = o.GConfig.ActionInterval;
                        this.m_hurtTween = cc.tween(this.m_spine.node).to(0, {
                            color: cc.color(255, 0, 0)
                        }).to(2 * e, {
                            color: cc.color(255, 106, 106)
                        }).to(2 * e, {
                            color: cc.color(255, 255, 255)
                        }).call(function () {
                            t.m_hurtTween = null;
                        }).start();
                    }
                };
                e.prototype.playHurtAnim = function (t) {
                    if (this.m_hurtAnim) {
                        this.m_hurtAnim.play(1);
                        this.m_hurtAnim.node.setPosition(t);
                    }
                };
                e.prototype.checkHpAtkLimit = function () {
                    if (this.m_data.attackLimit.length > 1 && this.m_curHp / this.m_maxHp * 100 <= this.m_data.attackLimit[0]) {
                        for (var t = !1, e = 0; e < this.m_atkRandomArr.length; e++) if (this.m_atkRandomArr[e].x == this.m_data.attackLimit[1]) {
                            this.m_atkRandomArr.splice(e, 1);
                            e--;
                            t = !0;
                        }
                        if (t) {
                            this.m_atkRandomWeight = 0;
                            for (e = 0; e < this.m_atkRandomArr.length; e++) this.m_atkRandomWeight += this.m_atkRandomArr[e].y;
                        }
                        for (e = 0; e < this.m_atkOrderArr.length; e++) if (this.m_atkOrderArr[e] == this.m_data.attackLimit[1]) {
                            this.m_atkOrderArr.splice(e, 1);
                            e--;
                        }
                    }
                };
                e.prototype.onEnemyDie = function (t) {
                    for (var e in this.m_data.enemyLoot) for (var i = parseInt(e), n = this.m_data.enemyLoot[i], a = this.m_dieEnemyNum, r = 0; r < n.length && !(r + 1 >= n.length); r += 2) {
                        var o = n[r], s = n[r + 1];
                        if (a == o) {
                            switch (i) {
                                case c.LootType.Snake:
                                    v.LootMgr.addLoot(c.LootType.Snake, t.node.position, s);
                                    break;

                                case c.LootType.Crazy:
                                    p.DYTools.random_int(0, 99) < s && v.LootMgr.addLoot(c.LootType.Crazy, t.node.position);
                            }
                            break;
                        }
                    }
                    this.m_dieEnemyNum++;
                };
                e.prototype.onDie = function () {
                    var t = this;
                    h.FrameMgr.audioMgr.stopEffect(this.m_audioId_tornado_in);
                    h.FrameMgr.audioMgr.stopEffect(this.m_audioId_tornado);
                    h.FrameMgr.audioMgr.playEffect("boss_fire_die");
                    h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.ScreenShake, {
                        level: 3,
                        time: 6
                    });
                    this.scheduleOnce(function () {
                        t.m_effectSpine1.node.active = !1;
                        t.m_effectSpine2.node.active = !0;
                        t.m_spine.setAnimation(0, "die", !1);
                        t.m_effectSpine2.setAnimation(0, "die", !1);
                    }, 0);
                    this.hideAllStateEffect();
                    this.removeAllTornadoClone();
                    this.m_firePoint && (this.m_firePoint.enabled = !1);
                    if (this.m_shadow) {
                        this.m_shadow.destroy();
                        this.m_shadow = null;
                    }
                    if (this.m_burning_head) {
                        this.m_burning_head.destroy();
                        this.m_burning_head = null;
                    }
                    if (this.m_burning_leftShoulder) {
                        this.m_burning_leftShoulder.destroy();
                        this.m_burning_leftShoulder = null;
                    }
                    if (this.m_burning_rightShoulder) {
                        this.m_burning_rightShoulder.destroy();
                        this.m_burning_rightShoulder = null;
                    }
                };
                e.prototype.getColliders = function () {
                    return this.m_collideComp;
                };
                e.prototype.getCollider = function () {
                    return this.m_collideComp;
                };
                Object.defineProperty(e.prototype, "collideAtk", {
                    get: function () {
                        return this.m_data.collideAtk;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getBossOtherEntity = function () {
                    return null;
                };
                Object.defineProperty(e.prototype, "maxHp", {
                    get: function () {
                        return this.m_maxHp;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "curHp", {
                    get: function () {
                        return this.m_curHp;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getResName = function (t) {
                    return t + this.m_data.resfix;
                };
                return r([T], e);
            }(k.default));
        i.default = D;
        var P;
        i.BossFireMeteorBurning = function () {
            this.nodeAnim = null;
            this.radius = 0;
            this.atk = 0;
            this.time = 0;
            this.triggerTime = 0;
            this.pos = cc.Vec2.ZERO;
            this.callback = null;
        };
        (function (t) {
            t[t.None = 0] = "None";
            t[t.FireMeteor = 1] = "FireMeteor";
            t[t.FireTornado = 2] = "FireTornado";
            t[t.HandLeft = 3] = "HandLeft";
            t[t.HandRight = 4] = "HandRight";
            t[t.HandDouble = 5] = "HandDouble";
            t[t.Bullet = 6] = "Bullet";
        })(P || (P = {}));
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/config/ConfigBossData": "ConfigBossData",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/Tools": "Tools",
        "../../bullet/FirePoint/FirePointEnemy": "FirePointEnemy",
        "../../collide/CircleColliderComp": "CircleColliderComp",
        "../../collide/RectColliderComp": "RectColliderComp",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/LootManager": "LootManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/ShadowManager": "ShadowManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../BossBase": "BossBase",
        "../BossMoveBase": "BossMoveBase",
        "./BossFireMeteor": "BossFireMeteor"
    }],
    BossEntityIce: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "de462EPm2hG7I3/ZPFWeNTP", "BossEntityIce");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o, s, c, l = t("../../../../config/GameConfig"), h = t("../../../../config/GameConst"), u = t("../../../../config/GameEnum"), p = t("../../../../data/config/ConfigBossData"), d = t("../../../../frame/manager/FrameManager"), f = t("../../../../frame/ui/FrameAnim"), m = t("../../../../util/Tools"), g = t("../../bullet/FirePoint/FirePointEnemy"), _ = t("../../collide/CircleColliderComp"), y = t("../../collide/RectColliderComp"), v = t("../../common/EntityBase"), b = t("../../manager/battle/BulletManager"), M = t("../../manager/battle/EnemyManager"), S = t("../../manager/battle/EntityManager"), k = t("../../manager/battle/LootManager"), C = t("../../manager/battle/MapManager"), w = t("../../manager/battle/ShadowManager"), A = t("../../manager/battle/SnakeManager"), T = t("../BossBase"), D = t("../BossMoveBase"), P = t("./BossIcePillar"), E = cc._decorator, B = E.ccclass, F = (E.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.radius = 0;
                    e.m_group = u.ColliderGroup.Enemy;
                    e.m_data = null;
                    e.m_isSmall = !1;
                    e.m_show = null;
                    e.m_showHead = null;
                    e.m_showHeadPos = cc.v2(0, 120);
                    e.m_spine = null;
                    e.m_spine_head = null;
                    e.m_effect_front = null;
                    e.m_effect_back = null;
                    e.m_shadow = null;
                    e.m_atlas = null;
                    e.m_firePoint_left = null;
                    e.m_firePoint_right = null;
                    e.m_fireEntity_left = null;
                    e.m_fireEntity_right = null;
                    e.m_bone_lefthand = null;
                    e.m_bone_righthand = null;
                    e.m_collideComp = null;
                    e.m_moveComp = null;
                    e.m_state = u.BossState.Node;
                    e.m_atkDuration = 0;
                    e.m_atkOrderArr = [];
                    e.m_atkRandomArr = [];
                    e.m_atkRandomWeight = 0;
                    e.m_curAtkData = null;
                    e.m_atkLastTime = 0;
                    e.m_curHp = 0;
                    e.m_maxHp = 0;
                    e.m_hurtAnim = null;
                    e.m_hurtTween = null;
                    e.m_hurtTween_head = null;
                    e.m_arrFireMeteor = [];
                    e.m_arrFireMeteorBurning = [];
                    e.m_aimFireMeteorEnemyCur = 0;
                    e.m_noAimFireMeteorEnemyCur = 0;
                    e.m_aimFireMeteorBurningCur = 0;
                    e.m_noAimFireMeteorBurningCur = 0;
                    e.m_audioId_hitKeep = -1;
                    e.m_audio_name_hitKeep = "boss_ice_hitKeep";
                    e.m_audioId_sectorKeep = -1;
                    e.m_audio_name_sectorKeep = "boss_ice_sectorKeep";
                    e.m_dieEnemyNum = 0;
                    e.EffectBossDie = "EffectBossIceDie";
                    e.m_laser_state = s.Ready;
                    e.m_laser_isBegin = !1;
                    e.m_bullet_curIndex = 0;
                    e.m_hitGround_curIndex = 0;
                    e.m_warning_hitGround = null;
                    e.m_warning_time = 0;
                    e.m_hitGround_offset = cc.v2(0, 0);
                    e.m_hitGround_size = cc.size(0, 0);
                    e.m_hitGround_EffectOffset = cc.v2(0, 0);
                    e.m_aimCount = 0;
                    e.m_aimDelayTime = 0;
                    e.m_aimDisTime = 0;
                    e.m_noAimCount = 0;
                    e.m_noAimDelayTime = 0;
                    e.m_noAimDisTime = 0;
                    e.m_isTriggerFireMeteor = !1;
                    e.m_FireMeteorCount = 0;
                    e.m_warning_sector = null;
                    e.m_sector_offset = cc.v2(0, -50);
                    e.m_sector_angleBegin = 0;
                    e.m_sector_angleEnd = 0;
                    e.m_sector_radius = 0;
                    e.m_sector_speed = 0;
                    e.m_sector_atk = 0;
                    e.m_sector_adsorb = !1;
                    e.m_iceThorn_warningTopX = 0;
                    e.m_iceThorn_warningTopY = 0;
                    e.m_iceThorn_warningWidth = 0;
                    e.m_iceThorn_warningHeight = 0;
                    e.m_iceThorn_safeType = 0;
                    e.m_iceThorn_safeWidth = 0;
                    e.m_iceThorn_safeHeight = 0;
                    e.m_iceThorn_safeRandomRadius = 0;
                    e.m_iceThorn_atk = 0;
                    e.m_iceThorn_stayTime = 0;
                    e.m_safeCenter_pos = cc.v2(0, 0);
                    e.m_safe_iceThorn = null;
                    e.m_warning_iceThorn = null;
                    return e;
                }
                e.prototype.create = function (t) {
                    this.m_data = t;
                    this.m_atlas = d.FrameMgr.loadMgr.get("TP_BossIce", cc.SpriteAtlas);
                    d.FrameMgr.loadMgr.loadAudio(this.m_audio_name_hitKeep);
                    d.FrameMgr.loadMgr.loadAudio(this.m_audio_name_sectorKeep);
                    d.FrameMgr.loadMgr.loadAudio("boss_ice_laser");
                    d.FrameMgr.loadMgr.loadPrefab(this.EffectBossDie);
                    this.m_show = new cc.Node();
                    this.m_show.angle = 0;
                    this.m_show.parent = this.node;
                    this.m_showHead = new cc.Node();
                    this.m_showHead.setPosition(this.m_showHeadPos);
                    this.m_showHead.angle = 0;
                    this.m_showHead.parent = this.m_show;
                    this.m_showHead.zIndex = 999;
                    this.initData();
                    this.initCollide();
                    this.initMoveComp();
                    this.initUI();
                    this.hideAllStateEffect();
                    this.m_firePoint_left = null;
                    this.m_firePoint_right = null;
                    this.pushHurtAbleEntity(this);
                    this.m_arrFireMeteor = [];
                    this.m_arrFireMeteorBurning = [];
                };
                e.prototype.getBossType = function () {
                    return u.BossType.Ice;
                };
                e.prototype.test = function () {
                    this.m_data.speed = 100;
                    this.m_data.atkOrder = [4, 4, 4, 4, 5, 6, 7, 6, 6];
                    this.m_data.atkRandom = [cc.v2(1, 10), cc.v2(2, 10), cc.v2(3, 10), cc.v2(4, 10), cc.v2(5, 10), cc.v2(6, 10)];
                    this.m_data.atkParam = [];
                    var t;
                    (t = new p.BossTreeAtkData()).type = o.Laser;
                    t.param = [];
                    t.param.push([13, 2, 700, 30, 120, 240, 0, .5, 100, 1, 1, 2, 3, 2]);
                    this.m_data.atkParam.push(t);
                    (t = new p.BossTreeAtkData()).type = o.Laser;
                    t.param = [];
                    t.param.push([12, 2, 100, 0, -200, 500, -500, 3, .5, 100, 1, 1, 2, 3, 2]);
                    this.m_data.atkParam.push(t);
                    (t = new p.BossTreeAtkData()).type = o.Bullet;
                    t.param = [];
                    t.param.push([2]);
                    t.param.push([0, 1, 9001, 1.1]);
                    t.param.push([0, 1, 9001, 1.1]);
                    t.param.push([1, 2, 9001, 1.1]);
                    this.m_data.atkParam.push(t);
                    (t = new p.BossTreeAtkData()).type = o.HitGround;
                    t.param = [];
                    t.param.push([1]);
                    t.param.push([0, 3, 0, 0, 800, 400, 0, 0]);
                    t.param.push([0, 3, 0, 0, 800, 600, 0, -200]);
                    t.param.push([0, 3, 0, 0, 800, 800, 0, -400]);
                    this.m_data.atkParam.push(t);
                    (t = new p.BossTreeAtkData()).type = o.IcePillar;
                    t.param = [];
                    t.param.push([1, 1, 1, 100, 0, 0, 0, 5, 800001, 1, 1, 5, 50, 5, 2]);
                    t.param.push([6, .5, .5, 200, 0, 0, 0, 2, 800001, 1, 1, 5, 50, 5, 2]);
                    this.m_data.atkParam.push(t);
                    (t = new p.BossTreeAtkData()).type = o.Sector;
                    t.param = [];
                    t.param.push([5, 125, 235, 500, 200, 1]);
                    this.m_data.atkParam.push(t);
                    (t = new p.BossTreeAtkData()).type = o.IceThorn;
                    t.param = [];
                    t.param.push([5, 0, 0, 1e3, 1e3, 1, 300, 400, 0, 1, 5]);
                    this.m_data.atkParam.push(t);
                };
                e.prototype.initData = function () {
                    this.m_hurtOffsetY = this.m_data.hurtOffsetY;
                    this.radius = this.m_data.collideData[2];
                    this.preGiveGoldPercent = 100;
                    this.m_curHp = this.m_data.hp;
                    this.m_maxHp = this.m_data.hp;
                    this.m_atkOrderArr = m.DYTools.copyArray(this.m_data.atkOrder);
                    this.m_atkRandomArr = m.DYTools.copyArray(this.m_data.atkRandom);
                    for (var t = 0; t < this.m_atkRandomArr.length; t++) this.m_atkRandomWeight += this.m_atkRandomArr[t].y;
                    this.m_isSmall = "" != this.m_data.resfix;
                };
                e.prototype.initCollide = function () {
                    switch (this.m_data.collideType) {
                        case u.ColliderType.Circle:
                            this.m_collideComp = new _.default();
                            this.m_collideComp.init(this.m_data.collideData, this, this.node);
                            break;

                        case u.ColliderType.Rectangle:
                            this.m_collideComp = new y.default();
                            this.m_collideComp.init(this.m_data.collideData, this, this.node);
                    }
                };
                e.prototype.initMoveComp = function () {
                    this.m_moveComp = new D.default();
                    this.m_moveComp.init(this, this.m_data.speed);
                    this.m_moveComp.setIsAdjustScaleX(!1);
                    this.m_moveComp.setActive(!1);
                };
                e.prototype.initUI = function () {
                    this._initShadow();
                    this._initBody();
                    this._initEffect();
                };
                e.prototype._initShadow = function () {
                    if (!this.m_shadow) {
                        this.m_shadow = new cc.Node();
                        S.EntityMgr.addShadow(this.m_shadow);
                        this.setShadowPos();
                        this.m_shadow.addComponent(cc.Sprite).spriteFrame = w.ShadowMgr.atlas.getSpriteFrame("enemy_1_0");
                        this.setShadowShow(!1);
                        this.m_shadow.scale = 2;
                    }
                };
                e.prototype.setShadowShow = function () {
                    this.m_shadow && (this.m_shadow.opacity = 0);
                };
                e.prototype.setShadowPos = function () {
                    this.m_shadow && (this.m_shadow.position = this.node.position.add(cc.v3(0, -60, 0)));
                };
                e.prototype._initEffect = function () {
                    var t = cc.instantiate(h.GValue.pfFrameAnim);
                    t.name = "m_hurtAnim";
                    t.parent = this.node;
                    this.m_hurtAnim = t.getComponent(f.default);
                    this.m_hurtAnim.init(M.EnemyMgr.enemyEffectAtlas, M.EnemyMgr.hurtImage, M.EnemyMgr.hurtCount, l.GConfig.ActionInterval);
                    t.setPosition(this.m_collideComp.getOffset());
                };
                e.prototype._initBody = function () {
                    var t = this, e = new cc.Node();
                    e.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("ground_snow");
                    S.EntityMgr.addShadow(e);
                    e.setPosition(this.node.getPosition());
                    var i = new cc.Node("body");
                    this.m_show.addChild(i);
                    this.m_spine = i.addComponent(sp.Skeleton);
                    this.m_spine.skeletonData = d.FrameMgr.loadMgr.get("spine_boss_ice", sp.SkeletonData);
                    this.m_spine.premultipliedAlpha = !1;
                    var n = "skin_1";
                    this.m_data.resfix && "" != this.m_data.resfix && (n = "skin_" + this.m_data.resfix);
                    this.m_spine.setSkin(n);
                    this.m_spine.setCompleteListener(function (e) {
                        switch (e.animation ? e.animation.name : "") {
                            case "enter_show":
                                t.scheduleOnce(function () {
                                    t.setState(u.BossState.Idle);
                                    d.FrameMgr.noticeMgr.emit(u.EventTypeEnum.BossEnterEnd, t.m_data.tip);
                                });
                                break;

                            case "die":
                                t.hideStopLine();
                                t.removeAble = !0;
                                break;

                            case "hand_left":
                            case "hand_right":
                                t.scheduleOnce(function () {
                                    t.nextBullet();
                                });
                                break;

                            case "laser_end":
                                t.scheduleOnce(function () {
                                    t.m_showHead.angle = 0;
                                    t.attackOver();
                                });
                                break;

                            case "hit_begin":
                                t.scheduleOnce(function () {
                                    if (t.m_curAtkData) if (t.m_curAtkData.type == o.HitGround) {
                                        t.warningHitGround();
                                        t.m_audioId_hitKeep = d.FrameMgr.audioMgr.playEffectSync(t.m_audio_name_hitKeep, !0);
                                    } else t.m_curAtkData.type == o.IceThorn && t.warningIceThorn();
                                });
                                break;

                            case "sector_begin":
                                t.scheduleOnce(function () {
                                    t.m_audioId_sectorKeep = d.FrameMgr.audioMgr.playEffectSync(t.m_audio_name_sectorKeep, !0);
                                    t.nextSector();
                                });
                                break;

                            case "sector_end":
                                t.scheduleOnce(function () {
                                    t.attackOver();
                                    d.FrameMgr.noticeMgr.emit(u.EventTypeEnum.ScreenShake, {
                                        level: 2,
                                        time: 3
                                    });
                                });
                                break;

                            case "summon_begin":
                                t.scheduleOnce(function () {
                                    t.setAnimation(0, "summon_keep", !0);
                                });
                                break;

                            case "summon_end":
                                t.scheduleOnce(function () {
                                    t.setAnimation(0, "idle", !0);
                                });
                        }
                    });
                    this.m_spine.setMix("enter_show", "idle", .5);
                    this.m_spine.setMix("laser_end", "idle", .5);
                    this.m_spine.setMix("hand_left", "idle", .5);
                    this.m_spine.setMix("hand_right", "idle", .5);
                    this.m_spine.setMix("hit_end", "idle", .5);
                    this.m_spine.setMix("summon_end", "idle", .5);
                    this.m_spine.setMix("sector_end", "idle", .5);
                    this.m_spine.setMix("idle", "laser_begin", .5);
                    this.m_spine.setMix("idle", "hand_left", .5);
                    this.m_spine.setMix("idle", "hand_right", .5);
                    this.m_spine.setMix("idle", "hit_begin", .5);
                    this.m_spine.setMix("idle", "summon_begin", .5);
                    this.m_spine.setMix("idle", "sector_begin", .5);
                    i = new cc.Node("head");
                    this.m_showHead.addChild(i);
                    i.setPosition(-this.m_showHeadPos.x, -this.m_showHeadPos.y);
                    this.m_spine_head = i.addComponent(sp.Skeleton);
                    this.m_spine_head.skeletonData = d.FrameMgr.loadMgr.get("spine_boss_ice_head", sp.SkeletonData);
                    this.m_spine_head.premultipliedAlpha = !1;
                    n = "skin_1";
                    this.m_data.resfix && "" != this.m_data.resfix && (n = "skin_" + this.m_data.resfix);
                    this.m_spine_head.setSkin(n);
                    var a = new cc.Node();
                    this.m_show.addChild(a);
                    this.m_effect_back = a.addComponent(sp.Skeleton);
                    this.m_effect_back.skeletonData = d.FrameMgr.loadMgr.get("spine_boss_ice_back", sp.SkeletonData);
                    this.m_effect_back.premultipliedAlpha = !1;
                    a.zIndex = -1;
                    var r = new cc.Node();
                    this.m_show.addChild(r);
                    this.m_effect_front = r.addComponent(sp.Skeleton);
                    this.m_effect_front.skeletonData = d.FrameMgr.loadMgr.get("spine_boss_ice_front", sp.SkeletonData);
                    this.m_effect_front.premultipliedAlpha = !1;
                    this.m_bone_lefthand = this.m_spine.findBone("zuodan");
                    this.m_bone_righthand = this.m_spine.findBone("youdan");
                    var s = new cc.Node();
                    this.m_fireEntity_left = s.addComponent(v.default);
                    this.node.parent.addChild(s);
                    var c = new cc.Node();
                    this.m_fireEntity_right = c.addComponent(v.default);
                    this.node.parent.addChild(c);
                    this.setAnimation(0, "enter_idle", !1);
                };
                e.prototype.setAnimation = function (t, e, i) {
                    this.m_spine.setAnimation(t, e, i);
                    this.m_spine_head.setAnimation(t, e, i);
                    if (this.m_effect_front.findAnimation(e)) {
                        this.m_effect_front.node.active = !0;
                        this.m_effect_front.node.setPosition(cc.Vec2.ZERO);
                        this.m_effect_front.setAnimation(t, e, i);
                    }
                    if (this.m_effect_back.findAnimation(e)) {
                        this.m_effect_back.node.active = !0;
                        this.m_effect_back.node.setPosition(cc.Vec2.ZERO);
                        this.m_effect_back.setAnimation(t, e, i);
                    }
                };
                e.prototype.update = function () {
                    if (this.m_bone_lefthand && this.m_fireEntity_left) {
                        this.m_fireEntity_left.node.x = this.m_bone_lefthand.worldX + this.node.x;
                        this.m_fireEntity_left.node.y = this.m_bone_lefthand.worldY + this.node.y;
                    }
                    if (this.m_bone_righthand && this.m_fireEntity_right) {
                        this.m_fireEntity_right.node.x = this.m_bone_righthand.worldX + this.node.x;
                        this.m_fireEntity_right.node.y = this.m_bone_righthand.worldY + this.node.y;
                    }
                };
                e.prototype.updateLogic = function (t) {
                    this.updateReduceSpeedLogic(t);
                    this.updateStateEffect(t);
                    for (var e = this.m_arrFireMeteor.length - 1; e >= 0; e--) this.m_arrFireMeteor[e].updateLogic(t);
                    for (e = this.m_arrFireMeteorBurning.length - 1; e >= 0; e--) {
                        var i = this.m_arrFireMeteorBurning[e];
                        i.time = i.time - t;
                        if (i.time <= 0) this.removeFireMeteorBurning(i); else if (i.triggerTime - i.time >= .1) {
                            i.triggerTime = i.time;
                            cc.Vec2.distance(i.pos, A.SnakeMgr.getSnakeHead().node.getPosition()) < i.radius && A.SnakeMgr.snakeHurt(i.atk);
                        }
                    }
                    this.setShadowPos();
                    if (!this.isDead) {
                        this.m_collideComp && this.m_collideComp.updateLogic(t);
                        this.updateState(t);
                    }
                };
                e.prototype.startBattle = function () {
                    this.isActive = !0;
                    this.m_collideComp.enabled = !0;
                    this.setState(u.BossState.Idle);
                };
                e.prototype.startEnter = function (t, e) {
                    void 0 === t && (t = !1);
                    void 0 === e && (e = -1);
                    this.enterMove();
                    this.setState(u.BossState.Enter);
                };
                e.prototype.enterMove = function () {
                    d.FrameMgr.noticeMgr.emit(u.EventTypeEnum.StopDropStone);
                    d.FrameMgr.noticeMgr.emit(u.EventTypeEnum.HideScreenRed);
                    this.setAnimation(0, "enter_show", !1);
                    this.node.scale = 1;
                    this.m_spine_head.node.active = !0;
                    d.FrameMgr.audioMgr.playEffect("boss_ice_enter");
                    d.FrameMgr.noticeMgr.emit(u.EventTypeEnum.ScreenShake, {
                        level: 3,
                        time: 7
                    });
                };
                e.prototype.setState = function (t) {
                    if (!this.isDead && this.m_state != t) {
                        this.m_state = t;
                        switch (this.m_state) {
                            case u.BossState.Enter:
                                this.node.opacity = 255;
                                break;

                            case u.BossState.Idle:
                                this.m_atkDuration = m.DYTools.random_int(10 * this.m_data.atkDuration.x, 10 * this.m_data.atkDuration.y) / 10;
                                this.setAnimation(0, "idle", !0);
                                break;

                            case u.BossState.Attack:
                                break;

                            case u.BossState.Move:
                                this.m_atkDuration = m.DYTools.random_int(10 * this.m_data.atkDuration.x, 10 * this.m_data.atkDuration.y) / 10;
                                this.setAnimation(0, "move", !0);
                        }
                    }
                };
                e.prototype.updateState = function (t) {
                    switch (this.m_state) {
                        case u.BossState.Enter:
                            break;

                        case u.BossState.Idle:
                            this.updateIdle(t);
                            break;

                        case u.BossState.Attack:
                            this.updateAttack(t);
                            break;

                        case u.BossState.Move:
                            this.updateMove(t);
                    }
                };
                e.prototype.updateIdle = function (t) {
                    this.m_atkDuration -= t;
                    this.m_atkDuration < 0 && this.checkNextAttack();
                };
                e.prototype.updateMove = function (t) {
                    this.m_atkDuration -= t;
                    this.m_atkDuration < 0 ? this.checkNextAttack() : this.m_moveComp && this.m_moveComp.updateLogic(t);
                };
                e.prototype.checkNextAttack = function () {
                    if (this.m_atkOrderArr.length > 0) {
                        var t = this.m_atkOrderArr.shift();
                        if (a = this.m_data.atkParam[t - 1]) this.executeAttack(a); else {
                            m.DYTools.error("boss顺序攻击失败", t, this.m_data.atkParam);
                            this.attackOver();
                        }
                    } else {
                        t = 0;
                        for (var e = m.DYTools.random_int(1, this.m_atkRandomWeight), i = 0, n = 0; n < this.m_atkRandomArr.length; n++) if (e <= (i += this.m_atkRandomArr[n].y)) {
                            t = this.m_atkRandomArr[n].x;
                            break;
                        }
                        var a;
                        if (a = this.m_data.atkParam[t - 1]) this.executeAttack(a); else {
                            m.DYTools.error("boss随机攻击失败");
                            this.attackOver();
                        }
                    }
                };
                e.prototype.executeAttack = function (t) {
                    this.m_curAtkData = t;
                    this.setState(u.BossState.Attack);
                    switch (this.m_curAtkData.type) {
                        case o.Laser:
                            this.attackLaser();
                            break;

                        case o.Bullet:
                            this.attackBullet();
                            break;

                        case o.HitGround:
                            this.attackHitGround();
                            break;

                        case o.IcePillar:
                            this.attackFireMeteor();
                            break;

                        case o.Sector:
                            this.attackSector();
                            break;

                        case o.IceThorn:
                            this.attackIceThorn();
                            break;

                        default:
                            m.DYTools.error("boss开始攻击技能错误", JSON.stringify(this.m_curAtkData));
                            this.attackOver();
                    }
                };
                e.prototype.updateAttack = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type) switch (this.m_curAtkData.type) {
                        case o.Laser:
                            this.updateLaser(t);
                            break;

                        case o.Bullet:
                        case o.HitGround:
                            break;

                        case o.IcePillar:
                            this.updateFireMeteor(t);
                            break;

                        case o.Sector:
                            this.updateSector(t);
                            break;

                        case o.IceThorn:
                    }
                };
                e.prototype.attackOver = function () {
                    this.m_moveComp && this.m_moveComp.setSpeedFactor(1);
                    this.m_curAtkData = null;
                    this.m_state = u.BossState.Attack;
                    this.setState(u.BossState.Idle);
                    this.checkHpAtkLimit();
                };
                e.prototype.attackLaser = function () {
                    this.m_laser_state = s.Ready;
                    this.m_laser_isBegin = !1;
                    this.setAnimation(0, "laser_begin", !1);
                    for (var t = 0; t < this.m_curAtkData.param.length; t++) this.createLaser(this.m_atlas, this.m_curAtkData.param[t], "boss_ice_laser", 5, 4, 5, 2, 2, 4).setPosition(this.m_showHeadPos);
                };
                e.prototype.updateLaser = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type == o.Laser) if (this.m_laser_state != s.End) {
                        for (var e = !1, i = !0, n = !1, a = 0, r = 0; r < this.m_arrLaser.length; r++) {
                            var c = this.m_arrLaser[r];
                            c.updateLaser(t);
                            if (c.isShoot()) {
                                e = !0;
                                n = !0;
                                a = c.getRotateAngle();
                            }
                            c.isWait() && (e = !0);
                            c.isEnd() || (i = !1);
                        }
                        if (e && !this.m_laser_isBegin) {
                            this.m_laser_isBegin = !0;
                            this.setAnimation(0, "laser_keep", !0);
                        }
                        if (i) {
                            this.m_laser_state = s.End;
                            this.setAnimation(0, "laser_end", !1);
                        }
                        n ? this.m_showHead.angle = a : this.adjustHeadAngle(t);
                    } else this.adjustHeadAngle(t);
                };
                e.prototype.adjustHeadAngle = function (t) {
                    var e = this.m_showHead.angle;
                    e > 180 && (e -= 360);
                    e < -180 && (e += 360);
                    if (e > 0) {
                        (e -= 360 * t) <= 0 && (e = 0);
                        this.m_showHead.angle = e;
                    } else if (e < 0) {
                        (e += 360 * t) >= 0 && (e = 0);
                        this.m_showHead.angle = e;
                    }
                };
                e.prototype.attackBullet = function () {
                    var t = this;
                    this.m_bullet_curIndex = 0;
                    var e = this.m_curAtkData.param[0][0];
                    this.scheduleOnce(function () {
                        t.nextBullet();
                    }, e);
                };
                e.prototype.nextBullet = function () {
                    var t = this;
                    if (!this.isDead) {
                        var e = this;
                        this.m_bullet_curIndex += 1;
                        if (this.m_bullet_curIndex < 1 || this.m_bullet_curIndex >= this.m_curAtkData.param.length) this.attackOver(); else {
                            var i = this.m_curAtkData.param[this.m_bullet_curIndex], n = i[0], a = i[1], r = i[2], o = i[3];
                            this.scheduleOnce(function () {
                                if (!t.isDead) {
                                    var i = 1 == a ? "hand_left" : "hand_right";
                                    e.setAnimation(0, i, !1);
                                    d.FrameMgr.audioMgr.playEffect("boss_ice_bullet");
                                    var n = 1 == a ? t.m_firePoint_left : t.m_firePoint_right, s = 1 == a ? t.m_fireEntity_left : t.m_fireEntity_right;
                                    t.scheduleOnce(function () {
                                        if (!t.isDead) {
                                            var i = b.BulletMgr.getFireData(r), o = b.BulletMgr.getBulletData(r, t.m_data.collideAtk);
                                            if (i && o) {
                                                n && b.BulletMgr.deleteFirePoint(n, s);
                                                if (1 == a) {
                                                    t.m_firePoint_left = b.BulletMgr.createFirePoint(g.default, s.node, i, o, s, null, null);
                                                    t.m_firePoint_left.m_isPlayAudio = !1;
                                                    t.m_firePoint_left.enabled = !0;
                                                    t.m_firePoint_left.setEndCall(function () {
                                                        e.m_firePoint_left.enabled = !1;
                                                    });
                                                } else {
                                                    t.m_firePoint_right = b.BulletMgr.createFirePoint(g.default, s.node, i, o, s, null, null);
                                                    t.m_firePoint_right.m_isPlayAudio = !1;
                                                    t.m_firePoint_right.enabled = !0;
                                                    t.m_firePoint_right.setEndCall(function () {
                                                        e.m_firePoint_right.enabled = !1;
                                                    });
                                                }
                                            }
                                        }
                                    }, o);
                                }
                            }, n);
                        }
                    }
                };
                e.prototype.attackHitGround = function () {
                    var t = this;
                    this.m_hitGround_curIndex = 0;
                    var e = this.m_curAtkData.param[0][0];
                    this.scheduleOnce(function () {
                        t.nextHitGround();
                    }, e);
                };
                e.prototype.nextHitGround = function () {
                    var t = this;
                    if (!this.isDead) {
                        var e = this;
                        this.m_hitGround_curIndex += 1;
                        if (this.m_hitGround_curIndex < 1 || this.m_hitGround_curIndex >= this.m_curAtkData.param.length) this.attackOver(); else {
                            var i = this.m_curAtkData.param[this.m_hitGround_curIndex], n = i[0], a = i[1], r = i[2], o = i[3], s = i[4], c = i[5], l = i[6], h = i[7];
                            this.m_warning_time = a;
                            this.m_hitGround_offset = cc.v2(r, o);
                            this.m_hitGround_size = cc.size(s, c);
                            this.m_hitGround_EffectOffset = cc.v2(l, h);
                            this.scheduleOnce(function () {
                                t.isDead || e.setAnimation(0, "hit_begin", !1);
                            }, n);
                        }
                    }
                };
                e.prototype.warningHitGround = function () {
                    var t = this;
                    if (!this.isDead) {
                        this.setAnimation(0, "hit_keep", !1);
                        this.setWarningHitGroundShow(!0);
                        this.scheduleOnce(function () {
                            if (!t.isDead) {
                                t.setAnimation(0, "hit_end", !1);
                                t.m_effect_front.node.setPosition(t.m_hitGround_EffectOffset);
                                t.setWarningHitGroundShow(!1);
                                d.FrameMgr.audioMgr.stopEffect(t.m_audioId_hitKeep);
                                d.FrameMgr.audioMgr.playEffect("boss_ice_hitEnd");
                                t.scheduleOnce(function () {
                                    if (!t.isDead) {
                                        t.hurtHitGround();
                                        t.nextHitGround();
                                    }
                                }, .2);
                                d.FrameMgr.noticeMgr.emit(u.EventTypeEnum.ScreenShake, {
                                    level: 2,
                                    time: 3
                                });
                            }
                        }, this.m_warning_time);
                    }
                };
                e.prototype.hurtHitGround = function () {
                    var t = A.SnakeMgr.getSnakeHead().node.getPosition(), e = this.node.getPosition().add(this.m_hitGround_offset);
                    t.x >= e.x - .5 * this.m_hitGround_size.width && t.x <= e.x + .5 * this.m_hitGround_size.width && t.y >= e.y - this.m_hitGround_size.height && t.y <= e.y && A.SnakeMgr.getSnakeHead().hurt(this.collideAtk);
                };
                e.prototype.setWarningHitGroundShow = function (t) {
                    if (t) {
                        if (!this.m_warning_hitGround) {
                            this.m_warning_hitGround = new cc.Node();
                            this.m_warning_hitGround.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("warning_hit");
                            S.EntityMgr.addShadow(this.m_warning_hitGround);
                        }
                        this.m_warning_hitGround.setPosition(this.node.getPosition().add(this.m_hitGround_offset).add(cc.v2(0, .5 * -this.m_hitGround_size.height)));
                        this.m_warning_hitGround.setContentSize(this.m_hitGround_size);
                        this.m_warning_hitGround.active = !0;
                    } else this.m_warning_hitGround && (this.m_warning_hitGround.active = !1);
                };
                e.prototype.attackFireMeteor = function () {
                    this.setAnimation(0, "summon_begin", !1);
                    this.m_isTriggerFireMeteor = !1;
                    this.m_FireMeteorCount = 0;
                    this.m_aimCount = 0;
                    this.m_aimDelayTime = 0;
                    this.m_aimDisTime = 0;
                    this.m_noAimCount = 0;
                    this.m_noAimDelayTime = 0;
                    this.m_noAimDisTime = 0;
                    this.m_aimFireMeteorEnemyCur = 0;
                    this.m_noAimFireMeteorEnemyCur = 0;
                    this.m_aimFireMeteorBurningCur = 0;
                    this.m_noAimFireMeteorBurningCur = 0;
                };
                e.prototype.keepFireMeteor = function () {
                    if (!this.m_isTriggerFireMeteor) {
                        this.m_isTriggerFireMeteor = !0;
                        this.setAnimation(0, "summon_end", !1);
                        d.FrameMgr.noticeMgr.emit(u.EventTypeEnum.ScreenShake, {
                            level: 2,
                            time: 3
                        });
                        d.FrameMgr.audioMgr.playEffect("boss_ice_pillar");
                    }
                };
                e.prototype.endFireMeteor = function () {
                    this.m_curAtkData.type == o.IcePillar && this.attackOver();
                };
                e.prototype.updateFireMeteor = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type == o.IcePillar) {
                        var e = this.m_curAtkData.param;
                        if (15 == e[0].length) {
                            var i = e[0][0], n = e[0][1], a = e[0][2], r = e[0][3], s = e[0][4], c = e[0][5], l = e[0][6], h = e[0][7], u = e[0][8], p = e[0][9], d = e[0][10], f = e[0][11], g = e[0][12], _ = e[0][13], y = e[0][14];
                            if (this.m_aimCount >= i); else if (this.m_aimDelayTime < n) this.m_aimDelayTime += t; else if (this.m_aimDisTime >= a) {
                                var v = A.SnakeMgr.getSnakeHead().node.getPosition().add(cc.v2(s, c)), b = m.DYTools.random_int(1, 360) / 360 * 2 * Math.PI, M = v.add(cc.v2(r * Math.cos(b), r * Math.sin(b))), S = m.DYTools.random_int(l, h);
                                C.MapMgr.isInMap(v) || (S = 0);
                                var k = f - this.m_aimFireMeteorEnemyCur;
                                this.m_aimFireMeteorEnemyCur + S > f && (S = k);
                                this.createFireMeteor(M, S, u, p, d, _, g, y);
                                this.m_aimDisTime = 0;
                                this.m_aimCount++;
                                this.m_aimFireMeteorEnemyCur += S;
                            } else this.m_aimDisTime += t;
                        }
                        if (15 == e[1].length) {
                            var w = e[1][0], T = e[1][1], D = e[1][2], P = e[1][3], E = e[1][4], B = e[1][5], F = e[1][6], N = e[1][7], x = e[1][8], R = e[1][9], I = e[1][10], G = e[1][11], O = e[1][12], L = e[1][13], j = e[1][14];
                            if (this.m_noAimCount >= w); else if (this.m_noAimDelayTime < T) this.m_noAimDelayTime += t; else if (this.m_noAimDisTime >= D) {
                                v = A.SnakeMgr.getSnakeHead().node.getPosition().add(cc.v2(E, B)), b = m.DYTools.random_int(1, 360) / 360 * 2 * Math.PI,
                                    M = v.add(cc.v2(P * Math.cos(b), P * Math.sin(b))), S = m.DYTools.random_int(F, N);
                                C.MapMgr.isInMap(v) || (S = 0);
                                k = G - this.m_noAimFireMeteorEnemyCur;
                                this.m_noAimFireMeteorEnemyCur + S > G && (S = k);
                                this.createFireMeteor(M, S, x, R, I, L, O, j);
                                this.m_noAimDisTime = 0;
                                this.m_noAimCount++;
                                this.m_noAimFireMeteorEnemyCur += S;
                            } else this.m_noAimDisTime += t;
                        }
                    }
                };
                e.prototype.createFireMeteor = function (t, e, i, n, a, r, o, s) {
                    var c = new cc.Node();
                    c.parent = S.EntityMgr.getEffectLayer();
                    var l = c.addComponent(P.default), h = t.add(cc.v2(0, 0));
                    c.setPosition(h);
                    l.initData(this, t, 0, s, e, i, this.m_data.collideAtk, o, n, a, r, o);
                    this.addFireMeteor(l);
                    this.m_FireMeteorCount++;
                };
                e.prototype.addFireMeteor = function (t) {
                    this.m_arrFireMeteor && this.m_arrFireMeteor.push(t);
                };
                e.prototype.removeFireMeteor = function (t) {
                    if (this.m_arrFireMeteor) for (var e = this.m_arrFireMeteor.length - 1; e >= 0; e--) if (t == this.m_arrFireMeteor[e]) {
                        this.m_arrFireMeteor.splice(e, 1);
                        break;
                    }
                };
                e.prototype.addFireMeteorBurning = function (t) {
                    this.m_arrFireMeteorBurning && this.m_arrFireMeteorBurning.push(t);
                };
                e.prototype.removeFireMeteorBurning = function (t) {
                    if (this.m_arrFireMeteorBurning) for (var e = this.m_arrFireMeteorBurning.length - 1; e >= 0; e--) if (t == this.m_arrFireMeteorBurning[e]) {
                        if (t.callback) {
                            t.callback();
                            this.m_FireMeteorCount--;
                            this.m_FireMeteorCount <= 0 && this.endFireMeteor();
                        }
                        var i = this.m_arrFireMeteorBurning[e].nodeAnim;
                        if (i) {
                            var n = cc.fadeOut(.2), a = cc.destroySelf(), r = cc.sequence(n, a);
                            i.runAction(r);
                        }
                        this.m_arrFireMeteorBurning.splice(e, 1);
                        break;
                    }
                };
                e.prototype.attackSector = function () {
                    this.m_sector_adsorb = !1;
                    this.setAnimation(0, "sector_begin", !1);
                };
                e.prototype.updateSector = function () {
                    this.checkSectorAdsorb();
                };
                e.prototype.nextSector = function () {
                    var t = this;
                    if (!this.isDead) {
                        this.m_sector_adsorb = !0;
                        this.setAnimation(0, "sector_keep", !0);
                        var e = this.m_curAtkData.param[0], i = e[0];
                        this.m_sector_angleBegin = e[1];
                        this.m_sector_angleEnd = e[2];
                        this.m_sector_radius = e[3];
                        this.m_sector_speed = e[4];
                        this.m_sector_atk = e[5];
                        this.setWarningSector(!0, this.m_sector_angleBegin, this.m_sector_angleEnd, this.m_sector_radius);
                        this.scheduleOnce(function () {
                            t.m_sector_adsorb = !1;
                            t.createSectorHurtEffect(t.m_sector_angleBegin, t.m_sector_angleEnd, t.m_sector_radius);
                            t.checkSectorHurt();
                            t.setAnimation(0, "sector_end", !1);
                            t.setWarningSector(!1);
                            d.FrameMgr.audioMgr.stopEffect(t.m_audioId_sectorKeep);
                            d.FrameMgr.audioMgr.playEffect("boss_ice_sectorEnd");
                        }, i);
                    }
                };
                e.prototype.checkSectorAdsorb = function () {
                    if (this.m_sector_adsorb) if (this.checkInSector()) {
                        var t = this.node.getPosition().add(this.m_sector_offset), e = A.SnakeMgr.getSnakeHead().node.getPosition(), i = t.sub(e).normalize().mul(this.m_sector_speed);
                        A.SnakeMgr.setSpeedBuff(i);
                    } else A.SnakeMgr.setSpeedBuff(null); else A.SnakeMgr.setSpeedBuff(null);
                };
                e.prototype.checkSectorHurt = function () {
                    this.checkInSector() && A.SnakeMgr.getSnakeHead().hurt(this.m_sector_atk);
                };
                e.prototype.checkInSector = function () {
                    var t = this.node.getPosition().add(this.m_sector_offset), e = A.SnakeMgr.getSnakeHead().node.getPosition(), i = this.m_sector_angleBegin, n = this.m_sector_angleEnd, a = this.m_sector_radius, r = cc.Vec2.distance(t, e);
                    if (r < 0 || r > a) return !1;
                    var o = cc.v2(0, 1), s = e.sub(t), c = cc.v2(s).signAngle(o), l = -cc.misc.radiansToDegrees(c);
                    return !((l = l < 0 ? l + 360 : l) < i || l > n);
                };
                e.prototype.createSectorHurtEffect = function () { };
                e.prototype.setWarningSector = function (t, e, i, n) {
                    void 0 === e && (e = 0);
                    void 0 === i && (i = 0);
                    void 0 === n && (n = 0);
                };
                e.prototype.attackIceThorn = function () {
                    this.setAnimation(0, "hit_begin", !1);
                };
                e.prototype.warningIceThorn = function () {
                    var t = this;
                    if (!this.isDead) {
                        this.setAnimation(0, "hit_keep", !1);
                        var e = this.m_curAtkData.param[0], i = e[0];
                        this.m_iceThorn_warningTopX = e[1];
                        this.m_iceThorn_warningTopY = e[2];
                        this.m_iceThorn_warningWidth = e[3];
                        this.m_iceThorn_warningHeight = e[4];
                        this.m_iceThorn_safeType = e[5];
                        this.m_iceThorn_safeWidth = e[6];
                        this.m_iceThorn_safeHeight = e[7];
                        this.m_iceThorn_safeRandomRadius = e[8];
                        this.m_iceThorn_atk = e[9];
                        this.m_iceThorn_stayTime = e[10];
                        this.m_safeCenter_pos = A.SnakeMgr.getSnakeHead().node.getPosition();
                        this.m_safeCenter_pos.x += m.DYTools.random_int(-this.m_iceThorn_safeRandomRadius, this.m_iceThorn_safeRandomRadius);
                        this.m_safeCenter_pos.y += m.DYTools.random_int(-this.m_iceThorn_safeRandomRadius, this.m_iceThorn_safeRandomRadius);
                        this.setWarningIceThornShow(!0);
                        this.scheduleOnce(function () {
                            if (!t.isDead) {
                                t.setAnimation(0, "hit_end", !1);
                                t.setWarningIceThornShow(!1);
                                t.scheduleOnce(function () {
                                    t.isDead || t.createAllIceThorn();
                                }, .2);
                            }
                        }, i);
                    }
                };
                e.prototype.hurtIceThorn = function () {
                    var t = this.node.getPosition().add(cc.v2(this.m_iceThorn_warningTopX, this.m_iceThorn_warningTopY)), e = t.x - .5 * this.m_iceThorn_warningWidth, i = t.x + .5 * this.m_iceThorn_warningWidth, n = t.y - this.m_iceThorn_warningHeight, a = t.y, r = A.SnakeMgr.getSnakeHead().node.getPosition();
                    this.isInIceThornSafe(r) || r.x > e && r.x < i && r.y > n && r.y < a && A.SnakeMgr.snakeHurt(this.m_iceThorn_atk);
                };
                e.prototype.createAllIceThorn = function () {
                    for (var t = this, e = this.node.getPosition().add(cc.v2(this.m_iceThorn_warningTopX, this.m_iceThorn_warningTopY)), i = e.x - .5 * this.m_iceThorn_warningWidth, n = e.x + .5 * this.m_iceThorn_warningWidth, a = e.y - this.m_iceThorn_warningHeight, r = e.y, o = i + 1; o < n; o += 100) for (var s = function (t) {
                        var e = cc.v2(o, t);
                        if (C.MapMgr.isInMap(e) && !c.isInIceThornSafe(e)) {
                            var i = cc.instantiate(h.GValue.pfFrameAnim), n = i.getComponent(f.default);
                            e.x += m.DYTools.random_int(-10, 10);
                            e.y += m.DYTools.random_int(-10, 10);
                            n.node.setPosition(e);
                            c.node.parent.addChild(i);
                            n.init(c.m_atlas, "IcePillar_", 1, l.GConfig.ActionInterval);
                            n.setAnchor(cc.v2(.5, 0));
                            n.setStopCall(function () {
                                n.node.opacity = 255;
                            });
                            i.opacity = 0;
                            i.scale = 0;
                            var a = .01 * m.DYTools.random_int(0, 20), r = 1 + .01 * m.DYTools.random_int(-20, 20), s = cc.delayTime(a), u = cc.callFunc(function () {
                                i.opacity = 255;
                                n.play(1);
                            }), p = cc.scaleTo(.2, r), d = cc.delayTime(c.m_iceThorn_stayTime - a - .2), g = cc.callFunc(function () { }), _ = cc.sequence(s, u, p, d, g, cc.destroySelf());
                            i.runAction(_);
                        }
                    }, c = this, u = r - 1; u > a; u -= 100) s(u);
                    var p = Math.ceil(this.m_iceThorn_stayTime / .2);
                    this.schedule(function () {
                        t.isDead || t.hurtIceThorn();
                    }, .2, p, .001);
                    this.scheduleOnce(function () {
                        t.attackOver();
                    }, this.m_iceThorn_stayTime);
                };
                e.prototype.isInIceThornSafe = function (t) {
                    if (this.m_iceThorn_safeType == c.Rect) {
                        if (t.x > this.m_safeCenter_pos.x - .5 * this.m_iceThorn_safeWidth && t.x < this.m_safeCenter_pos.x + .5 * this.m_iceThorn_safeWidth && t.y > this.m_safeCenter_pos.y - .5 * this.m_iceThorn_safeHeight && t.y < this.m_safeCenter_pos.y + .5 * this.m_iceThorn_safeHeight) return !0;
                    } else if (this.m_iceThorn_safeType == c.Circle && cc.Vec2.distance(t, this.m_safeCenter_pos) < .5 * this.m_iceThorn_safeWidth) return !0;
                    return !1;
                };
                e.prototype.setWarningIceThornShow = function (t) {
                    if (t) {
                        if (!this.m_safe_iceThorn) {
                            var e = new cc.Node();
                            S.EntityMgr.addShadow(e);
                            this.m_safe_iceThorn = e.addComponent(cc.Mask);
                            this.m_warning_iceThorn = new cc.Node();
                            this.m_warning_iceThorn.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("warning_rect");
                            this.m_warning_iceThorn.parent = this.m_safe_iceThorn.node;
                            this.m_warning_iceThorn.setAnchorPoint(.5, 1);
                        }
                        this.m_safe_iceThorn.node.setPosition(this.m_safeCenter_pos);
                        if (this.m_iceThorn_safeType == c.Rect) {
                            this.m_safe_iceThorn.type = cc.Mask.Type.RECT;
                            this.m_safe_iceThorn.node.setContentSize(this.m_iceThorn_safeWidth, this.m_iceThorn_safeHeight);
                        } else if (this.m_iceThorn_safeType == c.Circle) {
                            this.m_safe_iceThorn.type = cc.Mask.Type.ELLIPSE;
                            this.m_safe_iceThorn.node.setContentSize(this.m_iceThorn_safeWidth, this.m_iceThorn_safeWidth);
                        }
                        this.m_safe_iceThorn.inverted = !0;
                        var i = this.node.getPosition().sub(this.m_safe_iceThorn.node.getPosition()).add(cc.v2(this.m_iceThorn_warningTopX, this.m_iceThorn_warningTopY));
                        this.m_warning_iceThorn.setPosition(i);
                        this.m_warning_iceThorn.setContentSize(this.m_iceThorn_warningWidth, this.m_iceThorn_warningHeight);
                        this.m_safe_iceThorn.node.active = !0;
                    } else this.m_safe_iceThorn && (this.m_safe_iceThorn.node.active = !1);
                };
                e.prototype.onCollide = function (t, e) {
                    switch (t) {
                        case u.ContactType.Enter:
                            if (e && e.entity) switch (e.entity.group) {
                                case u.ColliderGroup.Player:
                                    var i = e.entity;
                                    if (i) {
                                        var n = i.getColliderAtk();
                                        this.hurt(n);
                                    }
                                    break;

                                case u.ColliderGroup.PlayerBullet:
                                    var a = e.entity;
                                    if (a) {
                                        n = a.getBulletAttack() || 1;
                                        var r = this.node.getPosition(), o = cc.Vec2.ZERO;
                                        if (this.m_collideComp) {
                                            o = this.m_collideComp.getOffset();
                                            r.x += o.x;
                                            r.y += o.y;
                                        }
                                        var s = e.entity.node.getPosition().sub(r), c = o.add(cc.v2(.8 * s.x, .8 * s.y));
                                        this.playHurtAnim(c);
                                        this.hurt(n, !0);
                                    }
                            }
                    }
                };
                e.prototype.hurt = function (t, e, i) {
                    void 0 === e && (e = !1);
                    void 0 === i && (i = !1);
                    var n = this.hpChange(-t);
                    this.showHurtNum(n, e, i);
                    return n;
                };
                e.prototype.hpChange = function (t) {
                    if (this.isDead) return 0;
                    this.m_curHp += t;
                    this.playHpact();
                    if (this.m_curHp <= 0) {
                        this.m_curHp = 0;
                        this.toDie();
                    }
                    t < 0 && this.cutHpEmitEvent(u.EventTypeEnum.BossCutHp);
                    return t;
                };
                e.prototype.playHpact = function () {
                    var t = this;
                    if (!this.m_hurtTween) {
                        var e = l.GConfig.ActionInterval;
                        this.m_hurtTween = cc.tween(this.m_spine.node).to(0, {
                            color: cc.color(255, 0, 0)
                        }).to(2 * e, {
                            color: cc.color(255, 106, 106)
                        }).to(2 * e, {
                            color: cc.color(255, 255, 255)
                        }).call(function () {
                            t.m_hurtTween = null;
                        }).start();
                    }
                    if (!this.m_hurtTween_head) {
                        e = l.GConfig.ActionInterval;
                        this.m_hurtTween_head = cc.tween(this.m_spine_head.node).to(0, {
                            color: cc.color(255, 0, 0)
                        }).to(2 * e, {
                            color: cc.color(255, 106, 106)
                        }).to(2 * e, {
                            color: cc.color(255, 255, 255)
                        }).call(function () {
                            t.m_hurtTween_head = null;
                        }).start();
                    }
                };
                e.prototype.playHurtAnim = function (t) {
                    if (this.m_hurtAnim) {
                        this.m_hurtAnim.play(1);
                        this.m_hurtAnim.node.setPosition(t);
                    }
                };
                e.prototype.checkHpAtkLimit = function () {
                    if (this.m_data.attackLimit.length > 1 && this.m_curHp / this.m_maxHp * 100 <= this.m_data.attackLimit[0]) {
                        for (var t = !1, e = 0; e < this.m_atkRandomArr.length; e++) if (this.m_atkRandomArr[e].x == this.m_data.attackLimit[1]) {
                            this.m_atkRandomArr.splice(e, 1);
                            e--;
                            t = !0;
                        }
                        if (t) {
                            this.m_atkRandomWeight = 0;
                            for (e = 0; e < this.m_atkRandomArr.length; e++) this.m_atkRandomWeight += this.m_atkRandomArr[e].y;
                        }
                        for (e = 0; e < this.m_atkOrderArr.length; e++) if (this.m_atkOrderArr[e] == this.m_data.attackLimit[1]) {
                            this.m_atkOrderArr.splice(e, 1);
                            e--;
                        }
                    }
                };
                e.prototype.onEnemyDie = function (t) {
                    for (var e in this.m_data.enemyLoot) for (var i = parseInt(e), n = this.m_data.enemyLoot[i], a = this.m_dieEnemyNum, r = 0; r < n.length && !(r + 1 >= n.length); r += 2) {
                        var o = n[r], s = n[r + 1];
                        if (a == o) {
                            switch (i) {
                                case u.LootType.Snake:
                                    k.LootMgr.addLoot(u.LootType.Snake, t.node.position, s);
                                    break;

                                case u.LootType.Crazy:
                                    m.DYTools.random_int(0, 99) < s && k.LootMgr.addLoot(u.LootType.Crazy, t.node.position);
                            }
                            break;
                        }
                    }
                    this.m_dieEnemyNum++;
                };
                e.prototype.onDie = function () {
                    var t = this;
                    d.FrameMgr.audioMgr.stopEffect(this.m_audioId_hitKeep);
                    d.FrameMgr.audioMgr.stopEffect(this.m_audioId_sectorKeep);
                    d.FrameMgr.audioMgr.playEffect("boss_ice_die");
                    d.FrameMgr.noticeMgr.emit(u.EventTypeEnum.ScreenShake, {
                        level: 3,
                        time: 6
                    });
                    var e = d.FrameMgr.loadMgr.get(this.EffectBossDie, cc.Prefab);
                    if (e) {
                        var i = cc.instantiate(e);
                        i.setPosition(this.node.getPosition());
                        S.EntityMgr.addEffect(i);
                    }
                    this.scheduleOnce(function () {
                        t.setAnimation(0, "die", !1);
                    }, 0);
                    this.scheduleOnce(function () {
                        if (t.m_spine_head) {
                            var e = cc.fadeTo(4 * l.GConfig.ActionInterval, 0);
                            t.m_spine_head.node.runAction(e);
                        }
                    }, 74 * l.GConfig.ActionInterval);
                    this.hideAllStateEffect();
                    this.m_firePoint_left && (this.m_firePoint_left.enabled = !1);
                    this.m_firePoint_right && (this.m_firePoint_right.enabled = !1);
                    if (this.m_shadow) {
                        this.m_shadow.destroy();
                        this.m_shadow = null;
                    }
                    this.setWarningHitGroundShow(!1);
                    this.setWarningSector(!1);
                    this.setWarningIceThornShow(!1);
                    this.removeAllLaser();
                };
                e.prototype.getColliders = function () {
                    return this.m_collideComp;
                };
                e.prototype.getCollider = function () {
                    return this.m_collideComp;
                };
                Object.defineProperty(e.prototype, "collideAtk", {
                    get: function () {
                        var t = this.m_data.collideAtk;
                        if (!this.m_curAtkData) return t;
                        this.m_curAtkData.type;
                        return t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getBossOtherEntity = function () {
                    return null;
                };
                Object.defineProperty(e.prototype, "maxHp", {
                    get: function () {
                        return this.m_maxHp;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "curHp", {
                    get: function () {
                        return this.m_curHp;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getResName = function (t) {
                    return t + this.m_data.resfix;
                };
                return r([B], e);
            }(T.default));
        i.default = F;
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Laser = 1] = "Laser";
            t[t.Bullet = 2] = "Bullet";
            t[t.HitGround = 3] = "HitGround";
            t[t.IcePillar = 4] = "IcePillar";
            t[t.Sector = 5] = "Sector";
            t[t.IceThorn = 6] = "IceThorn";
        })(o || (o = {}));
        (function (t) {
            t[t.Ready = 1] = "Ready";
            t[t.Shoot = 2] = "Shoot";
            t[t.End = 3] = "End";
        })(s || (s = {}));
        (function (t) {
            t[t.Rect = 1] = "Rect";
            t[t.Circle = 2] = "Circle";
        })(c || (c = {}));
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/config/ConfigBossData": "ConfigBossData",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/Tools": "Tools",
        "../../bullet/FirePoint/FirePointEnemy": "FirePointEnemy",
        "../../collide/CircleColliderComp": "CircleColliderComp",
        "../../collide/RectColliderComp": "RectColliderComp",
        "../../common/EntityBase": "EntityBase",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/LootManager": "LootManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/ShadowManager": "ShadowManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../BossBase": "BossBase",
        "../BossMoveBase": "BossMoveBase",
        "./BossIcePillar": "BossIcePillar"
    }],
    BossEntityNormal: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c4c18CzBwNGLrbm/hJj0A69", "BossEntityNormal");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./BossBase"), s = cc._decorator, c = s.ccclass, l = (s.property, function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            return r([c], e);
        }(o.default));
        i.default = l;
        cc._RF.pop();
    }, {
        "./BossBase": "BossBase"
    }],
    BossEntitySpider: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c1dd9f8qj5LhKIHJBn90S4X", "BossEntitySpider");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.BossSpiderFuncType = void 0;
        var o, s = t("../../../../config/GameConfig"), c = t("../../../../config/GameConst"), l = t("../../../../config/GameEnum"), h = t("../../../../data/manager/ConfigDataManager"), u = t("../../../../frame/manager/FrameManager"), p = t("../../../../frame/ui/UINum"), d = t("../../../../util/Tools"), f = t("../../collide/CircleColliderComp"), m = t("../../collide/RectColliderComp"), g = t("../../enemy/EnemyAnimComp"), _ = t("../../enemy/move/EnemyMoveController"), y = t("../../manager/battle/EnemyManager"), v = t("../../manager/battle/BulletManager"), b = t("../../manager/battle/EntityManager"), M = t("../../manager/battle/LootManager"), S = t("../../manager/battle/ShadowManager"), k = t("../../manager/battle/SnakeManager"), C = t("../BossBase"), w = t("../../bullet/FirePoint/FirePointEnemy"), A = t("../../../../util/GameFunc"), T = t("../../manager/battle/BossManager"), D = cc._decorator, P = D.ccclass, E = D.property;
        (function (t) {
            t[t.Jump = 1] = "Jump";
            t[t.CreateEnemy = 2] = "CreateEnemy";
            t[t.Bullet = 3] = "Bullet";
        })(o = i.BossSpiderFuncType || (i.BossSpiderFuncType = {}));
        var B = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_group = l.ColliderGroup.Enemy;
                e.m_data = null;
                e.uiNode = null;
                e.colorNodes = [];
                e._velocity = 0;
                e._rotate = 0;
                e._lootBody = 0;
                e.m_maxHp = 0;
                e.m_curHp = 0;
                e._startDir = cc.Vec3.ZERO;
                e.hpBot = null;
                e.hpTop = null;
                e.hpMid = null;
                e._colWallComp = null;
                e._animComp = null;
                e._collideComp = null;
                e._shadowComp = null;
                e._funcController = null;
                e._costHp = 0;
                e._lastTimeRe = 0;
                e._atkNumRe = 0;
                e._atkIntervalTimeRe = 0;
                e._curAtkIntervalTimeRe = 0;
                e._bossJumpWarn = null;
                e._nodeHp = null;
                e._nodeCreateEnemy = null;
                e._nodeBoss = null;
                e._spineBoss = null;
                e._isMoveInFinish = !1;
                e._listFuncIdFirst = [];
                e._listFuncIdWeightData = [];
                e._listFuncIdWeight = [];
                e._maxWeightFunc = 0;
                e._isFuncIdFirst = !0;
                e._curFuncIdIndex = 0;
                e._timeFunc = 0;
                e._isFuncing = !1;
                e._jump_ready_time = 0;
                e._jump_time = 0;
                e._jump_snake_time = 0;
                e.m_liehen = null;
                e._isCanCreateEnemy = !1;
                e._firePoint = null;
                e._listCreateEnemy = [];
                e._moveController = null;
                e._endPos = null;
                return e;
            }
            e.prototype.create = function (t, e) {
                this.m_data = t;
                this._endPos = e;
                this.initData();
                this.initFuncData();
                this.createBossShow();
                this.addCollideComp();
                this.addMoveComp();
                this.addAnimComp();
                this.initUI();
                this.isActive = !1;
                this.pushHurtAbleEntity(this);
            };
            e.prototype.initData = function () {
                this.m_hurtOffsetY = this.data.hurtOffsetY;
                this.m_curHp = this.data.hp;
                this.m_maxHp = this.data.hp;
                this.preGiveGoldPercent = 100;
                this._velocity = this.m_data.speed;
                this._rotate = this.m_data.rotate;
            };
            e.prototype.createBossShow = function () {
                var t = this, e = this;
                this.animNode = new cc.Node();
                this.animNode.setPosition(cc.Vec3.ZERO);
                this.node.addChild(this.animNode);
                this.animNode.angle = 180;
                this._nodeBoss = new cc.Node();
                this.animNode.addChild(this._nodeBoss);
                this._nodeBoss.setPosition(cc.Vec3.ZERO);
                this._nodeBoss.angle = 180;
                this._nodeBoss.scale = .8;
                this._spineBoss = this._nodeBoss.addComponent(sp.Skeleton);
                var i = this.m_data.spine, n = this.m_data.skin;
                u.FrameMgr.loadMgr.loadSpine(i, function (i) {
                    e._spineBoss.skeletonData = i;
                    e._spineBoss.premultipliedAlpha = !1;
                    "" != n && e._spineBoss.setSkin("s1_0");
                    e._spineBoss.setCompleteListener(function (i) {
                        var n = i.animation ? i.animation.name : "";
                        if ("moveIn" == n) {
                            e._isMoveInFinish = !0;
                            e._spineBoss.setAnimation(0, "idle", !0);
                            A.GFunc.addLog("boss spider enter end");
                            u.FrameMgr.noticeMgr.emit(l.EventTypeEnum.BossEnterEnd, 1);
                        } else "shake" == n ? e._spineBoss.setAnimation(0, "vertigo", !0) : "atk_2" == n ? e._isCanCreateEnemy = !0 : "die" == n && (t.removeAble = !0);
                    });
                });
                this._spineBoss.setMix("moveIn", "idle", .2);
                this._spineBoss.setMix("idle", "moveIn", .2);
                this._spineBoss.setMix("atk_1", "walk", .2);
                this._spineBoss.setMix("atk_2", "walk", .2);
                this._spineBoss.setMix("atk_3", "walk", .2);
                this._spineBoss.setMix("walk", "atk_1", .2);
                this._spineBoss.setMix("walk", "atk_2", .2);
                this._spineBoss.setMix("walk", "atk_3", .2);
                this._spineBoss.setMix("idle", "atk_2", .2);
                this._spineBoss.setMix("atk_2", "idle", .2);
                this.uiNode = new cc.Node();
                this.node.addChild(this.uiNode);
                this._nodeHp = new cc.Node();
                this._nodeHp.setPosition(cc.v3(0, 100, 0));
                this._nodeHp.scale = 3;
                this.node.addChild(this._nodeHp);
                this._nodeCreateEnemy = new cc.Node();
                this._nodeBoss.addChild(this._nodeCreateEnemy);
            };
            e.prototype.initUI = function () {
                if (!this.hpBot) {
                    (t = new cc.Node("hpBot")).parent = this._nodeHp;
                    this.hpBot = t.addComponent(cc.Sprite);
                    this.hpBot.spriteFrame = y.EnemyMgr.enemyAtlas.getSpriteFrame("mon_hp_0");
                }
                if (!this.hpMid) {
                    (t = new cc.Node("hpMid")).parent = this._nodeHp;
                    this.hpMid = t.addComponent(cc.Sprite);
                    this.hpMid.spriteFrame = y.EnemyMgr.enemyAtlas.getSpriteFrame("mon_hp_2");
                    this.hpMid.type = cc.Sprite.Type.FILLED;
                    this.hpMid.fillType = cc.Sprite.FillType.HORIZONTAL;
                }
                if (!this.hpTop) {
                    var t;
                    (t = new cc.Node("hpTop")).parent = this._nodeHp;
                    this.hpTop = t.addComponent(cc.Sprite);
                    this.hpTop.spriteFrame = y.EnemyMgr.enemyAtlas.getSpriteFrame("mon_hp_1");
                    this.hpTop.type = cc.Sprite.Type.FILLED;
                    this.hpTop.fillType = cc.Sprite.FillType.HORIZONTAL;
                }
                this.hpTop.fillRange = 1;
                this.hpMid.fillRange = 1;
            };
            e.prototype.startBattle = function () {
                var t = this;
                this.setIsMove(!0);
                this.isActive = !0;
                this.m_liehen && cc.tween(this.m_liehen).to(.6, {
                    opacity: 0
                }).call(function () {
                    if (t.m_liehen) {
                        t.m_liehen.stopAllActions();
                        t.m_liehen.destroy();
                        t.m_liehen = null;
                    }
                }).start();
            };
            e.prototype.startEnter = function (t, e) {
                var i = this;
                void 0 === t && (t = !1);
                void 0 === e && (e = -1);
                this.node.setPosition(this._endPos);
                this._spineBoss.setAnimation(0, "moveIn", !1);
                u.FrameMgr.audioMgr.playEffect("boss_spider_enter");
                this.scheduleOnce(function () {
                    u.FrameMgr.noticeMgr.emit(l.EventTypeEnum.ScreenShake, {
                        level: 2
                    });
                    u.FrameMgr.noticeMgr.emit(l.EventTypeEnum.StopDropStone);
                    u.FrameMgr.noticeMgr.emit(l.EventTypeEnum.HideScreenRed);
                }, .2);
                this.scheduleOnce(function () {
                    if (i.m_liehen) {
                        i.m_liehen.stopAllActions();
                        i.m_liehen.destroy();
                    }
                    i.m_liehen = new cc.Node("liehen");
                    i.m_liehen.scale = .8;
                    b.EntityMgr.addBottomEffect(i.m_liehen, i.node.getPosition());
                    i.m_liehen.addComponent(cc.Sprite).spriteFrame = y.EnemyMgr.enemyAtlas.getSpriteFrame("liehen");
                    i.m_liehen.angle = i.angle;
                }, 6 * s.GConfig.ActionInterval);
            };
            e.prototype.initFuncData = function () {
                this._isFuncIdFirst = !0;
                this._curFuncIdIndex = 0;
                this._timeFunc = 0;
                this._isFuncing = !1;
                this._listFuncIdFirst = [];
                for (var t = this.data.funcId.split("*"), e = 0, i = t.length; e < i; e++) (r = h.ConfigDataMgr.getData("ConfigBossFuncData", parseInt(t[e]))) && this._listFuncIdFirst.push(r);
                this._listFuncIdWeight = [];
                this._listFuncIdWeightData = [];
                this._maxWeightFunc = 0;
                var n = this.data.weight.split("#");
                for (e = 0, i = n.length; e < i; e++) {
                    var a = n[e].split("*");
                    if (2 == a.length) {
                        var r, o = parseInt(a[0]), s = parseInt(a[1]);
                        if (r = h.ConfigDataMgr.getData("ConfigBossFuncData", o)) {
                            this._listFuncIdWeight.push(s);
                            this._listFuncIdWeightData.push(r);
                            this._maxWeightFunc += s;
                        }
                    }
                }
            };
            e.prototype.updateFunc = function (t) {
                if (this._isFuncing) {
                    this._timeFunc = 0;
                    if (this._jump_ready_time > 0) {
                        this.actionJumpFollow();
                        this._jump_ready_time -= t;
                        if (this._jump_ready_time <= 0) {
                            this._jump_ready_time = 0;
                            this.actionJump();
                        }
                    }
                } else {
                    this._timeFunc += t;
                    var e = null;
                    if (this._isFuncIdFirst) {
                        if (this._curFuncIdIndex >= this._listFuncIdFirst.length) {
                            this._isFuncIdFirst = !1;
                            this._curFuncIdIndex = 0;
                            return;
                        }
                        e = this._listFuncIdFirst[this._curFuncIdIndex];
                    } else for (var i = d.DYTools.random_int(1, this._maxWeightFunc), n = 0, a = this._listFuncIdWeight.length; n < a; n++) if ((i -= this._listFuncIdWeight[n]) <= 0) {
                        e = this._listFuncIdWeightData[n];
                        break;
                    }
                    if (e && this._timeFunc >= e.delay) switch (e.type) {
                        case o.Jump:
                            this.actionStart();
                            this.actionJumpReady(e.para);
                            break;

                        case o.CreateEnemy:
                            this.actionStart();
                            this.actionCreateEnemy(e.para);
                            break;

                        case o.Bullet:
                            this.actionStart();
                            this.actionBullet(e.para);
                    }
                }
            };
            e.prototype.actionStart = function () {
                this._isFuncing = !0;
                this._timeFunc = 0;
                this.setIsMove(!1);
            };
            e.prototype.actionEnd = function () {
                this._isFuncing = !1;
                this._timeFunc = 0;
                this._curFuncIdIndex++;
                this.setIsMove(!0);
                this._isCanCreateEnemy = !0;
            };
            e.prototype.actionJumpReady = function (t) {
                var e = t.split("*");
                if (3 == e.length) {
                    this._jump_ready_time = parseFloat(e[0]);
                    this._jump_time = parseFloat(e[1]);
                    this._jump_snake_time = parseFloat(e[2]);
                    k.SnakeMgr.getSnakeHead().node.position;
                    this._spineBoss.setAnimation(0, "atk_3", !1);
                    u.FrameMgr.audioMgr.playEffect("boss_spider_jumpPre");
                    this._bossJumpWarn && this._bossJumpWarn.destroy();
                    this._bossJumpWarn = new cc.Node("bossJumpWarn");
                    var i = new cc.Node();
                    i.addComponent(cc.Sprite).spriteFrame = y.EnemyMgr.enemyAtlas.getSpriteFrame("warn_boss");
                    i.parent = this._bossJumpWarn;
                    var n = new cc.Node(), a = n.addComponent(cc.Sprite);
                    a.spriteFrame = y.EnemyMgr.enemyAtlas.getSpriteFrame("warn_boss");
                    a.dstBlendFactor = cc.macro.BlendFactor.ONE;
                    n.parent = this._bossJumpWarn;
                    var r = s.GConfig.ActionInterval;
                    cc.tween(i).to(0, {
                        scale: 1
                    }).to(10 * r, {
                        scale: .96
                    }).to(15 * r, {
                        scale: 1
                    }).union().repeatForever().start();
                    cc.tween(n).to(0, {
                        scale: 1,
                        opacity: 205
                    }).to(12 * r, {
                        scale: .5,
                        opacity: 0
                    }).delay(13 * r).union().repeatForever().start();
                    k.SnakeMgr.getSnake().addFollowNode(this._bossJumpWarn, -1);
                }
            };
            e.prototype.actionJumpFollow = function () {
                this._bossJumpWarn.position = k.SnakeMgr.getPlayerPos();
            };
            e.prototype.actionJump = function () {
                var t = this, e = this;
                this._nodeBoss.stopAllActions();
                this._collideComp && (this._collideComp.enabled = !1);
                cc.tween(this._nodeBoss).to(this._jump_time, {
                    scale: 1.5,
                    opacity: 0
                }).call(function () {
                    if (!e.isDead) {
                        t._collideComp && (t._collideComp.enabled = !0);
                        e.node.position = t._bossJumpWarn.position;
                        e._nodeBoss.opacity = 255;
                        e._nodeBoss.scale = 1;
                        t._bossJumpWarn.destroy();
                        t._spineBoss.setAnimation(0, "shake", !1);
                        u.FrameMgr.audioMgr.playEffect("boss_spider_snake");
                        t.scheduleOnce(function () {
                            u.FrameMgr.noticeMgr.emit(l.EventTypeEnum.ScreenShake, {
                                level: 2
                            });
                        }, .1);
                        t.scheduleOnce(function () {
                            if (t.m_liehen) {
                                t.m_liehen.stopAllActions();
                                t.m_liehen.destroy();
                            }
                            t.m_liehen = new cc.Node("liehen");
                            b.EntityMgr.addBottomEffect(t.m_liehen, t.node.getPosition());
                            t.m_liehen.addComponent(cc.Sprite).spriteFrame = y.EnemyMgr.enemyAtlas.getSpriteFrame("liehen");
                            t.m_liehen.angle = t.angle;
                        }, 6 * s.GConfig.ActionInterval);
                    }
                }).delay(this._jump_snake_time).call(function () {
                    e.actionEnd();
                    t.m_liehen && cc.tween(t.m_liehen).delay(.3).to(.6, {
                        opacity: 0
                    }).call(function () {
                        if (t.m_liehen) {
                            t.m_liehen.stopAllActions();
                            t.m_liehen.destroy();
                            t.m_liehen = null;
                        }
                    }).start();
                }).start();
            };
            e.prototype.actionCreateEnemy = function (t) {
                var e = this, i = t.split("#"), n = i.length;
                if (n >= 3) {
                    for (var a = parseInt(i[0]), r = parseFloat(i[1]), o = [], s = 2; s < n; s++) o.push(i[s]);
                    var c = [];
                    for (s = 0; s < a; s++) {
                        var l = cc.delayTime(r), h = cc.callFunc(function () {
                            e._spineBoss.setAnimation(0, "atk_2", !1);
                            e._isCanCreateEnemy = !1;
                            for (var t = 0; t < o.length; t++) e._listCreateEnemy.push(o[t]);
                        });
                        0 != s && c.push(l);
                        c.push(h);
                    }
                    c.push(cc.callFunc(function () {
                        e.actionEnd();
                    }));
                    var p = cc.sequence(c);
                    this._nodeBoss.stopAllActions();
                    this._nodeBoss.runAction(p);
                    u.FrameMgr.audioMgr.playEffect("boss_spider_giveBirth");
                }
            };
            e.prototype.updateCreateEnemy = function () {
                if (!this.isDead && !(this._listCreateEnemy.length <= 0) && this._isCanCreateEnemy) {
                    var t = this._listCreateEnemy[0].split("*");
                    if (3 == t.length) {
                        var e = parseInt(t[0]), i = parseFloat(t[1]), n = parseFloat(t[2]);
                        this._nodeCreateEnemy.setPosition(i, n);
                        this._listCreateEnemy.splice(0, 1);
                        var a = y.EnemyMgr.createNormalEnemy(e);
                        a.node.position = this.node.parent.convertToNodeSpaceAR(this._nodeCreateEnemy.convertToWorldSpaceAR(cc.Vec3.ZERO));
                        a.init();
                        a.startBattle();
                        y.EnemyMgr.extraEnemyCount += 1;
                    }
                }
            };
            e.prototype.actionBullet = function (t) {
                var e = this, i = T.BossMgr.getBossFirePointData(t), n = v.BulletMgr.getBulletData(i.bulletId, this.data.atk);
                if (i && n) {
                    this._firePoint ? this._firePoint.changeData(i, n) : this._firePoint = v.BulletMgr.createFirePoint(w.default, this.node, i, n, this, null, function () {
                        e._firePoint.enabled = !1;
                        e.actionEnd();
                    });
                    this._firePoint.enabled = !0;
                    this._spineBoss.setAnimation(0, "atk_3", !1);
                } else this.actionEnd();
            };
            e.prototype.setIsMove = function (t) {
                if (this._moveController) {
                    this._moveController.enabled = t;
                    t && this._spineBoss.setAnimation(0, "walk", !0);
                }
            };
            e.prototype.updateLogic = function (t) {
                if (this.isActive && !this.isDead && this._isMoveInFinish) {
                    this.updateLastTimeRegionEffect(t);
                    this.updateFunc(t);
                    this.updateCreateEnemy(t);
                    this._moveController && this._moveController.updateLogic(t);
                    this.animNode && this.uiNode && (this.animNode.angle = this.uiNode.angle);
                    this._collideComp && this._collideComp.updateLogic(t);
                }
            };
            Object.defineProperty(e.prototype, "angle", {
                get: function () {
                    return this.uiNode.angle;
                },
                set: function (t) {
                    this.uiNode.angle = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "scaleX", {
                get: function () {
                    return this.uiNode.scaleX;
                },
                set: function (t) {
                    this.uiNode.scaleX = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.addMoveComp = function () {
                this._moveController || (this._moveController = new _.default());
                this._moveController.init(this, this.m_data.moveId, this.node);
                this._moveController.enabled = !0;
            };
            e.prototype.addAnimComp = function () {
                this._animComp || (this._animComp = new g.default());
            };
            e.prototype.addCollideComp = function () {
                var t = this, e = this.m_data.col, i = this.node.scale;
                if (e.length >= 4) switch (e[0]) {
                    case l.ColliderType.None:
                        break;

                    case l.ColliderType.Circle:
                        if (this._collideComp) {
                            if (this._collideComp.type != l.ColliderType.Circle) {
                                delete this._collideComp;
                                this._collideComp = new f.default();
                            }
                        } else this._collideComp = new f.default();
                        var n = [e[1] * i, e[2] * i, e[3] * i];
                        this._collideComp.init(n, this, this.node);
                        break;

                    case l.ColliderType.Rectangle:
                        if (e.length >= 5) {
                            if (this._collideComp) {
                                if (this._collideComp.type != l.ColliderType.Rectangle) {
                                    delete this._collideComp;
                                    this._collideComp = new m.default();
                                }
                            } else this._collideComp = new m.default();
                            n = [e[1] * i, e[2] * i, e[3] * i, e[4] * i];
                            this._collideComp.init(n, this, this.node);
                        }
                }
                this.scheduleOnce(function () {
                    t._collideComp && (t._collideComp.enabled = !0);
                });
            };
            e.prototype.onCollide = function (t, e) {
                switch (t) {
                    case l.ContactType.Enter:
                        if (e && e.entity) switch (e.entity.group) {
                            case l.ColliderGroup.Player:
                                var i = e.entity;
                                if (i) {
                                    var n = i.getColliderAtk();
                                    this.hurt(n);
                                    this._animComp.playEnemyHurtAnim();
                                }
                                break;

                            case l.ColliderGroup.PlayerBullet:
                                var a = e.entity;
                                if (a) {
                                    n = a.getBulletAttack() || 1;
                                    this.hurt(n);
                                }
                                this._animComp.playEnemyHurtAnim();
                        }
                }
            };
            e.prototype.setLastTimeRegionEffect = function (t, e, i) {
                if (!(t <= 0)) {
                    this._lastTimeRe <= 0 && this._animComp.showFireAnim(!0, this.m_data.effectScaleX, this.m_data.effectScaleY);
                    if (e > this._atkNumRe) {
                        this._lastTimeRe = t;
                        this._atkNumRe = e;
                        this._atkIntervalTimeRe = i;
                        this._curAtkIntervalTimeRe = 0;
                    }
                }
            };
            e.prototype.updateLastTimeRegionEffect = function (t) {
                if (!(this._lastTimeRe <= 0)) {
                    this._lastTimeRe -= t;
                    if (this._lastTimeRe <= 0) {
                        this._lastTimeRe = 0;
                        this._atkNumRe = 0;
                        this._atkIntervalTimeRe = 0;
                        this._curAtkIntervalTimeRe = 0;
                        this._animComp.showFireAnim(!1);
                    } else {
                        this._curAtkIntervalTimeRe -= t;
                        if (this._curAtkIntervalTimeRe <= 0 && this.isActive) {
                            this._curAtkIntervalTimeRe = this._atkIntervalTimeRe;
                            this.hpChange(-this._atkNumRe);
                        }
                    }
                }
            };
            e.prototype.showIgniteAnim = function (t, e) {
                void 0 === e && (e = 0);
                this._animComp.showIgniteAnim(t, this.m_data.effectScaleX, this.m_data.effectScaleY);
                this.showHurtNum(e);
            };
            e.prototype.playWhiteAnim = function (t) {
                this._animComp.playWhiteAnim(t);
            };
            e.prototype.showHurtNum = function (t) {
                var e = cc.instantiate(c.GValue.pfNum);
                e.setPosition(this.node.getPosition());
                b.EntityMgr.getEnemyLayer().addChild(e);
                e.stopAllActions();
                var i = "-" + Math.ceil(t), n = e.getComponent(p.default);
                n.init();
                n.setAtlas(y.EnemyMgr.enemyAtlas);
                n.setType(l.NumType.EnemyHurtRed);
                n.setString(i);
                e.scale = .5;
                e.opacity = 0;
                var a = 4 * s.GConfig.ActionInterval, r = cc.scaleTo(a, 1.7), o = cc.fadeTo(a, 255), h = cc.spawn(r, o), u = 2 * s.GConfig.ActionInterval, d = cc.scaleTo(u, .9), f = 2 * s.GConfig.ActionInterval, m = cc.scaleTo(f, 1), g = 8 * s.GConfig.ActionInterval, _ = cc.fadeTo(g, 0), v = cc.moveBy(g, cc.v2(0, 20)), M = cc.spawn(_, v), S = cc.callFunc(function () {
                    n.removeSelf();
                }), k = cc.sequence(h, d, m, M, S);
                e.runAction(k);
            };
            e.prototype.hurt = function (t) {
                return this.hpChange(-t);
            };
            e.prototype.hpChange = function (t) {
                if (!c.GValue.enemyAtkAble) return 0;
                var e = 0, i = this.m_curHp;
                this.m_curHp += t;
                this.m_curHp = this.m_curHp > this.m_maxHp ? this.m_maxHp : this.m_curHp;
                if (this.m_curHp <= 0) {
                    this.m_curHp = 0;
                    this.onDie();
                    e = i;
                } else e = Math.abs(t);
                t < 0 && this.cutHpEmitEvent(l.EventTypeEnum.BossCutHp);
                this.setHpShow();
                return e;
            };
            e.prototype.setHpShow = function () {
                if (this.hpTop) {
                    var t = this.curHp / this.maxHp;
                    t = Math.max(0, t);
                    t = Math.min(1, t);
                    this.hpTop.fillRange = t;
                }
                if (this.hpMid) {
                    t = this.curHp / this.maxHp;
                    t = Math.max(0, t);
                    t = Math.min(1, t);
                    this.hpMid.node.stopAllActions();
                    cc.tween(this.hpMid).to(.1, {
                        fillRange: t
                    }).start();
                }
            };
            e.prototype.getAtk = function () {
                return this.m_data.atk;
            };
            Object.defineProperty(e.prototype, "collideAtk", {
                get: function () {
                    return this.m_data.atk;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.onCollideWall = function (t, e) {
                this._moveController && this._moveController.onCollideWall(t, e);
            };
            e.prototype.onCollideBlock = function (t, e) {
                this._moveController && this._moveController.onCollideBlock(t, e);
            };
            e.prototype.setDead = function () {
                this.onDie();
            };
            e.prototype.onDie = function () {
                var t = this, e = this;
                y.EnemyMgr.killedEnemyCount += 1;
                this.node.emit("onDie");
                this.node.stopAllActions();
                this._nodeBoss.stopAllActions();
                this._firePoint && (this._firePoint.enabled = !1);
                this._bossJumpWarn && this._bossJumpWarn.destroy();
                this._spineBoss.setAnimation(0, "die", !1);
                this._spineBoss.node.opacity = 255;
                for (var i = [], n = [1, .3, .1, .5], a = [cc.v3(-70, -70, 0), cc.v3(60, 60, 0), cc.v3(50, -50, 0), cc.v3(0, 0, 0)], r = [1.7, 1.9, 2, 2.5], o = function (e) {
                    var o = cc.delayTime(n[e]), s = a[e], c = r[e], l = cc.callFunc(function () {
                        s = s.add(cc.v3(d.DYTools.random_int(-50, 50), d.DYTools.random_int(-50, 50), 0));
                        t._animComp.createDieAnimEffect(s, "anim_die_1_", 12, y.EnemyMgr.enemyBlastAtlas).scale = c;
                    });
                    i.push(o);
                    i.push(l);
                }, s = 0; s < n.length; s++) o(s);
                var c = cc.callFunc(function () {
                    var t = cc.fadeTo(.3, 0);
                    e._nodeBoss.runAction(t);
                }), h = cc.delayTime(.4), p = cc.callFunc(function () {
                    t.hideStopLine();
                    e.removeAble = !0;
                    e.node.destroy();
                });
                i.push(c);
                i.push(h);
                i.push(p);
                var f = cc.sequence(i);
                this.node.runAction(f);
                u.FrameMgr.noticeMgr.emit(l.EventTypeEnum.BossCutHp, this.node.position);
                this.isDead = !0;
                this._collideComp && (this._collideComp.enabled = !1);
                this.uiNode.opacity = 0;
                this._nodeHp.opacity = 0;
                this._shadowComp && S.ShadowMgr.removeShadow(this._shadowComp);
                this._moveController && this._moveController.clear();
                u.FrameMgr.audioMgr.playEffect("boss_spider_die");
                this.checkLoot();
                this.node.off(l.EventTypeEnum.ContactWall);
                this.node.off(l.EventTypeEnum.EnemyMove);
                this.node.off(l.EventTypeEnum.EnemyDirChange);
                this.scheduleOnce(function () {
                    u.FrameMgr.noticeMgr.emit(l.EventTypeEnum.ScreenShakeParam, 3);
                }, .2);
                this.scheduleOnce(function () {
                    u.FrameMgr.noticeMgr.emit(l.EventTypeEnum.ScreenShakeParam, 3);
                }, 1);
                this.scheduleOnce(function () {
                    u.FrameMgr.noticeMgr.emit(l.EventTypeEnum.ScreenShakeParam, 3);
                }, 1.7);
            };
            e.prototype.checkLoot = function () {
                if (this.lootBody > 0) for (var t = 0; t < this.lootBody && k.SnakeMgr.getSnakeMaxLength() > k.SnakeMgr.getSnakeCurrentLength() + M.LootMgr.snakeBody; t++) M.LootMgr.addLoot(l.LootType.Snake, this.node.position);
            };
            e.prototype.getColliders = function () {
                return this._collideComp;
            };
            Object.defineProperty(e.prototype, "radius", {
                get: function () {
                    return this._collideComp.data.radius;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "maxHp", {
                get: function () {
                    return this.m_maxHp;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "curHp", {
                get: function () {
                    return this.m_curHp;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "velocity", {
                get: function () {
                    return this._velocity;
                },
                set: function (t) {
                    this._velocity = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "speed", {
                get: function () {
                    return this._moveController.enabled ? this._moveController.getSpeed() : cc.Vec2.ZERO;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "rotateSpeed", {
                get: function () {
                    return this._rotate;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "lootBody", {
                get: function () {
                    return this._lootBody;
                },
                set: function (t) {
                    this._lootBody = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "startDir", {
                get: function () {
                    return this._startDir;
                },
                set: function (t) {
                    this._startDir = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "data", {
                get: function () {
                    return this.m_data;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "moveController", {
                get: function () {
                    return this._moveController;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "funcController", {
                get: function () {
                    return this._funcController;
                },
                enumerable: !1,
                configurable: !0
            });
            r([E(cc.Node)], e.prototype, "colorNodes", void 0);
            return r([P], e);
        }(C.default);
        i.default = B;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/UINum": "UINum",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../../bullet/FirePoint/FirePointEnemy": "FirePointEnemy",
        "../../collide/CircleColliderComp": "CircleColliderComp",
        "../../collide/RectColliderComp": "RectColliderComp",
        "../../enemy/EnemyAnimComp": "EnemyAnimComp",
        "../../enemy/move/EnemyMoveController": "EnemyMoveController",
        "../../manager/battle/BossManager": "BossManager",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/LootManager": "LootManager",
        "../../manager/battle/ShadowManager": "ShadowManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../BossBase": "BossBase"
    }],
    BossEntityTree: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2f925qLIJ1FG4n9ctWRLOCw", "BossEntityTree");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o, s = t("../../../../config/GameConfig"), c = t("../../../../config/GameConst"), l = t("../../../../config/GameEnum"), h = t("../../../../frame/manager/FrameManager"), u = t("../../../../frame/ui/FrameAnim"), p = t("../../../../util/Tools"), d = t("../../collide/CircleColliderComp"), f = t("../../collide/RectColliderComp"), m = t("../../manager/battle/BossManager"), g = t("../../manager/battle/EnemyManager"), _ = t("../../manager/battle/EntityManager"), y = t("../../manager/battle/LootManager"), v = t("../../manager/battle/MapManager"), b = t("../../manager/battle/SnakeManager"), M = t("../BossBase"), S = t("./BossTreeFist"), k = t("./BossTreeSunkens"), C = cc._decorator, w = C.ccclass, A = (C.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.radius = 0;
                    e.m_group = l.ColliderGroup.Enemy;
                    e.m_data = null;
                    e.m_spine = null;
                    e.m_spineBot = null;
                    e.m_fistArr = [];
                    e.m_sunkensArr = [];
                    e.m_effectSpine = null;
                    e.m_collideComp = null;
                    e.m_state = o.Node;
                    e.m_atkDuration = 0;
                    e.m_atkDurationRange = cc.Vec2.ZERO;
                    e.m_atkOrderArr = [];
                    e.m_atkRandomArr = [];
                    e.m_atkRandomWeight = 0;
                    e.m_curAtkData = null;
                    e.m_sunkensState = 0;
                    e.m_sunkensTime = 0;
                    e.m_sunkensWarn = null;
                    e.m_handTotal = 0;
                    e.m_handCount = 0;
                    e.m_dieFistNum = 0;
                    e.m_curHp = 0;
                    e.m_maxHp = 0;
                    e.m_hurtAnim = null;
                    e.m_hurtTween = null;
                    e.m_breathTime = 0;
                    return e;
                }
                e.prototype.create = function (t, e) {
                    this.m_data = t;
                    e && this.initStopLine(e);
                    this.initData();
                    this.initCollide();
                    this.initUI();
                    this.node.opacity = 0;
                    this.pushHurtAbleEntity(this);
                };
                e.prototype.updateLogic = function (t) {
                    if (!this.isDead) {
                        this.updateStateEffect(t);
                        this.updateState(t);
                        this.updateBreathe(t);
                    }
                };
                e.prototype.updateBreathe = function (t) {
                    this.m_breathTime -= t;
                    if (this.m_breathTime < 0) {
                        this.m_breathTime = p.DYTools.random_int(300, 500) / 100;
                        h.FrameMgr.audioMgr.playEffect("boss_tree_breathe_" + p.DYTools.random_int(1, 3));
                    }
                };
                e.prototype.startBattle = function () {
                    this.isActive = !0;
                    this.m_collideComp.enabled = !0;
                    this.setState(o.Idle);
                };
                e.prototype.startEnter = function (t, e) {
                    void 0 === t && (t = !1);
                    void 0 === e && (e = -1);
                    h.FrameMgr.audioMgr.playEffect("boss_tree_enter");
                    this.setState(o.Enter);
                    this.scheduleOnce(function () {
                        h.FrameMgr.noticeMgr.emit(l.EventTypeEnum.ScreenShake, {
                            level: 2
                        });
                        h.FrameMgr.noticeMgr.emit(l.EventTypeEnum.StopDropStone);
                        h.FrameMgr.noticeMgr.emit(l.EventTypeEnum.HideScreenRed);
                    }, .2);
                };
                e.prototype.setState = function (t) {
                    if (!this.isDead && this.m_state != t) {
                        this.m_state = t;
                        switch (this.m_state) {
                            case o.Enter:
                                this.node.opacity = 255;
                                this.m_spine.setAnimation(0, "enter", !1);
                                this.m_spineBot.setAnimation(0, "enter", !1);
                                break;

                            case o.Idle:
                                this.m_atkDuration = p.DYTools.random_int(10 * this.m_data.atkDuration.x, 10 * this.m_data.atkDuration.y) / 10;
                                this.m_spine.setAnimation(0, "idle", !0);
                                this.m_spineBot.setAnimation(0, "idle", !0);
                                break;

                            case o.Attack:
                        }
                    }
                };
                e.prototype.updateState = function (t) {
                    switch (this.m_state) {
                        case o.Enter:
                            break;

                        case o.Idle:
                            this.updateIdle(t);
                            break;

                        case o.Attack:
                            this.updateAttack(t);
                    }
                };
                e.prototype.initData = function () {
                    this.m_hurtOffsetY = this.m_data.hurtOffsetY;
                    this.radius = this.m_data.collideData[2];
                    this.preGiveGoldPercent = 100;
                    this.m_curHp = this.m_data.hp;
                    this.m_maxHp = this.m_data.hp;
                    this.m_atkDurationRange = this.m_data.atkDuration;
                    this.m_atkOrderArr = p.DYTools.copyArray(this.m_data.atkOrder);
                    this.m_atkRandomArr = p.DYTools.copyArray(this.m_data.atkRandom);
                    for (var t = 0; t < this.m_atkRandomArr.length; t++) this.m_atkRandomWeight += this.m_atkRandomArr[t].y;
                };
                e.prototype.initCollide = function () {
                    switch (this.m_data.collideType) {
                        case l.ColliderType.Circle:
                            this.m_collideComp = new d.default();
                            this.m_collideComp.init(this.m_data.collideData, this, this.node);
                            break;

                        case l.ColliderType.Rectangle:
                            this.m_collideComp = new f.default();
                            this.m_collideComp.init(this.m_data.collideData, this, this.node);
                    }
                };
                e.prototype.initUI = function () {
                    this._initBody();
                    this._initFist();
                    this._initSunkens();
                    this._initEffect();
                };
                e.prototype._initBody = function () {
                    var t = this, e = new cc.Node("bottom");
                    this.node.addChild(e);
                    this.m_spineBot = e.addComponent(sp.Skeleton);
                    this.m_spineBot.skeletonData = h.FrameMgr.loadMgr.get("spine_boss_tree_bottom", sp.SkeletonData);
                    this.m_spineBot.premultipliedAlpha = !1;
                    this.m_spineBot.setSkin("skin_1");
                    e = new cc.Node("body");
                    this.node.addChild(e);
                    this.m_spine = e.addComponent(sp.Skeleton);
                    this.m_spine.skeletonData = h.FrameMgr.loadMgr.get("spine_boss_tree_body", sp.SkeletonData);
                    this.m_spine.premultipliedAlpha = !1;
                    this.m_spine.setSkin("skin_1");
                    this.m_spine.setCompleteListener(function (e) {
                        switch (e.animation ? e.animation.name : "") {
                            case "enter":
                                t.scheduleOnce(function () {
                                    t.setState(o.Idle);
                                    h.FrameMgr.noticeMgr.emit(l.EventTypeEnum.BossEnterEnd, t.m_data.tip);
                                });
                                break;

                            case "die":
                                t.hideStopLine();
                                t.removeAble = !0;
                                break;

                            case "sunkens":
                                t.scheduleOnce(function () {
                                    t.m_spine.setAnimation(0, "idle", !0);
                                    t.m_spineBot.setAnimation(0, "idle", !0);
                                });
                                break;

                            case "left_hand":
                                t.scheduleOnce(function () {
                                    t.m_handCount < t.m_handTotal ? t.attackLeftHand() : t.attackOver();
                                });
                                break;

                            case "right_hand":
                                t.scheduleOnce(function () {
                                    t.m_handCount < t.m_handTotal ? t.attackRightHand() : t.attackOver();
                                });
                                break;

                            case "fist_start":
                                t.scheduleOnce(function () {
                                    t.m_spine.setAnimation(0, "fist_idle", !0);
                                    t.m_spineBot.setAnimation(0, "fist_idle", !0);
                                });
                                break;

                            case "fist_idle":
                                break;

                            case "fist_over":
                                t.scheduleOnce(function () {
                                    t.attackOver();
                                });
                        }
                    });
                    this.m_spine.setEventListener(function (e, i) {
                        switch (i.data.name) {
                            case "sunkens":
                                h.FrameMgr.audioMgr.playEffect("boss_tree_sunkens_shake");
                                t.sunkensFistAttack();
                                t.createSunkens();
                                t.m_sunkensWarn.active = !1;
                                h.FrameMgr.noticeMgr.emit(l.EventTypeEnum.ScreenShake, {
                                    level: 3
                                });
                                break;

                            case "za":
                                t.showFistWarn();
                        }
                    });
                    this.m_spine.setMix("enter", "idle", .5);
                    this.m_spine.setMix("sunkens", "idle", .5);
                    this.m_spine.setMix("left_hand", "idle", .5);
                    this.m_spine.setMix("right_hand", "idle", .5);
                    this.m_spine.setMix("fist_over", "idle", .5);
                    this.m_spine.setMix("idle", "fist_start", .5);
                    this.m_spine.setMix("idle", "left_hand", .5);
                    this.m_spine.setMix("idle", "right_hand", .5);
                    this.m_spine.setMix("idle", "sunkens", .5);
                };
                e.prototype._initFist = function () {
                    for (var t = this, e = 0; e < 2; e++) {
                        var i = new cc.Node("fist" + e), n = i.addComponent(S.default);
                        n.create(this, function () {
                            for (var e = !0, i = 0; i < t.m_fistArr.length; i++) t.m_fistArr[i].node.active && (e = !1);
                            if (e) {
                                t.m_spine.setAnimation(0, "fist_over", !1);
                                t.m_spineBot.setAnimation(0, "fist_over", !1);
                            }
                        });
                        i.parent = this.node.parent;
                        i.active = !1;
                        this.m_fistArr.push(n);
                    }
                };
                e.prototype._initSunkens = function () {
                    for (var t = 0; t < 3; t++) {
                        var e = this._createSunkens();
                        this.m_sunkensArr.push(e);
                    }
                    this.m_sunkensWarn = new cc.Node("sunkens_warn");
                    this.m_sunkensWarn.parent = v.MapMgr.wallLayer;
                    this.m_sunkensWarn.y = this.node.y - 350;
                    this.m_sunkensWarn.x = this.node.x;
                    this.m_sunkensWarn.active = !1;
                    var i = new cc.Node();
                    i.parent = this.m_sunkensWarn;
                    i.addComponent(cc.Sprite).spriteFrame = m.BossMgr.atlas.getSpriteFrame("warn1_1");
                    var n = new cc.Node();
                    n.anchorY = .955;
                    n.parent = this.m_sunkensWarn;
                    n.addComponent(cc.Sprite).spriteFrame = m.BossMgr.atlas.getSpriteFrame("warn1_2");
                };
                e.prototype._initEffect = function () {
                    var t = this, e = new cc.Node("sunkensEffect");
                    this.node.addChild(e);
                    this.m_effectSpine = e.addComponent(sp.Skeleton);
                    this.m_effectSpine.skeletonData = h.FrameMgr.loadMgr.get("spine_boss_tree_sunkens_effect", sp.SkeletonData);
                    this.m_effectSpine.premultipliedAlpha = !1;
                    this.m_effectSpine.setSkin("skin_1");
                    this.m_effectSpine.setCompleteListener(function () {
                        t.scheduleOnce(function () {
                            t.m_effectSpine.node.active = !1;
                        });
                    });
                    e.active = !1;
                    var i = cc.instantiate(c.GValue.pfFrameAnim);
                    i.name = "m_hurtAnim";
                    i.parent = this.node;
                    this.m_hurtAnim = i.getComponent(u.default);
                    this.m_hurtAnim.init(g.EnemyMgr.enemyEffectAtlas, g.EnemyMgr.hurtImage, g.EnemyMgr.hurtCount, s.GConfig.ActionInterval);
                };
                e.prototype._createSunkens = function () {
                    var t = new cc.Node("sunkens");
                    t.parent = _.EntityMgr.getPlayerLayer();
                    var e = t.addComponent(k.default);
                    e.create(this);
                    t.setSiblingIndex(0);
                    return e;
                };
                e.prototype.updateIdle = function (t) {
                    this.m_atkDuration -= t;
                    this.m_atkDuration < 0 && this.checkNextAttack();
                };
                e.prototype.updateAttack = function (t) {
                    if (this.m_curAtkData && this.m_curAtkData.type) switch (this.m_curAtkData.type) {
                        case 1:
                            this.updateSunkens(t);
                            break;

                        case 2:
                            this.updateLeftHand();
                            break;

                        case 3:
                            this.updateRightHand();
                            break;

                        case 4:
                            this.updateFist(t);
                    }
                };
                e.prototype.checkNextAttack = function () {
                    if (this.m_atkOrderArr.length > 0) {
                        var t = this.m_atkOrderArr.shift();
                        if (a = this.m_data.atkParam[t - 1]) this.executeAttack(a); else {
                            p.DYTools.error("树人boss顺序攻击失败", t, this.m_data.atkParam);
                            this.attackOver();
                        }
                    } else {
                        t = 0;
                        for (var e = p.DYTools.random_int(1, this.m_atkRandomWeight), i = 0, n = 0; n < this.m_atkRandomArr.length; n++) if (e <= (i += this.m_atkRandomArr[n].y)) {
                            t = this.m_atkRandomArr[n].x;
                            break;
                        }
                        var a;
                        if (a = this.m_data.atkParam[t - 1]) this.executeAttack(a); else {
                            p.DYTools.error("树人boss随机攻击失败");
                            this.attackOver();
                        }
                    }
                };
                e.prototype.executeAttack = function (t) {
                    this.m_curAtkData = t;
                    this.setState(o.Attack);
                    switch (this.m_curAtkData.type) {
                        case 1:
                            this.attackSunkens();
                            break;

                        case 2:
                            this.m_handCount = 0;
                            this.m_handTotal = p.DYTools.random_int(this.m_curAtkData.param[0][0], this.m_curAtkData.param[0][1]);
                            this.attackLeftHand();
                            break;

                        case 3:
                            this.m_handCount = 0;
                            this.m_handTotal = p.DYTools.random_int(this.m_curAtkData.param[0][0], this.m_curAtkData.param[0][1]);
                            this.attackRightHand();
                            break;

                        case 4:
                            this.attackFist();
                            break;

                        case 5:
                            break;

                        default:
                            p.DYTools.error("树人boss开始攻击技能错误", JSON.stringify(this.m_curAtkData));
                            this.attackOver();
                    }
                };
                e.prototype.attackOver = function () {
                    this.setState(o.Idle);
                    this.checkHpAtkLimit();
                };
                e.prototype.attackSunkens = function () {
                    this.m_sunkensState = 0;
                    this.m_spine.setAnimation(0, "sunkens", !1);
                    this.m_spineBot.setAnimation(0, "sunkens", !1);
                    this.m_effectSpine.node.active = !0;
                    this.m_effectSpine.setAnimation(0, "sunkens", !1);
                    this.showSunkensWarn();
                };
                e.prototype.sunkensFistAttack = function () {
                    var t = this.node.position.add(cc.v3(0, -300)), e = b.SnakeMgr.getPlayerPos();
                    p.DYTools.isNumberDiffRange(t.x, e.x, 200) && p.DYTools.isNumberDiffRange(t.y, e.y, 200) && t.sub(e).mag() <= 200 && b.SnakeMgr.snakeHurt(this.collideAtk);
                };
                e.prototype.showSunkensWarn = function () {
                    this.m_sunkensWarn.active = !0;
                };
                e.prototype.createSunkens = function () {
                    var t = this, e = this.m_curAtkData.param;
                    this.m_sunkensTime = e[0][0];
                    this.m_sunkensState = 1;
                    for (var i = function (i) {
                        var a = e[i], r = n.m_sunkensArr[i - 1];
                        if (!r) {
                            r = n._createSunkens();
                            n.m_sunkensArr.push(r);
                        }
                        r.init(a, function () {
                            1 == i && (t.m_sunkensState = 2);
                        });
                    }, n = this, a = 1; a < e.length; a++) i(a);
                };
                e.prototype.sunkensOver = function () {
                    var t = this;
                    this.m_sunkensState = 3;
                    this.scheduleOnce(function () {
                        h.FrameMgr.audioMgr.playEffect("boss_tree_sunkens_hide");
                        for (var e = 0; e < t.m_sunkensArr.length; e++) {
                            var i = t.m_sunkensArr[e];
                            i.node.active && (0 == e ? i.attackOver(function () {
                                t.attackOver();
                            }) : i.attackOver());
                        }
                    });
                };
                e.prototype.updateSunkens = function (t) {
                    for (var e = 0; e < this.m_sunkensArr.length; e++) {
                        var i = this.m_sunkensArr[e];
                        i.node.active && i.updateLogic(t);
                    }
                    if (2 == this.m_sunkensState) {
                        this.m_sunkensTime -= t;
                        this.m_sunkensTime < 0 && this.sunkensOver();
                    }
                };
                e.prototype.attackLeftHand = function () {
                    this.m_handCount++;
                    h.FrameMgr.audioMgr.playEffect("boss_tree_hand");
                    this.m_spine.setAnimation(0, "left_hand", !1);
                    this.m_spineBot.setAnimation(0, "left_hand", !1);
                };
                e.prototype.updateLeftHand = function () {
                    var t = !1, e = this.m_spine.findBone("b1");
                    if (e) {
                        var i = e.worldX + this.node.x, n = e.worldY + this.node.y;
                        t = b.SnakeMgr.isSnakeHeadInCircle(i, n, 100);
                    }
                    if (!t) {
                        var a = this.m_spine.findBone("b2");
                        if (a) {
                            i = a.worldX + this.node.x, n = a.worldY + this.node.y;
                            t = b.SnakeMgr.isSnakeHeadInCircle(i, n, 100);
                        }
                    }
                    t && b.SnakeMgr.snakeHurt(this.m_data.collideAtk);
                };
                e.prototype.attackRightHand = function () {
                    this.m_handCount++;
                    h.FrameMgr.audioMgr.playEffect("boss_tree_hand");
                    this.m_spine.setAnimation(0, "right_hand", !1);
                    this.m_spineBot.setAnimation(0, "right_hand", !1);
                };
                e.prototype.updateRightHand = function () {
                    var t = !1, e = this.m_spine.findBone("a1");
                    if (e) {
                        var i = e.worldX + this.node.x, n = e.worldY + this.node.y;
                        t = b.SnakeMgr.isSnakeHeadInCircle(i, n, 100);
                    }
                    if (!t) {
                        var a = this.m_spine.findBone("a2");
                        if (a) {
                            i = a.worldX + this.node.x, n = a.worldY + this.node.y;
                            t = b.SnakeMgr.isSnakeHeadInCircle(i, n, 100);
                        }
                    }
                    t && b.SnakeMgr.snakeHurt(this.m_data.collideAtk);
                };
                e.prototype.attackFist = function () {
                    this.m_spine.setAnimation(0, "fist_start", !1);
                    this.m_spineBot.setAnimation(0, "fist_start", !1);
                    for (var t = 0; t < this.m_curAtkData.param.length; t++) this.m_fistArr[t].init(this.m_data.hp, this.m_curAtkData.param[t], this.onFistDie.bind(this));
                };
                e.prototype.showFistWarn = function () {
                    for (var t = 0; t < this.m_curAtkData.param.length; t++) this.m_fistArr[t].showWarn();
                };
                e.prototype.onFistDie = function (t) {
                    for (var e in this.m_data.fistLoot) {
                        var i = parseInt(e), n = this.m_data.fistLoot[i][this.m_dieFistNum];
                        switch (i) {
                            case l.LootType.Snake:
                                y.LootMgr.addLoot(l.LootType.Snake, t.node.position, n);
                                break;

                            case l.LootType.Crazy:
                                p.DYTools.random_int(0, 99) < n && y.LootMgr.addLoot(l.LootType.Crazy, t.node.position);
                        }
                    }
                    this.m_dieFistNum++;
                };
                e.prototype.updateFist = function (t) {
                    for (var e = 0; e < this.m_fistArr.length; e++) this.m_fistArr[e].updateLogic(t);
                };
                e.prototype.onCollide = function (t, e) {
                    switch (t) {
                        case l.ContactType.Enter:
                            if (e && e.entity) switch (e.entity.group) {
                                case l.ColliderGroup.Player:
                                    var i = e.entity;
                                    if (i) {
                                        var n = i.getColliderAtk();
                                        this.hurt(n);
                                    }
                                    break;

                                case l.ColliderGroup.PlayerBullet:
                                    var a = e.entity;
                                    if (a) {
                                        n = a.getBulletAttack() || 1;
                                        this.playHurtAnim(e.entity.node.position.sub(this.node.position));
                                        this.hurt(n, !0);
                                    }
                            }
                    }
                };
                e.prototype.hurt = function (t, e, i) {
                    void 0 === e && (e = !1);
                    void 0 === i && (i = !1);
                    if (!c.GValue.enemyAtkAble) return 0;
                    var n = this.hpChange(-t);
                    this.showHurtNum(n, e, i);
                    return n;
                };
                e.prototype.hpChange = function (t) {
                    if (this.isDead) return 0;
                    this.m_curHp += t;
                    this.playHpact();
                    if (this.m_curHp <= 0) {
                        this.m_curHp = 0;
                        this.toDie();
                    }
                    t < 0 && this.cutHpEmitEvent(l.EventTypeEnum.BossCutHp);
                    return t;
                };
                e.prototype.playHpact = function () {
                    var t = this;
                    if (!this.m_hurtTween) {
                        var e = s.GConfig.ActionInterval;
                        this.m_hurtTween = cc.tween(this.m_spine.node).to(0, {
                            color: cc.color(255, 0, 0)
                        }).to(2 * e, {
                            color: cc.color(255, 106, 106)
                        }).to(2 * e, {
                            color: cc.color(255, 255, 255)
                        }).call(function () {
                            t.m_hurtTween = null;
                        }).start();
                    }
                };
                e.prototype.playHurtAnim = function (t) {
                    if (this.m_hurtAnim) {
                        this.m_hurtAnim.play(1);
                        this.m_hurtAnim.node.position = t;
                    }
                };
                e.prototype.checkHpAtkLimit = function () {
                    if (this.m_data.attackLimit.length > 1 && this.m_curHp / this.m_maxHp * 100 <= this.m_data.attackLimit[0]) {
                        for (var t = !1, e = 0; e < this.m_atkRandomArr.length; e++) if (this.m_atkRandomArr[e].x == this.m_data.attackLimit[1]) {
                            this.m_atkRandomArr.splice(e, 1);
                            e--;
                            t = !0;
                        }
                        if (t) {
                            this.m_atkRandomWeight = 0;
                            for (e = 0; e < this.m_atkRandomArr.length; e++) this.m_atkRandomWeight += this.m_atkRandomArr[e].y;
                        }
                        for (e = 0; e < this.m_atkOrderArr.length; e++) if (this.m_atkOrderArr[e] == this.m_data.attackLimit[1]) {
                            this.m_atkOrderArr.splice(e, 1);
                            e--;
                        }
                    }
                };
                e.prototype.onDie = function () {
                    var t = this;
                    h.FrameMgr.audioMgr.playEffect("boss_tree_die");
                    h.FrameMgr.noticeMgr.emit(l.EventTypeEnum.ScreenShake, {
                        level: 3,
                        time: 2
                    });
                    this.m_sunkensWarn.destroy();
                    this.m_sunkensWarn = null;
                    for (var e = 0; e < this.m_fistArr.length; e++) {
                        var i = this.m_fistArr[e];
                        i.node.active = !1;
                        i.hideWarn();
                    }
                    for (e = 0; e < this.m_sunkensArr.length; e++) this.m_sunkensArr[e].node.active = !1;
                    this.scheduleOnce(function () {
                        t.m_spine.setAnimation(0, "die", !1);
                        t.m_spineBot.setAnimation(0, "die", !1);
                        t.m_effectSpine.node.active = !0;
                        t.m_effectSpine.setAnimation(0, "die", !1);
                    });
                };
                e.prototype.getColliders = function () {
                    return this.m_collideComp;
                };
                Object.defineProperty(e.prototype, "collideAtk", {
                    get: function () {
                        return this.m_data.collideAtk;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getBossOtherEntity = function () {
                    for (var t = null, e = 0; e < this.m_fistArr.length; e++) {
                        var i = this.m_fistArr[e];
                        if (i.active) {
                            t || (t = []);
                            t.push(i);
                        }
                    }
                    return t;
                };
                Object.defineProperty(e.prototype, "maxHp", {
                    get: function () {
                        return this.m_maxHp;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "curHp", {
                    get: function () {
                        return this.m_curHp;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                return r([w], e);
            }(M.default));
        i.default = A;
        (function (t) {
            t[t.Node = 0] = "Node";
            t[t.Enter = 1] = "Enter";
            t[t.Idle = 2] = "Idle";
            t[t.Attack = 3] = "Attack";
        })(o || (o = {}));
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/Tools": "Tools",
        "../../collide/CircleColliderComp": "CircleColliderComp",
        "../../collide/RectColliderComp": "RectColliderComp",
        "../../manager/battle/BossManager": "BossManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/LootManager": "LootManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../BossBase": "BossBase",
        "./BossTreeFist": "BossTreeFist",
        "./BossTreeSunkens": "BossTreeSunkens"
    }],
    BossFireMeteor: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e285bw6ihNPD6COXI7uLDYw", "BossFireMeteor");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../config/GameEnum"), l = t("../../../../frame/manager/FrameManager"), h = t("../../../../frame/ui/FrameAnim"), u = t("../../manager/battle/EnemyManager"), p = t("../../manager/battle/EntityManager"), d = t("../../manager/battle/MapManager"), f = t("../../manager/battle/SnakeManager"), m = t("./BossEntityFire"), g = cc._decorator, _ = g.ccclass, y = (g.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_boss = null;
                    e.m_posEnd = null;
                    e.m_time = 0;
                    e.m_enemyCount = 0;
                    e.m_enemyId = 0;
                    e.m_hurt = 0;
                    e.m_radius = 0;
                    e.m_enemyScaleMin = 1;
                    e.m_enemyScaleMax = 1;
                    e.m_burningTime = 0;
                    e.m_burningRadius = 0;
                    e.m_speedX = 0;
                    e.m_speedY = 0;
                    e.m_fireAnim = null;
                    e.m_wraning = null;
                    e.m_atlas = null;
                    return e;
                }
                e.prototype.initData = function (t, e, i, n, a, r, o, s, c, l, h, u) {
                    this.m_boss = t;
                    this.m_posEnd = e;
                    this.m_time = n;
                    this.m_enemyCount = a;
                    this.m_enemyId = r;
                    this.m_hurt = o;
                    this.m_radius = s;
                    this.m_enemyScaleMin = c;
                    this.m_enemyScaleMax = l;
                    this.m_burningTime = h;
                    this.m_burningRadius = u;
                    this.m_atlas = t.m_atlas;
                    this.initSpeed(e, this.m_time);
                    this.createUI(i);
                };
                e.prototype.createUI = function (t) {
                    if (this.m_fireAnim) this.m_fireAnim.node.active = !0; else {
                        var e = cc.instantiate(s.GValue.pfFrameAnim);
                        this.m_fireAnim = e.getComponent(h.default);
                        this.m_fireAnim.node.setPosition(cc.Vec2.ZERO);
                        this.node.addChild(e);
                    }
                    this.m_fireAnim.init(this.m_atlas, "FireMeteor_", 1, o.GConfig.ActionInterval);
                    this.m_fireAnim.setAnchor(cc.v2(.5, 0));
                    this.m_fireAnim.play(0);
                    this.m_fireAnim.node.angle = t;
                    this.createWarning(this.m_posEnd);
                };
                e.prototype.initSpeed = function (t, e) {
                    var i = this.node.getPosition();
                    this.m_speedX = (t.x - i.x) / e;
                    this.m_speedY = (t.y - i.y) / e;
                };
                e.prototype.updateLogic = function (t) {
                    var e = this.node.getPosition(), i = !1, n = !1;
                    if (this.m_speedX > 0) {
                        e.x += this.m_speedX * t;
                        if (e.x > this.m_posEnd.x) {
                            e.x = this.m_posEnd.x;
                            i = !0;
                        }
                    } else if (this.m_speedX < 0) {
                        e.x += this.m_speedX * t;
                        if (e.x < this.m_posEnd.x) {
                            e.x = this.m_posEnd.x;
                            i = !0;
                        }
                    } else i = !0;
                    if (this.m_speedY > 0) {
                        e.y += this.m_speedY * t;
                        if (e.y > this.m_posEnd.y) {
                            e.y = this.m_posEnd.y;
                            n = !0;
                        }
                    } else if (this.m_speedY < 0) {
                        e.y += this.m_speedY * t;
                        if (e.y < this.m_posEnd.y) {
                            e.y = this.m_posEnd.y;
                            n = !0;
                        }
                    } else n = !0;
                    this.node.setPosition(e);
                    if (i && n) {
                        this.destroyWraning();
                        if (!this.m_boss.isDead) {
                            f.SnakeMgr.isSnakeHeadInCircle(e.x, e.y, this.m_radius) && f.SnakeMgr.snakeHurt(this.m_hurt);
                            for (var a = this.m_boss, r = function (t) {
                                var e = g.node.getPosition().add(g.getEnemyPos(t, g.m_enemyCount));
                                if (d.MapMgr.isInMap(e)) {
                                    var i = u.EnemyMgr.createNormalEnemy(g.m_enemyId), n = g.m_enemyScaleMin + (g.m_enemyScaleMax - g.m_enemyScaleMin) * Math.random();
                                    i.node.setPosition(e);
                                    i.init();
                                    i.setCallbackDie(function () {
                                        a && a.onEnemyDie(i);
                                    });
                                    u.EnemyMgr.extraEnemyCount += 1;
                                    i.nodeScale = .7 * n;
                                    var r = cc.scaleTo(.3, n), o = cc.callFunc(function () {
                                        i.nodeScale = n;
                                        i.startBattle();
                                    }), s = cc.sequence(r, o);
                                    i.node.runAction(s);
                                }
                            }, g = this, _ = 0; _ < this.m_enemyCount; _++) r(_);
                            l.FrameMgr.noticeMgr.emit(c.EventTypeEnum.ScreenShake, {
                                level: 2
                            });
                            if (d.MapMgr.isInMap(this.m_posEnd) && this.m_burningTime > 0 && this.m_burningRadius > 0) {
                                var y = cc.instantiate(s.GValue.pfFrameAnim), v = y.getComponent(h.default);
                                v.node.setPosition(this.m_posEnd.add(cc.v2(.5)));
                                p.EntityMgr.addShadow(y);
                                v.init(this.m_atlas, "FireMeteorBurning_", 10, 2 * o.GConfig.ActionInterval);
                                v.play(0);
                                y.scale = 1;
                                var b = new m.BossFireMeteorBurning();
                                b.nodeAnim = y;
                                b.pos = y.getPosition();
                                b.radius = this.m_burningRadius;
                                b.time = this.m_burningTime;
                                b.triggerTime = this.m_burningTime;
                                b.atk = this.m_hurt;
                                this.m_boss.addFireMeteorBurning(b);
                            }
                        }
                        var M = cc.instantiate(s.GValue.pfFrameAnim), S = M.getComponent(h.default);
                        S.node.setPosition(this.m_posEnd.add(cc.v2(0, 50)));
                        p.EntityMgr.addShadow(M);
                        S.init(this.m_atlas, "FireMeteorBomb_", 15, o.GConfig.ActionInterval);
                        S.setStopCall(function () {
                            S.destroy();
                        });
                        S.play(1);
                        M.scale = .75;
                        var k = new cc.Node();
                        k.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("FireMeteorGround");
                        p.EntityMgr.addShadow(k);
                        k.setPosition(this.m_posEnd);
                        var C = cc.delayTime(13 * o.GConfig.ActionInterval), w = cc.fadeOut(1), A = cc.destroySelf(), T = cc.sequence(C, w, A);
                        k.runAction(T);
                        this.m_boss && this.m_boss.removeFireMeteor(this);
                        this.m_fireAnim.node.active = !1;
                        var D = cc.delayTime(5), P = cc.destroySelf(), E = cc.sequence(D, P);
                        this.node.runAction(E);
                    }
                };
                e.prototype.createWarning = function (t) {
                    this.destroyWraning();
                    this.m_wraning = new cc.Node();
                    p.EntityMgr.addShadow(this.m_wraning);
                    var e = this.m_wraning.addComponent(sp.Skeleton);
                    e.skeletonData = l.FrameMgr.loadMgr.get("spine_enemy_warning", sp.SkeletonData);
                    e.premultipliedAlpha = !1;
                    e.setCompleteListener(function (t) {
                        var i = t.animation ? t.animation.name : "";
                        "idle" == i ? e.setAnimation(0, "play", !0) : "idle2" == i && e.setAnimation(0, "play2", !0);
                    });
                    this.m_wraning.active = !0;
                    this.m_wraning.opacity = 255;
                    this.m_wraning.setPosition(t);
                    e.setAnimation(0, "idle2", !1);
                };
                e.prototype.destroyWraning = function () {
                    if (this.m_wraning) {
                        var t = this.m_wraning.getComponent(sp.Skeleton);
                        t && (t.enabled = !1);
                        this.m_wraning.opacity = 0;
                        this.m_wraning.active = !1;
                        this.m_wraning.destroy();
                        this.m_wraning = null;
                    }
                };
                e.prototype.getEnemyPos = function (t, e) {
                    var i = cc.Vec2.ZERO;
                    if (1 == e) return i;
                    if (2 == e) {
                        if (0 == t) return cc.v2(-50, 0);
                        if (1 == t) return cc.v2(50, 0);
                    } else if (3 == e) {
                        if (0 == t) return cc.v2(0, 50);
                        if (1 == t) return cc.v2(-50, -50);
                        if (2 == t) return cc.v2(50, -50);
                    } else if (4 == e) {
                        if (0 == t) return cc.v2(-50, 50);
                        if (1 == t) return cc.v2(50, 50);
                        if (2 == t) return cc.v2(-50, -50);
                        if (3 == t) return cc.v2(50, -50);
                    } else if (5 == e) {
                        if (0 == t) return cc.v2(-50, 50);
                        if (1 == t) return cc.v2(50, 50);
                        if (2 == t) return cc.v2(-50, -50);
                        if (3 == t) return cc.v2(50, -50);
                        if (4 == t) return cc.v2(0, 0);
                    }
                    return i;
                };
                return r([_], e);
            }(cc.Component));
        i.default = y;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./BossEntityFire": "BossEntityFire"
    }],
    BossIcePillar: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "817c6/WUqBDQJEvL6OUuPVO", "BossIcePillar");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../frame/manager/FrameManager"), l = t("../../../../frame/ui/FrameAnim"), h = t("../../manager/battle/EnemyManager"), u = t("../../manager/battle/EntityManager"), p = t("../../manager/battle/MapManager"), d = t("../../manager/battle/SnakeManager"), f = t("../fire/BossEntityFire"), m = cc._decorator, g = m.ccclass, _ = (m.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_boss = null;
                    e.m_posEnd = null;
                    e.m_warningTime = 0;
                    e.m_enemyCount = 0;
                    e.m_enemyId = 0;
                    e.m_hurt = 0;
                    e.m_radius = 0;
                    e.m_enemyScaleMin = 1;
                    e.m_enemyScaleMax = 1;
                    e.m_burningTime = 0;
                    e.m_burningRadius = 0;
                    e.m_wraning = null;
                    e.m_atlas = null;
                    return e;
                }
                e.prototype.initData = function (t, e, i, n, a, r, o, s, c, l, h, u) {
                    this.m_boss = t;
                    this.m_posEnd = e;
                    this.m_warningTime = n;
                    this.m_enemyCount = a;
                    this.m_enemyId = r;
                    this.m_hurt = o;
                    this.m_radius = s;
                    this.m_enemyScaleMin = c;
                    this.m_enemyScaleMax = l;
                    this.m_burningTime = h;
                    this.m_burningRadius = u;
                    this.m_atlas = t.m_atlas;
                    this.createWarning(this.m_posEnd);
                };
                e.prototype.updateLogic = function (t) {
                    var e = this, i = this.node.getPosition();
                    this.m_warningTime -= t;
                    if (this.m_warningTime < 0) {
                        this.destroyWraning();
                        if (!this.m_boss.isDead) {
                            this.m_boss.keepFireMeteor();
                            d.SnakeMgr.isSnakeHeadInCircle(i.x, i.y, this.m_radius) && d.SnakeMgr.snakeHurt(this.m_hurt);
                            c.FrameMgr.audioMgr.playEffectForCD("boss_ice_pillar_show", .2);
                            var n = new cc.Node(), a = n.addComponent(cc.Sprite);
                            n.setPosition(this.m_posEnd.add(cc.v2(0, -20)));
                            u.EntityMgr.addEffect(n);
                            a.spriteFrame = this.m_atlas.getSpriteFrame("IcePillar");
                            n.setAnchorPoint(cc.v2(.5, 0));
                            n.scaleY = .5;
                            var r = cc.scaleTo(.2, 1, 1);
                            n.runAction(r);
                            var m = cc.instantiate(s.GValue.pfFrameAnim), g = m.getComponent(l.default);
                            g.node.setPosition(this.m_posEnd.add(cc.v2(0, -60)));
                            u.EntityMgr.addEffect(m);
                            g.init(this.m_atlas, "IcePillar_", 8, 2 * o.GConfig.ActionInterval);
                            g.setAnchor(cc.v2(.5, 0));
                            g.setStopCall(function () {
                                g.node.destroy();
                            });
                            g.play(1);
                            m.scale = 1;
                            var _ = new f.BossFireMeteorBurning();
                            _.nodeAnim = n;
                            _.pos = m.getPosition();
                            _.radius = this.m_burningRadius;
                            _.time = this.m_burningTime;
                            _.triggerTime = this.m_burningTime;
                            _.atk = this.m_hurt;
                            this.m_boss.addFireMeteorBurning(_);
                            _.callback = function () {
                                var t = cc.instantiate(s.GValue.pfFrameAnim), i = t.getComponent(l.default);
                                i.node.setPosition(e.m_posEnd.add(cc.v2(0, -60)));
                                u.EntityMgr.addEffect(t);
                                i.init(e.m_atlas, "IcePillarBroken_", 8, 2 * o.GConfig.ActionInterval);
                                i.setAnchor(cc.v2(.5, 0));
                                i.setStopCall(function () {
                                    i.node.destroy();
                                });
                                i.play(1);
                                var n = e.m_boss;
                                if (!n.isDead) for (var a = function (t) {
                                    var i = e.node.getPosition().add(e.getEnemyPos(t, e.m_enemyCount));
                                    if (p.MapMgr.isInMap(i)) {
                                        var a = h.EnemyMgr.createNormalEnemy(e.m_enemyId), r = e.m_enemyScaleMin + (e.m_enemyScaleMax - e.m_enemyScaleMin) * Math.random();
                                        a.node.setPosition(i);
                                        a.init();
                                        a.setCallbackDie(function () {
                                            n && n.onEnemyDie(a);
                                        });
                                        h.EnemyMgr.extraEnemyCount += 1;
                                        a.nodeScale = .7 * r;
                                        var o = cc.scaleTo(.3, r), s = cc.callFunc(function () {
                                            a.nodeScale = r;
                                            a.startBattle();
                                        }), c = cc.sequence(o, s);
                                        a.node.runAction(c);
                                    }
                                }, r = 0; r < e.m_enemyCount; r++) a(r);
                                e.node.destroy();
                                c.FrameMgr.audioMgr.playEffectForCD("boss_ice_pillar_broke", .2);
                            };
                        }
                        this.m_boss && this.m_boss.removeFireMeteor(this);
                    }
                };
                e.prototype.createWarning = function (t) {
                    this.destroyWraning();
                    this.m_wraning = new cc.Node();
                    u.EntityMgr.addShadow(this.m_wraning);
                    var e = this.m_wraning.addComponent(sp.Skeleton);
                    e.skeletonData = c.FrameMgr.loadMgr.get("spine_enemy_warning", sp.SkeletonData);
                    e.premultipliedAlpha = !1;
                    e.setCompleteListener(function (t) {
                        var i = t.animation ? t.animation.name : "";
                        "idle" == i ? e.setAnimation(0, "play", !0) : "idle2" == i && e.setAnimation(0, "play2", !0);
                    });
                    this.m_wraning.active = !0;
                    this.m_wraning.opacity = 255;
                    this.m_wraning.setPosition(t);
                    e.setAnimation(0, "idle2", !1);
                };
                e.prototype.destroyWraning = function () {
                    if (this.m_wraning) {
                        var t = this.m_wraning.getComponent(sp.Skeleton);
                        t && (t.enabled = !1);
                        this.m_wraning.opacity = 0;
                        this.m_wraning.active = !1;
                        this.m_wraning.destroy();
                        this.m_wraning = null;
                    }
                };
                e.prototype.getEnemyPos = function (t, e) {
                    var i = cc.Vec2.ZERO;
                    if (1 == e) return i;
                    if (2 == e) {
                        if (0 == t) return cc.v2(-50, 0);
                        if (1 == t) return cc.v2(50, 0);
                    } else if (3 == e) {
                        if (0 == t) return cc.v2(0, 50);
                        if (1 == t) return cc.v2(-50, -50);
                        if (2 == t) return cc.v2(50, -50);
                    } else if (4 == e) {
                        if (0 == t) return cc.v2(-50, 50);
                        if (1 == t) return cc.v2(50, 50);
                        if (2 == t) return cc.v2(-50, -50);
                        if (3 == t) return cc.v2(50, -50);
                    } else if (5 == e) {
                        if (0 == t) return cc.v2(-50, 50);
                        if (1 == t) return cc.v2(50, 50);
                        if (2 == t) return cc.v2(-50, -50);
                        if (3 == t) return cc.v2(50, -50);
                        if (4 == t) return cc.v2(0, 0);
                    }
                    return i;
                };
                return r([g], e);
            }(cc.Component));
        i.default = _;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../fire/BossEntityFire": "BossEntityFire"
    }],
    BossLaser: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "166a9Eeyt1E3JbpZhHcjoJF", "BossLaser");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o, s, c = t("../../../config/GameConfig"), l = t("../../../config/GameConst"), h = t("../../../config/GameEnum"), u = t("../../../frame/manager/FrameManager"), p = t("../../../frame/ui/FrameAnim"), d = t("../../../util/Tools"), f = t("../manager/battle/EntityManager"), m = t("../manager/battle/SnakeManager"), g = cc._decorator, _ = g.ccclass, y = (g.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_boss = null;
                    e.m_laser_type = o.SnakeFollow;
                    e.m_laser_readyTime = 0;
                    e.m_laser_curReadyTime = 0;
                    e.m_laser_groundTime = 0;
                    e.m_laser_dropDisTime = 0;
                    e.m_laser_dropHurtRadius = 0;
                    e.m_laser_curDropDisTime = 0;
                    e.m_laser_Dropatk = 0;
                    e.m_laser_pauseTime = 0;
                    e.m_laser_curPauseTime = 0;
                    e.m_laser_times = 0;
                    e.m_laser_curTimes = 0;
                    e.m_laser_return = !1;
                    e.m_laser_curReturn = !1;
                    e.m_laser_atk = 0;
                    e.m_laser1_speed = 0;
                    e.m_laser1_lastTime = 0;
                    e.m_laser1_startOffsetX = 0;
                    e.m_laser1_startOffsetY = 0;
                    e.m_laser1_curLastTime = 0;
                    e.m_laser2_speed = 0;
                    e.m_laser2_startOffsetX = 0;
                    e.m_laser2_startOffsetY = 0;
                    e.m_laser2_endOffsetX = 0;
                    e.m_laser2_endOffsetY = 0;
                    e.m_laser3_radius = 0;
                    e.m_laser3_speedAngle = 0;
                    e.m_laser3_startAngle = 0;
                    e.m_laser3_endAngle = 0;
                    e.m_laser3_curAngle = 0;
                    e.m_laser12_speed = 0;
                    e.m_laser12_startOffsetX = 0;
                    e.m_laser12_startOffsetY = 0;
                    e.m_laser12_endOffsetX = 0;
                    e.m_laser12_endOffsetY = 0;
                    e.m_laser13_radius = 0;
                    e.m_laser13_speedAngle = 0;
                    e.m_laser13_startAngle = 0;
                    e.m_laser13_endAngle = 0;
                    e.m_laser13_curAngle = 0;
                    e.m_laser_state = s.Ready;
                    e.m_laser_fromEffect = null;
                    e.m_laser_toEffect = null;
                    e.m_laser_line = null;
                    e.m_laser_targetCenterPos = cc.Vec2.ZERO;
                    e.m_laser_fromPos = cc.Vec2.ZERO;
                    e.m_laser_toPos = cc.Vec2.ZERO;
                    e.m_atlas = null;
                    e.m_audioId_laser = -1;
                    e.m_audio_name_laser = "boss_hand_laser";
                    e.m_laser_LineImgCount = 2;
                    e.m_laser_StartImgCount = 0;
                    e.m_laser_EndImgCount = 4;
                    e.m_laser_scalex = 1;
                    e.m_laser_startScale = 1;
                    e.m_laser_endScale = 1;
                    return e;
                }
                e.prototype.initLaser = function (t, e, i) {
                    this.m_boss = t;
                    this.m_atlas = e;
                    this.m_laser_state = s.Ready;
                    this.createLaser();
                    this.setLaserShow(!1);
                    this.m_laser_type = i[0];
                    switch (this.m_laser_type) {
                        case o.SnakeFollow:
                            this.m_laser_readyTime = i[1];
                            this.m_laser1_speed = i[2];
                            this.m_laser1_lastTime = i[3];
                            this.m_laser1_startOffsetX = i[4];
                            this.m_laser1_startOffsetY = i[5];
                            this.m_laser_groundTime = i[6];
                            this.m_laser_dropDisTime = i[7];
                            this.m_laser_dropHurtRadius = i[8];
                            this.m_laser_Dropatk = i[9];
                            this.m_laser_pauseTime = i[10];
                            this.m_laser_times = i[11];
                            this.m_laser_atk = i[12];
                            this.m_laser1_curLastTime = 0;
                            break;

                        case o.SnakeLine:
                            this.m_laser_readyTime = i[1];
                            this.m_laser2_speed = i[2];
                            this.m_laser2_startOffsetX = i[3];
                            this.m_laser2_startOffsetY = i[4];
                            this.m_laser2_endOffsetX = i[5];
                            this.m_laser2_endOffsetY = i[6];
                            this.m_laser_groundTime = i[7];
                            this.m_laser_dropDisTime = i[8];
                            this.m_laser_dropHurtRadius = i[9];
                            this.m_laser_Dropatk = i[10];
                            this.m_laser_return = 1 == i[11];
                            this.m_laser_pauseTime = i[12];
                            this.m_laser_times = i[13];
                            this.m_laser_atk = i[13];
                            break;

                        case o.SnakeCircle:
                            this.m_laser_readyTime = i[1];
                            this.m_laser3_radius = i[2];
                            this.m_laser3_speedAngle = i[3];
                            this.m_laser3_startAngle = i[4] + 90;
                            this.m_laser3_endAngle = i[5] + 90;
                            this.m_laser_groundTime = i[6];
                            this.m_laser_dropDisTime = i[7];
                            this.m_laser_dropHurtRadius = i[8];
                            this.m_laser_Dropatk = i[9];
                            this.m_laser_return = 1 == i[10];
                            this.m_laser_pauseTime = i[11];
                            this.m_laser_times = i[12];
                            this.m_laser_atk = i[13];
                            this.m_laser3_curAngle = 0;
                            break;

                        case o.BossLine:
                            this.m_laser_readyTime = i[1];
                            this.m_laser12_speed = i[2];
                            this.m_laser12_startOffsetX = i[3];
                            this.m_laser12_startOffsetY = i[4];
                            this.m_laser12_endOffsetX = i[5];
                            this.m_laser12_endOffsetY = i[6];
                            this.m_laser_groundTime = i[7];
                            this.m_laser_dropDisTime = i[8];
                            this.m_laser_dropHurtRadius = i[9];
                            this.m_laser_Dropatk = i[10];
                            this.m_laser_return = 1 == i[11];
                            this.m_laser_pauseTime = i[12];
                            this.m_laser_times = i[13];
                            this.m_laser_atk = i[14];
                            break;

                        case o.BossCircle:
                            this.m_laser_readyTime = i[1];
                            this.m_laser13_radius = i[2];
                            this.m_laser13_speedAngle = i[3];
                            this.m_laser13_startAngle = i[4] + 90;
                            this.m_laser13_endAngle = i[5] + 90;
                            this.m_laser_groundTime = i[6];
                            this.m_laser_dropDisTime = i[7];
                            this.m_laser_dropHurtRadius = i[8];
                            this.m_laser_Dropatk = i[9];
                            this.m_laser_return = 1 == i[10];
                            this.m_laser_pauseTime = i[11];
                            this.m_laser_times = i[12];
                            this.m_laser_atk = i[13];
                            this.m_laser13_curAngle = 0;
                    }
                    this.m_laser_curReadyTime = 0;
                    this.m_laser_curDropDisTime = 0;
                    this.m_laser_curPauseTime = 0;
                    this.m_laser_curTimes = 0;
                    this.m_laser_curReturn = !1;
                    if (!this.m_laser_times) {
                        this.m_laser_pauseTime = 0;
                        this.m_laser_times = 0;
                    }
                    this.m_laser_pauseTime || (this.m_laser_pauseTime = 0);
                };
                e.prototype.initImgCount = function (t, e, i, n, a, r) {
                    this.m_laser_LineImgCount = t;
                    this.m_laser_StartImgCount = e;
                    this.m_laser_EndImgCount = i;
                    this.m_laser_scalex = n;
                    this.m_laser_startScale = a;
                    this.m_laser_endScale = r;
                };
                e.prototype.updateLaser = function (t) {
                    switch (this.m_laser_state) {
                        case s.Ready:
                            this.adjustLaserReady(t);
                            break;

                        case s.Shoot:
                            this.adjustLaserShoot(t);
                            break;

                        case s.Wait:
                            this.adjustWait(t);
                            break;

                        case s.End:
                    }
                };
                e.prototype.getState = function () {
                    return this.m_laser_state;
                };
                e.prototype.isShoot = function () {
                    return this.m_laser_state == s.Shoot;
                };
                e.prototype.isWait = function () {
                    return this.m_laser_state == s.Wait;
                };
                e.prototype.isEnd = function () {
                    return this.m_laser_state == s.End;
                };
                e.prototype.adjustLaserReady = function (t) {
                    this.m_laser_curReadyTime += t;
                    if (this.m_laser_curReadyTime >= this.m_laser_readyTime) {
                        this.m_laser_state = s.Shoot;
                        this.m_laser_fromPos = this.getLaserFromPos();
                        this.m_laser_toPos = this.getLaserToPosStart();
                        this.setLaserPos(this.m_laser_fromPos, this.m_laser_toPos);
                        this.setLaserShow(!0);
                        this.m_audioId_laser = u.FrameMgr.audioMgr.playEffectSync(this.m_audio_name_laser, !0);
                    }
                };
                e.prototype.adjustLaserShoot = function (t) {
                    switch (this.m_laser_type) {
                        case o.SnakeFollow:
                            this.m_laser1_curLastTime += t;
                            if (this.m_laser1_curLastTime >= this.m_laser1_lastTime) {
                                this.laserWait();
                                this.m_laser1_curLastTime = 0;
                            } else {
                                var e = this.m_laser1_speed * t;
                                this.m_laser_fromPos = this.getLaserFromPos();
                                var i = m.SnakeMgr.getSnakeHead().node.getPosition();
                                if (cc.Vec2.distance(i, this.m_laser_toPos) <= e) this.m_laser_toPos = i; else {
                                    var n = i.sub(this.m_laser_toPos).normalize();
                                    this.m_laser_toPos.x += e * n.x;
                                    this.m_laser_toPos.y += e * n.y;
                                }
                                this.setLaserPos(this.m_laser_fromPos, this.m_laser_toPos);
                            }
                            break;

                        case o.SnakeLine:
                            e = this.m_laser2_speed * t;
                            this.m_laser_fromPos = this.getLaserFromPos();
                            var a = !1;
                            i = cc.v2(this.m_laser2_endOffsetX, this.m_laser2_endOffsetY).add(this.m_laser_targetCenterPos);
                            if (cc.Vec2.distance(i, this.m_laser_toPos) <= e) {
                                this.m_laser_toPos = i;
                                a = !0;
                            } else {
                                n = i.sub(this.m_laser_toPos).normalize();
                                this.m_laser_toPos.x += e * n.x;
                                this.m_laser_toPos.y += e * n.y;
                            }
                            this.setLaserPos(this.m_laser_fromPos, this.m_laser_toPos);
                            if (a) if (this.m_laser_return) {
                                this.m_laser_targetCenterPos = i.clone();
                                this.m_laser2_endOffsetX *= -1;
                                this.m_laser2_endOffsetY *= -1;
                                this.m_laser_curReturn && this.laserWait();
                                this.m_laser_curReturn = !this.m_laser_curReturn;
                            } else this.laserWait();
                            break;

                        case o.SnakeCircle:
                            var r = this.m_laser3_speedAngle * t;
                            this.m_laser_fromPos = this.getLaserFromPos();
                            a = !1;
                            var s = this.m_laser3_endAngle;
                            if (this.m_laser3_curAngle < s) {
                                this.m_laser3_curAngle += Math.abs(r);
                                if (this.m_laser3_curAngle >= s) {
                                    this.m_laser3_curAngle = s;
                                    a = !0;
                                }
                            } else {
                                this.m_laser3_curAngle -= Math.abs(r);
                                if (this.m_laser3_curAngle <= s) {
                                    this.m_laser3_curAngle = s;
                                    a = !0;
                                }
                            }
                            this.m_laser_toPos = this.getLaserCircleOffset(this.m_laser3_curAngle, this.m_laser3_radius, this.m_laser_targetCenterPos);
                            this.setLaserPos(this.m_laser_fromPos, this.m_laser_toPos);
                            if (a) if (this.m_laser_return) {
                                var c = this.m_laser3_endAngle;
                                this.m_laser3_endAngle = this.m_laser3_startAngle;
                                this.m_laser3_startAngle = c;
                                this.m_laser_curReturn && this.laserWait();
                                this.m_laser_curReturn = !this.m_laser_curReturn;
                            } else this.laserWait();
                            break;

                        case o.BossLine:
                            e = this.m_laser12_speed * t;
                            this.m_laser_fromPos = this.getLaserFromPos();
                            a = !1, i = cc.v2(this.m_laser12_endOffsetX, this.m_laser12_endOffsetY).add(this.m_laser_targetCenterPos);
                            if (cc.Vec2.distance(i, this.m_laser_toPos) <= e) {
                                this.m_laser_toPos = i;
                                a = !0;
                            } else {
                                n = i.sub(this.m_laser_toPos).normalize();
                                this.m_laser_toPos.x += e * n.x;
                                this.m_laser_toPos.y += e * n.y;
                            }
                            this.setLaserPos(this.m_laser_fromPos, this.m_laser_toPos);
                            if (a) if (this.m_laser_return) {
                                this.m_laser_targetCenterPos = i;
                                this.m_laser12_endOffsetX *= -1;
                                this.m_laser12_endOffsetY *= -1;
                                this.m_laser_curReturn && this.laserWait();
                                this.m_laser_curReturn = !this.m_laser_curReturn;
                            } else this.laserWait();
                            break;

                        case o.BossCircle:
                            r = this.m_laser13_speedAngle * t;
                            this.m_laser_fromPos = this.getLaserFromPos();
                            a = !1, s = this.m_laser13_endAngle;
                            if (this.m_laser13_curAngle < s) {
                                this.m_laser13_curAngle += Math.abs(r);
                                if (this.m_laser13_curAngle >= s) {
                                    this.m_laser13_curAngle = s;
                                    a = !0;
                                }
                            } else {
                                this.m_laser13_curAngle -= Math.abs(r);
                                if (this.m_laser13_curAngle <= s) {
                                    this.m_laser13_curAngle = s;
                                    a = !0;
                                }
                            }
                            this.m_laser_toPos = this.getLaserCircleOffset(this.m_laser13_curAngle, this.m_laser13_radius, this.m_laser_targetCenterPos);
                            this.setLaserPos(this.m_laser_fromPos, this.m_laser_toPos);
                            if (a) if (this.m_laser_return) {
                                c = this.m_laser13_endAngle;
                                this.m_laser13_endAngle = this.m_laser13_startAngle;
                                this.m_laser13_startAngle = c;
                                this.m_laser_curReturn && this.laserWait();
                                this.m_laser_curReturn = !this.m_laser_curReturn;
                            } else this.laserWait();
                    }
                    this.checkDropLaserGround(t);
                    this.checkLaserHurt();
                };
                e.prototype.adjustWait = function (t) {
                    this.m_laser_curPauseTime += t;
                    if (this.m_laser_curPauseTime >= this.m_laser_pauseTime) {
                        this.m_laser_state = s.Shoot;
                        this.m_laser_fromPos = this.getLaserFromPos();
                        this.m_laser_toPos = this.getLaserToPosStart();
                        this.setLaserPos(this.m_laser_fromPos, this.m_laser_toPos);
                        this.setLaserShow(!0);
                        this.m_audioId_laser = u.FrameMgr.audioMgr.playEffectSync(this.m_audio_name_laser, !0);
                    }
                };
                e.prototype.getLaserCircleOffset = function (t, e, i) {
                    var n = cc.Vec2.ZERO, a = t / 360 * 2 * Math.PI;
                    n.x = i.x + e * Math.cos(a);
                    n.y = i.y + e * Math.sin(a);
                    return n;
                };
                e.prototype.laserWait = function () {
                    this.m_laser_state = s.Wait;
                    this.m_laser_curPauseTime = 0;
                    this.setLaserShow(!1);
                    this.m_laser_curTimes += 1;
                    this.m_laser_curTimes >= this.m_laser_times && this.laserEnd();
                    u.FrameMgr.audioMgr.stopEffect(this.m_audioId_laser);
                };
                e.prototype.laserEnd = function () {
                    this.m_laser_state = s.End;
                    this.setLaserShow(!1);
                    this.m_boss.removeLaser(this);
                    u.FrameMgr.audioMgr.stopEffect(this.m_audioId_laser);
                };
                e.prototype.getLaserToPosStart = function () {
                    var t = cc.Vec2.ZERO;
                    switch (this.m_laser_type) {
                        case o.SnakeFollow:
                            var e = m.SnakeMgr.getSnakeHead().node.getPosition();
                            this.m_laser_targetCenterPos = e.add(cc.v2(this.m_laser1_startOffsetX, this.m_laser1_startOffsetY));
                            t = this.m_laser_targetCenterPos.clone();
                            break;

                        case o.SnakeLine:
                            e = m.SnakeMgr.getSnakeHead().node.getPosition();
                            this.m_laser_targetCenterPos = e.add(cc.v2(this.m_laser2_startOffsetX, this.m_laser2_startOffsetY));
                            t = this.m_laser_targetCenterPos.clone();
                            break;

                        case o.SnakeCircle:
                            this.m_laser_targetCenterPos = m.SnakeMgr.getSnakeHead().node.getPosition();
                            this.m_laser3_curAngle = this.m_laser3_startAngle;
                            t = this.getLaserCircleOffset(this.m_laser3_curAngle, this.m_laser3_radius, this.m_laser_targetCenterPos);
                            break;

                        case o.BossLine:
                            e = this.getLaserFromPos();
                            this.m_laser_targetCenterPos = e.add(cc.v2(this.m_laser12_startOffsetX, this.m_laser12_startOffsetY));
                            t = this.m_laser_targetCenterPos.clone();
                            break;

                        case o.BossCircle:
                            this.m_laser_targetCenterPos = this.getLaserFromPos();
                            this.m_laser13_curAngle = this.m_laser13_startAngle;
                            t = this.getLaserCircleOffset(this.m_laser13_curAngle, this.m_laser13_radius, this.m_laser_targetCenterPos);
                    }
                    return t;
                };
                e.prototype.getLaserFromPos = function () {
                    return f.EntityMgr.getEffectLayer().convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(cc.v2(0, 0)));
                };
                e.prototype.setLaserPos = function (t, e) {
                    if (this.m_laser_line) {
                        this.m_laser_line.setPosition(t);
                        var i = this.m_laser_line.getComponent(p.default);
                        i.sHeight = cc.Vec2.distance(t, e);
                        this.m_laser_line.height = i.sHeight;
                        var n = cc.v2(0, 1), a = e.sub(t), r = cc.v2(a).signAngle(n), o = -cc.misc.radiansToDegrees(r);
                        this.m_laser_line.angle = o;
                    }
                    if (this.m_laser_fromEffect) {
                        this.m_laser_fromEffect.setPosition(t);
                        if (this.m_boss.getBossType() == h.BossType.Ice) {
                            this.m_laser_fromEffect.angle = this.m_laser_line.angle + 180;
                            this.m_laser_fromEffect.setAnchorPoint(cc.v2(.5, .65));
                        }
                    }
                    if (this.m_laser_toEffect) {
                        this.m_laser_toEffect.setPosition(e);
                        this.m_boss.getBossType() == h.BossType.Ice && (this.m_laser_toEffect.angle = this.m_laser_line.angle + 180);
                    }
                };
                e.prototype.setLaserShow = function (t) {
                    this.m_laser_fromEffect && (this.m_laser_fromEffect.active = t);
                    if (this.m_laser_toEffect) {
                        this.m_laser_toEffect.active = t;
                        if (t) {
                            this.m_laser_toEffect.scale = 0;
                            var e = cc.scaleTo(5 * c.GConfig.ActionInterval, 1);
                            this.m_laser_toEffect.runAction(e);
                        }
                    }
                    this.m_laser_line && (this.m_laser_line.active = t);
                };
                e.prototype.createLaser = function () {
                    if (!this.m_laser_line) {
                        this.m_laser_line = cc.instantiate(l.GValue.pfFrameAnim);
                        var t = this.m_laser_line.getComponent(p.default);
                        f.EntityMgr.getEffectLayer().addChild(this.m_laser_line);
                        t.init(this.m_atlas, "Laser_", this.m_laser_LineImgCount, c.GConfig.ActionInterval);
                        t.setDstBlendFactorMode1();
                        t.play(0);
                        t.setAnchor(cc.v2(.5, 0));
                        t.sWidth = t.getSpSize0().width * this.m_laser_scalex;
                    }
                    if (!this.m_laser_fromEffect) {
                        this.m_laser_fromEffect = cc.instantiate(l.GValue.pfFrameAnim);
                        f.EntityMgr.getEffectLayer().addChild(this.m_laser_fromEffect);
                        if (this.m_laser_StartImgCount > 0) {
                            (t = this.m_laser_fromEffect.getComponent(p.default)).init(this.m_atlas, "LaserStart_", this.m_laser_StartImgCount, c.GConfig.ActionInterval);
                            t.setAnchor(cc.v2(.5, .5));
                            t.setDstBlendFactorMode1();
                            t.play(0);
                            t.sWidth = t.getSpSize0().width * this.m_laser_startScale;
                            t.sHeight = t.getSpSize0().height * this.m_laser_startScale;
                        }
                    }
                    if (!this.m_laser_toEffect) {
                        this.m_laser_toEffect = cc.instantiate(l.GValue.pfFrameAnim);
                        f.EntityMgr.getEffectLayer().addChild(this.m_laser_toEffect);
                        if (this.m_laser_EndImgCount > 0) {
                            (t = this.m_laser_toEffect.getComponent(p.default)).init(this.m_atlas, "LaserEnd_", this.m_laser_EndImgCount, c.GConfig.ActionInterval);
                            t.setAnchor(cc.v2(.5, .4));
                            t.setDstBlendFactorMode1();
                            t.play(0);
                            t.sWidth = t.getSpSize0().width * this.m_laser_endScale;
                            t.sHeight = t.getSpSize0().height * this.m_laser_endScale;
                        }
                    }
                };
                e.prototype.checkDropLaserGround = function (t) {
                    if (!(this.m_laser_dropDisTime <= 0)) {
                        this.m_laser_curDropDisTime += t;
                        if (this.m_laser_curDropDisTime >= this.m_laser_dropDisTime) {
                            this.m_laser_curDropDisTime = 0;
                            this.dropLaserGround(this.m_laser_toPos);
                        }
                    }
                };
                e.prototype.checkLaserHurt = function () {
                    if (m.SnakeMgr.getSnakeHead().getColliders() && this.m_laser_atk && !(this.m_laser_atk <= 0)) {
                        var t = m.SnakeMgr.getSnakeHead().node.getPosition(), e = m.SnakeMgr.getSnakeHead().getColliders().radius, i = this.m_laser_line.getContentSize(), n = this.m_laser_line.angle, a = this.m_laser_fromPos, r = this.m_laser_toPos, o = a, s = cc.Vec2.distance(a, r);
                        if (s > 0) {
                            var c = i.height / s;
                            o.x = a.x + .5 * c * (r.x - a.x);
                            o.y = a.y + .5 * c * (r.y - a.y);
                        }
                        d.DYTools.checkCircleRotateRect(t, e, o, i, n) && m.SnakeMgr.getSnakeHead().hurt(this.m_laser_atk);
                    }
                };
                e.prototype.dropLaserGround = function (t) {
                    var e = this;
                    if (!(this.m_laser_groundTime <= 0)) {
                        var i = cc.instantiate(l.GValue.pfFrameAnim), n = i.getComponent(p.default);
                        i.parent = f.EntityMgr.getEnemyLayer();
                        i.setPosition(t);
                        n.init(this.m_atlas, "LaserGround_", 7, 3 * c.GConfig.ActionInterval);
                        i.setAnchorPoint(.5, .3);
                        n.play(0);
                        i.scale = .7;
                        var a = new cc.Node();
                        a.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("LaserGround");
                        f.EntityMgr.addShadow(a);
                        a.setPosition(i.getPosition().add(cc.v2(0, -15)));
                        a.scale = .7;
                        for (var r = this.m_laser_dropHurtRadius, o = this.m_laser_groundTime, s = Math.ceil(o / .2), h = [], u = 0; u < s; u++) {
                            h.push(cc.delayTime(.2));
                            h.push(cc.callFunc(function () {
                                m.SnakeMgr.isSnakeHeadInCircle(i.x, i.y, r) && m.SnakeMgr.snakeHurt(e.m_laser_Dropatk);
                            }));
                        }
                        h.push(cc.callFunc(function () {
                            a.runAction(cc.sequence(cc.fadeOut(.4), cc.destroySelf()));
                        }));
                        h.push(cc.fadeOut(.4));
                        h.push(cc.destroySelf());
                        var d = cc.sequence(h);
                        i.runAction(d);
                    }
                };
                e.prototype.destroyLaser = function () {
                    this.m_laser_fromEffect && this.m_laser_fromEffect.destroy();
                    this.m_laser_toEffect && this.m_laser_toEffect.destroy();
                    this.m_laser_line && this.m_laser_line.destroy();
                    u.FrameMgr.audioMgr.stopEffect(this.m_audioId_laser);
                };
                e.prototype.getRotateAngle = function () {
                    var t = this.m_laser_fromPos.clone(), e = this.m_laser_toPos.clone(), i = cc.v2(0, 1), n = e.sub(t), a = cc.v2(n).signAngle(i);
                    return 180 - cc.misc.radiansToDegrees(a);
                };
                e.prototype.setAudioName = function (t) {
                    this.m_audio_name_laser = t;
                };
                return r([_], e);
            }(cc.Component));
        i.default = y;
        (function (t) {
            t[t.SnakeFollow = 1] = "SnakeFollow";
            t[t.SnakeLine = 2] = "SnakeLine";
            t[t.SnakeCircle = 3] = "SnakeCircle";
            t[t.BossLine = 12] = "BossLine";
            t[t.BossCircle = 13] = "BossCircle";
        })(o || (o = {}));
        (function (t) {
            t[t.Ready = 1] = "Ready";
            t[t.Shoot = 2] = "Shoot";
            t[t.Wait = 3] = "Wait";
            t[t.End = 4] = "End";
        })(s || (s = {}));
        cc._RF.pop();
    }, {
        "../../../config/GameConfig": "GameConfig",
        "../../../config/GameConst": "GameConst",
        "../../../config/GameEnum": "GameEnum",
        "../../../frame/manager/FrameManager": "FrameManager",
        "../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../util/Tools": "Tools",
        "../manager/battle/EntityManager": "EntityManager",
        "../manager/battle/SnakeManager": "SnakeManager"
    }],
    BossManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "52c52LWivtAcIjGq9/6AWGI", "BossManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.BossMgr = void 0;
        var r = t("../../../../config/GameConst"), o = t("../../../../config/GameEnum"), s = t("../../../../data/config/ConfigBossData"), c = t("../../../../data/config/ConfigBossFuncData"), l = t("../../../../data/game/FireBulletData"), h = t("../../../../data/manager/ConfigDataManager"), u = t("../../../../frame/manager/BattleFlowManager"), p = t("../../../../frame/manager/FrameManager"), d = t("../../../../util/Tools"), f = t("./BattleManager"), m = t("./EnemyManager"), g = t("./EntityManager"), _ = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_bossArr = [];
                e.m_bossIdArr = [];
                e.m_atlas = null;
                e.m_jsonArr = [];
                e.m_spineArr = [];
                e.m_atlasArr = [];
                e.m_pfArr = [];
                e.m_resArr = [];
                return e;
            }
            e.prototype.addLoadingRes = function () {
                return [{
                    itemType: cc.TextAsset,
                    itemNames: ["boss", "bossFunc"],
                    loadType: o.LoadType.All
                }, {
                    itemType: cc.SpriteAtlas,
                    itemNames: ["TP_Boss"],
                    loadType: o.LoadType.All
                }];
            };
            e.prototype.getInitTime = function () {
                return 50;
            };
            e.prototype.initData = function () {
                this.m_atlas = p.FrameMgr.loadMgr.get("TP_Boss", cc.SpriteAtlas);
                h.ConfigDataMgr.initJsonMapWithLoaded("ConfigBossData", "boss", s.ConfigBossData);
                h.ConfigDataMgr.initJsonMapWithLoaded("ConfigBossFuncData", "bossFunc", c.default);
            };
            e.prototype.init = function () { };
            e.prototype.clear = function () {
                this.m_bossArr.splice(0);
                this.m_bossIdArr.splice(0);
                h.ConfigDataMgr.clearData("ConfigBossData", !1);
                h.ConfigDataMgr.clearData("ConfigBossFuncData", !1);
            };
            e.prototype.loadBossRes = function (t, e) {
                var i = this;
                this.m_resArr.splice(0);
                var n = [], a = [], o = [], s = [], c = h.ConfigDataMgr.getData("ConfigStageInfoData", f.BattleMgr.stage);
                if (c) {
                    var l = c.param.split("#");
                    if (l.length > 0 && "" != l[0] && "0" != l[0]) for (var u = l[0].split("*"), d = 0; d < u.length; d++) {
                        a.push(u[d]);
                        this.m_spineArr.push(u[d]);
                    }
                    if (l.length > 1 && "" != l[1] && "0" != l[1]) {
                        var g = l[1].split("*");
                        for (d = 0; d < g.length; d++) {
                            o.push(g[d]);
                            this.m_atlasArr.push(g[d]);
                        }
                    }
                    if (l.length > 2 && "" != l[2] && "0" != l[2]) {
                        var _ = l[2].split("*");
                        for (d = 0; d < _.length; d++) {
                            n.push(_[d]);
                            this.m_jsonArr.push(_[d]);
                        }
                    }
                    if (l.length > 3 && "" != l[3] && "0" != l[3]) for (_ = l[3].split("*"), d = 0; d < _.length; d++) {
                        s.push(_[d]);
                        this.m_pfArr.push(_[d]);
                        m.EnemyMgr.addBossEnemyModelName(_[d]);
                    }
                }
                var y, v = [n, a, o, s], b = 0, M = 0;
                y = n.length + a.length + o.length + s.length;
                var S = function (n, a) {
                    p.FrameMgr.loadMgr.load(n, a, k, function () {
                        t && t(!1);
                    }, function (t, n, a) {
                        a && i.m_resArr.push(a);
                        b += 1;
                        e && e(b / y);
                    });
                }, k = function () {
                    if (b == y) {
                        r.GValue.BossResStage = f.BattleMgr.stage;
                        t && t(!0);
                    } else C();
                }, C = function () {
                    var t = v[M];
                    if (t.length > 0) {
                        var e = cc.TextAsset;
                        1 == M ? e = sp.SkeletonData : 2 == M ? e = cc.SpriteAtlas : 3 == M && (e = cc.Prefab);
                        S(t, e);
                    }
                    M++;
                };
                C();
            };
            e.prototype.releaseBossRes = function () {
                for (var t = 0, e = this.m_resArr; t < e.length; t++) {
                    var i = e[t];
                    p.FrameMgr.loadMgr.releaseAsset(i);
                }
                this.m_resArr.splice(0);
                m.EnemyMgr.releaseBossEnemy();
                p.FrameMgr.loadMgr.releaseResArr(this.m_atlasArr, cc.SpriteAtlas);
                p.FrameMgr.loadMgr.releaseResArr(this.m_jsonArr, cc.TextAsset);
                p.FrameMgr.loadMgr.releaseResArr(this.m_spineArr, sp.SkeletonData);
                p.FrameMgr.loadMgr.releaseResArr(this.m_pfArr, cc.Prefab);
                this.m_atlasArr.splice(0);
                this.m_jsonArr.splice(0);
                this.m_spineArr.splice(0);
                this.m_pfArr.splice(0);
                r.GValue.BossResStage = 0;
            };
            e.prototype.updateLogic = function (t) {
                for (var e = 0; e < this.m_bossArr.length; e++) {
                    var i = this.m_bossArr[e];
                    if (i.removeAble) {
                        this.m_bossArr.splice(e, 1);
                        this.m_bossIdArr.splice(e, 1);
                        e--;
                        0 == this.m_bossArr.length && m.EnemyMgr.letEnemysDie();
                        break;
                    }
                    i.updateLogic(t);
                }
            };
            e.prototype.addBoss = function (t, e, i) {
                var n = h.ConfigDataMgr.getData("ConfigBossData", t), a = null;
                if (n) {
                    var r = this.m_bossIdArr.indexOf(n.id);
                    if (r >= 0) return this.m_bossArr[r];
                    switch (n.type) {
                        case o.BossType.Normal:
                            break;

                        case o.BossType.Tree:
                            h.ConfigDataMgr.initJsonMapWithLoaded("ConfigBossTreeData", "boss_tree", s.ConfigBossTreeData);
                            var c = h.ConfigDataMgr.getData("ConfigBossTreeData", n.bossId);
                            a = (l = new cc.Node("boss_tree")).addComponent("BossEntityTree");
                            l.parent = g.EntityMgr.getEnemyLayer();
                            a.node.setPosition(e);
                            a.create(c, i);
                            l.zIndex = 1;
                            break;

                        case o.BossType.Fire:
                            h.ConfigDataMgr.initJsonMapWithLoaded("ConfigBossFireData", "boss_fire", s.ConfigBossFireData);
                            c = h.ConfigDataMgr.getData("ConfigBossFireData", n.bossId);
                            a = (l = new cc.Node("boss")).addComponent("BossEntityFire");
                            l.parent = g.EntityMgr.getEnemyLayer();
                            a.node.setPosition(e);
                            a.create(c, i);
                            l.zIndex = 1;
                            l.scale = n.scale;
                            break;

                        case o.BossType.DesertHand:
                            h.ConfigDataMgr.initJsonMapWithLoaded("ConfigBossDesertHandData", "boss_hand", s.ConfigBossDesertHandData);
                            c = h.ConfigDataMgr.getData("ConfigBossDesertHandData", n.bossId);
                            a = (l = new cc.Node("boss")).addComponent("BossEntityDesertHand");
                            l.parent = g.EntityMgr.getEnemyLayer();
                            a.node.setPosition(e);
                            a.create(c, i);
                            l.zIndex = 1;
                            l.scale = n.scale;
                            break;

                        case o.BossType.Ice:
                            h.ConfigDataMgr.initJsonMapWithLoaded("ConfigBossIceData", "boss_ice", s.ConfigBossIceData);
                            c = h.ConfigDataMgr.getData("ConfigBossIceData", n.bossId);
                            a = (l = new cc.Node("boss")).addComponent("BossEntityIce");
                            l.parent = g.EntityMgr.getEnemyLayer();
                            a.node.setPosition(e);
                            a.create(c, i);
                            l.zIndex = 1;
                            l.scale = n.scale;
                            break;

                        case o.BossType.Spider:
                            h.ConfigDataMgr.initJsonMapWithLoaded("ConfigBossSpiderData", "boss_spider", s.default);
                            var l;
                            c = h.ConfigDataMgr.getData("ConfigBossSpiderData", n.bossId);
                            a = (l = new cc.Node("boss")).addComponent("BossEntitySpider");
                            l.parent = g.EntityMgr.getEnemyLayer();
                            a.node.setPosition(e);
                            a.create(c, i);
                            l.zIndex = 1;
                    }
                }
                if (a) {
                    this.m_bossArr.push(a);
                    this.m_bossIdArr.push(n.id);
                }
                return a;
            };
            e.prototype.isBossOver = function () {
                return 0 == this.m_bossArr.length;
            };
            e.prototype.getBossTotalHp = function () {
                var t = 0;
                this.m_bossArr.forEach(function (e) {
                    t += e.maxHp;
                });
                return t;
            };
            e.prototype.getBossCurHp = function () {
                var t = 0;
                this.m_bossArr.forEach(function (e) {
                    t += e.curHp;
                });
                return t;
            };
            e.prototype.getBosses = function () {
                return this.m_bossArr;
            };
            Object.defineProperty(e.prototype, "atlas", {
                get: function () {
                    return this.m_atlas;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.getBossFirePointData = function (t) {
                if (t) {
                    var e = d.DYTools.stringToNumber(t, "*");
                    if (e.length > 5) {
                        var i = new l.FireData();
                        i.fireType = e[0];
                        i.fireRange = e[1];
                        i.fireSpeed = e[2];
                        i.fireWarnTime = e[3];
                        i.fireWarnWaitTime = e[4];
                        i.bulletId = e[5];
                        return i;
                    }
                }
                return null;
            };
            e.instance = new e();
            return e;
        }(u.BattleFlowBase);
        i.BossMgr = _.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/config/ConfigBossData": "ConfigBossData",
        "../../../../data/config/ConfigBossFuncData": "ConfigBossFuncData",
        "../../../../data/game/FireBulletData": "FireBulletData",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "./BattleManager": "BattleManager",
        "./EnemyManager": "EnemyManager",
        "./EntityManager": "EntityManager"
    }],
    BossMoveBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "17d66K7+HpJGISU1v7d1EST", "BossMoveBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../util/Tools"), s = t("../manager/battle/MapManager"), c = t("../manager/battle/SnakeManager"), l = cc._decorator, h = l.ccclass, u = (l.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_bossBase = null;
                    e.m_speedBase = 0;
                    e.m_speedCur = 0;
                    e.m_speed = null;
                    e.m_duration = .5;
                    e.m_time = 0;
                    e.m_endPos = cc.Vec2.ZERO;
                    e.m_destPos = null;
                    e.m_destPosArr = [];
                    e.m_dir = cc.Vec2.ZERO;
                    e.m_isAdjustScaleX = !0;
                    e.m_active = !0;
                    return e;
                }
                e.prototype.init = function (t, e) {
                    this.m_bossBase = t;
                    this.m_destPos = null;
                    this.m_destPosArr = [];
                    this.m_dir = cc.Vec2.ZERO;
                    this.m_endPos = cc.Vec2.ZERO;
                    this.m_time = 0;
                    this.m_duration = .1 * o.DYTools.random_int(5, 9);
                    this.m_speedBase = e;
                    this.m_speedCur = e;
                    this.m_speed = null;
                    this.m_active = !0;
                };
                e.prototype.setSpeedFactor = function (t) {
                    this.m_speedCur = this.m_speedBase * t;
                    this.m_speed = this.m_dir.mul(this.m_speedCur);
                };
                e.prototype.setSpeedValue = function (t) {
                    this.m_speedCur = t;
                    this.m_speed = this.m_dir.mul(this.m_speedCur);
                };
                e.prototype.setActive = function (t) {
                    this.m_active = t;
                };
                e.prototype.updateLogic = function (t) {
                    if (this.m_active) {
                        this.updateDir(t);
                        this.updatePos(t);
                    }
                };
                e.prototype.updateDir = function (t) {
                    this.m_time += t;
                    if (!this.m_destPos || this.m_time > this.m_duration) {
                        this.m_dir = this.getWayDir();
                        this.m_speed = this.m_dir.mul(this.m_speedCur);
                        this.m_time = 0;
                        this.adjustBossScaleX();
                    }
                };
                e.prototype.updatePos = function (t) {
                    if (this.m_speed) {
                        var e = this.m_speed.mul(t);
                        e.x *= this.m_bossBase.getSpeedFactor();
                        e.y *= this.m_bossBase.getSpeedFactor();
                        if (0 == e.x && 0 == e.y) {
                            this.nextPathPoints();
                            return;
                        }
                        var i = this.m_bossBase.node.x + e.x, n = this.m_bossBase.node.y + e.y;
                        if (this.m_bossBase.node.y != this.m_destPos.y) {
                            if ((this.m_bossBase.node.y - this.m_destPos.y) * (n - this.m_destPos.y) <= -1e-6) {
                                i = this.m_destPos.x;
                                n = this.m_destPos.y;
                                this.nextPathPoints();
                            }
                        } else if (this.m_bossBase.node.x != this.m_destPos.x) {
                            if ((this.m_bossBase.node.x - this.m_destPos.x) * (i - this.m_destPos.x) <= -1e-6) {
                                i = this.m_destPos.x;
                                n = this.m_destPos.y;
                                this.nextPathPoints();
                            }
                        } else {
                            this.nextPathPoints();
                            i = this.m_bossBase.node.x;
                            n = this.m_bossBase.node.y;
                        }
                        this.m_bossBase.node.x = i;
                        this.m_bossBase.node.y = n;
                    }
                };
                e.prototype.firstPathPoint = function () {
                    if (this.m_destPosArr.length > 0) {
                        this.m_destPos = this.m_destPosArr[0];
                        this.m_destPosArr.splice(0, 1);
                    }
                };
                e.prototype.nextPathPoints = function () {
                    if (this.m_destPosArr.length > 0) {
                        this.m_destPos = this.m_destPosArr[0];
                        this.m_destPosArr.splice(0, 1);
                    } else this.m_time = this.m_duration + 1;
                };
                e.prototype.setIsAdjustScaleX = function (t) {
                    this.m_isAdjustScaleX = t;
                };
                e.prototype.adjustBossScaleX = function () {
                    if (this.m_active && this.m_isAdjustScaleX && this.m_destPos) {
                        var t = this.m_bossBase.node.scaleX;
                        this.m_destPos.x > this.m_bossBase.node.x ? this.m_bossBase.node.scaleX = Math.abs(t) : this.m_destPos.x < this.m_bossBase.node.x && (this.m_bossBase.node.scaleX = -Math.abs(t));
                    }
                };
                e.prototype.getWayDir = function () {
                    var t = cc.Vec2.ZERO, e = cc.v2(this.m_bossBase.node.x, this.m_bossBase.node.y);
                    this.m_endPos.x = c.SnakeMgr.getPlayerPos().x;
                    this.m_endPos.y = c.SnakeMgr.getPlayerPos().y;
                    this.m_destPos = cc.Vec2.ZERO;
                    if (s.MapMgr.isCrossObstruct(e, this.m_endPos)) {
                        this.m_destPosArr = s.MapMgr.getPathPoints(e, this.m_endPos);
                        if (0 == this.m_destPosArr.length) {
                            var i = e.x + o.DYTools.random_int(-200, 200), n = e.y + o.DYTools.random_int(-200, 200);
                            this.m_endPos = s.MapMgr.getEndPos(e, cc.v2(i, n));
                            t = this.m_endPos.sub(e);
                            this.m_destPos = this.m_endPos;
                        } else {
                            this.firstPathPoint();
                            t.x = this.m_destPos.x - this.m_bossBase.node.x;
                            t.y = this.m_destPos.y - this.m_bossBase.node.y;
                        }
                    } else {
                        t = this.m_endPos.sub(e);
                        this.m_destPos = this.m_endPos;
                    }
                    return t.normalize();
                };
                e.prototype.getDir = function () {
                    return this.m_dir;
                };
                return r([h], e);
            }(cc.Component));
        i.default = u;
        cc._RF.pop();
    }, {
        "../../../util/Tools": "Tools",
        "../manager/battle/MapManager": "MapManager",
        "../manager/battle/SnakeManager": "SnakeManager"
    }],
    BossTreeFist: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "27c2dVVC0tEa59cE5wlrtwB", "BossTreeFist");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../config/GameEnum"), l = t("../../../../frame/manager/FrameManager"), h = t("../../../../frame/ui/FrameAnim"), u = t("../../collide/CircleColliderComp"), p = t("../../manager/battle/BossManager"), d = t("../../manager/battle/EffectManager"), f = t("../../manager/battle/EnemyManager"), m = t("../../manager/battle/MapManager"), g = t("../../manager/battle/SnakeManager"), _ = t("../BossUnitBase"), y = cc._decorator, v = y.ccclass, b = (y.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_group = c.ColliderGroup.EnemyBlock;
                    e.m_bossEntity = null;
                    e.m_fistSpine = null;
                    e.m_overCall = null;
                    e.m_dieCall = null;
                    e.m_isDead = !1;
                    e.m_curHp = 0;
                    e.m_maxHp = 0;
                    e.m_hpNode = null;
                    e.m_hpTop = null;
                    e.m_hpMid = null;
                    e.m_midTween = null;
                    e.m_hurtAnim = null;
                    e.m_collideComp = null;
                    e.m_collideAtk = 0;
                    e.m_state = 0;
                    e.m_stayTime = 0;
                    e.m_time = 0;
                    e.m_warn = null;
                    e.m_warnTime = 0;
                    e.m_warnDelayTime = 0;
                    e.m_radius = 90;
                    e.m_lockMask = null;
                    return e;
                }
                e.prototype.create = function (t, e) {
                    this.m_bossEntity = t;
                    this.m_overCall = e;
                    this.setIsDie(!0);
                    this.initUI();
                };
                e.prototype.initUI = function () {
                    var t = this;
                    this.m_warn = new cc.Node("fistWarn");
                    this.m_warn.parent = m.MapMgr.wallLayer;
                    this.m_warn.addComponent(cc.Sprite).spriteFrame = p.BossMgr.atlas.getSpriteFrame("warn2_1");
                    this.m_warn.active = !1;
                    (e = new cc.Node("1")).parent = this.m_warn;
                    e.anchorY = .22;
                    e.addComponent(cc.Sprite).spriteFrame = p.BossMgr.atlas.getSpriteFrame("warn2_2");
                    var e = new cc.Node("fist");
                    this.node.addChild(e);
                    this.m_fistSpine = e.addComponent(sp.Skeleton);
                    this.m_fistSpine.skeletonData = l.FrameMgr.loadMgr.get("spine_boss_tree_fist", sp.SkeletonData);
                    this.m_fistSpine.premultipliedAlpha = !1;
                    this.m_fistSpine.setCompleteListener(function (e) {
                        switch (e.animation ? e.animation.name : "") {
                            case "show":
                                break;

                            case "shake":
                                t.scheduleOnce(function () {
                                    t.playAnim("idle", !0);
                                });
                                break;

                            case "hide":
                                t.scheduleOnce(function () {
                                    t.node.active = !1;
                                    t.m_fistSpine.node.active = !1;
                                    t.m_overCall && t.m_overCall();
                                });
                        }
                    });
                    e.active = !1;
                    this.m_hpNode = new cc.Node("hp");
                    this.m_hpNode.parent = this.node;
                    this.m_hpNode.y = 100;
                    this.m_hpNode.active = !1;
                    this.m_hpNode.addComponent(cc.Sprite).spriteFrame = p.BossMgr.atlas.getSpriteFrame("hp_0");
                    var i = new cc.Node("mid");
                    i.parent = this.m_hpNode;
                    this.m_hpMid = i.addComponent(cc.Sprite);
                    this.m_hpMid.spriteFrame = p.BossMgr.atlas.getSpriteFrame("hp_2");
                    this.m_hpMid.type = cc.Sprite.Type.FILLED;
                    this.m_hpMid.fillRange = 1;
                    var n = new cc.Node("top");
                    n.parent = this.m_hpNode;
                    this.m_hpTop = n.addComponent(cc.Sprite);
                    this.m_hpTop.spriteFrame = p.BossMgr.atlas.getSpriteFrame("hp_1");
                    this.m_hpTop.type = cc.Sprite.Type.FILLED;
                    this.m_hpTop.fillRange = 1;
                    (e = cc.instantiate(s.GValue.pfFrameAnim)).name = "m_hurtAnim";
                    e.parent = this.node;
                    this.m_hurtAnim = e.getComponent(h.default);
                    this.m_hurtAnim.init(f.EnemyMgr.enemyEffectAtlas, f.EnemyMgr.hurtImage, f.EnemyMgr.hurtCount, o.GConfig.ActionInterval);
                };
                e.prototype.initComp = function (t) {
                    this.m_collideComp || (this.m_collideComp = new u.default());
                    this.m_collideComp && this.m_collideComp.init(t, this);
                };
                e.prototype.init = function (t, e, i) {
                    this.m_isDead = !1;
                    this.m_dieCall = i;
                    this.m_warnTime = e[0];
                    this.m_warnDelayTime = e[1];
                    this.m_collideAtk = e[2];
                    this.m_stayTime = e[3];
                    this.m_curHp = t * e[4] / 100;
                    this.m_maxHp = this.m_curHp;
                    this.m_hpTop.fillRange = 1;
                    this.m_hpMid.fillRange = 1;
                    this.initComp([0, 10, this.m_radius]);
                    this.node.active = !0;
                    this.m_state = 0;
                };
                e.prototype.updateLogic = function (t) {
                    this.updateBurnInstantHurtDis(t);
                    this.m_time += t;
                    switch (this.m_state) {
                        case 0:
                            break;

                        case 1:
                            this.m_warn.position = g.SnakeMgr.getPlayerPos();
                            if (this.m_time > this.m_warnTime) {
                                this.m_time = 0;
                                this.m_state = 2;
                                cc.tween(this.m_warn).to(.2, {
                                    opacity: 100
                                }).to(.2, {
                                    opacity: 255
                                }).union().repeatForever().start();
                            }
                            break;

                        case 2:
                            if (this.m_time > this.m_warnDelayTime) {
                                this.m_warn.stopAllActions();
                                this.m_warn.active = !1;
                                this.showFist();
                            }
                            break;

                        case 3:
                            break;

                        case 4:
                            if (this.m_time > this.m_stayTime && this.active) {
                                this.m_state = 5;
                                this.m_bossEntity.removeHurtAbleEntity(this);
                                this.active = !1;
                                this.m_hpNode.active = !1;
                                this.hideFist();
                            }
                    }
                };
                e.prototype.showWarn = function () {
                    this.m_state = 1;
                    this.m_time = 0;
                    this.m_warn.active = !0;
                    this.m_warn.opacity = 255;
                    this.m_warn.position = g.SnakeMgr.getPlayerPos();
                };
                e.prototype.hideWarn = function (t) {
                    void 0 === t && (t = !0);
                    if (t) {
                        this.m_warn.destroy();
                        this.m_warn = null;
                    } else this.m_warn.active = !1;
                };
                e.prototype.showFist = function () {
                    var t = this;
                    this.m_state = 3;
                    this.m_time = 0;
                    this.playAnim("show", !0);
                    var e = this.m_warn.position;
                    this.node.position = e;
                    this.node.opacity = 255;
                    this.node.y = e.y + 2e3;
                    this.m_fistSpine.node.active = !0;
                    cc.tween(this.node).to(.5, {
                        x: e.x,
                        y: e.y
                    }).call(function () {
                        l.FrameMgr.audioMgr.playEffect("boss_tree_fist_show");
                        l.FrameMgr.noticeMgr.emit(c.EventTypeEnum.ScreenShake, {
                            level: 2
                        });
                        t.active = !0;
                        t.m_bossEntity.pushHurtAbleEntity(t);
                        t.m_state = 4;
                        t.m_time = 0;
                        t.m_collideComp.updateLogic(0);
                        t.playAnim("shake");
                        t.m_hpNode.active = !0;
                        t.setIsDie(!1);
                        g.SnakeMgr.isSnakeHeadInCircle(e.x, e.y, t.m_radius) && g.SnakeMgr.snakeHurt(t.m_collideAtk);
                    }).start();
                };
                e.prototype.hideFist = function () {
                    var t = this;
                    this.setIsDie(!0);
                    this.playAnim("show", !0);
                    l.FrameMgr.audioMgr.playEffect("boss_tree_fist_hide");
                    cc.tween(this.node).to(.5, {
                        y: this.node.y + 2e3,
                        opacity: 0
                    }).call(function () {
                        t.node.active = !1;
                        t.m_fistSpine.node.active = !1;
                        t.m_overCall && t.m_overCall();
                    }).start();
                };
                Object.defineProperty(e.prototype, "active", {
                    get: function () {
                        return this.m_collideComp && this.m_collideComp.enabled;
                    },
                    set: function (t) {
                        this.m_collideComp && (this.m_collideComp.enabled = t);
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.playAnim = function (t, e) {
                    void 0 === e && (e = !1);
                    this.m_isDead && "hide" != t || this.m_fistSpine.setAnimation(0, t, e);
                };
                e.prototype.onCollide = function (t, e) {
                    switch (t) {
                        case c.ContactType.Enter:
                            if (e && e.entity) switch (e.entity.group) {
                                case c.ColliderGroup.Player:
                                    var i = e.entity;
                                    if (i) {
                                        var n = i.getColliderAtk();
                                        this.hurt(n);
                                    }
                                    break;

                                case c.ColliderGroup.PlayerBullet:
                                    var a = e.entity;
                                    if (a) {
                                        n = a.getBulletAttack() || 1;
                                        this.hurt(n, !0);
                                    }
                            }
                    }
                };
                e.prototype.hurt = function (t, e, i) {
                    void 0 === e && (e = !1);
                    void 0 === i && (i = !1);
                    this.hpChange(-t);
                    e && (t = -g.SnakeMgr.getEnemyShowAtk(Math.abs(t)));
                    i ? d.EffectMgr.showHurtNum({
                        pos: cc.v2(this.node.x, this.node.y + this.m_hpNode.y),
                        num: t,
                        numType: c.NumType.EnemyHurtRed,
                        scale: 1.1
                    }) : d.EffectMgr.showHurtNum({
                        pos: cc.v2(this.node.x, this.node.y + this.m_hpNode.y + 15),
                        num: t,
                        numType: c.NumType.EnemyHurt,
                        scale: 1.1
                    });
                };
                e.prototype.hpChange = function (t) {
                    if (this.m_isDead) return 0;
                    this.m_curHp += t;
                    this.m_bossEntity.hpChange(t);
                    this.playHpAct();
                    this.playHurtAnim();
                    if (this.m_curHp <= 0) {
                        this.m_curHp = 0;
                        this.toDie();
                    }
                    return t;
                };
                e.prototype.playHpAct = function () {
                    var t = this;
                    if (this.m_hpTop) {
                        var e = this.m_hpTop.fillRange, i = this.m_curHp / this.m_maxHp;
                        this.m_hpTop.fillRange = i;
                        if (this.m_hpMid) {
                            if (this.m_midTween) {
                                this.m_hpMid.fillRange = e;
                                this.m_midTween.stop();
                                this.m_midTween = null;
                            }
                            this.m_midTween = cc.tween(this.m_hpMid).to(.05, {
                                fillRange: i
                            }).call(function () {
                                t.m_midTween = null;
                            }).start();
                        }
                    }
                };
                e.prototype.playHurtAnim = function () {
                    this.m_hurtAnim && this.m_hurtAnim.play(1);
                };
                e.prototype.toDie = function () {
                    this.m_isDead = !0;
                    this.setIsDie(!0);
                    this.m_hpNode.active = !1;
                    this.active = !1;
                    this.m_state = -1;
                    cc.Tween.stopAllByTarget(this);
                    l.FrameMgr.audioMgr.playEffect("boss_tree_fist_die");
                    this.playAnim("hide");
                    this.m_bossEntity && this.m_bossEntity.removeHurtAbleEntity(this);
                    this.m_dieCall && this.m_dieCall(this);
                };
                e.prototype.showLockedMark = function () {
                    this.m_isDead || this.m_lockMask || (this.m_lockMask = f.EnemyMgr.addLockMask(this, 1.5));
                };
                e.prototype.hideLockedMark = function () {
                    if (this.m_lockMask) {
                        f.EnemyMgr.removeLockMask();
                        this.m_lockMask = null;
                    }
                };
                e.prototype.getColliders = function () {
                    return this.m_collideComp;
                };
                Object.defineProperty(e.prototype, "collideAtk", {
                    get: function () {
                        return 0;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                return r([v], e);
            }(_.default));
        i.default = b;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../collide/CircleColliderComp": "CircleColliderComp",
        "../../manager/battle/BossManager": "BossManager",
        "../../manager/battle/EffectManager": "EffectManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../BossUnitBase": "BossUnitBase"
    }],
    BossTreeSunkens: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b02b34K0I5IXb1fyIUm3jhZ", "BossTreeSunkens");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../frame/manager/FrameManager"), s = t("../../../../util/Tools"), c = t("../../manager/battle/SnakeManager"), l = t("../BossUnitBase"), h = cc._decorator, u = h.ccclass, p = (h.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_bossEntity = null;
                    e.m_spine = null;
                    e.m_attackAble = !1;
                    e.m_collideAtk = 0;
                    e.m_collideUpTime = .67;
                    e.m_time = 0;
                    e.m_size = cc.size(100, 760);
                    e.m_curHeight = 0;
                    return e;
                }
                e.prototype.create = function (t) {
                    this.m_bossEntity = t;
                    var e = new cc.Node("spine");
                    e.parent = this.node;
                    this.m_spine = e.addComponent(sp.Skeleton);
                    this.m_spine.skeletonData = o.FrameMgr.loadMgr.get("spine_boss_tree_sunkens", sp.SkeletonData);
                    this.m_spine.premultipliedAlpha = !1;
                    this.m_spine.setSkin("skin_1");
                    this.node.active = !1;
                };
                e.prototype.init = function (t, e) {
                    var i = this;
                    this.m_collideAtk = t[2];
                    this.m_attackAble = !0;
                    this.m_time = 0;
                    this.node.active = !0;
                    this.node.x = this.m_bossEntity.node.x + t[0];
                    this.node.y = this.m_bossEntity.node.y - 400;
                    this.m_spine.setAnimation(0, "show", !1);
                    this.m_spine.timeScale = t[1];
                    this.m_collideUpTime = .67 * t[1];
                    this.m_spine.setCompleteListener(function (t) {
                        if ("show" == (t.animation ? t.animation.name : "")) {
                            i.m_spine.timeScale = 1;
                            i.m_spine.setAnimation(0, "idle", !0);
                            e && e();
                        }
                    });
                    o.FrameMgr.audioMgr.playEffect("boss_tree_sunkens_show");
                };
                e.prototype.attackOver = function (t) {
                    var e = this;
                    this.m_attackAble = !1;
                    this.m_spine.setCompleteListener(null);
                    this.m_spine.setCompleteListener(function (i) {
                        if ("hide" == (i.animation ? i.animation.name : "")) {
                            e.node.active = !1;
                            t && t();
                        }
                    });
                    this.m_spine.setAnimation(0, "hide", !1);
                };
                e.prototype.updateLogic = function (t) {
                    if (this.m_attackAble) {
                        this.m_time += t;
                        this.m_time < this.m_collideUpTime && (this.m_curHeight = this.m_size.height * (this.m_time / this.m_collideUpTime));
                        var e = c.SnakeMgr.getPlayerPos();
                        s.DYTools.isNumberDiffRange(e.x, this.node.x, this.m_size.width / 2) && e.y <= this.node.y && e.y >= this.node.y - this.m_curHeight && c.SnakeMgr.getSnakeHead().hurt(this.m_collideAtk);
                    }
                };
                return r([u], e);
            }(l.default));
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../BossUnitBase": "BossUnitBase"
    }],
    BossUnitBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "416f9q3ZNhBJbHjvKaxPqWl", "BossUnitBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameEnum"), s = t("../common/EntityBase"), c = cc._decorator, l = c.ccclass, h = (c.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_group = o.ColliderGroup.Enemy;
                    return e;
                }
                Object.defineProperty(e.prototype, "active", {
                    get: function () {
                        return !1;
                    },
                    set: function () { },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.hurt = function () { };
                return r([l], e);
            }(s.default));
        i.default = h;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../common/EntityBase": "EntityBase"
    }],
    BulletBaseComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "26f70m9ISZAwbcj1J1jHAmO", "BulletBaseComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_bullet = null;
                e.m_angle = 0;
                e.m_speed = 0;
                e.m_dir = cc.Vec2.ZERO;
                e.m_accStartTime = 0;
                e.m_accLastTime = 0;
                e.m_acc = 0;
                e.m_rotateSpeed = 0;
                e.m_target = null;
                return e;
            }
            e.prototype.init = function (t, e) {
                void 0 === e && (e = null);
                this.m_bullet = t;
                this.m_target = e;
                this.m_rotateSpeed = 0;
            };
            Object.defineProperty(e.prototype, "angle", {
                set: function (t) {
                    this.m_angle = t;
                    this.refreshDir();
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.setRotateSpeed = function (t) {
                this.m_rotateSpeed = t;
            };
            e.prototype.setSpeed = function (t) {
                this.m_speed = t;
                this.refreshDir();
            };
            e.prototype.setAccParam = function (t, e, i) {
                this.m_acc = t;
                this.m_accStartTime = e;
                this.m_accLastTime = i;
            };
            e.prototype.refreshDir = function () {
                this.m_dir = cc.v2(0, this.m_speed).rotate(cc.misc.degreesToRadians(this.m_angle));
            };
            e.prototype.updateRotate = function (t) {
                if (this.m_target && this.m_bullet) if (this.m_target.getIsDie()) this.m_target = null; else if (this.m_target.getIsInSky()) this.m_target = null; else if (!(this.m_rotateSpeed <= 0)) {
                    var e = this.m_target.node.getPosition(), i = this.m_target.getCollider();
                    i && (e = i.node.getPosition().add(i.getOffset()));
                    var n = e.sub(this.m_bullet.node.getPosition()), a = -cc.misc.radiansToDegrees(cc.v2(n).signAngle(cc.v2(0, 1))), r = !1;
                    if (a > this.m_angle) a - this.m_angle <= 180 && (r = !0); else {
                        if (!(a < this.m_angle)) return;
                        this.m_angle - a > 180 && (r = !0);
                    }
                    if (r) {
                        (o = this.m_angle + this.m_rotateSpeed * t) > a && (o = a);
                        this.m_angle = o;
                    } else {
                        var o;
                        (o = this.m_angle - this.m_rotateSpeed * t) < a && (o = a);
                        this.m_angle = o;
                    }
                    this.m_bullet.setAngle(this.m_angle);
                    this.refreshDir();
                }
            };
            e.prototype.updateSpeed = function (t) {
                if (0 != this.m_acc) if (this.m_accStartTime > 0) this.m_accStartTime -= t; else if (!(this.m_accLastTime <= 0)) {
                    this.m_accLastTime -= t;
                    var e = this.m_speed + this.m_acc * t;
                    this.setSpeed(e);
                }
            };
            return e;
        }(t("../../common/CompBase").default);
        i.default = r;
        cc._RF.pop();
    }, {
        "../../common/CompBase": "CompBase"
    }],
    BulletBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "50642bBmxRHWaipzDZkKb//", "BulletBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("../../../../frame/manager/PoolManager"), c = t("../../collide/CircleColliderComp"), l = t("../../common/EntityBase"), h = t("../../manager/battle/BulletManager"), u = t("../../manager/battle/EntityManager"), p = t("../Hurt/HurtAnim"), d = t("../FlyType/BulletStraightComp"), f = t("../../collide/RectColliderComp"), m = t("../../../../frame/ui/FrameAnim"), g = t("../../../../config/GameConst"), _ = t("../../../../config/GameConfig"), y = t("../../../../util/Tools"), v = cc._decorator.ccclass, b = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_collideComp = null;
                e._bulletData = null;
                e._creator = null;
                e._firer = null;
                e._bodySpr = null;
                e._bodyFrame = null;
                e._tailSpr = null;
                e._tailSteak = null;
                e._tailAble = !1;
                e._tailTime = 0;
                e._isEnemyBullet = !1;
                e._offsetX = 0;
                e._offsetY = 0;
                e._revolve = 0;
                e.m_compArr = [];
                e._target = null;
                e._wave = 0;
                return e;
            }
            e.prototype.getBulletAttack = function (t) {
                var e = t || this._bulletData.bulletAtk;
                this._bulletData.critProb > 0 && y.DYTools.random_int(0, 99) < this._bulletData.critProb && (e *= this._bulletData.critAtkRatio);
                return e;
            };
            e.prototype.init = function (t, e, i, n, a) {
                this._isEnemyBullet = i;
                this.group = i ? o.ColliderGroup.EnemyBullet : o.ColliderGroup.PlayerBullet;
                this._bulletData = t;
                this._creator = e;
                this._firer = a || null;
                this._target = n;
                this._wave = 0;
                this._revolve = this._bulletData.revolve;
                this.node.scale = t.scale;
                this.initCollide(t.colliderData);
                this.initComp();
                this.setSprite(t.image[0]);
                this.initTail();
            };
            e.prototype.startBattle = function () {
                this.m_collideComp.enabled = !0;
                this.m_compArr.forEach(function (t) {
                    t.enabled = !0;
                });
            };
            e.prototype.setSprite = function (t) {
                if (this._bulletData.frameCount > 1) {
                    this._bodySpr && (this._bodySpr.node.active = !1);
                    if (!this._bodyFrame) {
                        var e = cc.instantiate(g.GValue.pfFrameAnim);
                        e.parent = this.node;
                        this._bodyFrame = e.getComponent(m.default);
                    }
                    this._bodyFrame.node.active = !0;
                    var i = this._isEnemyBullet ? h.BulletMgr.enemyAtlas : h.BulletMgr.snakeAtlas;
                    this._bodyFrame.init(i, t, this._bulletData.frameCount, _.GConfig.ActionInterval);
                    this._bodyFrame.play(0);
                } else {
                    this._bodyFrame && (this._bodyFrame.node.active = !1);
                    if (!this._bodySpr) {
                        var n = this.node.getChildByName("img");
                        if (!n) return;
                        this._bodySpr = n.getComponent(cc.Sprite);
                    }
                    this._bodySpr.node.active = !0;
                    this._setSprite(t);
                    this._bodySpr.node.anchorY = this._bulletData.anchorY;
                    if (this._bulletData.scaleAct) {
                        this._bodySpr.node.scaleY = .17;
                        cc.tween(this._bodySpr.node).to(.2, {
                            scaleY: .8
                        }).to(.1, {
                            scaleY: 1
                        }).start();
                    } else this._bodySpr.node.scaleY = 1;
                }
            };
            e.prototype.setAngle = function (t) {
                this.node.angle = t;
                this.m_compArr.forEach(function (e) {
                    e.angle = t;
                });
            };
            e.prototype.setPos = function (t, e) {
                void 0 === e && (e = cc.Vec2.ZERO);
                this._offsetX = t.x;
                this._offsetY = t.y;
                var i = h.BulletMgr.getFirePointWithCreator(this._creator).getSpriteNodeAngle(), n = t.rotate(cc.misc.degreesToRadians(i)), a = this._creator.node;
                a ? this.node.setPosition(a.getPosition().add(n).add(e)) : this.node.setPosition(n);
                this.startBattle();
            };
            e.prototype.setTargetPos = function () { };
            e.prototype.setWave = function (t) {
                this._wave = t;
            };
            e.prototype.updateLogic = function (t) {
                if (this._bulletData && 0 != this.node.active) {
                    this.updateRevolve(t);
                    this.updateTail(t);
                    this._onUpdate(t);
                    this.m_collideComp && this.m_collideComp.updateLogic(t);
                }
            };
            e.prototype.remove = function () {
                if (1 == this.node.active) {
                    this._onRemove();
                    this._remove();
                }
            };
            e.prototype.updateTail = function (t) {
                if (this._tailAble) {
                    this._tailTime += t;
                    var e = this._tailTime / .1;
                    if (e > 1) {
                        e = 1;
                        this._tailAble = !1;
                    }
                    this._tailSpr.node.scale = e;
                }
            };
            e.prototype.updateRevolve = function (t) {
                if (0 != this._revolve) if (this._bulletData.frameCount > 1) {
                    if (this._bodyFrame) return;
                    this._bodyFrame.node.angle += this._revolve * t;
                } else {
                    if (!this._bodySpr) return;
                    this._bodySpr.node.angle += this._revolve * t;
                }
            };
            e.prototype.getColliders = function () {
                return this.m_collideComp;
            };
            e.prototype.initCollide = function (t) {
                switch (t[0]) {
                    case 1:
                        this.m_collideComp && this.m_collideComp.type != o.ColliderType.Circle && delete this.m_collideComp;
                        this.m_collideComp || (this.m_collideComp = new c.default());
                        break;

                    case 2:
                        this.m_collideComp && this.m_collideComp.type != o.ColliderType.Rectangle && delete this.m_collideComp;
                        this.m_collideComp || (this.m_collideComp = new f.default());
                }
                this.m_collideComp.init([t[1], t[2], t[3], t[4]], this);
            };
            e.prototype.initComp = function () {
                this.m_compArr.splice(0);
                var t = new d.default();
                t.init(this, this._target);
                t.setAccParam(this._bulletData.bulletAcc, this._bulletData.bulletAccStartTime, this._bulletData.bulletAccLastTime);
                t.setRotateSpeed(this._bulletData.bulletRotateSpeed);
                t.setSpeed(this._bulletData.bulletSpeed);
                this.m_compArr.push(t);
            };
            e.prototype._onUpdate = function (t) {
                this.m_compArr.forEach(function (e) {
                    e.updateLogic(t);
                });
                this._checkOut();
            };
            e.prototype._checkOut = function () {
                h.BulletMgr.checkBulletOutMap(this.node) && this.remove();
            };
            e.prototype._setSprite = function (t) {
                this._bodySpr.spriteFrame = h.BulletMgr.getBulletSprite(t, this._isEnemyBullet);
            };
            e.prototype._remove = function () {
                h.BulletMgr.putBullet(this, this._isEnemyBullet, this._bulletData.bulletType);
            };
            e.prototype._onRemove = function () {
                this.m_collideComp.enabled = !1;
                this.node.angle = 0;
                this._bodyFrame && (this._bodyFrame.node.angle = 0);
                this._bodySpr && (this._bodySpr.node.angle = 0);
            };
            e.prototype.onCollide = function (t, e) {
                switch (t) {
                    case o.ContactType.Enter:
                        e && e.entity && this.checkNotThough(e.entity.group) && this.remove();
                }
            };
            e.prototype.onCollideWall = function (t) {
                switch (t) {
                    case o.ContactType.Enter:
                        if (this.checkNotThough(6)) {
                            this.createHurtEffect();
                            this.remove();
                        }
                }
            };
            e.prototype.onCollideBlock = function (t) {
                switch (t) {
                    case o.ContactType.Enter:
                        if (this.checkNotThough(20)) {
                            this.createHurtEffect();
                            this.remove();
                        }
                }
            };
            e.prototype.checkNotThough = function (t) {
                return t != this._creator.group && this._bulletData.bulletNotThrough.indexOf(t) >= 0;
            };
            e.prototype.createHurtEffect = function () {
                var t = s.PoolMgr.get("HurtAnim", p.default, u.EntityMgr.getEffectLayer());
                t.node.x = this.node.x;
                t.node.y = this.node.y;
                t.node.scale = this._isEnemyBullet ? 1 : .7;
                t.playOnce("anim_hurtWal1_", function () {
                    s.PoolMgr.put("HurtAnim", t);
                });
            };
            e.prototype.initTail = function () {
                var t = !1;
                if (!this._isEnemyBullet) {
                    var e = this._creator.node.getComponent("SnakeUnit");
                    e && (t = e.m_crazyComp.m_crazying);
                }
                var i = this.node.getChildByName("tail");
                if (!i) {
                    i = new cc.Node("tail");
                    this.node.addChild(i);
                    var n = h.BulletMgr.snakeTail;
                    this._tailSteak = i.addComponent(cc.MotionStreak);
                    this._tailSteak.fastMode = !0;
                    this._tailSteak.texture = n.getTexture();
                }
                var a = this._bulletData.tailPara;
                t && (a = this._bulletData.tailCrazyPara);
                if (a.length > 0) {
                    i.active = !0;
                    i.y = a[0];
                    this._tailSteak.stroke = a[1];
                    this._tailSteak.fadeTime = a[2];
                    a.length > 5 && (this._tailSteak.color = cc.color(a[3], a[4], a[5]));
                } else i.active = !1;
            };
            return r([v], e);
        }(l.default);
        i.default = b;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/PoolManager": "PoolManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/Tools": "Tools",
        "../../collide/CircleColliderComp": "CircleColliderComp",
        "../../collide/RectColliderComp": "RectColliderComp",
        "../../common/EntityBase": "EntityBase",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../FlyType/BulletStraightComp": "BulletStraightComp",
        "../Hurt/HurtAnim": "HurtAnim"
    }],
    BulletEnemy: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6a3faNFQTpLXbpXcknxgs3r", "BulletEnemy");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./BulletBase"), s = cc._decorator, c = s.ccclass, l = (s.property, function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            return r([c], e);
        }(o.default));
        i.default = l;
        cc._RF.pop();
    }, {
        "./BulletBase": "BulletBase"
    }],
    BulletJumpTarget: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "23b2d/9UuRHaLYbxLUemcN/", "BulletJumpTarget");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../config/GameEnum"), l = t("../../../../frame/ui/FrameAnim"), h = t("../../collide/CircleColliderComp"), u = t("../../manager/battle/BattleManager"), p = t("../../manager/battle/EffectManager"), d = t("../../manager/battle/WarnLineManager"), f = t("./BulletBase"), m = cc._decorator, g = m.ccclass, _ = (m.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._targetPos = null;
                    e._isFlying = !1;
                    e._flyTime = 1.5;
                    e._jumpHeight = 200;
                    e._prePos = null;
                    e._actionFly = null;
                    e._curActionStopNum = 0;
                    e.warnJump = null;
                    return e;
                }
                e.prototype.init = function (t, e, i, n, a) {
                    this._isEnemyBullet = i;
                    this.group = i ? c.ColliderGroup.EnemyBullet : c.ColliderGroup.PlayerBullet;
                    this._bulletData = t;
                    this._creator = e;
                    this._firer = a || null;
                    this._target = n;
                    this._wave = 0;
                    this._flyTime = 1.5;
                    this._jumpHeight = 200;
                    this.node.scale = t.scale;
                    this.initCollide(t.colliderData);
                    this.setSprite(t.image[0]);
                    this.initTail();
                    this.node.stopAllActions();
                    this._isFlying = !1;
                    this._targetPos = null;
                    this._prePos = null;
                    this._actionFly = null;
                    this._curActionStopNum = 0;
                    this.warnJump = null;
                };
                e.prototype.initCollide = function (t) {
                    if (!this.m_collideComp) {
                        this.m_collideComp = new h.default();
                        this.m_collideComp.init(t, this);
                    }
                    this.m_collideComp.enabled = !1;
                };
                e.prototype.startBattle = function () { };
                e.prototype.setTargetPos = function (t) {
                    this._targetPos = t;
                    this.createWarn(t);
                };
                e.prototype.updateLogic = function (t) {
                    this._bulletData && 0 != this.node.active && this._onUpdate(t);
                };
                e.prototype.remove = function () {
                    this._actionFly && this.node.stopAction(this._actionFly);
                    if (1 == this.node.active) {
                        this._onRemove();
                        this._remove();
                    }
                };
                e.prototype._onUpdate = function (t) {
                    this._bulletFly(t);
                    this.updateRotate(t);
                    this._actionFly && (u.BattleMgr.timeScale > 2 ? this.node.pauseAllActions() : this.node.resumeAllActions());
                };
                e.prototype._bulletFly = function () {
                    var t = this;
                    if (!this._isFlying) {
                        this._isFlying = !0;
                        var e = 0;
                        this._bulletData.bulletSpeed > 0 && (e = cc.Vec3.distance(this.node.position, this._targetPos) / this._bulletData.bulletSpeed);
                        e > this._flyTime && (this._flyTime = e);
                        if (this._bulletData.otherPara.length > 0) {
                            var i = Number(this._bulletData.otherPara[0]);
                            i > this._jumpHeight && (this._jumpHeight = i);
                        }
                        var n = this.node.opacity, a = cc.jumpTo(this._flyTime, cc.v2(this._targetPos), this._jumpHeight, 1), r = cc.callFunc(function () {
                            t.m_collideComp.enabled = !0;
                            t.removeWarn();
                            var e = cc.instantiate(s.GValue.pfFrameAnim), i = e.getComponent(l.default);
                            i.node.setPosition(t.node.getPosition());
                            e.parent = t.node.parent;
                            i.init(p.EffectMgr.hurtAtlas, "anim_bullet_jump_bomb_", 6, o.GConfig.ActionInterval);
                            i.setStopCall(function () {
                                i.destroy();
                            });
                            i.play(1);
                            t.node.opacity = 0;
                        }), c = cc.delayTime(.3), h = cc.callFunc(function () {
                            t.node.opacity = n;
                            t.remove();
                        });
                        this._actionFly = cc.sequence(a, r, c, h);
                        this._actionFly.setTag(998);
                        this.node.stopActionByTag(998);
                        this.node.runAction(this._actionFly);
                    }
                };
                e.prototype.updateRotate = function (t) {
                    if (!this.m_collideComp.enabled) {
                        var e = this.node.getPosition();
                        if (null != this._prePos) {
                            if (this._prePos != e) {
                                var i = this.node.angle, n = e.sub(this._prePos);
                                if (0 != n.x) {
                                    var a = -cc.misc.radiansToDegrees(cc.v2(n).signAngle(cc.v2(0, 1))) - i, r = a > 0 ? 1 : -1;
                                    i += Math.abs(a) > 360 * t ? 360 * t * r : a;
                                    this.node.angle = i;
                                }
                                this._prePos = e;
                            }
                        } else this._prePos = e;
                    }
                };
                e.prototype.createWarn = function (t) {
                    this.removeWarn();
                    this.warnJump = d.WarnLineMgr.getWarnJump();
                    this.warnJump.node.position = t;
                };
                e.prototype.removeWarn = function () {
                    if (this.warnJump) {
                        d.WarnLineMgr.putWarnJump(this.warnJump);
                        this.warnJump = null;
                    }
                };
                e.prototype._onRemove = function () {
                    this.node.angle = 0;
                    this.removeWarn();
                };
                return r([g], e);
            }(f.default));
        i.default = _;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../collide/CircleColliderComp": "CircleColliderComp",
        "../../manager/battle/BattleManager": "BattleManager",
        "../../manager/battle/EffectManager": "EffectManager",
        "../../manager/battle/WarnLineManager": "WarnLineManager",
        "./BulletBase": "BulletBase"
    }],
    BulletManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "18178r2voRBfapKgy9qMYTk", "BulletManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.BulletMgr = void 0;
        var r = t("../../../../config/GameEnum"), o = t("../../../../data/game/FireBulletData"), s = t("../../../../data/manager/ConfigDataManager"), c = t("../../../../frame/manager/BattleFlowManager"), l = t("../../../../frame/manager/FrameManager"), h = t("../../../../frame/manager/PoolManager"), u = t("../../../../util/Tools"), p = t("../../bullet/Hurt/HurtAnim"), d = t("./EntityManager"), f = t("./MapManager"), m = t("../../bullet/Bullet/BulletJumpTarget"), g = t("../../bullet/Bullet/BulletSnake"), _ = t("../../bullet/Bullet/BulletEnemy"), y = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_enabled = !1;
                e._guidePause = !1;
                e.m_safeArea = cc.rect(0, 0, 0, 0);
                e.fireEffectAbleMap = new Map();
                e._snakeAtlas = null;
                e._snakeList = [];
                e._enemyAtlas = null;
                e._enemyList = [];
                e._firePointMap = new Map();
                return e;
            }
            e.prototype.addLoadingRes = function () {
                return [{
                    itemType: cc.SpriteAtlas,
                    itemNames: ["TP_snake_b_1", "TP_monster_b_1"],
                    loadType: r.LoadType.All
                }, {
                    itemType: cc.Prefab,
                    itemNames: ["BulletBase", "BulletJumpTarget", "HurtEffect"],
                    loadType: r.LoadType.All
                }, {
                    itemType: cc.AudioClip,
                    itemNames: ["bullet", "enemyBullet"],
                    loadType: r.LoadType.All
                }];
            };
            e.prototype.getInitTime = function () {
                return 100;
            };
            e.prototype.initData = function () {
                var t = this;
                this._snakeList.splice(0);
                this._enemyList.splice(0);
                this._snakeAtlas = l.FrameMgr.loadMgr.get("TP_snake_b_1", cc.SpriteAtlas);
                this._enemyAtlas = l.FrameMgr.loadMgr.get("TP_monster_b_1", cc.SpriteAtlas);
                cc.resources.load("texture/snake_bullet_tail_test", cc.SpriteFrame, function (e, i) {
                    t.testTail = i;
                });
                h.PoolMgr.initPoolWithLoaded("BulletBase", r.PoolType.SnakeBullet, 80, g.default);
                h.PoolMgr.initPoolWithLoaded("BulletBase", r.PoolType.EnemyBullet);
                h.PoolMgr.initPoolWithLoaded("BulletJumpTarget", r.PoolType.EnemyBulletJumpSnake);
                h.PoolMgr.initPoolWithLoaded("BulletJumpTarget", r.PoolType.SnakeBulletJumpEnemy, 8, m.default, d.EntityMgr.getPlayerBulletLayer());
                h.PoolMgr.initPoolWithLoaded("HurtEffect", "HurtAnim", 10, p.default, d.EntityMgr.getEffectLayer());
            };
            e.prototype.init = function () {
                this.m_safeArea = f.MapMgr.getCameraWidthArea();
            };
            e.prototype.clear = function () {
                h.PoolMgr.clearPool(r.PoolType.SnakeBullet);
                h.PoolMgr.clearPool(r.PoolType.EnemyBullet);
                h.PoolMgr.clearPool(r.PoolType.EnemyBulletJumpSnake);
                h.PoolMgr.clearPool(r.PoolType.SnakeBulletJumpEnemy);
                h.PoolMgr.clearPool("HurtAnim");
                u.DYTools.clearArrayForComp(this._snakeList);
                u.DYTools.clearArrayForComp(this._enemyList);
                u.DYTools.clearMapForComp(this._firePointMap);
                this._snakeAtlas = null;
                this._enemyAtlas = null;
                this.testTail = null;
                this.m_enabled = !1;
                this._guidePause = !1;
            };
            Object.defineProperty(e.prototype, "enabled", {
                get: function () {
                    return this.m_enabled;
                },
                set: function (t) {
                    this.m_enabled = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.startBattle = function () {
                this.enabled = !0;
            };
            e.prototype.checkBulletOutMap = function (t) {
                return t.x < this.m_safeArea.x || t.x < this.m_safeArea.y || t.x > this.m_safeArea.xMax || t.x > this.m_safeArea.yMax;
            };
            Object.defineProperty(e.prototype, "snakeAtlas", {
                get: function () {
                    return this._snakeAtlas;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "enemyAtlas", {
                get: function () {
                    return this._enemyAtlas;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "guidePause", {
                set: function (t) {
                    this._guidePause = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "snakeTail", {
                get: function () {
                    return this.testTail;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.getSnakeBullets = function () {
                return this._snakeList;
            };
            e.prototype.getEnemyBullets = function () {
                return this._enemyList;
            };
            e.prototype.getBulletData = function (t, e, n, a) {
                void 0 === n && (n = 0);
                void 0 === a && (a = 0);
                var r = i.BulletMgr.getBulletConfig(t);
                if (r) {
                    var s = new o.BulletData();
                    s.bulletAtk = r.bulletAtk * e;
                    s.critProb = n;
                    s.critAtkRatio = a;
                    s.image = r.image;
                    s.anchorY = r.anchorY;
                    s.frameCount = r.frameCount;
                    s.scaleAct = r.scaleAct;
                    s.bulletSpeed = r.bulletSpeed;
                    s.bulletRotateSpeed = r.bulletRotateSpeed;
                    s.bulletAccStartTime = r.bulletAccStartTime;
                    s.bulletAccLastTime = r.bulletAccLastTime;
                    s.bulletAcc = r.bulletAcc;
                    s.scale = r.scale;
                    s.revolve = r.revolve;
                    s.colliderData = r.colliderData;
                    s.colliderType = r.colliderType;
                    s.paraString = r.paraString;
                    s.otherPara = r.otherPara;
                    s.audio = r.audio;
                    s.bulletType = r.bulletType;
                    s.bulletOffset = cc.v2(r.bulletOffset[0], r.bulletOffset[1]);
                    s.selfOffset = cc.v2(r.selfOffset[0] || 0, r.selfOffset[1] || 0);
                    s.bulletNotThrough = r.bulletNotThrough;
                    s.tailCrazyPara = r.tailCrazyPara;
                    s.tailPara = r.tailPara;
                    s.hurtImage = r.hurtImage;
                    s.hurtCount = r.hurtCount;
                    return s;
                }
                return null;
            };
            e.prototype.getFireData = function (t) {
                var e = i.BulletMgr.getBulletConfig(t);
                if (e) {
                    var n = new o.FireData();
                    n.bulletId = e.id;
                    n.fireRange = e.fireRange;
                    n.fireSpeed = e.fireSpeed;
                    n.fireType = e.fireType;
                    n.offset = cc.v2(e.offset[0], e.offset[1]);
                    n.fireWarnTime = e.fireWarnTime;
                    n.fireWarnWaitTime = e.fireWarnWaitTime;
                    n.effectImg = e.effectImg;
                    n.effectOffset = cc.v2(e.effectOffset[0], e.effectOffset[1]);
                    n.effectImgCount = e.effectImgCount;
                    return n;
                }
                return null;
            };
            e.prototype.getBulletConfig = function (t) {
                return s.ConfigDataMgr.getData("ConfigBulletData", t);
            };
            e.prototype.getBullet = function (t, e) {
                var i, n = t ? d.EntityMgr.getEnemyBulletLayer() : d.EntityMgr.getPlayerBulletLayer(), a = null, o = "";
                switch (e) {
                    case r.BulletType.Normal:
                        o = t ? r.PoolType.EnemyBullet : r.PoolType.SnakeBullet;
                        a = _.default;
                        break;

                    case r.BulletType.Jump:
                        o = t ? r.PoolType.EnemyBulletJumpSnake : r.PoolType.SnakeBulletJumpEnemy;
                        a = m.default;
                }
                i = h.PoolMgr.get(o, a, n);
                t ? this._enemyList.push(i) : this._snakeList.push(i);
                return i;
            };
            e.prototype.putBullet = function (t, e, i) {
                var n = e ? this._enemyList : this._snakeList, a = "";
                switch (i) {
                    case r.BulletType.Normal:
                        a = e ? r.PoolType.EnemyBullet : r.PoolType.SnakeBullet;
                        break;

                    case r.BulletType.Jump:
                        a = e ? r.PoolType.EnemyBulletJumpSnake : r.PoolType.SnakeBulletJumpEnemy;
                }
                u.DYTools.arrRemove(n, t);
                h.PoolMgr.put(a, t);
            };
            e.prototype.removeAllBullet = function () {
                this._snakeList.concat(this._enemyList).forEach(function (t) {
                    t.remove();
                });
            };
            e.prototype.removeAllSnakeBullet = function () {
                this._snakeList.forEach(function (t) {
                    t.remove();
                });
            };
            e.prototype.removeAllEnemyBullet = function () {
                this._enemyList.forEach(function (t) {
                    t.remove();
                });
            };
            e.prototype.getBulletSprite = function (t, e) {
                return e ? this._enemyAtlas ? this._enemyAtlas.getSpriteFrame(t) : null : this._snakeAtlas ? this._snakeAtlas.getSpriteFrame(t) : null;
            };
            e.prototype.updateLogic = function (t) {
                this._firePointMap.forEach(function (e) {
                    e.updatePos(t);
                });
                if (this.m_enabled && !this._guidePause) {
                    for (var e = this._snakeList.length - 1; e >= 0; e--) this._snakeList[e].updateLogic(t);
                    for (e = this._enemyList.length - 1; e >= 0; e--) this._enemyList[e].updateLogic(t);
                    this._firePointMap.forEach(function (e) {
                        e.updateLogic(t);
                    });
                }
            };
            e.prototype.createFirePoint = function (t, e, i, n, a, r, o) {
                void 0 === r && (r = null);
                void 0 === o && (o = null);
                if (null == i || null == n) return null;
                if (0 == i.fireType || 0 == n.bulletType) return null;
                var s = new cc.Node("FirePoint");
                s.parent = e;
                var c = s.addComponent(t);
                c.init(a, i, n, r, o);
                this._firePointMap.set(a, c);
                return c;
            };
            e.prototype.changeFirePoint = function (t, e, i) {
                var n = this._firePointMap.get(i);
                if (n) {
                    n.changeData(t, e);
                    return n;
                }
                return null;
            };
            e.prototype.deleteFirePoint = function (t, e) {
                if (this._firePointMap.get(e) == t) {
                    t.clear();
                    t.node.destroy();
                    this._firePointMap.delete(e);
                }
            };
            e.prototype.getFirePointWithCreator = function (t) {
                return this._firePointMap.get(t) || null;
            };
            e.instance = new e();
            return e;
        }(c.BattleFlowBase);
        i.BulletMgr = y.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/game/FireBulletData": "FireBulletData",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/manager/PoolManager": "PoolManager",
        "../../../../util/Tools": "Tools",
        "../../bullet/Bullet/BulletEnemy": "BulletEnemy",
        "../../bullet/Bullet/BulletJumpTarget": "BulletJumpTarget",
        "../../bullet/Bullet/BulletSnake": "BulletSnake",
        "../../bullet/Hurt/HurtAnim": "HurtAnim",
        "./EntityManager": "EntityManager",
        "./MapManager": "MapManager"
    }],
    BulletSnake: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b718cXA9yhMwrQFB9EIAxZg", "BulletSnake");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./BulletBase"), s = cc._decorator, c = s.ccclass, l = (s.property, function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            return r([c], e);
        }(o.default));
        i.default = l;
        cc._RF.pop();
    }, {
        "./BulletBase": "BulletBase"
    }],
    BulletStraightComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "19f284YWkdDY6bNHA9oqKCT", "BulletStraightComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            e.prototype.updateLogic = function (t) {
                if (this.enabled && this.m_bullet) {
                    this.updateRotate(t);
                    this.updateSpeed(t);
                    var e = this.m_bullet.node.getPosition();
                    this.m_bullet.node.setPosition(e.add(this.m_dir.mul(t)));
                }
            };
            return e;
        }(t("./BulletBaseComp").default);
        i.default = r;
        cc._RF.pop();
    }, {
        "./BulletBaseComp": "BulletBaseComp"
    }],
    CameraAuto: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "078farlM1lMSIDvUTaNaGiE", "CameraAuto");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameConst"), s = t("../../../config/GameEnum"), c = t("../../../frame/manager/CameraManager"), l = t("../manager/battle/MapManager"), h = t("./CameraBase"), u = cc._decorator, p = u.ccclass, d = (u.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_able = !1;
                    e.m_velocity = [];
                    e.m_dir = cc.Vec2.ZERO;
                    e.m_dirTag = 0;
                    e.m_speed = cc.Vec2.ZERO;
                    e.m_dest = null;
                    e.m_wayArr = null;
                    return e;
                }
                e.prototype.startBattleReady = function (e) {
                    t.prototype.startBattleReady.call(this);
                    this.m_wayArr || (this.m_wayArr = []);
                    for (var i = 0, n = e.wayArr; i < n.length; i++) {
                        var a = n[i];
                        this.m_wayArr.push(a);
                    }
                    this.m_velocity = e.velocity ? e.velocity : [40, 80];
                    this.initStartPos();
                    this.node.on(s.EventTypeEnum.CameraMove, this.onCameraMove.bind(this), this);
                };
                e.prototype.startBattle = function () {
                    this.m_able = !0;
                    this.refreshDir(!0);
                };
                e.prototype.setCurDir = function (t) {
                    this.m_dir = t;
                    this.refreshSpeed();
                    this.refreshDirTag();
                };
                e.prototype.getCurSpeed = function () {
                    return this.m_able ? this.m_speed : cc.Vec2.ZERO;
                };
                e.prototype.onCameraMove = function (t) {
                    this.m_able = t;
                };
                e.prototype.initStartPos = function () {
                    var t = this.m_wayArr[0];
                    this.m_dirTag < 3 && (t.y += o.GValue.ViewCenter.y);
                    this.node.x = t.x;
                    this.node.y = t.y;
                };
                e.prototype.refreshDirTag = function () {
                    var t = this.m_dir;
                    t.equals(cc.Vec2.ZERO) || (Math.abs(t.x) - 1 < 0 ? t.y > 0 ? this.m_dirTag = 1 : this.m_dirTag = 2 : Math.abs(t.y) - 1 < 0 ? t.x > 0 ? this.m_dirTag = 4 : this.m_dirTag = 3 : t.x > 0 ? t.y > 0 ? this.m_dirTag = 8 : this.m_dirTag = 7 : t.y > 0 ? this.m_dirTag = 5 : this.m_dirTag = 6);
                };
                e.prototype.refreshSpeed = function () {
                    this.m_dirTag < 3 ? this.m_speed = this.m_dir.normalize().mul(this.m_velocity[1]) : this.m_speed = this.m_dir.normalize().mul(this.m_velocity[0]);
                };
                e.prototype.refreshDir = function (t) {
                    void 0 === t && (t = !1);
                    var e = cc.v2(0, 0);
                    if (t) {
                        e = this.m_wayArr[0];
                        this.m_wayArr.splice(0, 1);
                    } else e = this.m_dest;
                    if (this.m_wayArr.length > 0) {
                        this.m_dest = this.m_wayArr[0];
                        this.setCurDir(this.m_dest.sub(e));
                        1 == this.m_wayArr.length && l.MapMgr.doorLight();
                        return !0;
                    }
                    this.setCurDir(cc.Vec2.ZERO);
                    return !1;
                };
                e.prototype.checkMoveDest = function (t, e) {
                    var i = 0;
                    switch (this.m_dirTag) {
                        case 1:
                            e >= this.m_dest.y && (i = 1);
                            break;

                        case 2:
                            e <= this.m_dest.y && (i = 1);
                            break;

                        case 3:
                            t <= this.m_dest.x && (i = 1);
                            break;

                        case 4:
                            t >= this.m_dest.x && (i = 1);
                    }
                    if (1 == i) {
                        e = this.m_dest.y;
                        t = this.m_dest.x;
                    }
                    return [i, t, e];
                };
                e.prototype.onUpdate = function (t) {
                    if (this.m_able) {
                        var e = this.node.x + this.m_speed.x * t, i = this.node.y + this.m_speed.y * t, n = this.checkMoveDest(e, i);
                        this.node.x = n[1];
                        this.node.y = n[2];
                        if (n[0]) {
                            this.m_wayArr.splice(0, 1);
                            this.refreshDir() || c.CameraMgr.setMapOver(!0);
                        }
                    }
                };
                return r([p], e);
            }(h.default));
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../config/GameConst": "GameConst",
        "../../../config/GameEnum": "GameEnum",
        "../../../frame/manager/CameraManager": "CameraManager",
        "../manager/battle/MapManager": "MapManager",
        "./CameraBase": "CameraBase"
    }],
    CameraBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "a2be6HseotApbGnDjtiBUSC", "CameraBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameConst"), s = t("../../../config/GameEnum"), c = t("../../../data/manager/ConfigDataManager"), l = t("../common/EntityBase"), h = t("../manager/battle/MapManager"), u = t("../manager/battle/SnakeManager"), p = cc._decorator, d = p.ccclass, f = (p.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.maskNode = [];
                    e.cameraEdgeLeft = 0;
                    e.cameraEdgeRight = 0;
                    e.cameraEdgeTop = 0;
                    e.cameraEdgeBot = 0;
                    e._normalRect = 0;
                    e._farRect = 0;
                    e._speedRect = 0;
                    e._maxLeft = 0;
                    e._maxRight = 0;
                    e._normalLeft = 0;
                    e._normalRight = 0;
                    e._centerX = 0;
                    return e;
                }
                e.prototype.onLoad = function () {
                    var t = c.ConfigDataMgr.getGlobalDataNumArr(s.GlobalKey.BattleCameraRect);
                    this._normalRect = t[0];
                    this._farRect = t[1];
                    this._speedRect = t[2];
                };
                e.prototype.startBattleReady = function () { };
                e.prototype.startBattle = function () {
                    this._centerX = h.MapMgr.mapData.player.x;
                    this._maxLeft = this._centerX - this._farRect;
                    this._maxRight = this._centerX + this._farRect;
                    this._normalLeft = this._centerX - this._normalRect;
                    this._normalRight = this._centerX + this._normalRect;
                };
                e.prototype.updateLogic = function (t) {
                    this.onUpdate(t);
                    this.cameraEdgeLeft = this.node.x - o.GValue.ViewWidth / 2;
                    this.cameraEdgeRight = this.node.x + o.GValue.ViewWidth / 2;
                    this.cameraEdgeTop = this.node.y + o.GValue.ViewHeight / 2;
                    this.cameraEdgeBot = this.node.y - o.GValue.ViewHeight / 2;
                };
                e.prototype.getCurCameraX = function (t, e, i) {
                    return t === e ? t : this._normalLeft !== this._normalRight && (t > this._normalLeft || t < this._normalRight) ? t : t < this._maxLeft || t > this._maxRight ? e : e + (t - e) * i * this._speedRect;
                };
                e.prototype.onUpdate = function (t) {
                    var e = u.SnakeMgr.getSnakeHead();
                    if (e && e.node) {
                        var i = this.node.position, n = e.node.position, a = this.getCurCameraX(n.x, i.x, t);
                        this.node.y = cc.misc.lerp(this.node.y, n.y, .1);
                        this.node.x = cc.misc.lerp(this.node.x, a, .1);
                        var r = this.node.position.sub(i);
                        h.MapMgr.topLayer.position = h.MapMgr.topLayer.position.add(r.mul(-.2));
                    }
                };
                return r([d], e);
            }(l.default));
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../config/GameConst": "GameConst",
        "../../../config/GameEnum": "GameEnum",
        "../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../common/EntityBase": "EntityBase",
        "../manager/battle/MapManager": "MapManager",
        "../manager/battle/SnakeManager": "SnakeManager"
    }],
    CameraManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "ca6fd5cKP9EPrUQzyrlG9Rs", "CameraManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.CameraMgr = void 0;
        var r = t("../../config/GameConst"), o = t("../../logic/battle/camera/CameraBase"), s = t("../../logic/battle/manager/battle/MapManager"), c = t("../../logic/battle/manager/battle/SnakeManager"), l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.cameraEntity = null;
                e.m_mapOver = !1;
                e._enable = !0;
                return e;
            }
            e.prototype.getCameraEdge = function () {
                return {
                    l: this.cameraEntity.cameraEdgeLeft,
                    r: this.cameraEntity.cameraEdgeRight,
                    t: this.cameraEntity.cameraEdgeTop,
                    b: this.cameraEntity.cameraEdgeBot
                };
            };
            Object.defineProperty(e.prototype, "enabled", {
                set: function (t) {
                    this._enable = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.updateLogic = function (t) {
                this._enable && this.cameraEntity && this.cameraEntity.updateLogic(t);
            };
            e.prototype.cameraFocus = function (t, e, i, n) {
                void 0 === e && (e = null);
                void 0 === i && (i = 1);
                void 0 === n && (n = 0);
                cc.tween(this.cameraEntity.node).to(i, {
                    x: t.x,
                    y: t.y
                }).delay(n).call(function () {
                    e && e();
                }).start();
            };
            e.prototype.setMapOver = function (t) {
                this.m_mapOver = t;
            };
            e.prototype.getMapOver = function () {
                return this.m_mapOver;
            };
            e.prototype.onGameWillOver = function (t) {
                this._enable = !1;
                var e = s.MapMgr.getEndPosByDoor();
                cc.tween(this.cameraEntity.node).call(function () {
                    s.MapMgr.doorBlast(function () {
                        t && t();
                    });
                }).to(1, {
                    x: e.x,
                    y: e.y
                }, cc.easeOut(1)).start();
            };
            e.prototype.cameraMoveToSnake = function (t) {
                var e = this, i = c.SnakeMgr.getSnakeHead().node.position;
                cc.tween(this.cameraEntity.node).to(1, {
                    x: i.x,
                    y: i.y
                }, cc.easeOut(1)).call(function () {
                    var i = s.MapMgr.getEndPosByDoor();
                    cc.tween(e.cameraEntity.node).to(1, {
                        x: i.x,
                        y: i.y
                    }, cc.easeOut(1)).start();
                    t && t();
                }).start();
            };
            e.prototype.addLoadingRes = function () {
                return [];
            };
            e.prototype.initData = function () { };
            e.prototype.init = function () {
                this._enable = !0;
                this.cameraEntity = r.GValue.BattleCameraNode.addComponent(o.default);
            };
            e.prototype.startBattleReady = function () {
                this.cameraEntity.startBattleReady(null);
            };
            e.prototype.startBattle = function () {
                this.cameraEntity.startBattle();
            };
            e.prototype.clear = function () {
                if (this.cameraEntity) {
                    this.cameraEntity.destroy();
                    this.cameraEntity = null;
                }
            };
            e.instance = new e();
            return e;
        }(t("./BattleFlowManager").BattleFlowBase);
        i.default = l;
        i.CameraMgr = l.instance;
        cc._RF.pop();
    }, {
        "../../config/GameConst": "GameConst",
        "../../logic/battle/camera/CameraBase": "CameraBase",
        "../../logic/battle/manager/battle/MapManager": "MapManager",
        "../../logic/battle/manager/battle/SnakeManager": "SnakeManager",
        "./BattleFlowManager": "BattleFlowManager"
    }],
    CircleColliderComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "021e6rmMW1HtZTyEs2MWBRG", "CircleColliderComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../config/GameEnum"), o = t("../../../util/Tools"), s = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_type = r.ColliderType.Circle;
                e.m_data = {
                    position: cc.Vec2.ZERO,
                    radius: 0
                };
                return e;
            }
            e.prototype.init = function (e, i, n) {
                this.initBase(i, n);
                t.prototype.init.call(this, e, i, n);
                if (e.length > 2) {
                    this.m_offset.x = e[0];
                    this.m_offset.y = e[1];
                    this.position = cc.v2(e[0], e[1]);
                    this.radius = e[2];
                } else o.DYTools.error("circle colider data error", JSON.stringify(e));
            };
            Object.defineProperty(e.prototype, "data", {
                get: function () {
                    return this.m_data;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "position", {
                get: function () {
                    return this.m_data.position;
                },
                set: function (t) {
                    this.m_data.position = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "radius", {
                get: function () {
                    return this.m_data.radius;
                },
                set: function (t) {
                    this.m_data.radius = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.onEnable = function () {
                t.prototype.onEnable.call(this);
                this.updateLogic(0);
            };
            e.prototype.updateLogic = function () {
                if (this.node) {
                    this.position.x = this.node.position.x + this.m_offset.x;
                    this.position.y = this.node.position.y + this.m_offset.y;
                }
            };
            e.prototype.draw = function () {
                var t = this.node.addComponent(cc.CircleCollider);
                t.radius = this.radius / this.node.scale;
                t.offset.x = this.m_offset.x / this.node.scale;
                t.offset.y = this.m_offset.y / this.node.scale;
            };
            return e;
        }(t("./ColliderComp").default);
        i.default = s;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../../../util/Tools": "Tools",
        "./ColliderComp": "ColliderComp"
    }],
    CoinWaveManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e9443a2p1ZHc7stYhdAviVZ", "CoinWaveManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.CoinWaveMgr = void 0;
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../data/manager/ConfigDataManager"), c = t("../../../../../frame/manager/BattleFlowManager"), l = t("../../../../../util/Tools"), h = t("../BattleManager"), u = t("../EnemyManager"), p = t("../MapManager"), d = t("../PropManager"), f = cc._decorator, m = f.ccclass, g = (f.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_enabled = !1;
                    e.m_stage = 1;
                    e.m_data = null;
                    e.m_isOver = !1;
                    e.m_stageTime = 0;
                    e.m_type = 0;
                    e.m_pointEnemyMap = new Map();
                    e.m_minGoldEnemyArr = [];
                    e.m_minGoldTime = -1;
                    e.m_largeGoldEnemyArr = [];
                    e.m_largeGoldTime = -1;
                    e.m_time = 0;
                    e.m_snakeUnitTimeIndex = 0;
                    e.m_snakeUnitTime = -1;
                    e.m_diamondTimeIndex = 0;
                    e.m_diamondTime = -1;
                    e.m_crazyTimeIndex = 0;
                    e.m_crazyTime = -1;
                    e.m_blockEnemyArr = [];
                    return e;
                }
                i = e;
                e.prototype.addLoadingRes = function () {
                    return [];
                };
                e.prototype.getInitTime = function () {
                    return 50;
                };
                e.prototype.initData = function () {
                    this.m_stage = h.BattleMgr.stage;
                    this.m_data = s.ConfigDataMgr.getData("ConfigStageCoinData", this.m_stage);
                    var t = s.ConfigDataMgr.getData("ConfigStageInfoData", this.m_stage), e = l.DYTools.stringToNumber(t.param);
                    this.m_stageTime = e[0] ? e[0] : 30;
                    this.m_type = e[1] ? e[1] : 2;
                };
                e.prototype.init = function () {
                    this.m_isOver = !1;
                };
                e.prototype.clear = function () {
                    this.priority = -1;
                    this.m_enabled = !1;
                    this.m_data = null;
                    this.m_stage = 0;
                    this.m_stageTime = 0;
                    this.m_isOver = !1;
                    this.m_pointEnemyMap.clear();
                    this.m_minGoldEnemyArr.splice(0);
                    this.m_largeGoldEnemyArr.splice(0);
                    this.m_time = 0;
                    this.m_snakeUnitTime = -1;
                    this.m_snakeUnitTimeIndex = 0;
                    this.m_diamondTime = -1;
                    this.m_diamondTimeIndex = 0;
                    this.m_crazyTime = -1;
                    this.m_crazyTimeIndex = 0;
                    this.m_blockEnemyArr.splice(0);
                };
                e.prototype.updateLogic = function (t) {
                    if (this.m_enabled && !this.m_isOver) {
                        this.m_time += t;
                        this.checkIsOver();
                        this.updateMinGoldEnemy(t);
                        this.updateLargeGoldEnemy(t);
                        this.updateSnakeUnitEnemy(t);
                        this.updateDiamondEnemy(t);
                        this.updateCrazyEnemy(t);
                        this.updateEnemys();
                    }
                };
                e.prototype.startBattleReady = function () {
                    "" != this.m_data.prop && d.PropMgr.addProp(this.m_data.prop, 0);
                    for (var t = 0; t < this.m_data.minGoldInitNum; t++) if (e = this._createEnemy(this.m_data.minGoldEnemyId, this.m_data.minGoldPoints)) {
                        e.group = o.ColliderGroup.Prop;
                        e.addCoinComp(o.CoinEnemyType.GoldMin, this.m_data.minGoldLootHpPercent, this.m_data.minGoldLootPercent, this.m_data.minGoldLootDie);
                        this.m_minGoldEnemyArr.push(e);
                    }
                    for (t = 0; t < this.m_data.largeGoldInitNum; t++) {
                        var e;
                        if (e = this._createEnemy(this.m_data.largeGoldEnemyId, this.m_data.largeGoldPoints)) {
                            e.group = o.ColliderGroup.Prop;
                            e.addCoinComp(o.CoinEnemyType.GoldLarge, this.m_data.largeGoldLootHpPercent, this.m_data.largeGoldLootPercent, this.m_data.largeGoldLootDie);
                            this.m_largeGoldEnemyArr.push(e);
                            p.MapMgr.setPathPointsForCircle(e.node.getPosition(), e.radius, !1);
                            this.m_blockEnemyArr.push(e.getCollider());
                        }
                    }
                };
                e.prototype.startBattle = function () {
                    this.m_enabled = !0;
                    this.checkNextSnakeUnitTime();
                    this.checkNextDiamondTime();
                    this.checkNextCrazyTime();
                };
                e.prototype.updateEnemys = function () {
                    var t = this;
                    this.m_pointEnemyMap.forEach(function (e, i) {
                        e && e.isDead && t.m_pointEnemyMap.delete(i);
                    });
                    for (var e = 0; e < this.m_minGoldEnemyArr.length; e++) if ((i = this.m_minGoldEnemyArr[e]) && i.isDead) {
                        this.m_minGoldEnemyArr.splice(e, 1);
                        e--;
                    }
                    for (e = 0; e < this.m_largeGoldEnemyArr.length; e++) {
                        var i;
                        if ((i = this.m_largeGoldEnemyArr[e]) && i.isDead) {
                            this.m_largeGoldEnemyArr.splice(e, 1);
                            l.DYTools.arrRemove(this.m_blockEnemyArr, i.getCollider());
                            p.MapMgr.setPathPointsForCircle(i.node.getPosition(), i.radius, !0);
                            e--;
                        }
                    }
                };
                e.prototype.checkIsOver = function () {
                    if (this.m_time >= this.m_stageTime) {
                        this.m_time = this.m_stageTime;
                        this.m_isOver = !0;
                    }
                };
                e.prototype.updateMinGoldEnemy = function (t) {
                    if (this.m_minGoldEnemyArr.length < this.m_data.minGoldLessNum) {
                        this.m_minGoldTime < 0 && (this.m_minGoldTime = 0);
                        this.m_minGoldTime += t;
                        if (this.m_minGoldTime > this.m_data.minGoldNewDelay) {
                            for (var e = l.DYTools.random_int(this.m_data.minGoldNewRange.x, this.m_data.minGoldNewRange.y), i = function () {
                                var t = n._createEnemy(n.m_data.minGoldEnemyId, n.m_data.minGoldPoints);
                                if (t) {
                                    t.group = o.ColliderGroup.Prop;
                                    t.addCoinComp(o.CoinEnemyType.GoldMin, n.m_data.minGoldLootHpPercent, n.m_data.minGoldLootPercent, n.m_data.minGoldLootDie);
                                    t.addEnterComp(100, null, null, function () {
                                        t.startBattle();
                                    });
                                    n.m_minGoldEnemyArr.push(t);
                                }
                            }, n = this, a = 0; a < e; a++) i();
                            this.m_minGoldEnemyArr.length >= this.m_data.minGoldLessNum && (this.m_minGoldTime = -1);
                        }
                    }
                };
                e.prototype.updateLargeGoldEnemy = function (t) {
                    if (this.m_largeGoldEnemyArr.length < this.m_data.largeGoldLessNum) {
                        this.m_largeGoldTime < 0 && (this.m_largeGoldTime = 0);
                        this.m_largeGoldTime += t;
                        if (this.m_largeGoldTime > this.m_data.largeGoldNewDelay) {
                            for (var e = l.DYTools.random_int(this.m_data.largeGoldNewRange.x, this.m_data.largeGoldNewRange.y), i = function () {
                                var t = n._createEnemy(n.m_data.largeGoldEnemyId, n.m_data.largeGoldPoints);
                                if (t) {
                                    t.group = o.ColliderGroup.Prop;
                                    t.addCoinComp(o.CoinEnemyType.GoldLarge, n.m_data.largeGoldLootHpPercent, n.m_data.largeGoldLootPercent, n.m_data.largeGoldLootDie);
                                    t.addEnterComp(100, null, null, function () {
                                        t.startBattle();
                                    });
                                    n.m_largeGoldEnemyArr.push(t);
                                    p.MapMgr.setPathPointsForCircle(t.node.getPosition(), t.radius, !1);
                                    n.m_blockEnemyArr.push(t.getCollider());
                                }
                            }, n = this, a = 0; a < e; a++) i();
                            this.m_largeGoldEnemyArr.length >= this.m_data.largeGoldLessNum && (this.m_largeGoldTime = -1);
                        }
                    }
                };
                e.prototype.updateSnakeUnitEnemy = function () {
                    if (this.m_snakeUnitTime >= 0 && this.m_time > this.m_snakeUnitTime) {
                        for (var t = this.m_data.snakeUnitNums[this.m_snakeUnitTimeIndex - 1], e = function () {
                            var t = i._createEnemy(i.m_data.snakeUnitEnemyId, i.m_data.snakeUnitPoints);
                            if (t) {
                                t.group = o.ColliderGroup.Prop;
                                t.addCoinComp(o.CoinEnemyType.SnakeUnit, i.m_data.snakeUnitLootHpPercent, i.m_data.snakeUnitLootPercent, i.m_data.snakeUnitLootDie);
                                t.addEnterComp(100, null, null, function () {
                                    t.startBattle();
                                });
                            }
                        }, i = this, n = 0; n < t; n++) e();
                        this.checkNextSnakeUnitTime();
                    }
                };
                e.prototype.checkNextSnakeUnitTime = function () {
                    this.m_data.snakeUnitTimes.length > this.m_snakeUnitTimeIndex ? this.m_snakeUnitTime = this.m_data.snakeUnitTimes[this.m_snakeUnitTimeIndex++] : this.m_snakeUnitTime = -1;
                };
                e.prototype.updateDiamondEnemy = function () {
                    if (this.m_diamondTime >= 0 && this.m_time > this.m_diamondTime) {
                        for (var t = this.m_data.diamondNums[this.m_diamondTimeIndex - 1] || 0, e = function () {
                            var t = i._createEnemy(i.m_data.diamondEnemyId, i.m_data.diamondPoints);
                            if (t) {
                                t.group = o.ColliderGroup.Prop;
                                t.addCoinComp(o.CoinEnemyType.Diamond, i.m_data.diamondLootHpPercent, i.m_data.diamondLootPercent, i.m_data.diamondLootDie);
                                t.addEnterComp(100, null, null, function () {
                                    t.startBattle();
                                });
                            }
                        }, i = this, n = 0; n < t; n++) e();
                        this.checkNextDiamondTime();
                    }
                };
                e.prototype.checkNextDiamondTime = function () {
                    this.m_data.diamondTimes.length > this.m_diamondTimeIndex ? this.m_diamondTime = this.m_data.diamondTimes[this.m_diamondTimeIndex++] : this.m_diamondTime = -1;
                };
                e.prototype.updateCrazyEnemy = function () {
                    if (this.m_crazyTime >= 0 && this.m_time > this.m_crazyTime) {
                        var t = this._createEnemy(this.m_data.crazyEnemyId, this.m_data.crazyPoints);
                        if (t) {
                            t.group = o.ColliderGroup.Enemy;
                            t.setLootArr([cc.v2(o.LootType.Crazy, 1)]);
                            t.addEnterComp(100, null, null, function () {
                                t.startBattle();
                            });
                        }
                        this.checkNextCrazyTime();
                    }
                };
                e.prototype.checkNextCrazyTime = function () {
                    this.m_data.crazyTimes.length > this.m_crazyTimeIndex ? this.m_crazyTime = this.m_data.crazyTimes[this.m_crazyTimeIndex++] : this.m_crazyTime = -1;
                };
                e.prototype._createEnemy = function (t, e, i) {
                    void 0 === i && (i = !0);
                    for (var n = [], a = 0; a < e.length; a++) this.m_pointEnemyMap.get(e[a]) || n.push(e[a]);
                    if (0 == n.length) {
                        l.DYTools.error("no point for gold", t);
                        return null;
                    }
                    var r = l.DYTools.getRandomInArray(n), o = u.EnemyMgr.createNormalEnemy(t);
                    u.EnemyMgr.setSpawnPos(o, r);
                    o.init();
                    this.m_pointEnemyMap.set(r, o);
                    return o;
                };
                Object.defineProperty(e.prototype, "enabled", {
                    get: function () {
                        return this.m_enabled;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "type", {
                    get: function () {
                        return this.m_type;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "data", {
                    get: function () {
                        return this.m_data;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.isOver = function () {
                    return this.m_isOver;
                };
                Object.defineProperty(e.prototype, "stageTime", {
                    get: function () {
                        return this.m_stageTime;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "leftTime", {
                    get: function () {
                        return this.m_stageTime - this.m_time;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "leftTimeRatio", {
                    get: function () {
                        return this.leftTime / this.m_stageTime;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "blockEnemys", {
                    get: function () {
                        return this.m_blockEnemyArr;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                var i;
                e.instance = new i();
                return r([m], e);
            }(c.BattleFlowBase));
        i.default = g;
        i.CoinWaveMgr = g.instance;
        cc._RF.pop();
    }, {
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../../util/Tools": "Tools",
        "../BattleManager": "BattleManager",
        "../EnemyManager": "EnemyManager",
        "../MapManager": "MapManager",
        "../PropManager": "PropManager"
    }],
    CollideArea: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "776736e+GNKkJOj/q7CfaoM", "CollideArea");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var n = t("../../../config/GameConst"), a = t("../../../config/GameEnum"), r = t("../../../util/Tools"), o = t("../manager/battle/BulletManager"), s = t("../manager/battle/EnemyManager"), c = t("../manager/battle/MapManager"), l = t("../manager/battle/LootManager"), h = t("../manager/battle/SnakeManager"), u = t("../manager/battle/PropManager"), p = t("../manager/battle/BossManager"), d = function () {
            function t(t) {
                this.m_rect = new cc.Rect();
                this.m_left = 0;
                this.m_right = 0;
                this.m_bottom = 0;
                this.m_top = 0;
                this.m_children = null;
                this.m_camera = null;
                this.m_playerArr = [];
                this.m_playerBulletArr = [];
                this.m_lootArr = [];
                this.m_playerSkillArr = [];
                this.m_enemyArr = [];
                this.m_enemyBulletArr = [];
                this.m_blockArr = [];
                this.m_cliffArr = [];
                this.m_wallArr = [];
                this.m_veinCellArr = [];
                this.parent = t;
            }
            t.prototype.setCamera = function (t) {
                this.m_camera = t;
            };
            t.prototype.init = function (t, e, i, n) {
                this.m_rect.x = t;
                this.m_rect.y = e;
                this.m_rect.width = i;
                this.m_rect.height = n;
                this.m_left = this.m_rect.x;
                this.m_right = this.m_rect.xMax;
                this.m_bottom = this.m_rect.y;
                this.m_top = this.m_rect.yMax;
            };
            t.prototype.refreshPosition = function (t, e) {
                this.m_rect.x = t;
                this.m_rect.y = e;
                this.m_left = this.m_rect.x;
                this.m_right = this.m_rect.xMax;
                this.m_bottom = this.m_rect.y;
                this.m_top = this.m_rect.yMax;
            };
            t.prototype.createChildren = function (e) {
                void 0 === e && (e = 0);
                this.m_children = [];
                var i = this.m_rect.width / 2, n = this.m_rect.height / 2, a = this.m_rect.x, r = this.m_rect.y, o = new t(this);
                o.setCamera(this.m_camera);
                this.m_children.push(o);
                o.init(a, r + n, i, n);
                var s = new t(this);
                s.setCamera(this.m_camera);
                this.m_children.push(s);
                s.init(a + i, r + n, i, n);
                var c = new t(this);
                c.setCamera(this.m_camera);
                this.m_children.push(c);
                c.init(a, r, i, n);
                var l = new t(this);
                l.setCamera(this.m_camera);
                this.m_children.push(l);
                l.init(a + i, r, i, n);
                if (e > 0) {
                    e--;
                    o.createChildren(e);
                    o.createChildren(e);
                    o.createChildren(e);
                    o.createChildren(e);
                }
            };
            t.prototype.addEntity = function (t) {
                if (t) {
                    var e = t.getColliders();
                    if (!e) return;
                    switch (t.group) {
                        case a.ColliderGroup.Player:
                            this.addColliders(e, t, this.m_playerArr);
                            break;

                        case a.ColliderGroup.PlayerBullet:
                            this.addColliders(e, t, this.m_playerBulletArr);
                            break;

                        case a.ColliderGroup.PlayerSkill:
                            this.addColliders(e, t, this.m_playerSkillArr);

                        case a.ColliderGroup.Loot:
                            this.addColliders(e, t, this.m_lootArr);
                            break;

                        case a.ColliderGroup.Enemy:
                            this.addColliders(e, t, this.m_enemyArr);
                            break;

                        case a.ColliderGroup.EnemyBullet:
                        case a.ColliderGroup.TrapBall:
                            this.addColliders(e, t, this.m_enemyBulletArr);
                            break;

                        case a.ColliderGroup.EnemyBlock:
                            this.addColliders(e, t, this.m_blockArr);

                        case a.ColliderGroup.Block:
                        case a.ColliderGroup.Prop:
                            this.addColliders(e, t, this.m_blockArr);
                    }
                }
            };
            t.prototype.addColliders = function (t, e, i) {
                if (Array.isArray(t)) for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enabled && (a.entity, this.checkGroup(a, e, i));
                } else this.checkGroup(t, e, i);
            };
            t.prototype.checkGroup = function (t, e, i) {
                if (t.entity) switch (t.entity.group) {
                    case a.ColliderGroup.EnemyBullet:
                    case a.ColliderGroup.PlayerBullet:
                    case a.ColliderGroup.Enemy:
                    default:
                        this.addCollider(t, e, i);
                }
            };
            t.prototype.addCollider = function (t, e, i) {
                if (this.m_children) for (var n = this.m_children.length, a = 0; a < n; a++) this.m_children[a].addEntity(e); else i.push(t);
            };
            t.prototype.isNotInArea = function (t) {
                if (0 == t.enabled) return !0;
                switch (t.type) {
                    case a.ColliderType.Circle:
                        var e = t, i = e.position, n = e.radius;
                        return i.x - n > this.m_right || i.x + n < this.m_left || i.y - n > this.m_top || i.y + n < this.m_bottom;

                    case a.ColliderType.Rectangle:
                        var r = t;
                        return r.minX > this.m_right || r.maxX < this.m_left || r.minY > this.m_top || r.maxY < this.m_bottom;

                    case a.ColliderType.Polygon:
                        return !1;
                }
                return !1;
            };
            t.prototype.checkReady = function () {
                this.m_playerBulletArr.splice(0);
                this.m_playerSkillArr.splice(0);
                this.m_playerArr.splice(0);
                this.m_enemyArr.splice(0);
                this.m_lootArr.splice(0);
                this.m_enemyBulletArr.splice(0);
                this.m_blockArr.splice(0);
                this.m_cliffArr.splice(0);
                this.m_wallArr.splice(0);
                var t = h.SnakeMgr.getSnakeUnits();
                this.addEntity(t[0]);
                for (var e = o.BulletMgr.getSnakeBullets(), i = 0, n = e.length; i < n; i++) this.addEntity(e[i]);
                for (i = 0, n = (e = o.BulletMgr.getEnemyBullets()).length; i < n; i++) this.addEntity(e[i]);
                var a = c.MapMgr.trapBalls;
                for (i = 0, n = a.length; i < n; i++) this.addEntity(a[i]);
                var r = c.MapMgr.blockCols;
                this.m_blockArr = this.m_blockArr.concat(r);
                var d = u.PropMgr.props;
                for (i = 0; i < d.length; i++) {
                    var f = d[i];
                    this.m_blockArr.push(f.getColliders());
                }
                var m = c.MapMgr.cliffCols;
                this.m_cliffArr = this.m_cliffArr.concat(m);
                var g = s.EnemyMgr.enemys;
                for (i = 0, n = g.length; i < n; i++) {
                    var _ = g[i];
                    _.isDead || this.addEntity(_);
                }
                var y = p.BossMgr.getBosses();
                for (i = 0; i < y.length; i++) {
                    var v = y[i];
                    if (!v.isDead) {
                        this.addEntity(v);
                        var b = v.getBossOtherEntity();
                        if (b) for (var M = 0; M < b.length; M++) this.addEntity(b[M]);
                    }
                }
                var S = l.LootMgr.lootItems;
                for (i = 0; i < S.length; i++) {
                    var k = S[i];
                    k.isPicked || this.addEntity(k);
                }
                var C = c.MapMgr.wallCols;
                for (i = 0; i < C.length; i++) this.m_wallArr.push(C[i]);
            };
            t.prototype.updateLogic = function (t) {
                if (this.m_children) for (var e = 0; e < this.m_children.length; e++) this.m_children[e].updateLogic(t);
                this.checkReady();
                this.checkWallContacts();
                this.checkBlockContacts();
                this.checkCliffContacts();
                this.checkContacts();
            };
            t.prototype.transfrom = function () {
                if (this.m_children) {
                    this.init(this.m_camera.x - n.GValue.ViewCenter.x, this.m_camera.y - n.GValue.ViewCenter.y, n.GValue.ViewWidth, n.GValue.ViewHeight);
                    var t = this.m_rect.x, e = this.m_rect.y;
                    this.m_children[0].refreshPosition(t, e);
                    this.m_children[1].refreshPosition(t, this.m_camera.y);
                    this.m_children[2].refreshPosition(this.m_camera.x, e);
                    this.m_children[3].refreshPosition(this.m_camera.x, this.m_camera.y);
                }
            };
            t.prototype.checkWallContacts = function () {
                for (var t = this.m_wallArr.length, e = 0; e < t; e++) {
                    var i = this.m_wallArr[e];
                    if (i.enabled) {
                        for (var n = this.m_playerArr.length, a = 0; a < n; a++) {
                            var r = this.m_playerArr[a];
                            if (r.enabled) {
                                var o = this.checkContactType(r, i, this.checkCollide(i, r));
                                this.emitCollideWall(r, i, o);
                            }
                        }
                        var s = this.m_enemyArr.length;
                        for (a = 0; a < s; a++) {
                            var c = this.m_enemyArr[a];
                            if (c.enabled) {
                                o = this.checkContactType(c, i, this.checkCollide(i, c));
                                this.emitCollideWall(c, i, o);
                            }
                        }
                        var l = this.m_playerBulletArr.length;
                        for (a = 0; a < l; a++) if ((d = this.m_playerBulletArr[a]).enabled) {
                            o = this.checkContactType(d, i, this.checkCollide(i, d));
                            this.emitCollideWall(d, i, o);
                        }
                        var h = this.m_lootArr.length;
                        for (a = 0; a < h; a++) {
                            var u = this.m_lootArr[a];
                            if (u.enabled) {
                                o = this.checkContactType(u, i, this.checkCollide(i, u));
                                this.emitCollideWall(u, i, o);
                            }
                        }
                        var p = this.m_enemyBulletArr.length;
                        for (a = 0; a < p; a++) {
                            var d;
                            if ((d = this.m_enemyBulletArr[a]).enabled) {
                                o = this.checkContactType(d, i, this.checkCollide(i, d));
                                this.emitCollideWall(d, i, o);
                            }
                        }
                    }
                }
            };
            t.prototype.checkBlockContacts = function () {
                for (var t = this.m_blockArr.length, e = 0; e < t; e++) {
                    var i = this.m_blockArr[e];
                    if (i.enabled) {
                        for (var n = this.m_playerArr.length, a = 0; a < n; a++) {
                            var r = this.m_playerArr[a];
                            if (r.enabled) {
                                var o = this.checkContactType(r, i, this.checkCollide(i, r));
                                this.emitCollideBlock(r, i, o);
                            }
                        }
                        var s = this.m_enemyArr.length;
                        for (a = 0; a < s; a++) {
                            var c = this.m_enemyArr[a];
                            if (c.enabled) {
                                o = this.checkContactType(c, i, this.checkCollide(i, c));
                                this.emitCollideBlock(c, i, o);
                            }
                        }
                        var l = this.m_playerBulletArr.length;
                        for (a = 0; a < l; a++) if ((d = this.m_playerBulletArr[a]).enabled) {
                            o = this.checkContactType(d, i, this.checkCollide(i, d));
                            this.emitCollideBlock(d, i, o);
                        }
                        var h = this.m_lootArr.length;
                        for (a = 0; a < h; a++) {
                            var u = this.m_lootArr[a];
                            if (u.enabled) {
                                o = this.checkContactType(u, i, this.checkCollide(i, u));
                                this.emitCollideBlock(u, i, o);
                            }
                        }
                        var p = this.m_enemyBulletArr.length;
                        for (a = 0; a < p; a++) {
                            var d;
                            if ((d = this.m_enemyBulletArr[a]).enabled) {
                                o = this.checkContactType(d, i, this.checkCollide(i, d));
                                this.emitCollideBlock(d, i, o);
                            }
                        }
                    }
                }
            };
            t.prototype.checkCliffContacts = function () {
                for (var t = this.m_cliffArr.length, e = 0; e < t; e++) {
                    var i = this.m_cliffArr[e];
                    if (i.enabled) {
                        for (var n = this.m_playerArr.length, a = 0; a < n; a++) {
                            var r = this.m_playerArr[a];
                            if (r.enabled) {
                                var o = this.checkContactType(r, i, this.checkCollide(i, r));
                                this.emitCollideBlock(r, i, o);
                            }
                        }
                        var s = this.m_enemyArr.length;
                        for (a = 0; a < s; a++) {
                            var c = this.m_enemyArr[a];
                            if (c.enabled) {
                                o = this.checkContactType(c, i, this.checkCollide(i, c));
                                this.emitCollideBlock(c, i, o);
                            }
                        }
                        var l = this.m_lootArr.length;
                        for (a = 0; a < l; a++) {
                            var h = this.m_lootArr[a];
                            if (h.enabled) {
                                o = this.checkContactType(h, i, this.checkCollide(i, h));
                                this.emitCollideBlock(h, i, o);
                            }
                        }
                    }
                }
            };
            t.prototype.checkVeinContacts = function () {
                for (var t = h.SnakeMgr.getSnakeColliders(), e = 0, i = t.length; e < i; e++) for (var n = t[e], r = 0; r < this.m_veinCellArr.length; r++) {
                    var o = this.m_veinCellArr[r];
                    if (o.enabled) {
                        var s = this.checkContactType(o, n, this.checkCollide(o, n));
                        s != a.ContactType.None && o.onCollide(s, n);
                    }
                }
            };
            t.prototype.checkContacts = function () {
                for (var t = 0; t < this.m_playerBulletArr.length; t++) {
                    var e = this.m_playerBulletArr[t];
                    if (e.enabled) {
                        for (var i = 0; i < this.m_enemyArr.length; i++) if ((o = this.m_enemyArr[i]).enabled) {
                            var n = this.checkContactType(o, e, this.checkCollide(o, e));
                            if (this.emitCollide(o, e, n) && !e.enabled) break;
                        }
                        e.enabled;
                    }
                }
                for (t = 0; t < this.m_playerSkillArr.length; t++) {
                    var a = this.m_playerSkillArr[t];
                    if (a.enabled) for (i = 0; i < this.m_enemyArr.length; i++) if ((o = this.m_enemyArr[i]).enabled) {
                        n = this.checkContactType(o, a, this.checkCollide(o, a));
                        if (this.emitCollide(o, a, n) && !a.enabled) break;
                    }
                }
                for (t = 0; t < this.m_playerArr.length; t++) {
                    var r = this.m_playerArr[t];
                    if (r.enabled) {
                        for (i = 0; i < this.m_enemyArr.length; i++) {
                            var o;
                            if ((o = this.m_enemyArr[i]).enabled) {
                                n = this.checkContactType(r, o, this.checkCollide(r, o));
                                if (this.emitCollide(r, o, n) && !r.enabled) break;
                            }
                        }
                        if (r.enabled) {
                            for (i = 0; i < this.m_lootArr.length; i++) {
                                var s = this.m_lootArr[i];
                                if (s.enabled) {
                                    n = this.checkContactType(r, s, this.checkCollide(r, s));
                                    this.emitCollide(r, s, n);
                                }
                            }
                            for (i = 0; i < this.m_enemyBulletArr.length; i++) {
                                var c = this.m_enemyBulletArr[i];
                                if (c.enabled) {
                                    n = this.checkContactType(r, c, this.checkCollide(r, c));
                                    this.emitCollide(r, c, n);
                                }
                            }
                        }
                    }
                }
            };
            t.prototype.checkCollide = function (t, e) {
                var i = !1;
                switch (t.type) {
                    case a.ColliderType.Circle:
                        switch (e.type) {
                            case a.ColliderType.Circle:
                                i = r.DYTools.checkCircleCircle(t.position, t.radius, e.position, e.radius);
                                break;

                            case a.ColliderType.Rectangle:
                                i = r.DYTools.checkCircleRect(t.position, t.radius, e.center, e.size);
                                break;

                            case a.ColliderType.Polygon:
                                i = cc.Intersection.polygonCircle(e.points, t.data);
                                break;

                            case a.ColliderType.Line:
                        }
                        break;

                    case a.ColliderType.Rectangle:
                        switch (e.type) {
                            case a.ColliderType.Circle:
                                i = r.DYTools.checkCircleRect(e.position, e.radius, t.center, t.size);
                                break;

                            case a.ColliderType.Rectangle:
                                i = r.DYTools.checkRectRect(t.center, t.size, e.center, e.size);
                                break;

                            case a.ColliderType.Polygon:
                                i = cc.Intersection.rectPolygon(t.rect, e.points);
                                break;

                            case a.ColliderType.Line:
                        }
                        break;

                    case a.ColliderType.Polygon:
                        switch (e.type) {
                            case a.ColliderType.Circle:
                                i = cc.Intersection.polygonCircle(t.points, e.data);
                                break;

                            case a.ColliderType.Rectangle:
                                i = cc.Intersection.rectPolygon(t.points, e.rect);
                                break;

                            case a.ColliderType.Polygon:
                                i = cc.Intersection.polygonPolygon(t.points, e.points);
                                break;

                            case a.ColliderType.Line:
                        }
                        break;

                    case a.ColliderType.Line:
                        var n = t.data;
                        switch (e.type) {
                            case a.ColliderType.Circle:
                                var o = t.param, s = o[0], c = o[1], l = e.data.position, h = Math.min(n.start.x, n.end.x), u = Math.max(n.start.x, n.end.x);
                                switch (t.tag) {
                                    case 1:
                                        if (h <= l.x && u > l.x) {
                                            var p = n.start.y;
                                            null != s && (p = s * l.x + c);
                                            var d = l.y + e.radius - p;
                                            Math.abs(d) < 400 && d >= 0 && (i = !0);
                                        }
                                        break;

                                    case 2:
                                        if (h <= l.x && u > l.x) {
                                            p = n.start.y;
                                            null != s && (p = s * l.x + c);
                                            d = l.y - e.radius - p;
                                            Math.abs(d) < 400 && d <= 0 && (i = !0);
                                        }
                                        break;

                                    case 3:
                                        if (n.start.y <= l.y && n.end.y > l.y) {
                                            var f = n.start.x;
                                            null != s && (f = (l.y - c) / s);
                                            d = l.x - e.radius - f;
                                            Math.abs(d) < 400 && d <= 0 && (i = !0);
                                        }
                                        break;

                                    case 4:
                                        if (n.start.y <= l.y && n.end.y > l.y) {
                                            f = n.start.x;
                                            null != s && (f = (l.y - c) / s);
                                            d = l.x + e.radius - f;
                                            Math.abs(d) < 400 && d >= 0 && (i = !0);
                                        }
                                }
                                break;

                            case a.ColliderType.Rectangle:
                                i = cc.Intersection.lineRect(n.start, n.end, e.data);
                        }
                }
                return i;
            };
            t.prototype.checkContactType = function (t, e, i) {
                var n = a.ContactType.None;
                i ? n = r.DYTools.arrContain(t.other, e) ? a.ContactType.Stay : a.ContactType.Enter : r.DYTools.arrContain(t.other, e) && (n = a.ContactType.Exit);
                return n;
            };
            t.prototype.emitCollide = function (t, e, i) {
                if (i != a.ContactType.None) {
                    t.onCollide(i, e);
                    e.onCollide(i, t);
                    return !0;
                }
                return !1;
            };
            t.prototype.emitCollideWall = function (t, e, i) {
                if (i != a.ContactType.None) {
                    t.onCollideWall(i, e);
                    e.onCollide(i, t);
                }
            };
            t.prototype.emitCollideBlock = function (t, e, i) {
                if (i != a.ContactType.None) {
                    t.onCollideBlock(i, e);
                    if (e.entity) switch (e.entity.group) {
                        case a.ColliderGroup.Prop:
                        case a.ColliderGroup.EnemyBlock:
                            e.onCollide(i, t);
                    }
                }
            };
            return t;
        }();
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../config/GameConst": "GameConst",
        "../../../config/GameEnum": "GameEnum",
        "../../../util/Tools": "Tools",
        "../manager/battle/BossManager": "BossManager",
        "../manager/battle/BulletManager": "BulletManager",
        "../manager/battle/EnemyManager": "EnemyManager",
        "../manager/battle/LootManager": "LootManager",
        "../manager/battle/MapManager": "MapManager",
        "../manager/battle/PropManager": "PropManager",
        "../manager/battle/SnakeManager": "SnakeManager"
    }],
    CollideManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "63a54JDSE1IJISlXTCXKAzP", "CollideManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.CollideMgr = void 0;
        var n = t("../../../../config/GameConfig"), a = t("../../../../config/GameConst"), r = t("../../collide/CollideArea"), o = function () {
            function t() {
                this.m_enabled = !1;
                this.m_cameraNode = null;
                this.m_collideArea = null;
            }
            t.prototype.init = function (t) {
                void 0 === t && (t = a.GValue.BattleCameraNode);
                this.m_cameraNode = t;
                this.m_collideArea = new r.default();
                this.m_collideArea.setCamera(t);
                this.m_collideArea.init(-a.GValue.ViewCenter.x, -a.GValue.ViewCenter.y, a.GValue.ViewWidth, a.GValue.ViewHeight);
                if (n.GConfig.ColliderDraw) {
                    cc.director.getCollisionManager().enabled = !0;
                    cc.director.getCollisionManager().enabledDebugDraw = !0;
                }
            };
            t.prototype.updateLogic = function (t) {
                this.m_enabled && this.m_collideArea.updateLogic(t);
            };
            Object.defineProperty(t.prototype, "enabled", {
                get: function () {
                    return this.m_enabled;
                },
                set: function (t) {
                    this.m_enabled = t;
                },
                enumerable: !1,
                configurable: !0
            });
            t.prototype.addEntity = function (t) {
                this.m_collideArea.addEntity(t);
            };
            t.prototype.getCollideArea = function () {
                return this.m_collideArea;
            };
            t.instance = new t();
            return t;
        }();
        i.default = o;
        i.CollideMgr = o.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../collide/CollideArea": "CollideArea"
    }],
    ColliderComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "41820HLH3hJJa3kYb1atXiA", "ColliderComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../config/GameConfig"), o = t("../../../config/GameEnum"), s = t("../../../util/Tools"), c = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_type = o.ColliderType.None;
                e.m_offset = cc.Vec2.ZERO;
                e._other = [];
                return e;
            }
            e.prototype.init = function () {
                this.clear();
            };
            e.prototype.updateLogic = function () { };
            Object.defineProperty(e.prototype, "data", {
                get: function () {
                    return null;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "type", {
                get: function () {
                    return this.m_type;
                },
                set: function (t) {
                    this.m_type = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "other", {
                get: function () {
                    return this._other;
                },
                set: function (t) {
                    this._other = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.getOffset = function () {
                return this.m_offset;
            };
            Object.defineProperty(e.prototype, "offset", {
                set: function (t) {
                    this.m_offset = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.onDie = function () {
                this.enabled = !1;
            };
            e.prototype.onEnable = function () {
                if (r.GConfig.ColliderDraw) {
                    this.node.removeComponent(cc.BoxCollider);
                    this.node.removeComponent(cc.PolygonCollider);
                    this.node.removeComponent(cc.CircleCollider);
                    this.draw();
                }
            };
            e.prototype.onDisable = function () {
                this.clear();
            };
            e.prototype.clear = function () {
                for (var t = this._other.length, e = 0; e < t; e++) this._other[e].removeOther(this);
                this._other.splice(0);
            };
            e.prototype.removeOther = function (t) {
                s.DYTools.arrRemove(this.other, t);
                if (t.entity) switch (t.entity.group) {
                    case o.ColliderGroup.Prop:
                    case o.ColliderGroup.EnemyBlock:
                        this.onCollideBlock(o.ContactType.Exit, t);
                } else t.node && "fence" == t.node.name && this.onCollideWall(o.ContactType.Exit, t);
            };
            e.prototype.onCollide = function (t, e, i) {
                switch (t) {
                    case o.ContactType.Enter:
                        this.other.push(e);
                        break;

                    case o.ContactType.Stay:
                        break;

                    case o.ContactType.Exit:
                        s.DYTools.arrRemove(this.other, e);
                }
                this.entity && this.entity.onCollide && this.entity.onCollide(t, e, i);
            };
            e.prototype.onCollideWall = function (t, e) {
                switch (t) {
                    case o.ContactType.Enter:
                        this.other.push(e);
                        break;

                    case o.ContactType.Stay:
                        break;

                    case o.ContactType.Exit:
                        s.DYTools.arrRemove(this.other, e);
                }
                this.entity && this.entity.onCollideWall && this.entity.onCollideWall(t, e);
            };
            e.prototype.onCollideBlock = function (t, e) {
                switch (t) {
                    case o.ContactType.Enter:
                        this.other.push(e);
                        break;

                    case o.ContactType.Stay:
                        break;

                    case o.ContactType.Exit:
                        s.DYTools.arrRemove(this.other, e);
                }
                this.entity && this.entity.onCollideBlock && this.entity.onCollideBlock(t, e);
            };
            e.prototype.draw = function () { };
            return e;
        }(t("../common/CompBase").default);
        i.default = c;
        cc._RF.pop();
    }, {
        "../../../config/GameConfig": "GameConfig",
        "../../../config/GameEnum": "GameEnum",
        "../../../util/Tools": "Tools",
        "../common/CompBase": "CompBase"
    }],
    CompBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "4f4e2CA4y1IXqpSE5rpH02D", "CompBase");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var n = function () {
            function t() {
                this.m_enabled = !1;
                this.m_node = null;
                this.m_entity = null;
            }
            t.prototype.initBase = function (t, e) {
                this.m_entity = t;
                e ? this.m_node = e : t && (this.m_node = t.node);
                this.onInit();
            };
            t.prototype.onInit = function () { };
            Object.defineProperty(t.prototype, "node", {
                get: function () {
                    return this.m_node;
                },
                set: function (t) {
                    this.m_node = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "entity", {
                get: function () {
                    return this.m_entity;
                },
                set: function (t) {
                    this.m_entity = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(t.prototype, "enabled", {
                get: function () {
                    return this.m_enabled;
                },
                set: function (t) {
                    if (this.m_enabled != t) {
                        this.m_enabled = t;
                        t ? this.onEnable() : this.onDisable();
                    }
                },
                enumerable: !1,
                configurable: !0
            });
            t.prototype.onEnable = function () { };
            t.prototype.onDisable = function () { };
            t.prototype.updateLogic = function () { };
            return t;
        }();
        i.default = n;
        cc._RF.pop();
    }, {}],
    ConfigBaseData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c83b56NvtdMO560yoZICe6n", "ConfigBaseData");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var n = function () {
            function t() {
                this.id = -1;
            }
            t.prototype.loadJson = function (t) {
                t.hasOwnProperty("id") && (this.id = parseInt(t.id));
            };
            return t;
        }();
        i.default = n;
        cc._RF.pop();
    }, {}],
    ConfigBossData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2f1e4DdhN9L5qPaj+4mkNeQ", "ConfigBossData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ConfigBossIceData = i.ConfigBossDesertHandData = i.ConfigBossFireData = i.BossTreeAtkData = i.ConfigBossTreeData = i.ConfigBossData = void 0;
        var r = t("../../util/Tools"), o = t("./ConfigBaseData"), s = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.type = 0;
                e.bossId = 0;
                e.scale = 1;
                e.preCreate = !1;
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.type = r.DYTools.setInt(e, "type");
                this.bossId = r.DYTools.setInt(e, "bId");
                this.scale = r.DYTools.setNum(e, "scale");
                this.preCreate = 1 == r.DYTools.setInt(e, "pre");
                this.scale = 0 == this.scale ? 1 : this.scale;
            };
            return e;
        }(o.default);
        i.ConfigBossData = s;
        var c = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.hp = 0;
                e.hurtOffsetY = 0;
                e.tip = 1;
                e.collideType = 1;
                e.collideData = [];
                e.fistLoot = {};
                e.attackLimit = [];
                e.collideAtk = 0;
                e.atkDuration = null;
                e.atkOrder = [];
                e.atkRandom = [];
                e.atkParam = [];
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.hp = r.DYTools.setInt(e, "hp");
                this.hurtOffsetY = r.DYTools.setNum(e, "hy");
                this.tip = r.DYTools.setInt(e, "tip");
                var i = r.DYTools.setNumArr(e, "col");
                this.collideType = i.shift();
                this.collideData = i;
                this.collideAtk = r.DYTools.setNum(e, "colatk");
                this.atkDuration = r.DYTools.setVec2(e, "atktime");
                this.attackLimit = r.DYTools.setNumArr(e, "atklimit");
                for (var n = r.DYTools.setString(e, "loot").split("&"), a = 0; a < n.length; a++) if ("" != n[a]) {
                    var o = n[a].split("#");
                    if (o.length > 1) {
                        var s = parseInt(o[0]);
                        this.fistLoot[s] = r.DYTools.stringToNumber(o[1]);
                    }
                }
                var c = r.DYTools.setString(e, "order");
                if (c && "" != c) {
                    var h = c.split("&");
                    h.length > 0 && (this.atkOrder = r.DYTools.stringToNumber(h[0]));
                    if (h.length > 1) for (n = h[1].split("#"), a = 0; a < n.length; a++) "" != n[a] && this.atkRandom.push(r.DYTools.stringToPoint(n[a]));
                }
                for (var u = 1, p = "s" + u, d = r.DYTools.setString(e, p); d && d.length > 0;) {
                    var f = d.split("&");
                    if (f.length > 1) {
                        var m = new l();
                        m.type = parseInt(f[0]);
                        var g = f[1].split("#");
                        for (a = 0; a < g.length; a++) "" != g[a] && m.param.push(r.DYTools.stringToNumber(g[a]));
                        this.atkParam.push(m);
                    } else r.DYTools.error("tree atk data error", p, d);
                    p = "s" + ++u;
                    d = r.DYTools.setString(e, p);
                }
            };
            return e;
        }(o.default);
        i.ConfigBossTreeData = c;
        var l = function () {
            this.type = 0;
            this.param = [];
        };
        i.BossTreeAtkData = l;
        var h = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.hp = 0;
                e.hurtOffsetY = 0;
                e.tip = 1;
                e.collideType = 1;
                e.collideData = [];
                e.enemyLoot = {};
                e.attackLimit = [];
                e.collideAtk = 0;
                e.atkDuration = null;
                e.atkOrder = [];
                e.atkRandom = [];
                e.atkParam = [];
                e.speed = 0;
                e.speedEnter = 0;
                e.enterPosArr = [];
                e.enterPosArr2 = [];
                e.enterPosArr3 = [];
                e.enterScale = [];
                e.resfix = "";
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.hp = r.DYTools.setInt(e, "hp");
                this.hurtOffsetY = r.DYTools.setNum(e, "hy");
                this.tip = r.DYTools.setInt(e, "tip");
                var i = r.DYTools.setNumArr(e, "col");
                this.collideType = i.shift();
                this.collideData = i;
                this.collideAtk = r.DYTools.setNum(e, "colatk");
                this.atkDuration = r.DYTools.setVec2(e, "atktime");
                this.attackLimit = r.DYTools.setNumArr(e, "atklimit");
                this.speed = r.DYTools.setNum(e, "speed");
                this.speedEnter = r.DYTools.setNum(e, "speedEnter");
                this.enterPosArr = r.DYTools.setVec2Arr(e, "enterPosArr");
                this.enterPosArr2 = r.DYTools.setVec2Arr(e, "enterPosArr2");
                this.enterPosArr3 = r.DYTools.setVec2Arr(e, "enterPosArr3");
                this.enterScale = r.DYTools.setNumArr(e, "enterScale");
                this.resfix = r.DYTools.setString(e, "resfix").trim();
                for (var n = r.DYTools.setString(e, "loot").split("&"), a = 0; a < n.length; a++) if ("" != n[a]) {
                    var o = n[a].split("#");
                    if (o.length > 1) {
                        var s = parseInt(o[0]);
                        this.enemyLoot[s] = [];
                        for (var c = o[1].split("|"), h = 0; h < c.length; h++) {
                            var u = r.DYTools.stringToNumber(c[h]);
                            if (2 == u.length) {
                                this.enemyLoot[s].push(u[0]);
                                this.enemyLoot[s].push(u[1]);
                            }
                        }
                    }
                }
                var p = r.DYTools.setString(e, "order");
                if (p && "" != p) {
                    var d = p.split("&");
                    d.length > 0 && (this.atkOrder = r.DYTools.stringToNumber(d[0]));
                    if (d.length > 1) for (n = d[1].split("#"), a = 0; a < n.length; a++) "" != n[a] && this.atkRandom.push(r.DYTools.stringToPoint(n[a]));
                }
                for (var f = 1, m = "s" + f, g = r.DYTools.setString(e, m); g && g.length > 0;) {
                    var _ = g.split("&");
                    if (_.length > 1) {
                        var y = new l();
                        y.type = parseInt(_[0]);
                        var v = _[1].split("#");
                        for (a = 0; a < v.length; a++) "" != v[a] && y.param.push(r.DYTools.stringToNumber(v[a]));
                        this.atkParam.push(y);
                    } else r.DYTools.error("tree atk data error", m, g);
                    m = "s" + ++f;
                    g = r.DYTools.setString(e, m);
                }
            };
            return e;
        }(o.default);
        i.ConfigBossFireData = h;
        var u = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.hp = 0;
                e.hurtOffsetY = 0;
                e.tip = 1;
                e.collideType = 1;
                e.collideData = [];
                e.enemyLoot = {};
                e.attackLimit = [];
                e.collideAtk = 0;
                e.atkDuration = null;
                e.atkOrder = [];
                e.atkRandom = [];
                e.atkParam = [];
                e.speed = 0;
                e.speedEnter = 0;
                e.enterPosArr = [];
                e.enterPosArr2 = [];
                e.enterPosArr3 = [];
                e.enterScale = [];
                e.resfix = "";
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.hp = r.DYTools.setInt(e, "hp");
                this.hurtOffsetY = r.DYTools.setNum(e, "hy");
                this.tip = r.DYTools.setInt(e, "tip");
                var i = r.DYTools.setNumArr(e, "col");
                this.collideType = i.shift();
                this.collideData = i;
                this.collideAtk = r.DYTools.setNum(e, "colatk");
                this.atkDuration = r.DYTools.setVec2(e, "atktime");
                this.attackLimit = r.DYTools.setNumArr(e, "atklimit");
                this.speed = r.DYTools.setNum(e, "speed");
                this.speedEnter = r.DYTools.setNum(e, "speedEnter");
                this.enterPosArr = r.DYTools.setVec2Arr(e, "enterPosArr");
                this.enterPosArr2 = r.DYTools.setVec2Arr(e, "enterPosArr2");
                this.enterPosArr3 = r.DYTools.setVec2Arr(e, "enterPosArr3");
                this.enterScale = r.DYTools.setNumArr(e, "enterScale");
                this.resfix = r.DYTools.setString(e, "resfix").trim();
                for (var n = r.DYTools.setString(e, "loot").split("&"), a = 0; a < n.length; a++) if ("" != n[a]) {
                    var o = n[a].split("#");
                    if (o.length > 1) {
                        var s = parseInt(o[0]);
                        this.enemyLoot[s] = [];
                        for (var c = o[1].split("|"), h = 0; h < c.length; h++) {
                            var u = r.DYTools.stringToNumber(c[h]);
                            if (2 == u.length) {
                                this.enemyLoot[s].push(u[0]);
                                this.enemyLoot[s].push(u[1]);
                            }
                        }
                    }
                }
                var p = r.DYTools.setString(e, "order");
                if (p && "" != p) {
                    var d = p.split("&");
                    d.length > 0 && (this.atkOrder = r.DYTools.stringToNumber(d[0]));
                    if (d.length > 1) for (n = d[1].split("#"), a = 0; a < n.length; a++) "" != n[a] && this.atkRandom.push(r.DYTools.stringToPoint(n[a]));
                }
                for (var f = 1, m = "s" + f, g = r.DYTools.setString(e, m); g && g.length > 0;) {
                    var _ = g.split("&");
                    if (_.length > 1) {
                        var y = new l();
                        y.type = parseInt(_[0]);
                        var v = _[1].split("#");
                        for (a = 0; a < v.length; a++) "" != v[a] && y.param.push(r.DYTools.stringToNumber(v[a]));
                        this.atkParam.push(y);
                    } else r.DYTools.error("tree atk data error", m, g);
                    m = "s" + ++f;
                    g = r.DYTools.setString(e, m);
                }
            };
            return e;
        }(o.default);
        i.ConfigBossDesertHandData = u;
        var p = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.hp = 0;
                e.hurtOffsetY = 0;
                e.tip = 1;
                e.collideType = 1;
                e.collideData = [];
                e.enemyLoot = {};
                e.attackLimit = [];
                e.collideAtk = 0;
                e.atkDuration = null;
                e.atkOrder = [];
                e.atkRandom = [];
                e.atkParam = [];
                e.speed = 0;
                e.speedEnter = 0;
                e.enterPosArr = [];
                e.enterPosArr2 = [];
                e.enterPosArr3 = [];
                e.enterScale = [];
                e.resfix = "";
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.hp = r.DYTools.setInt(e, "hp");
                this.hurtOffsetY = r.DYTools.setNum(e, "hy");
                this.tip = r.DYTools.setInt(e, "tip");
                var i = r.DYTools.setNumArr(e, "col");
                this.collideType = i.shift();
                this.collideData = i;
                this.collideAtk = r.DYTools.setNum(e, "colatk");
                this.atkDuration = r.DYTools.setVec2(e, "atktime");
                this.attackLimit = r.DYTools.setNumArr(e, "atklimit");
                this.speed = r.DYTools.setNum(e, "speed");
                this.speedEnter = r.DYTools.setNum(e, "speedEnter");
                this.enterPosArr = r.DYTools.setVec2Arr(e, "enterPosArr");
                this.enterPosArr2 = r.DYTools.setVec2Arr(e, "enterPosArr2");
                this.enterPosArr3 = r.DYTools.setVec2Arr(e, "enterPosArr3");
                this.enterScale = r.DYTools.setNumArr(e, "enterScale");
                this.resfix = r.DYTools.setString(e, "resfix").trim();
                for (var n = r.DYTools.setString(e, "loot").split("&"), a = 0; a < n.length; a++) if ("" != n[a]) {
                    var o = n[a].split("#");
                    if (o.length > 1) {
                        var s = parseInt(o[0]);
                        this.enemyLoot[s] = [];
                        for (var c = o[1].split("|"), h = 0; h < c.length; h++) {
                            var u = r.DYTools.stringToNumber(c[h]);
                            if (2 == u.length) {
                                this.enemyLoot[s].push(u[0]);
                                this.enemyLoot[s].push(u[1]);
                            }
                        }
                    }
                }
                var p = r.DYTools.setString(e, "order");
                if (p && "" != p) {
                    var d = p.split("&");
                    d.length > 0 && (this.atkOrder = r.DYTools.stringToNumber(d[0]));
                    if (d.length > 1) for (n = d[1].split("#"), a = 0; a < n.length; a++) "" != n[a] && this.atkRandom.push(r.DYTools.stringToPoint(n[a]));
                }
                for (var f = 1, m = "s" + f, g = r.DYTools.setString(e, m); g && g.length > 0;) {
                    var _ = g.split("&");
                    if (_.length > 1) {
                        var y = new l();
                        y.type = parseInt(_[0]);
                        var v = _[1].split("#");
                        for (a = 0; a < v.length; a++) "" != v[a] && y.param.push(r.DYTools.stringToNumber(v[a]));
                        this.atkParam.push(y);
                    } else r.DYTools.error("tree atk data error", m, g);
                    m = "s" + ++f;
                    g = r.DYTools.setString(e, m);
                }
            };
            return e;
        }(o.default);
        i.ConfigBossIceData = p;
        var d = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.id = 0;
                e.type = 0;
                e.col = [];
                e.spine = "";
                e.skin = "";
                e.hp = 0;
                e.hurtOffsetY = 0;
                e.atk = 0;
                e.speed = 0;
                e.moveId = "";
                e.funcId = "";
                e.weight = "";
                e.rotate = 0;
                e.effectScaleX = 1;
                e.effectScaleY = 1;
                e.gold = 0;
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.id = r.DYTools.setNum(e, "id");
                this.type = r.DYTools.setNum(e, "type");
                this.col = r.DYTools.setNumArr(e, "col");
                this.spine = r.DYTools.setString(e, "spine");
                this.skin = r.DYTools.setString(e, "skin");
                this.hp = r.DYTools.setNum(e, "hp");
                this.hurtOffsetY = r.DYTools.setNum(e, "hy");
                this.atk = r.DYTools.setNum(e, "atk");
                this.speed = r.DYTools.setNum(e, "speed");
                this.moveId = r.DYTools.setString(e, "move");
                this.funcId = r.DYTools.setString(e, "func");
                this.weight = r.DYTools.setString(e, "weight");
                this.rotate = r.DYTools.setNum(e, "rotate");
                this.effectScaleX = r.DYTools.setNum(e, "effectScaleX");
                this.effectScaleY = r.DYTools.setNum(e, "effectScaleY");
                this.gold = r.DYTools.setNum(e, "gold");
            };
            return e;
        }(o.default);
        i.default = d;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigBossFuncData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c16c1tMO9xCo46liYN3OtcG", "ConfigBossFuncData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../util/Tools"), s = t("./ConfigBaseData"), c = cc._decorator, l = c.ccclass, h = (c.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.id = 0;
                    e.delay = 0;
                    e.type = 0;
                    e.para = "";
                    return e;
                }
                e.prototype.loadJson = function (e) {
                    t.prototype.loadJson.call(this, e);
                    this.delay = o.DYTools.setNum(e, "delay");
                    this.type = o.DYTools.setNum(e, "type");
                    this.para = o.DYTools.setString(e, "para");
                };
                return r([l], e);
            }(s.default));
        i.default = h;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigBulletData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "8e6b9YnXmFDSb1UK7oZPdvy", "ConfigBulletData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.image = [];
                e.anchorY = .5;
                e.frameCount = 0;
                e.scaleAct = !1;
                e.bulletType = 0;
                e.bulletSpeed = 0;
                e.bulletRotateSpeed = 0;
                e.bulletAccStartTime = 0;
                e.bulletAccLastTime = 0;
                e.bulletAcc = 0;
                e.colliderData = [];
                e.colliderType = 0;
                e.scale = 0;
                e.revolve = 0;
                e.bulletAtk = 0;
                e.bulletOffset = [];
                e.selfOffset = [];
                e.offset = [];
                e.fireType = 0;
                e.fireRange = 0;
                e.fireSpeed = 0;
                e.fireWarnTime = 0;
                e.fireWarnWaitTime = 0;
                e.effectImg = "";
                e.effectOffset = [];
                e.effectImgCount = 0;
                e.paraString = [];
                e.otherPara = [];
                e.audio = null;
                e.tailPara = [];
                e.tailCrazyPara = [];
                e.hurtImage = "";
                e.hurtCount = 0;
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.image = r.DYTools.setStringArr(e, "image");
                this.anchorY = r.DYTools.setNum(e, "ay", .5);
                this.frameCount = r.DYTools.setNum(e, "frameCount");
                this.scaleAct = 1 == r.DYTools.setInt(e, "sa");
                this.bulletType = r.DYTools.setNum(e, "bulletType");
                this.bulletSpeed = r.DYTools.setNum(e, "initialve");
                this.bulletRotateSpeed = r.DYTools.setNum(e, "bulletRotateSpeed");
                this.bulletAccStartTime = r.DYTools.setNum(e, "bulletAccStartTime");
                this.bulletAccLastTime = r.DYTools.setNum(e, "bulletAccLastTime");
                this.bulletAcc = r.DYTools.setNum(e, "bulletAcc");
                this.offset = r.DYTools.setNumArr(e, "offset", 2);
                this.colliderData = r.DYTools.setNumArr(e, "colpara");
                this.colliderType = r.DYTools.setNum(e, "coltype");
                this.scale = r.DYTools.setNum(e, "scale");
                this.revolve = r.DYTools.setNum(e, "rt");
                this.bulletAtk = r.DYTools.setNum(e, "attack");
                this.bulletOffset = r.DYTools.setNumArr(e, "bulletOffset", 2);
                this.selfOffset = r.DYTools.setNumArr(e, "so", 2);
                this.bulletNotThrough = r.DYTools.setNumArr(e, "bulletNotThrough");
                this.fireSpeed = r.DYTools.setNum(e, "fireSpeed");
                this.fireType = r.DYTools.setNum(e, "fireType");
                this.fireRange = r.DYTools.setNum(e, "fireRange");
                this.fireWarnTime = r.DYTools.setNum(e, "fireWarnTime");
                this.fireWarnWaitTime = r.DYTools.setNum(e, "fireWarnWaitTime");
                this.effectImg = r.DYTools.setString(e, "effectImg");
                this.effectOffset = r.DYTools.setNumArr(e, "effectOffset", 2);
                this.effectImgCount = r.DYTools.setNum(e, "effectImgCount");
                this.paraString = r.DYTools.setStringArr(e, "para", "*");
                this.otherPara = r.DYTools.setStringArr(e, "otherPara", "*");
                this.audio = r.DYTools.setString(e, "ao");
                this.tailPara = r.DYTools.setNumArr(e, "tailPara");
                this.tailCrazyPara = r.DYTools.setNumArr(e, "tailCrazyPara");
                var i = r.DYTools.setStringArr(e, "he");
                if (i.length > 1) {
                    this.hurtImage = i[0];
                    this.hurtCount = parseInt(i[1]);
                }
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.default = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigDataManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "87517edxeRLhJJeb6RPJsI1", "ConfigDataManager");
        var n = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, a = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ConfigDataMgr = void 0;
        var r = t("../../util/Tools"), o = t("../config/ConfigGlobalData"), s = t("../config/ConfigSnakeLvupData"), c = t("../config/ConfigStageInfoData"), l = t("./BaseDataContainer"), h = t("../config/ConfigSnakeData"), u = t("../config/ConfigBulletData"), p = t("../config/ConfigStageCoinData"), d = t("../config/ConfigItemData"), f = t("../config/ConfigSnakeSkillData"), m = t("../config/ConfigStageData"), g = t("./FetterDataContainer"), _ = t("../config/ConfigShopData"), y = function () {
            function t() {
                this.configMap = new Map();
            }
            t.prototype.getGlobalData = function (t) {
                var e = this.getData("ConfigGlobalData", t);
                return e && "" != e.para ? e.para : "";
            };
            t.prototype.getGlobalDataInt = function (t, e) {
                void 0 === e && (e = 0);
                var i = this.getData("ConfigGlobalData", t);
                return i && "" != i.para ? Math.round(Number(i.para)) : e;
            };
            t.prototype.getGlobalDataNum = function (t, e) {
                void 0 === e && (e = 0);
                var i = this.getData("ConfigGlobalData", t);
                return i && "" != i.para ? Number(i.para) : e;
            };
            t.prototype.getGlobalDataNumArr = function (t, e) {
                void 0 === e && (e = "*");
                var i = this.getData("ConfigGlobalData", t);
                return i && "" != i.para ? r.DYTools.stringToNumber(i.para, e) : [];
            };
            t.prototype.setGLobalData = function (t, e) {
                
                var i = this.getData("ConfigGlobalData", t);
                if (i) i.para = e; else {
                    var n = this.configMap.get("ConfigGlobalData");
                    if (n) {
                        var a = new o.ConfigGlobalData();
                        a.id = t;
                        a.para = e;
                        n.setData(t, a);
                    }
                }
            };
            t.prototype.getShopBoxData = function (t) {
                

                var a = this.getAllData("ConfigGlobalData");
                a.forEach(function (x) {
                    console.log('ConfigGlobalData: ' + JSON.stringify(x))
                });

                var a = this.getAllData("ConfigItemData");
                a.forEach(function (x) {
                    console.log('ConfigItemData: ' + JSON.stringify(x))
                });

                var a = this.getAllData("ConfigShopBoxData");
                a.forEach(function (x) {
                    console.log('ConfigShopBoxData: ' + JSON.stringify(x))
                });

                var a = this.getAllData("ConfigStageData");
                a.forEach(function (x) {
                    console.log('ConfigStageData: ' + JSON.stringify(x))
                });

                var a = this.getAllData("ConfigStageInfoData");
                a.forEach(function (x) {
                    console.log('ConfigStageInfoData: ' + JSON.stringify(x))
                });


                var a = this.getAllData("ConfigSnakeSkillData");
                a.forEach(function (x) {
                    console.log('ConfigSnakeSkillData: ' + JSON.stringify(x))
                });


                var a = this.getAllData("ConfigStageCoinData");
                a.forEach(function (x) {
                    console.log('ConfigStageCoinData: ' + JSON.stringify(x))
                });


                var a = this.getAllData("ConfigBulletData");
                a.forEach(function (x) {
                    console.log('ConfigBulletData: ' + JSON.stringify(x))
                });
                
                this.getData("ConfigShopBoxData", t);



                return this.getData("ConfigShopBoxData", t);
            };
            t.prototype.init = function () {
                this.configMap = new Map();
                this.initJsonMapWithLoaded("ConfigGlobalData", "gb", o.ConfigGlobalData);
                this.initJsonMapWithLoaded("ConfigItemData", "item", d.default);
                this.initJsonMapWithLoaded("ConfigStageInfoData", "stageInfo", c.default);
                this.initJsonMapWithLoaded("ConfigSnakeData", "snake", h.ConfigSnakeData);
                this.initJsonMapWithLoaded("ConfigSnakeSkillData", "snakeSkill", f.ConfigSnakeSkillData);
                this.initJsonMapWithLoaded("ConfigSnakeTurretLvupData", "cannonLevel", s.ConfigSnakeTurretLvupData);
                this.initJsonMapWithLoaded("ConfigBulletData", "bullet", u.default);
                this.initJsonMapWithLoaded("ConfigStageCoinData", "stageCoin", p.ConfigStageCoinData);
                this.initJsonMapWithLoaded("ConfigStageData", "stage", m.default);
                this.initJsonMapWithLoaded("ConfigStageData", "stage", m.default);
                this.initJsonMapGenericWithLoaded("ConfigFetterData", "fetter", h.ConfigFetterData, g.default);
                this.initJsonMapWithLoaded("ConfigShopBoxData", "shopBox", _.ConfigShopBoxData);
            };
            t.prototype.clear = function () {
                this.configMap.forEach(function (t) {
                    t.clear();
                });
                this.configMap.clear();
            };
            t.prototype.initJsonMapAsync = function (t, e, i) {
                return n(this, void 0, void 0, function () {
                    var n;
                    return a(this, function (a) {
                        switch (a.label) {
                            case 0:
                                (n = this.configMap.get(t)) || (n = new l.default());
                                this.configMap.set(t, n);
                                return [4, this._initDataAsync(t, e, i)];

                            case 1:
                                a.sent();
                                return [2];
                        }
                    });
                });
            };
            t.prototype.initJsonMapWithComplete = function (t, e, i, n) {
                var a = this.configMap.get(t);
                a || (a = new l.default());
                this.configMap.set(t, a);
                this._initDataWithComplete(t, e, i, n);
            };
            t.prototype.initJsonMapWithLoaded = function (t, e, i) {
                var n = this.configMap.get(t);
                n || (n = new l.default());
                this.configMap.set(t, n);
                this._initDataWithLoaded(t, e, i);
            };
            t.prototype.initJsonMapGenericAsync = function (t, e, i, r) {
                return n(this, void 0, void 0, function () {
                    var n;
                    return a(this, function (a) {
                        switch (a.label) {
                            case 0:
                                (n = this.configMap.get(t)) || (n = new r());
                                this.configMap.set(t, n);
                                return [4, this._initDataAsync(t, e, i)];

                            case 1:
                                a.sent();
                                return [2];
                        }
                    });
                });
            };
            t.prototype.initJsonMapGeneric = function (t, e, i, n, a) {
                var r = this.configMap.get(t);
                r || (r = new n());
                this.configMap.set(t, r);
                this._initDataWithComplete(t, e, i, a);
            };
            t.prototype.initJsonMapGenericWithLoaded = function (t, e, i, n) {
                var a = this.configMap.get(t);
                a || (a = new n());
                this.configMap.set(t, a);
                this._initDataWithLoaded(t, e, i);
            };
            t.prototype.getData = function (t, e) {
                var i = this.configMap.get(t);
                return i ? i.getData(e) : null;
            };
            t.prototype.getLength = function (t) {
                var e = this.configMap.get(t);
                return e ? e.getLength() : 0;
            };
            t.prototype.clearData = function (t, e) {
                void 0 === e && (e = !0);
                var i = this.configMap.get(t);
                i && i.clear(e);
            };
            t.prototype.getAllData = function (t) {
                var e = this.configMap.get(t);
                return e ? e.getAllData() : null;
            };
            t.prototype._initDataAsync = function (t, e, i) {
                return n(this, void 0, void 0, function () {
                    var n;
                    return a(this, function (a) {
                        switch (a.label) {
                            case 0:
                                return (n = this.configMap.get(t)) ? [4, n.loadDataAsync(e, i)] : [3, 2];

                            case 1:
                                a.sent();
                                return [3, 3];

                            case 2:
                                r.DYTools.error("容器未初始化");
                                a.label = 3;

                            case 3:
                                return [2];
                        }
                    });
                });
            };
            t.prototype._initDataWithComplete = function (t, e, i, n) {
                var a = this.configMap.get(t);
                a ? a.loadDataWithComplete(e, i, n) : r.DYTools.error("容器未初始化");
            };
            t.prototype._initDataWithLoaded = function (t, e, i) {
                var n = this.configMap.get(t);
                n ? n.loadDataWithLoaded(e, i) : r.DYTools.error("容器未初始化");
            };
            t.instance = new t();
            return t;
        }();
        i.default = y;
        i.ConfigDataMgr = y.instance;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "../config/ConfigBulletData": "ConfigBulletData",
        "../config/ConfigGlobalData": "ConfigGlobalData",
        "../config/ConfigItemData": "ConfigItemData",
        "../config/ConfigShopData": "ConfigShopData",
        "../config/ConfigSnakeData": "ConfigSnakeData",
        "../config/ConfigSnakeLvupData": "ConfigSnakeLvupData",
        "../config/ConfigSnakeSkillData": "ConfigSnakeSkillData",
        "../config/ConfigStageCoinData": "ConfigStageCoinData",
        "../config/ConfigStageData": "ConfigStageData",
        "../config/ConfigStageInfoData": "ConfigStageInfoData",
        "./BaseDataContainer": "BaseDataContainer",
        "./FetterDataContainer": "FetterDataContainer"
    }],
    ConfigEnemyData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "f83198D5iJDOJi3AFBC820u", "ConfigEnemyData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.uId = 0;
                e.type = 0;
                e.hp = 0;
                e.speed = 0;
                e.moveRatio = 1;
                e.rotate = 0;
                e.rotateType = 0;
                e.atk = 0;
                e.moveId = "";
                e.funcId = "";
                e.mergeFuncIdArr = [];
                e.effectScaleX = 1;
                e.effectScaleY = 1;
                e.gold = 0;
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.uId = r.DYTools.setNum(e, "img");
                this.type = r.DYTools.setNum(e, "type");
                this.hp = r.DYTools.setNum(e, "hp");
                this.speed = r.DYTools.setNum(e, "speed");
                this.moveRatio = r.DYTools.setNum(e, "mr");
                this.rotate = r.DYTools.setNum(e, "rotate");
                this.rotateType = r.DYTools.setNum(e, "rotateType");
                this.atk = r.DYTools.setNum(e, "atk");
                this.moveId = r.DYTools.setString(e, "move");
                this.funcId = r.DYTools.setString(e, "func");
                this.mergeFuncIdArr = r.DYTools.setIntArr(e, "mergeFunc");
                this.effectScaleX = r.DYTools.setNum(e, "effectScaleX");
                this.effectScaleY = r.DYTools.setNum(e, "effectScaleY");
                this.gold = r.DYTools.setNum(e, "pog");
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.default = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigEnemyFuncData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "62c74HRTRZMBrfhIG3I5aue", "ConfigEnemyFuncData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.para = "";
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.type = r.DYTools.setNum(e, "type");
                this.para = r.DYTools.setString(e, "para");
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.default = o;
        cc.js.setClassName("ConfigEnemyFuncData", o);
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigEnemyMoveData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2d9846RoDtCNZuxSBU3xIKU", "ConfigEnemyMoveData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.EnemyFollowPAreaPatrolMoveData = i.EnemyAreaPatrolMoveData = i.EnemyAreaMoveData = i.EnemyPathMovePointData = i.EnemyPathMoveData = void 0;
        var r = t("./ConfigBaseData"), o = t("../../config/GameEnum"), s = t("../../util/Tools"), c = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.speedFix = 1;
                e.angleDiff = -1;
                e.pathData = null;
                e.areaData = null;
                e.areaPatrolData = null;
                e.followPAreaPatrolData = null;
                e.para = "";
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.type = s.DYTools.setNum(e, "type");
                this.speedFix = s.DYTools.setNum(e, "sc") || 1;
                this.para = s.DYTools.setString(e, "para");
                switch (this.type) {
                    case o.EnemyMoveType.None:
                        break;

                    case o.EnemyMoveType.Random:
                        this.angleDiff = s.DYTools.setNum(e, "para");
                        break;

                    case o.EnemyMoveType.FollowP:
                        this.followAngleSpeed = s.DYTools.setNum(e, "para");
                        break;

                    case o.EnemyMoveType.Path:
                        if (e.hasOwnProperty("para")) {
                            this.pathData = new l();
                            var i = e.para;
                            this.pathData.loadJson(i);
                        }
                        break;

                    case o.EnemyMoveType.Area:
                        if (e.hasOwnProperty("para")) {
                            this.areaData = new u();
                            i = e.para;
                            this.areaData.loadJson(i);
                        }
                        break;

                    case o.EnemyMoveType.AreaPatrol:
                        if (e.hasOwnProperty("para")) {
                            this.areaPatrolData = new p();
                            i = e.para;
                            this.areaPatrolData.loadJson(i);
                        }
                        break;

                    case o.EnemyMoveType.FollowPAreaPatrol:
                        if (e.hasOwnProperty("para")) {
                            this.followPAreaPatrolData = new d();
                            i = e.para;
                            this.followPAreaPatrolData.loadJson(i);
                        }
                }
            };
            return e;
        }(r.default);
        i.default = c;
        var l = function () {
            function t() {
                this.repeat = 0;
                this.pointArr = [];
            }
            t.prototype.loadJson = function (t) {
                var e = t.split("#");
                if (2 == e.length) {
                    this.repeat = Number(e[0]);
                    for (var i = e[1].split("&"), n = 0, a = i.length; n < a; n++) {
                        var r = new h();
                        r.loadJson(i[n]);
                        this.pointArr.push(r);
                    }
                }
            };
            return t;
        }();
        i.EnemyPathMoveData = l;
        var h = function () {
            function t() {
                this.repeat = 0;
                this.delay = 0;
                this.dir = cc.Vec2.ZERO;
            }
            t.prototype.loadJson = function (t) {
                var e = s.DYTools.stringToNumber(t, "*");
                if (4 == e.length) {
                    this.dir.x = e[0];
                    this.dir.y = e[1];
                    this.delay = e[2];
                    this.repeat = e[3];
                }
            };
            return t;
        }();
        i.EnemyPathMovePointData = h;
        var u = function () {
            function t() {
                this.type = 0;
                this.width = 0;
                this.height = 0;
                this.minRadius = 0;
                this.maxRadius = 0;
                this.interval = 0;
            }
            t.prototype.loadJson = function (t) {
                var e = s.DYTools.stringToNumber(t, "*");
                if (6 == e.length) {
                    this.type = e[0];
                    this.width = e[1];
                    this.height = e[2];
                    this.minRadius = e[3];
                    this.maxRadius = e[4];
                    this.interval = e[5];
                }
            };
            return t;
        }();
        i.EnemyAreaMoveData = u;
        var p = function () {
            function t() {
                this.type = 0;
                this.width = 0;
                this.height = 0;
                this.minRadius = 0;
                this.maxRadius = 0;
                this.interval = 0;
                this.minMoveTimesStop = 0;
                this.maxMoveTimesStop = 0;
                this.isNewArea = 0;
            }
            t.prototype.loadJson = function (t) {
                var e = s.DYTools.stringToNumber(t, "*");
                if (9 == e.length) {
                    this.type = e[0];
                    this.width = e[1];
                    this.height = e[2];
                    this.minRadius = e[3];
                    this.maxRadius = e[4];
                    this.interval = e[5];
                    this.minMoveTimesStop = e[6];
                    this.maxMoveTimesStop = e[7];
                    this.isNewArea = e[8];
                }
            };
            return t;
        }();
        i.EnemyAreaPatrolMoveData = p;
        var d = function () {
            function t() {
                this.type = 0;
                this.width = 0;
                this.height = 0;
                this.minRadius = 0;
                this.maxRadius = 0;
                this.interval = 0;
                this.minMoveTimesStop = 0;
                this.maxMoveTimesStop = 0;
                this.isNewArea = 0;
                this.followLastTime = 0;
                this.followCDTime = 0;
            }
            t.prototype.loadJson = function (t) {
                var e = s.DYTools.stringToNumber(t, "*");
                if (11 == e.length) {
                    this.type = e[0];
                    this.width = e[1];
                    this.height = e[2];
                    this.minRadius = e[3];
                    this.maxRadius = e[4];
                    this.interval = e[5];
                    this.minMoveTimesStop = e[6];
                    this.maxMoveTimesStop = e[7];
                    this.isNewArea = e[8];
                    this.followLastTime = e[9];
                    this.followCDTime = e[10];
                }
            };
            return t;
        }();
        i.EnemyFollowPAreaPatrolMoveData = d;
        cc._RF.pop();
    }, {
        "../../config/GameEnum": "GameEnum",
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigEnemyUIData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6decbMdWsFMR7PLIg8moCRE", "ConfigEnemyUIData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.prefab = "";
                e.model = "";
                e.introduction = !1;
                e.col = [];
                e.hpScale = 1;
                e.hpPos = cc.Vec2.ZERO;
                e.shakeLevel = -1;
                e.eyeRadius = 5;
                e.actAnim = {};
                e.effectColor = cc.Color.WHITE;
                e.enterScale = 1;
                e.enterLandImage = null;
                e.enterLandCount = 0;
                e.enterLandScale = 1;
                e.dieAudio = [];
                e.hurtScale = 1;
                e.blastAngle = cc.Vec2.ZERO;
                e.blastAtlas = null;
                e.blastBack = [];
                e.blastBackCount = [];
                e.blastBackScale = [];
                e.blastFront = "";
                e.blastFrontCount = 0;
                e.blastFrontScale = cc.v2(1, 1);
                e.vestigeImage = "";
                e.lockScale = 1;
                e.lockOffset = cc.Vec2.ZERO;
                e.shadowOffsetFront = null;
                e.shadowOffsetBack = null;
                e.shadowScale = 1;
                e.frostScale = [];
                e.frostOffset = [];
                e.burnScale = [];
                e.burnOffset = [];
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.prefab = r.DYTools.setString(e, "pf");
                this.model = r.DYTools.setString(e, "img");
                this.introduction = 1 == r.DYTools.setInt(e, "inf");
                this.col = r.DYTools.setNumArr(e, "col");
                var i = r.DYTools.setNumArr(e, "hp");
                this.hpScale = i[0] || 1;
                this.hpPos.x = i[1] || 0;
                this.hpPos.y = i[2] || 0;
                this.shakeLevel = r.DYTools.setInt(e, "sk");
                this.eyeRadius = r.DYTools.setNum(e, "eye");
                var n = r.DYTools.setNumArr(e, "cor");
                n.length > 2 && (this.effectColor = cc.color(n[0], n[1], n[2]));
                this.enterScale = r.DYTools.setNum(e, "en");
                var a = r.DYTools.setStringArr(e, "el");
                if (a.length > 2) {
                    this.enterLandImage = a[0];
                    this.enterLandCount = parseInt(a[1]);
                    this.enterLandScale = Number(a[2]);
                }
                for (var o = ["enter", "idle", "move", "wall"], s = 0; s < o.length; s++) "" != (l = r.DYTools.setString(e, o[s])) && (this.actAnim[o[s]] = l);
                this.hurtScale = r.DYTools.setNum(e, "hurt");
                this.blastAtlas = r.DYTools.setString(e, "ba");
                var c = r.DYTools.setStringArr(e, "blast0", "#");
                if (c.length > 0) for (s = 0; s < c.length; s++) if ((l = c[0].split("*")).length > 3) {
                    if (!this.blastBack) {
                        this.blastBack = [];
                        this.blastBackCount = [];
                        this.blastBackScale = [];
                    }
                    this.blastBack.push(l[0]);
                    this.blastBackCount.push(parseInt(l[1]));
                    this.blastBackScale.push(cc.v2(Number(l[2]), Number(l[3])));
                }
                if ((c = r.DYTools.setStringArr(e, "blast1")).length > 3) {
                    this.blastFront = c[0];
                    this.blastFrontCount = parseInt(c[1]);
                    this.blastFrontScale = cc.v2(Number(c[2]), Number(c[3]));
                } else this.blastFront = null;
                this.blastAngle = r.DYTools.setVec2(e, "bta");
                this.vestigeImage = r.DYTools.setString(e, "vestige");
                this.dieAudio = r.DYTools.setStringArr(e, "die");
                this.lockScale = r.DYTools.setNum(e, "ls");
                this.lockOffset = r.DYTools.setVec2(e, "lo");
                this.shadowOffsetFront = r.DYTools.setVec2(e, "swf");
                this.shadowOffsetBack = r.DYTools.setVec2(e, "swb");
                this.shadowScale = r.DYTools.setNum(e, "sws");
                this.frostScale = [];
                this.frostOffset = [];
                if ((c = r.DYTools.setStringArr(e, "frost", "#")).length > 0) for (s = 0; s < c.length; s++) if ((l = c[s].split("*")).length >= 3) {
                    this.frostScale.push(Number(l[0]));
                    this.frostOffset.push(cc.v2(Number(l[1]), Number(l[2])));
                }
                this.burnScale = [];
                this.burnOffset = [];
                if ((c = r.DYTools.setStringArr(e, "burn", "#")).length > 0) for (s = 0; s < c.length; s++) {
                    var l;
                    if ((l = c[s].split("*")).length >= 3) {
                        this.burnScale.push(Number(l[0]));
                        this.burnOffset.push(cc.v2(Number(l[1]), Number(l[2])));
                    }
                }
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.default = o;
        cc.js.setClassName("ConfigEnemyUIData", o);
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigGlobalData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "aeb18m3vPlAerwocTnz4xAY", "ConfigGlobalData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ConfigGlobalData = void 0;
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.para = "";
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.para = r.DYTools.setString(e, "para");
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.ConfigGlobalData = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigItemData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b53aerfTapH8b9UtXLuvZNU", "ConfigItemData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.name = "";
                e.image = "";
                e.itemType = -1;
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.name = r.DYTools.setString(e, "name");
                this.image = r.DYTools.setString(e, "image");
                this.itemType = r.DYTools.setNum(e, "type");
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.default = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigPropData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "f2e89J59FNDi6ocxJQuTZ3A", "ConfigPropData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../util/Tools"), s = t("./ConfigBaseData"), c = cc._decorator, l = c.ccclass, h = (c.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.col = [];
                    return e;
                }
                e.prototype.loadJson = function (e) {
                    t.prototype.loadJson.call(this, e);
                    this.type = o.DYTools.setNum(e, "type");
                    this.hp = o.DYTools.setNum(e, "hp");
                    this.col = o.DYTools.setNumArr(e, "col");
                    this.para = o.DYTools.setString(e, "para");
                };
                return r([l], e);
            }(s.default));
        i.default = h;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigShopData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "91649e/edJCXLhiAkdRCPvD", "ConfigShopData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ConfigShopBoxData = void 0;
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.id = 0;
                e.consume = 0;
                e.CD = 0;
                e.stagePoll = "";
                e.weight = "";
                e.cPoll = "";
                e.bPoll = "";
                e.aPoll = "";
                e.sPoll = "";
                e.special = "";
                e.stagePollArr = [];
                e.weightDic = {};
                e.cPollDic = {};
                e.bPollDic = {};
                e.aPollDic = {};
                e.sPollDic = {};
                e.specialDic = {};
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.id = r.DYTools.setInt(e, "id");
                this.consume = r.DYTools.setInt(e, "consume");
                this.CD = r.DYTools.setInt(e, "CD");
                this.stagePoll = r.DYTools.setString(e, "stagePoll");
                this.weight = r.DYTools.setString(e, "weight");
                this.cPoll = r.DYTools.setString(e, "cPoll");
                this.bPoll = r.DYTools.setString(e, "bPoll");
                this.aPoll = r.DYTools.setString(e, "aPoll");
                this.sPoll = r.DYTools.setString(e, "sPoll");
                this.special = r.DYTools.setString(e, "special");
                this.stagePollArr = [];
                if (this.stagePoll && this.stagePoll.length > 0) for (var i = this.stagePoll.split("#"), n = 0; n < i.length; n++) {
                    var a = i[n].split("*");
                    (o = []).push(parseInt(a[0]));
                    o.push(parseInt(a[1]));
                    o.push(parseInt(a[2]));
                    this.stagePollArr.push(o);
                }
                this.weightDic = {};
                if (this.weight && this.weight.length > 0) for (i = this.weight.split("#"), n = 0; n < i.length; n++) {
                    var o = i[n].split("*"), s = parseInt(o[0]), c = parseInt(o[1]);
                    this.weightDic[s] = c;
                }
                this.cPollDic = {};
                if (this.cPoll && this.cPoll.length > 0) for (i = this.cPoll.split("|"), n = 0; n < i.length; n++) {
                    a = i[n].split("&");
                    var l = parseInt(a[0]), h = a[1];
                    this.cPollDic[l] = h.split("#");
                }
                this.bPollDic = {};
                if (this.bPoll && this.bPoll.length > 0) for (i = this.bPoll.split("|"), n = 0; n < i.length; n++) {
                    a = i[n].split("&"), l = parseInt(a[0]), h = a[1];
                    this.bPollDic[l] = h.split("#");
                }
                this.aPollDic = {};
                if (this.aPoll && this.aPoll.length > 0) for (i = this.aPoll.split("|"), n = 0; n < i.length; n++) {
                    a = i[n].split("&"), l = parseInt(a[0]), h = a[1];
                    this.aPollDic[l] = h.split("#");
                }
                this.sPollDic = {};
                if (this.sPoll && this.sPoll.length > 0) for (i = this.sPoll.split("|"), n = 0; n < i.length; n++) {
                    a = i[n].split("&"), l = parseInt(a[0]), h = a[1];
                    this.sPollDic[l] = h.split("#");
                }
                this.specialDic = {};
                if (this.special && this.special.length > 0) for (i = this.special.split("#"), n = 0; n < i.length; n++) {
                    a = i[n].split("*"), o = [];
                    var u = parseInt(a[0]);
                    o.push(parseInt(a[1]));
                    o.push(parseInt(a[2]));
                    this.specialDic[u] = o;
                }
            };
            e.prototype.getPollDic = function (t) {
                switch (t) {
                    case 1:
                        return this.cPollDic;

                    case 2:
                        return this.bPollDic;

                    case 3:
                        return this.aPollDic;

                    case 4:
                        return this.sPollDic;
                }
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.ConfigShopBoxData = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigSnakeData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "66366GyC3FFGIjQf1X8L/s7", "ConfigSnakeData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ConfigFetterLvData = i.ConfigFetterData = i.ConfigSnakeData = void 0;
        var r = t("../../util/Tools"), o = t("./ConfigBaseData"), s = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._fireType = [];
                e._count = [];
                e._colliderData = [];
                e._spaceSnake = [];
                e._costMaterial = [];
                e._mark = [];
                e.imgSnake = "";
                e.moveSpeed = 0;
                e.atk = 0;
                e.bodyColliderATKRat = 0;
                e.show = "";
                e.rad = 0;
                e.hp = 0;
                e.searchArea = 0;
                e.levelUp = 0;
                e.initCount = 0;
                e.maxCount = 0;
                e.skillId = 0;
                e.skillCD = 0;
                e.skillInsAtk = 0;
                e.bulletId = 0;
                e.content = 0;
                e.circle = 0;
                e.circleCD = 0;
                e.circleTime = 0;
                e.unlockType = 0;
                e.unlockParam = 0;
                e.quality = 0;
                e.costGold = 0;
                e.type = 0;
                e.color = "";
                e.shadowOffset = null;
                e.shadowScale = 1;
                return e;
            }
            e.prototype.loadJson = function (e) {
                var i;
                t.prototype.loadJson.call(this, e);
                this.imgSnake = r.DYTools.setString(e, "imgSnake");
                this.moveSpeed = r.DYTools.setNum(e, "moveSpeed");
                this.atk = r.DYTools.setNum(e, "attack");
                this.bodyColliderATKRat = r.DYTools.setNum(e, "bodyColliderATKRat");
                this.rad = r.DYTools.setNum(e, "rad");
                this.hp = r.DYTools.setNum(e, "hp");
                this._count = r.DYTools.setNumArr(e, "count", 2);
                this.bulletId = r.DYTools.setInt(e, "bullet");
                this.searchArea = r.DYTools.setNum(e, "searchArea", 0);
                this.levelUp = r.DYTools.setNum(e, "levelUp");
                this._colliderData = r.DYTools.setStringArr(e, "colliderData", "#", 3);
                this._spaceSnake = r.DYTools.setNumArr(e, "spaceSnake");
                this._costMaterial = r.DYTools.setNumArr(e, "costmaterial");
                this.lootSnake = r.DYTools.setNum(e, "lootSnake", 1);
                this.show = r.DYTools.setString(e, "show");
                this.skillId = r.DYTools.setNum(e, "sId");
                this.skillCD = r.DYTools.setNum(e, "skillCD");
                this.skillInsAtk = r.DYTools.setNum(e, "skillInsAtk");
                this._mark = r.DYTools.setNumArr(e, "mark");
                this.shadowOffset = r.DYTools.setVec2(e, "swo");
                this.shadowScale = r.DYTools.setNum(e, "sws");
                i = this._count, this.initCount = i[0], this.maxCount = i[1];
                var n = this._mark, a = n[0], o = n[1];
                this.mark = {
                    evolutionNum: a,
                    starNum: o
                };
                var s = this._costMaterial, c = s[0], l = s[1];
                this.costMaterial = {
                    itemId: c,
                    itemNum: l
                };
                this._colliderData.length > 0 ? this.headColliderData = r.DYTools.stringToNumber(this._colliderData[0]) : this.headColliderData = [0, 0, 0];
                this._colliderData.length > 1 ? this.bodyColliderData = r.DYTools.stringToNumber(this._colliderData[1]) : this.bodyColliderData = [0, 0, 0];
                this._colliderData.length > 2 ? this.intensifyColliderData = r.DYTools.stringToNumber(this._colliderData[2]) : this.intensifyColliderData = [0, 0, 0];
                var h = this._spaceSnake, u = h[0], p = h[1], d = h[2];
                this.space = {
                    headBodySpace: u,
                    bodyBodySpace: p,
                    bodyTailSpace: d
                };
                this.content = r.DYTools.setInt(e, "content");
                this.circle = r.DYTools.setNum(e, "circle");
                this.circleCD = r.DYTools.setNum(e, "circleCD");
                this.circleTime = r.DYTools.setNum(e, "cricleeffettime");
                this.unlockType = r.DYTools.setNum(e, "unlockType");
                this.unlockParam = r.DYTools.setNum(e, "unlockParam");
                this.quality = r.DYTools.setNum(e, "quality");
                this.costGold = r.DYTools.setNum(e, "costgold");
                this.type = r.DYTools.setNum(e, "type");
                this.color = r.DYTools.setString(e, "color");
            };
            return e;
        }(o.default);
        i.ConfigSnakeData = s;
        var c = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.maxLv = 0;
                e.levelDatas = {};
                return e;
            }
            return e;
        }(o.default);
        i.ConfigFetterData = c;
        var l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.lv = 0;
                e.condition = [];
                e.param = [];
                e.desc = 0;
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.lv = r.DYTools.setInt(e, "lv");
                this.condition = r.DYTools.setVec2Arr(e, "con");
                this.param = r.DYTools.setVec2Arr(e, "var");
                this.desc = r.DYTools.setInt(e, "dec");
            };
            return e;
        }(o.default);
        i.ConfigFetterLvData = l;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigSnakeLvupData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "674deg0BSdH14P1Q7TVMMF5", "ConfigSnakeLvupData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ConfigSnakeTurretLvupData = void 0;
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.level = 0;
                e.normalAtk = 0;
                e.specialAtk = 0;
                e.gold = 0;
                e.itemNum = 0;
                e.fireId = 0;
                e.advanceTime = 0;
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.level = r.DYTools.setInt(e, "id");
                this.normalAtk = r.DYTools.setNum(e, "na");
                this.specialAtk = r.DYTools.setNum(e, "sa");
                this.turretId = r.DYTools.setNum(e, "ti");
                this.gold = r.DYTools.setInt(e, "cg");
                this.itemNum = r.DYTools.setInt(e, "cm");
                this.fireId = r.DYTools.setInt(e, "fid");
                this.advanceTime = r.DYTools.setNum(e, "at");
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.ConfigSnakeTurretLvupData = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigSnakeSkillData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "96b86rY/0dJi6W2sKTWXEEI", "ConfigSnakeSkillData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ConfigSnakeSkillData = void 0;
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.type = 0;
                e.cd = 0;
                e.atk = 0;
                e.var = [];
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.atk = r.DYTools.setNum(e, "atk");
                this.var = r.DYTools.setNumArr(e, "var");
                this.cd = r.DYTools.setNum(e, "cd");
                this.type = r.DYTools.setNum(e, "type");
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.ConfigSnakeSkillData = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigStageCoinData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "4d91aZyePFGRavTZ96QP+tK", "ConfigStageCoinData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ConfigStageCoinData = void 0;
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.prop = "";
                e.minGoldEnemyId = 0;
                e.minGoldPoints = [];
                e.minGoldInitNum = 0;
                e.minGoldTotalNum = 0;
                e.minGoldLessNum = 0;
                e.minGoldNewRange = cc.Vec2.ZERO;
                e.minGoldNewDelay = 0;
                e.minGoldLootTotal = 0;
                e.minGoldLootHpPercent = 0;
                e.minGoldLootPercent = 0;
                e.minGoldLootDie = 0;
                e.largeGoldEnemyId = 0;
                e.largeGoldPoints = [];
                e.largeGoldInitNum = 0;
                e.largeGoldTotalNum = 0;
                e.largeGoldLessNum = 0;
                e.largeGoldNewRange = cc.Vec2.ZERO;
                e.largeGoldNewDelay = 0;
                e.largeGoldLootTotal = 0;
                e.largeGoldLootHpPercent = 0;
                e.largeGoldLootPercent = 0;
                e.largeGoldLootDie = 0;
                e.snakeUnitEnemyId = 0;
                e.snakeUnitPoints = [];
                e.snakeUnitTimes = [];
                e.snakeUnitNums = [];
                e.snakeUnitLootTotal = 0;
                e.snakeUnitLootHpPercent = 0;
                e.snakeUnitLootPercent = 0;
                e.snakeUnitLootDie = 0;
                e.diamondEnemyId = 0;
                e.diamondPoints = [];
                e.diamondTimes = [];
                e.diamondNums = [];
                e.diamondLootTotal = 0;
                e.diamondLootHpPercent = 0;
                e.diamondLootPercent = 0;
                e.diamondLootDie = 0;
                e.crazyEnemyId = 0;
                e.crazyPoints = [];
                e.crazyTimes = [];
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.prop = r.DYTools.setString(e, "prop");
                this.minGoldEnemyId = r.DYTools.setInt(e, "e1");
                this.minGoldPoints = r.DYTools.setNumArr(e, "p1");
                if ((i = r.DYTools.setString(e, "f1").split("#")).length > 3) {
                    this.minGoldInitNum = parseInt(i[0]);
                    this.minGoldLessNum = parseInt(i[1]);
                    this.minGoldNewRange = r.DYTools.stringToPoint(i[2], "*");
                    this.minGoldNewDelay = Number(i[3]);
                }
                var i, n = r.DYTools.setNumArr(e, "l1");
                if (n.length > 2) {
                    this.minGoldLootTotal = n[0];
                    this.minGoldLootHpPercent = n[1];
                    this.minGoldLootPercent = this.minGoldLootTotal * n[2] / 100;
                    this.minGoldLootDie = this.minGoldLootTotal - this.minGoldLootPercent * (100 / n[1]);
                }
                this.largeGoldEnemyId = r.DYTools.setInt(e, "e2");
                this.largeGoldPoints = r.DYTools.setNumArr(e, "p2");
                if ((i = r.DYTools.setString(e, "f2").split("#")).length > 3) {
                    this.largeGoldInitNum = parseInt(i[0]);
                    this.largeGoldLessNum = parseInt(i[1]);
                    this.largeGoldNewRange = r.DYTools.stringToPoint(i[2], "*");
                    this.largeGoldNewDelay = Number(i[3]);
                }
                var a = r.DYTools.setNumArr(e, "l2");
                if (a.length > 2) {
                    this.largeGoldLootTotal = a[0];
                    this.largeGoldLootHpPercent = a[1];
                    this.largeGoldLootPercent = this.largeGoldLootTotal * a[2] / 100;
                    this.largeGoldLootDie = this.largeGoldLootTotal - this.largeGoldLootPercent * (100 / a[1]);
                }
                this.snakeUnitEnemyId = r.DYTools.setInt(e, "e3");
                this.snakeUnitPoints = r.DYTools.setNumArr(e, "p3");
                this.snakeUnitTimes = r.DYTools.setNumArr(e, "s3");
                this.snakeUnitNums = r.DYTools.setNumArr(e, "n3");
                var o = r.DYTools.setNumArr(e, "l3");
                if (o.length > 2) {
                    this.snakeUnitLootTotal = o[0];
                    this.snakeUnitLootHpPercent = o[1];
                    this.snakeUnitLootPercent = o[2];
                    this.snakeUnitLootDie = Math.floor(this.snakeUnitLootTotal - this.snakeUnitLootPercent * (100 / o[1]));
                }
                this.diamondEnemyId = r.DYTools.setInt(e, "e4");
                this.diamondPoints = r.DYTools.setNumArr(e, "p4");
                this.diamondTimes = r.DYTools.setNumArr(e, "s4");
                this.diamondNums = r.DYTools.setNumArr(e, "n4");
                var s = r.DYTools.setNumArr(e, "l4");
                if (s.length > 2) {
                    this.diamondLootTotal = s[0];
                    this.diamondLootHpPercent = s[1];
                    this.diamondLootPercent = Math.floor(this.diamondLootTotal * s[2] / 100);
                    this.diamondLootDie = this.diamondLootTotal - this.diamondLootPercent * (100 / s[1]);
                }
                this.crazyEnemyId = r.DYTools.setInt(e, "e5");
                this.crazyPoints = r.DYTools.setNumArr(e, "p5");
                this.crazyTimes = r.DYTools.setNumArr(e, "s5");
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.ConfigStageCoinData = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigStageData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "054a3wRAQlNfZhaZ/O70If0", "ConfigStageData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.stageMin = 0;
                e.stageMax = 0;
                e.enemyType = 0;
                e.mapType = 0;
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                var i = r.DYTools.setIntArr(e, "stage");
                if (i.length > 1) {
                    this.stageMin = i[0];
                    this.stageMax = i[1];
                } else r.DYTools.error("stage data error", e);
                this.enemyType = r.DYTools.setInt(e, "ene");
                this.mapType = r.DYTools.setInt(e, "map");
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.default = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigStageInfoData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "5706deJBtxINInbhU9cVsZA", "ConfigStageInfoData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.gameType = 0;
                e.param = "";
                e.velocity = [];
                e.safeArea = [];
                e.gold = 0;
                e.goldRatio = 0;
                e.weaponItem = 0;
                e.weaponItemRatio = 0;
                e.relive = 1;
                e.enemyHpRatio = 1;
                e.extraReward = [];
                e.snakeGoldLength = 0;
                e.snakeGoldPer = 0;
                e.settle5 = !1;
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.gameType = r.DYTools.setNum(e, "gameType");
                this.param = r.DYTools.setString(e, "parm");
                this.velocity = r.DYTools.setNumArr(e, "mv");
                this.safeArea = r.DYTools.setNumArr(e, "sa");
                this.gold = r.DYTools.setNum(e, "nog");
                this.goldRatio = r.DYTools.setNum(e, "gr");
                this.weaponItem = r.DYTools.setNum(e, "mog");
                this.weaponItemRatio = r.DYTools.setNum(e, "mr");
                this.relive = r.DYTools.setNum(e, "relive", 1);
                this.enemyHpRatio = r.DYTools.setNum(e, "ebr", 1);
                this.extraReward = r.DYTools.setVec2Arr(e, "extraReward");
                this.snakeGoldLength = r.DYTools.setInt(e, "sgl");
                this.snakeGoldPer = r.DYTools.setNum(e, "sgp");
                this.settle5 = 1 == r.DYTools.setInt(e, "luck", 0);
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.default = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigStageWaveData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "383daHwj21KJa6N48NQfHqd", "ConfigStageWaveData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.PointEnemyBatchData = i.WavePointData = i.ConfigAllStageWaveData = void 0;
        var r = t("./ConfigBaseData"), o = t("../../util/Tools"), s = t("../../config/GameEnum"), c = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.waves = {};
                return e;
            }
            return e;
        }(r.default);
        i.ConfigAllStageWaveData = c;
        var l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.waveId = 0;
                e.delayTime = 0;
                e.propStopWave = !1;
                e.prop = null;
                e.pointData = [];
                return e;
            }
            return e;
        }(r.default);
        i.default = l;
        var h = ["ls", "lc"], u = function () {
            function t() {
                this.stage = 0;
                this.waveId = 0;
                this.delayTime = 0;
                this.shake = 0;
                this.lootArr = [];
                this.propStopWave = !1;
                this.prop = null;
                this.type = 0;
                this.typeParam = [];
                this.typeId = 0;
                this.pointId = 0;
                this.batches = [];
                this.dis = [];
                this.dir = 1;
                this.way = null;
            }
            t.prototype.loadJson = function (t) {
                this.stage = o.DYTools.setInt(t, "id");
                this.lootArr = o.DYTools.setVec2Arr(t, "loot");
                this.waveId = o.DYTools.setInt(t, "wid");
                this.type = o.DYTools.setInt(t, "type");
                this.typeParam = o.DYTools.setNumArr(t, "op");
                this.typeId = o.DYTools.setInt(t, "sp");
                this.pointId = o.DYTools.setInt(t, "pid");
                this.dir = o.DYTools.setInt(t, "dir");
                this.shake = o.DYTools.setInt(t, "skw");
                this.delayTime = o.DYTools.setNum(t, "wt");
                this.way = o.DYTools.setString(t, "way");
                for (var e = 0; e < h.length; e++) {
                    var i = o.DYTools.setInt(t, h[e]);
                    i > 0 && this.lootArr.push(cc.v2(s.LootType.Snake + e, i));
                }
                if (t.hasOwnProperty("prop")) {
                    this.prop = t.prop;
                    this.propStopWave = 0 != Number(this.prop.split("&")[0]);
                }
                if (t.hasOwnProperty("dis")) {
                    var n = t.dis.split("#");
                    for (e = 0; e < n.length; e++) this.dis.push(o.DYTools.stringToPoint(t.dis, "*"));
                }
                for (var a = 1; t.hasOwnProperty("e" + a) && t.hasOwnProperty("n" + a);) {
                    var r = t["e" + a], c = t["n" + a];
                    if ("" == r || "" == c) break;
                    var l = new p();
                    l.loadJson(a, t);
                    this.batches.push(l);
                    a++;
                }
            };
            return t;
        }();
        i.WavePointData = u;
        var p = function () {
            function t() {
                this.delay = 0;
                this.enemyId = 0;
                this.num = 0;
                this.perDelay = 0;
                this.lootBody = 0;
                this.warnTime = 0;
                this.hpRan = null;
                this.speedRan = null;
                this.scaleRan = null;
            }
            t.prototype.loadJson = function (t, e) {
                if (e.hasOwnProperty("e" + t) && e.hasOwnProperty("n" + t)) {
                    var i = e["e" + t].split("#"), n = o.DYTools.stringToNumber(i[0], "*"), a = n[0], r = n[1], s = n[2], c = n[3];
                    this.delay = a;
                    this.enemyId = r;
                    this.num = s;
                    this.perDelay = c;
                    i[1] && (this.warnTime = Number(i[1]));
                    (i = e["n" + t].split("#"))[0] && (this.hpRan = o.DYTools.stringToNumber(i[0], "*"));
                    i[1] && (this.speedRan = o.DYTools.stringToNumber(i[1], "*"));
                    i[2] && (this.scaleRan = o.DYTools.stringToNumber(i[2], "*"));
                }
            };
            return t;
        }();
        i.PointEnemyBatchData = p;
        cc._RF.pop();
    }, {
        "../../config/GameEnum": "GameEnum",
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    ConfigTrapData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "09200ZoQP9HSIUu/7ewHW3h", "ConfigTrapData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ConfigTrapData = void 0;
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.type = 0;
                e.area = [];
                e.delay = 0;
                e.param = [];
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.area = r.DYTools.setNumArr(e, "col");
                this.type = r.DYTools.setInt(e, "tp");
                this.delay = r.DYTools.setNum(e, "dl");
                this.param = r.DYTools.setNumArr(e, "var");
            };
            return e;
        }(t("./ConfigBaseData").default);
        i.ConfigTrapData = o;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "./ConfigBaseData": "ConfigBaseData"
    }],
    Contact: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "70c12yoQnNAqYK+9lxLUNwb", "Contact");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.default = function () { };
        cc._RF.pop();
    }, {}],
    Des: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "24476qutpNCxaWwW2rZ0WRw", "Des");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.Des_Instance = void 0;
        var n = function () {
            function t() {
                this.key1 = "gameley_lark";
                this.key2 = "snake";
                this.key3 = "snakeking";
            }
            t.prototype.strEnc = function (t) {
                return this.strEncByKey(t, this.key1, this.key2, this.key3);
            };
            t.prototype.strDec = function (t) {
                return this.strDecByKey(t, this.key1, this.key2, this.key3);
            };
            t.prototype.strEncByKey = function (t, e, i, n) {
                var a, r, o, s, c, l, h = t.length, u = "";
                null != e && "" != e && (s = (a = this.getKeyBytes(e)).length);
                null != i && "" != i && (c = (r = this.getKeyBytes(i)).length);
                null != n && "" != n && (l = (o = this.getKeyBytes(n)).length);
                if (h > 0) if (h < 4) {
                    var p = this.strToBt(t);
                    if (null != e && "" != e && null != i && "" != i && null != n && "" != n) {
                        k = p;
                        for (C = 0; C < s; C++) k = this.enc(k, a[C]);
                        for (S = 0; S < c; S++) k = this.enc(k, r[S]);
                        for (M = 0; M < l; M++) k = this.enc(k, o[M]);
                        v = k;
                    } else if (null != e && "" != e && null != i && "" != i) {
                        k = p;
                        for (C = 0; C < s; C++) k = this.enc(k, a[C]);
                        for (S = 0; S < c; S++) k = this.enc(k, r[S]);
                        v = k;
                    } else if (null != e && "" != e) {
                        var d = 0;
                        k = p;
                        for (d = 0; d < s; d++) k = this.enc(k, a[d]);
                        v = k;
                    }
                    u = this.bt64ToHex(v);
                } else {
                    var f = parseInt(String(h / 4)), m = h % 4, g = 0;
                    for (g = 0; g < f; g++) {
                        var _ = t.substring(4 * g + 0, 4 * g + 4), y = this.strToBt(_);
                        if (null != e && "" != e && null != i && "" != i && null != n && "" != n) {
                            k = y;
                            for (C = 0; C < s; C++) k = this.enc(k, a[C]);
                            for (S = 0; S < c; S++) k = this.enc(k, r[S]);
                            for (M = 0; M < l; M++) k = this.enc(k, o[M]);
                            v = k;
                        } else if (null != e && "" != e && null != i && "" != i) {
                            k = y;
                            for (C = 0; C < s; C++) k = this.enc(k, a[C]);
                            for (S = 0; S < c; S++) k = this.enc(k, r[S]);
                            v = k;
                        } else if (null != e && "" != e) {
                            k = y;
                            for (C = 0; C < s; C++) k = this.enc(k, a[C]);
                            v = k;
                        }
                        u += this.bt64ToHex(v);
                    }
                    if (m > 0) {
                        var v, b = t.substring(4 * f + 0, h);
                        y = this.strToBt(b);
                        if (null != e && "" != e && null != i && "" != i && null != n && "" != n) {
                            var M;
                            k = y;
                            for (C = 0; C < s; C++) k = this.enc(k, a[C]);
                            for (S = 0; S < c; S++) k = this.enc(k, r[S]);
                            for (M = 0; M < l; M++) k = this.enc(k, o[M]);
                            v = k;
                        } else if (null != e && "" != e && null != i && "" != i) {
                            var S;
                            k = y;
                            for (C = 0; C < s; C++) k = this.enc(k, a[C]);
                            for (S = 0; S < c; S++) k = this.enc(k, r[S]);
                            v = k;
                        } else if (null != e && "" != e) {
                            var k, C;
                            k = y;
                            for (C = 0; C < s; C++) k = this.enc(k, a[C]);
                            v = k;
                        }
                        u += this.bt64ToHex(v);
                    }
                }
                return u;
            };
            t.prototype.strDecByKey = function (t, e, i, n) {
                var a, r, o, s, c, l, h = t.length, u = "";
                null != e && "" != e && (s = (a = this.getKeyBytes(e)).length);
                null != i && "" != i && (c = (r = this.getKeyBytes(i)).length);
                null != n && "" != n && (l = (o = this.getKeyBytes(n)).length);
                var p = parseInt(String(h / 16)), d = 0;
                for (d = 0; d < p; d++) {
                    var f, m = t.substring(16 * d + 0, 16 * d + 16), g = this.hexToBt64(m), _ = new Array(64), y = 0;
                    for (y = 0; y < 64; y++) _[y] = parseInt(g.substring(y, y + 1));
                    if (null != e && "" != e && null != i && "" != i && null != n && "" != n) {
                        v = _;
                        for (b = l - 1; b >= 0; b--) v = this.dec(v, o[b]);
                        for (M = c - 1; M >= 0; M--) v = this.dec(v, r[M]);
                        for (S = s - 1; S >= 0; S--) v = this.dec(v, a[S]);
                        f = v;
                    } else if (null != e && "" != e && null != i && "" != i) {
                        v = _;
                        for (b = c - 1; b >= 0; b--) v = this.dec(v, r[b]);
                        for (M = s - 1; M >= 0; M--) v = this.dec(v, a[M]);
                        f = v;
                    } else if (null != e && "" != e) {
                        var v, b, M, S;
                        v = _;
                        for (b = s - 1; b >= 0; b--) v = this.dec(v, a[b]);
                        f = v;
                    }
                    u += this.byteToString(f);
                }
                return u;
            };
            t.prototype.getKeyBytes = function (t) {
                var e = new Array(), i = t.length, n = parseInt(String(i / 4)), a = i % 4, r = 0;
                for (r = 0; r < n; r++) e[r] = this.strToBt(t.substring(4 * r + 0, 4 * r + 4));
                a > 0 && (e[r] = this.strToBt(t.substring(4 * r + 0, i)));
                return e;
            };
            t.prototype.strToBt = function (t) {
                var e = t.length, i = new Array(64);
                if (e < 4) {
                    var n = 0, a = 0, r = 0, o = 0;
                    for (n = 0; n < e; n++) {
                        var s = t.charCodeAt(n);
                        for (a = 0; a < 16; a++) {
                            var c = 1, l = 0;
                            for (l = 15; l > a; l--) c *= 2;
                            i[16 * n + a] = parseInt(String(s / c)) % 2;
                        }
                    }
                    for (r = e; r < 4; r++) for (o = 0; o < 16; o++) {
                        c = 1, l = 0;
                        for (l = 15; l > o; l--) c *= 2;
                        i[16 * r + o] = parseInt(String(0 / c)) % 2;
                    }
                } else for (n = 0; n < 4; n++) {
                    s = t.charCodeAt(n);
                    for (a = 0; a < 16; a++) {
                        c = 1;
                        for (l = 15; l > a; l--) c *= 2;
                        i[16 * n + a] = parseInt(String(s / c)) % 2;
                    }
                }
                return i;
            };
            t.prototype.bt4ToHex = function (t) {
                var e;
                switch (t) {
                    case "0000":
                        e = "0";
                        break;

                    case "0001":
                        e = "1";
                        break;

                    case "0010":
                        e = "2";
                        break;

                    case "0011":
                        e = "3";
                        break;

                    case "0100":
                        e = "4";
                        break;

                    case "0101":
                        e = "5";
                        break;

                    case "0110":
                        e = "6";
                        break;

                    case "0111":
                        e = "7";
                        break;

                    case "1000":
                        e = "8";
                        break;

                    case "1001":
                        e = "9";
                        break;

                    case "1010":
                        e = "A";
                        break;

                    case "1011":
                        e = "B";
                        break;

                    case "1100":
                        e = "C";
                        break;

                    case "1101":
                        e = "D";
                        break;

                    case "1110":
                        e = "E";
                        break;

                    case "1111":
                        e = "F";
                }
                return e;
            };
            t.prototype.hexToBt4 = function (t) {
                var e;
                switch (t) {
                    case "0":
                        e = "0000";
                        break;

                    case "1":
                        e = "0001";
                        break;

                    case "2":
                        e = "0010";
                        break;

                    case "3":
                        e = "0011";
                        break;

                    case "4":
                        e = "0100";
                        break;

                    case "5":
                        e = "0101";
                        break;

                    case "6":
                        e = "0110";
                        break;

                    case "7":
                        e = "0111";
                        break;

                    case "8":
                        e = "1000";
                        break;

                    case "9":
                        e = "1001";
                        break;

                    case "A":
                        e = "1010";
                        break;

                    case "B":
                        e = "1011";
                        break;

                    case "C":
                        e = "1100";
                        break;

                    case "D":
                        e = "1101";
                        break;

                    case "E":
                        e = "1110";
                        break;

                    case "F":
                        e = "1111";
                }
                return e;
            };
            t.prototype.byteToString = function (t) {
                for (var e = "", i = 0; i < 4; i++) {
                    for (var n = 0, a = 0; a < 16; a++) {
                        for (var r = 1, o = 15; o > a; o--) r *= 2;
                        n += t[16 * i + a] * r;
                    }
                    0 != n && (e += String.fromCharCode(n));
                }
                return e;
            };
            t.prototype.bt64ToHex = function (t) {
                for (var e = "", i = 0; i < 16; i++) {
                    for (var n = "", a = 0; a < 4; a++) n += t[4 * i + a];
                    e += this.bt4ToHex(n);
                }
                return e;
            };
            t.prototype.hexToBt64 = function (t) {
                for (var e = "", i = 0; i < 16; i++) e += this.hexToBt4(t.substring(i, i + 1));
                return e;
            };
            t.prototype.enc = function (t, e) {
                var i = this.generateKeys(e), n = this.initPermute(t), a = new Array(32), r = new Array(32), o = new Array(32), s = 0, c = 0, l = 0, h = 0, u = 0;
                for (l = 0; l < 32; l++) {
                    a[l] = n[l];
                    r[l] = n[32 + l];
                }
                for (s = 0; s < 16; s++) {
                    for (c = 0; c < 32; c++) {
                        o[c] = a[c];
                        a[c] = r[c];
                    }
                    var p = new Array(48);
                    for (h = 0; h < 48; h++) p[h] = i[s][h];
                    var d = this.xor(this.pPermute(this.sBoxPermute(this.xor(this.expandPermute(r), p))), o);
                    for (u = 0; u < 32; u++) r[u] = d[u];
                }
                var f = new Array(64);
                for (s = 0; s < 32; s++) {
                    f[s] = r[s];
                    f[32 + s] = a[s];
                }
                return this.finallyPermute(f);
            };
            t.prototype.dec = function (t, e) {
                var i = this.generateKeys(e), n = this.initPermute(t), a = new Array(32), r = new Array(32), o = new Array(32), s = 0, c = 0, l = 0, h = 0, u = 0;
                for (l = 0; l < 32; l++) {
                    a[l] = n[l];
                    r[l] = n[32 + l];
                }
                for (s = 15; s >= 0; s--) {
                    for (c = 0; c < 32; c++) {
                        o[c] = a[c];
                        a[c] = r[c];
                    }
                    var p = new Array(48);
                    for (h = 0; h < 48; h++) p[h] = i[s][h];
                    var d = this.xor(this.pPermute(this.sBoxPermute(this.xor(this.expandPermute(r), p))), o);
                    for (u = 0; u < 32; u++) r[u] = d[u];
                }
                var f = new Array(64);
                for (s = 0; s < 32; s++) {
                    f[s] = r[s];
                    f[32 + s] = a[s];
                }
                return this.finallyPermute(f);
            };
            t.prototype.initPermute = function (t) {
                for (var e = new Array(64), i = 0, n = 1, a = 0; i < 4; i++, n += 2, a += 2) for (var r = 7, o = 0; r >= 0; r--,
                    o++) {
                    e[8 * i + o] = t[8 * r + n];
                    e[8 * i + o + 32] = t[8 * r + a];
                }
                return e;
            };
            t.prototype.expandPermute = function (t) {
                for (var e = new Array(48), i = 0; i < 8; i++) {
                    e[6 * i + 0] = 0 == i ? t[31] : t[4 * i - 1];
                    e[6 * i + 1] = t[4 * i + 0];
                    e[6 * i + 2] = t[4 * i + 1];
                    e[6 * i + 3] = t[4 * i + 2];
                    e[6 * i + 4] = t[4 * i + 3];
                    e[6 * i + 5] = 7 == i ? t[0] : t[4 * i + 4];
                }
                return e;
            };
            t.prototype.xor = function (t, e) {
                for (var i = new Array(t.length), n = 0; n < t.length; n++) i[n] = t[n] ^ e[n];
                return i;
            };
            t.prototype.sBoxPermute = function (t) {
                for (var e = new Array(32), i = "", n = [[14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7], [0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8], [4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0], [15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13]], a = [[15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10], [3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5], [0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15], [13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9]], r = [[10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8], [13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1], [13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7], [1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12]], o = [[7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15], [13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9], [10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4], [3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14]], s = [[2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9], [14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6], [4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14], [11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3]], c = [[12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11], [10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8], [9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6], [4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13]], l = [[4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1], [13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6], [1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2], [6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12]], h = [[13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7], [1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2], [7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8], [2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11]], u = 0; u < 8; u++) {
                    var p, d;
                    p = 2 * t[6 * u + 0] + t[6 * u + 5];
                    d = 8 * t[6 * u + 1] + 4 * t[6 * u + 2] + 2 * t[6 * u + 3] + t[6 * u + 4];
                    switch (u) {
                        case 0:
                            i = this.getBoxBinary(n[p][d]);
                            break;

                        case 1:
                            i = this.getBoxBinary(a[p][d]);
                            break;

                        case 2:
                            i = this.getBoxBinary(r[p][d]);
                            break;

                        case 3:
                            i = this.getBoxBinary(o[p][d]);
                            break;

                        case 4:
                            i = this.getBoxBinary(s[p][d]);
                            break;

                        case 5:
                            i = this.getBoxBinary(c[p][d]);
                            break;

                        case 6:
                            i = this.getBoxBinary(l[p][d]);
                            break;

                        case 7:
                            i = this.getBoxBinary(h[p][d]);
                    }
                    e[4 * u + 0] = parseInt(i.substring(0, 1));
                    e[4 * u + 1] = parseInt(i.substring(1, 2));
                    e[4 * u + 2] = parseInt(i.substring(2, 3));
                    e[4 * u + 3] = parseInt(i.substring(3, 4));
                }
                return e;
            };
            t.prototype.pPermute = function (t) {
                var e = new Array(32);
                e[0] = t[15];
                e[1] = t[6];
                e[2] = t[19];
                e[3] = t[20];
                e[4] = t[28];
                e[5] = t[11];
                e[6] = t[27];
                e[7] = t[16];
                e[8] = t[0];
                e[9] = t[14];
                e[10] = t[22];
                e[11] = t[25];
                e[12] = t[4];
                e[13] = t[17];
                e[14] = t[30];
                e[15] = t[9];
                e[16] = t[1];
                e[17] = t[7];
                e[18] = t[23];
                e[19] = t[13];
                e[20] = t[31];
                e[21] = t[26];
                e[22] = t[2];
                e[23] = t[8];
                e[24] = t[18];
                e[25] = t[12];
                e[26] = t[29];
                e[27] = t[5];
                e[28] = t[21];
                e[29] = t[10];
                e[30] = t[3];
                e[31] = t[24];
                return e;
            };
            t.prototype.finallyPermute = function (t) {
                var e = new Array(64);
                e[0] = t[39];
                e[1] = t[7];
                e[2] = t[47];
                e[3] = t[15];
                e[4] = t[55];
                e[5] = t[23];
                e[6] = t[63];
                e[7] = t[31];
                e[8] = t[38];
                e[9] = t[6];
                e[10] = t[46];
                e[11] = t[14];
                e[12] = t[54];
                e[13] = t[22];
                e[14] = t[62];
                e[15] = t[30];
                e[16] = t[37];
                e[17] = t[5];
                e[18] = t[45];
                e[19] = t[13];
                e[20] = t[53];
                e[21] = t[21];
                e[22] = t[61];
                e[23] = t[29];
                e[24] = t[36];
                e[25] = t[4];
                e[26] = t[44];
                e[27] = t[12];
                e[28] = t[52];
                e[29] = t[20];
                e[30] = t[60];
                e[31] = t[28];
                e[32] = t[35];
                e[33] = t[3];
                e[34] = t[43];
                e[35] = t[11];
                e[36] = t[51];
                e[37] = t[19];
                e[38] = t[59];
                e[39] = t[27];
                e[40] = t[34];
                e[41] = t[2];
                e[42] = t[42];
                e[43] = t[10];
                e[44] = t[50];
                e[45] = t[18];
                e[46] = t[58];
                e[47] = t[26];
                e[48] = t[33];
                e[49] = t[1];
                e[50] = t[41];
                e[51] = t[9];
                e[52] = t[49];
                e[53] = t[17];
                e[54] = t[57];
                e[55] = t[25];
                e[56] = t[32];
                e[57] = t[0];
                e[58] = t[40];
                e[59] = t[8];
                e[60] = t[48];
                e[61] = t[16];
                e[62] = t[56];
                e[63] = t[24];
                return e;
            };
            t.prototype.getBoxBinary = function (t) {
                var e = "";
                switch (t) {
                    case 0:
                        e = "0000";
                        break;

                    case 1:
                        e = "0001";
                        break;

                    case 2:
                        e = "0010";
                        break;

                    case 3:
                        e = "0011";
                        break;

                    case 4:
                        e = "0100";
                        break;

                    case 5:
                        e = "0101";
                        break;

                    case 6:
                        e = "0110";
                        break;

                    case 7:
                        e = "0111";
                        break;

                    case 8:
                        e = "1000";
                        break;

                    case 9:
                        e = "1001";
                        break;

                    case 10:
                        e = "1010";
                        break;

                    case 11:
                        e = "1011";
                        break;

                    case 12:
                        e = "1100";
                        break;

                    case 13:
                        e = "1101";
                        break;

                    case 14:
                        e = "1110";
                        break;

                    case 15:
                        e = "1111";
                }
                return e;
            };
            t.prototype.generateKeys = function (t) {
                var e = new Array(56), i = new Array();
                i[0] = new Array();
                i[1] = new Array();
                i[2] = new Array();
                i[3] = new Array();
                i[4] = new Array();
                i[5] = new Array();
                i[6] = new Array();
                i[7] = new Array();
                i[8] = new Array();
                i[9] = new Array();
                i[10] = new Array();
                i[11] = new Array();
                i[12] = new Array();
                i[13] = new Array();
                i[14] = new Array();
                i[15] = new Array();
                for (var n = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], a = 0; a < 7; a++) for (var r = 0, o = 7; r < 8; r++,
                    o--) e[8 * a + r] = t[8 * o + a];
                var s = 0;
                for (s = 0; s < 16; s++) {
                    var c = 0, l = 0;
                    for (r = 0; r < n[s]; r++) {
                        c = e[0];
                        l = e[28];
                        for (o = 0; o < 27; o++) {
                            e[o] = e[o + 1];
                            e[28 + o] = e[29 + o];
                        }
                        e[27] = c;
                        e[55] = l;
                    }
                    var h = new Array(48);
                    h[0] = e[13];
                    h[1] = e[16];
                    h[2] = e[10];
                    h[3] = e[23];
                    h[4] = e[0];
                    h[5] = e[4];
                    h[6] = e[2];
                    h[7] = e[27];
                    h[8] = e[14];
                    h[9] = e[5];
                    h[10] = e[20];
                    h[11] = e[9];
                    h[12] = e[22];
                    h[13] = e[18];
                    h[14] = e[11];
                    h[15] = e[3];
                    h[16] = e[25];
                    h[17] = e[7];
                    h[18] = e[15];
                    h[19] = e[6];
                    h[20] = e[26];
                    h[21] = e[19];
                    h[22] = e[12];
                    h[23] = e[1];
                    h[24] = e[40];
                    h[25] = e[51];
                    h[26] = e[30];
                    h[27] = e[36];
                    h[28] = e[46];
                    h[29] = e[54];
                    h[30] = e[29];
                    h[31] = e[39];
                    h[32] = e[50];
                    h[33] = e[44];
                    h[34] = e[32];
                    h[35] = e[47];
                    h[36] = e[43];
                    h[37] = e[48];
                    h[38] = e[38];
                    h[39] = e[55];
                    h[40] = e[33];
                    h[41] = e[52];
                    h[42] = e[45];
                    h[43] = e[41];
                    h[44] = e[49];
                    h[45] = e[35];
                    h[46] = e[28];
                    h[47] = e[31];
                    switch (s) {
                        case 0:
                            for (var u = 0; u < 48; u++) i[0][u] = h[u];
                            break;

                        case 1:
                            for (u = 0; u < 48; u++) i[1][u] = h[u];
                            break;

                        case 2:
                            for (u = 0; u < 48; u++) i[2][u] = h[u];
                            break;

                        case 3:
                            for (u = 0; u < 48; u++) i[3][u] = h[u];
                            break;

                        case 4:
                            for (u = 0; u < 48; u++) i[4][u] = h[u];
                            break;

                        case 5:
                            for (u = 0; u < 48; u++) i[5][u] = h[u];
                            break;

                        case 6:
                            for (u = 0; u < 48; u++) i[6][u] = h[u];
                            break;

                        case 7:
                            for (u = 0; u < 48; u++) i[7][u] = h[u];
                            break;

                        case 8:
                            for (u = 0; u < 48; u++) i[8][u] = h[u];
                            break;

                        case 9:
                            for (u = 0; u < 48; u++) i[9][u] = h[u];
                            break;

                        case 10:
                            for (u = 0; u < 48; u++) i[10][u] = h[u];
                            break;

                        case 11:
                            for (u = 0; u < 48; u++) i[11][u] = h[u];
                            break;

                        case 12:
                            for (u = 0; u < 48; u++) i[12][u] = h[u];
                            break;

                        case 13:
                            for (u = 0; u < 48; u++) i[13][u] = h[u];
                            break;

                        case 14:
                            for (u = 0; u < 48; u++) i[14][u] = h[u];
                            break;

                        case 15:
                            for (u = 0; u < 48; u++) i[15][u] = h[u];
                    }
                }
                return i;
            };
            t.instance = new t();
            return t;
        }();
        i.Des_Instance = n.instance;
        cc._RF.pop();
    }, {}],
    EffectCircle: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "99de0T0NyJDmIDmEXisYfCm", "EffectCircle");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameEnum"), s = t("../../../util/Tools"), c = t("../collide/CircleColliderComp"), l = t("../common/EntityBase"), h = cc._decorator, u = h.ccclass, p = (h.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_group = o.ColliderGroup.Effect;
                    e.m_collideComp = null;
                    return e;
                }
                e.prototype.init = function (t, e, i) {
                    this.m_collideComp = new c.default();
                    this.m_collideComp.init([t, e, i], this);
                    this.m_collideComp.enabled = !0;
                };
                e.prototype.updateLogic = function (t) {
                    this.m_collideComp && this.m_collideComp.updateLogic(t);
                };
                e.prototype.getColliders = function () {
                    return this.m_collideComp;
                };
                e.prototype.onCollide = function () {
                    s.DYTools.warn("effect");
                };
                return r([u], e);
            }(l.default));
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../../../util/Tools": "Tools",
        "../collide/CircleColliderComp": "CircleColliderComp",
        "../common/EntityBase": "EntityBase"
    }],
    EffectManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "5317b/dDCFNEaQxgTT/ZAGj", "EffectManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.EffectMgr = void 0;
        var r = t("../../../../config/GameConfig"), o = t("../../../../config/GameConst"), s = t("../../../../config/GameEnum"), c = t("../../../../frame/manager/BattleFlowManager"), l = t("../../../../frame/manager/FrameManager"), h = t("../../../../frame/ui/UINum"), u = t("./EntityManager"), p = t("./MapManager"), d = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_hurtAtlas = null;
                e.m_blockNode = null;
                e.m_hurtNumPool = [];
                return e;
            }
            e.prototype.addLoadingRes = function () {
                return [{
                    itemType: cc.SpriteAtlas,
                    itemNames: ["TP_hurtEffect"],
                    loadType: s.LoadType.All
                }];
            };
            e.prototype.init = function () {
                this.m_hurtAtlas = l.FrameMgr.loadMgr.get("TP_hurtEffect", cc.SpriteAtlas);
                this.m_blockNode = p.MapMgr.blockLayer;
            };
            e.prototype.initData = function () { };
            e.prototype.clear = function () {
                this.m_blockNode = null;
                this.m_hurtAtlas = null;
            };
            Object.defineProperty(e.prototype, "hurtAtlas", {
                get: function () {
                    return this.m_hurtAtlas;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.addBlockEffect = function (t) {
                t && (t.parent = this.m_blockNode);
            };
            e.prototype.showHurtNum = function (t) {
                var e = this, i = this.m_hurtNumPool.pop();
                i || (i = cc.instantiate(o.GValue.pfNum));
                i.setPosition(t.pos);
                i.parent = u.EntityMgr.getEffectLayer();
                var n = Math.floor(t.num).toString(), a = i.getComponent(h.default);
                a.init();
                a.setAtlas(this.m_hurtAtlas);
                a.setType(t.numType);
                a.setString(n);
                var c = (t.num < 10 ? 1.2 : 1) * t.scale;
                i.scale = .5;
                i.opacity = 0;
                var l = r.GConfig.ActionInterval;
                t.numType == s.NumType.EnemyHurtRed && (l *= 2);
                var p = i.y;
                cc.tween(i).to(3 * l, {
                    scale: 1.3 * c,
                    opacity: 255,
                    y: p + 10
                }).to(3 * l, {
                    scale: 1 * c,
                    y: p + 20
                }).to(8 * l, {
                    scale: .9 * c,
                    opacity: 0,
                    y: p + 50
                }).call(function () {
                    e.removeHurtNum(i);
                }).start();
            };
            e.prototype.removeHurtNum = function (t) {
                t.parent = null;
                this.m_hurtNumPool.push(t);
            };
            e.instance = new e();
            return e;
        }(c.BattleFlowBase);
        i.default = d;
        i.EffectMgr = d.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/UINum": "UINum",
        "./EntityManager": "EntityManager",
        "./MapManager": "MapManager"
    }],
    EnemyAddBloodAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b6e48tJhI5N2KJp83M22SbJ", "EnemyAddBloodAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, o = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = t("./EnemyAttrBase"), c = t("../../../../data/manager/ConfigDataManager"), l = t("../../../../util/Tools"), h = t("../../manager/battle/EnemyManager"), u = t("../../../../frame/ui/FrameAnim"), p = t("../../../../config/GameConfig"), d = t("../../manager/battle/EntityManager"), f = t("../../manager/battle/EffectManager"), m = t("../../../../frame/manager/FrameManager"), g = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._cd = 0;
                e._duration = 0;
                e._radius = 0;
                e._maxHealNum = 0;
                e._ratio = 0;
                e._followDis = 0;
                e._followVelocity = 0;
                e._linkEnemys = [];
                e._lines = [];
                e._linePool = [];
                e.m_target = null;
                e.m_state = 0;
                e.m_searchTime = 0;
                e.m_searchDuration = .5;
                e.m_bloodTime = 0;
                e.m_audioId = -1;
                return e;
            }
            e.prototype.init = function (e, i, n) {
                t.prototype.init.call(this, e, i, n);
                var a = c.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                this.type = a.type;
                var r = l.DYTools.stringToNumber(a.para, "*"), o = r[0], s = r[1], h = r[2], u = r[3], p = r[4], d = r[5], f = r[6];
                this._radius = o;
                this._maxHealNum = d;
                this._ratio = p / 100;
                this._cd = s;
                this._duration = u;
                this._followDis = h;
                this._followVelocity = f / 100;
                this.m_state = 1;
                this.m_searchTime = this.m_searchDuration;
                this.node.on("onDie", this.onDie.bind(this), this);
            };
            e.prototype.updateLogic = function (t) {
                switch (this.m_state) {
                    case 0:
                        this.m_bloodTime += t;
                        if (this.m_bloodTime > this._cd) {
                            this.m_bloodTime = 0;
                            this.m_state = 1;
                            this.m_searchTime = this.m_searchDuration;
                        }
                        break;

                    case 1:
                        this.m_searchTime += t;
                        if (this.m_searchTime > this.m_searchDuration) {
                            this.m_searchTime = 0;
                            this.searchBloodTarget();
                            this.m_target && (l.DYTools.getDisForVec2(this.node.getPosition(), this.m_target.node.getPosition()) <= this._radius ? this.startBloodUp() : this.startFollow());
                        }
                        break;

                    case 2:
                        if (this.m_target.isDead) {
                            this.m_target = null;
                            this.m_state = 1;
                            this.m_searchTime = this.m_searchDuration;
                            this.entityMoveComp.enabled = !0;
                            this.entityMoveComp.setUpdateSelf(!0);
                            break;
                        }
                        var e = this.m_target.node.getPosition().sub(this.node.getPosition());
                        this.entityMoveComp.setDir(e.normalize(), !1);
                        this.entityMoveComp.setVelocity(this.entityMoveComp.getInitVelocity() * this._followVelocity);
                        l.DYTools.getDisForVec2(this.node.getPosition(), this.m_target.node.getPosition()) <= this._followDis && this.startBloodUp();
                        break;

                    case 3:
                        if (this.m_target.isDead) {
                            this.m_state = 1;
                            this.m_searchTime = this.m_searchDuration;
                            this.m_target = null;
                            this.clearEnemys();
                            break;
                        }
                        if (!this.checkIsInArea(this.m_target)) {
                            this.startFollow();
                            this.clearEnemys();
                            break;
                        }
                        this.checkBloodEnemys();
                        this.checkHealEnemys();
                        this.updateLine(t);
                        this.healEnemys(t);
                        this.m_bloodTime += t;
                        if (this.m_bloodTime > this._duration || 0 == this._linkEnemys.length) {
                            this.m_state = 0;
                            this.m_bloodTime = 0;
                            this.onFuncEnd();
                        }
                }
            };
            e.prototype.startFollow = function () {
                this.m_state = 2;
                this.entityMoveComp.enabled = !0;
                this.entityMoveComp.setUpdateSelf(!1);
            };
            e.prototype.startBloodUp = function () {
                this.m_state = 3;
                this.clearEnemys();
                this.addLinkEnemy(this.m_target);
                this.entityMoveComp.enabled = !1;
                this.entityMoveComp.setMoveSelf(!1);
                this.entityMoveComp.setUpdateSelf(!1);
                this.playAudio();
            };
            e.prototype.playAudio = function () {
                return r(this, void 0, void 0, function () {
                    var t;
                    return o(this, function (e) {
                        switch (e.label) {
                            case 0:
                                t = this;
                                return [4, m.FrameMgr.audioMgr.playEffect("addBlood", !0)];

                            case 1:
                                t.m_audioId = e.sent();
                                return [2];
                        }
                    });
                });
            };
            e.prototype.stopAudio = function () {
                this.m_audioId >= 0 && m.FrameMgr.audioMgr.stopEffect(this.m_audioId);
            };
            e.prototype.searchBloodTarget = function () {
                this.m_target = null;
                for (var t = 99999, e = h.EnemyMgr.enemys, i = 0, n = e.length; i < n; i++) {
                    var a = e[i];
                    if (!a.isFullHp && !a.isDead && a != this.m_enemy) {
                        var r = Math.abs(a.node.x - this.node.x) + Math.abs(a.node.y - this.node.y);
                        if (r < t) {
                            t = r;
                            this.m_target = a;
                        }
                    }
                }
            };
            e.prototype.checkBloodEnemys = function () {
                for (var t = this._linkEnemys.length - 1; t >= 0; t--) {
                    var e = this._linkEnemys[t];
                    (e.isFullHp || e.isDead || !this.checkIsInArea(e)) && this._removeLinkedEnemy(t);
                }
            };
            e.prototype.checkHealEnemys = function () {
                if (!this.m_target.isFullHp && this.checkLinkAble(this.m_target)) {
                    this._linkEnemys.length >= this._maxHealNum && this._removeLinkedEnemy(0);
                    this.addLinkEnemy(this.m_target);
                }
                if (!(this._linkEnemys.length >= this._maxHealNum)) {
                    for (var t = [], e = 0, i = h.EnemyMgr.enemys; e < i.length; e++) (a = i[e]).isFullHp || a.isDead || a == this.entity || this.checkIsInArea(a) && t.push(a);
                    if (t.length != this._linkEnemys.length) {
                        this.sortEnemy(t);
                        for (var n = t.length - 1; n >= 0; n--) {
                            var a = t[n];
                            if (this._linkEnemys.length >= this._maxHealNum) break;
                            this.checkLinkAble(a) && this.addLinkEnemy(a);
                        }
                    }
                }
            };
            e.prototype.updateLine = function () {
                for (var t = this._linkEnemys.length - 1; t >= 0; t--) {
                    var e = this._linkEnemys[t];
                    if (!e.isDead && this.checkIsInArea(e)) {
                        var i = e.node.getPosition().sub(this.node.getPosition()), n = this._lines[t];
                        n.node.position = this.node.position;
                        n.setSize(cc.size(33, i.mag()));
                        i.equals(cc.Vec2.ZERO) ? n.node.active = !1 : n.node.angle = cc.misc.radiansToDegrees(cc.v2(0, 1).signAngle(i));
                    } else this._removeLinkedEnemy(t);
                }
            };
            e.prototype.addLinkEnemy = function (t) {
                t.showHealAnim();
                this._linkEnemys.push(t);
                var e = this._linePool.pop();
                if (!e) {
                    var i = new cc.Node("heal_line");
                    (e = i.addComponent(u.default)).init(f.EffectMgr.hurtAtlas, "heal_line_", 2, 2 * p.GConfig.ActionInterval);
                    e.play();
                    i.anchorY = 0;
                    i.parent = d.EntityMgr.getEffectLayer();
                }
                e.node.position = this.node.position;
                e.node.active = !0;
                var n = t.node.getPosition().sub(this.node.getPosition());
                e.setSize(cc.size(33, n.mag()));
                e.node.angle = cc.misc.radiansToDegrees(cc.v2(0, 1).signAngle(n));
                this._lines.push(e);
            };
            e.prototype.healEnemys = function (t) {
                var e = this._ratio * t;
                this._linkEnemys.forEach(function (t) {
                    var i = t.maxHp;
                    t.hpChange(e * i);
                });
            };
            e.prototype.checkIsInArea = function (t) {
                var e = t.node.position.sub(this.node.position);
                return Math.abs(e.x) < this._radius && Math.abs(e.y) < this._radius;
            };
            e.prototype.sortEnemy = function (t) {
                var e = this;
                t.sort(function (t, i) {
                    return t.node.position.sub(e.node.position).magSqr() > i.node.position.sub(e.node.position).magSqr() ? -1 : 1;
                });
            };
            e.prototype.checkLinkAble = function (t) {
                for (var e = 0, i = this._linkEnemys; e < i.length; e++) if (i[e].onlyId == t.onlyId) return !1;
                return !0;
            };
            e.prototype._removeLinkedEnemy = function (t) {
                if (t < 0 || this._linkEnemys.length <= t) l.DYTools.error("error blood remove", t); else {
                    this._linkEnemys[t].hideHealAnim();
                    this._linkEnemys.splice(t, 1);
                    this._lines[t].node.active = !1;
                    this._linePool.push(this._lines[t]);
                    this._lines.splice(t, 1);
                }
            };
            e.prototype.clearEnemys = function () {
                this.stopAudio();
                for (var t = this._linkEnemys.length - 1; t >= 0; t--) this._removeLinkedEnemy(t);
            };
            e.prototype.onFuncStart = function () { };
            e.prototype.onFuncEnd = function () {
                this.clearEnemys();
                this.entityMoveComp.enabled = !0;
                this.entityMoveComp.setUpdateSelf(!0);
                this.entityFuncComp.onEnemyFuncFinish(this.type, this.isMerge);
            };
            e.prototype.onDie = function () {
                this.node.off("onDie");
                this.clearEnemys();
                l.DYTools.clearArrayForComp(this._linePool);
            };
            e.prototype.clear = function () {
                this.clearEnemys();
                l.DYTools.clearArrayForComp(this._linePool);
            };
            return e;
        }(s.default);
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/EffectManager": "EffectManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyAnimComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "f37daGmipxDxLSe0upws64K", "EnemyAnimComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../config/GameConfig"), o = t("../../../config/GameConst"), s = t("../../../frame/ui/FrameAnim"), c = t("../../../util/Tools"), l = t("../common/CompBase"), h = t("../manager/battle/EffectManager"), u = t("../manager/battle/EnemyManager"), p = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_uiData = null;
                e.m_enemy = null;
                e.m_bodyNode = null;
                e.m_whiteNode = null;
                e.m_bodyAnim = null;
                e.m_backNode = null;
                e.m_backDieAnim0 = null;
                e.m_backDieAnim1 = null;
                e.m_frontNode = null;
                e.m_frontDieAnim0 = null;
                e.m_hurtAnim = null;
                e.m_healAnim = null;
                e.m_dieAnim = null;
                e.m_fireAnim = null;
                e.m_igniteAnim = null;
                e.m_hurtBodyAct = null;
                e.m_hurtWhiteAct = null;
                e.m_hurtBodyTween = null;
                e.m_hurtWhiteTween = null;
                e.m_frostGround = null;
                e.m_frostBack = null;
                e.m_frostFront = null;
                e.m_frostSnow = null;
                e.m_frostBroken = null;
                e.m_burnSmoke = null;
                e.m_burnFront = null;
                return e;
            }
            e.prototype.init = function (t, e, i) {
                this.m_enemy = t;
                this.initBase(t, i);
                this.m_bodyNode = e.getChildByName("role");
                this.m_whiteNode = this.m_bodyNode && this.m_bodyNode.getChildByName("white");
                this.m_backNode = t.node.getChildByName("backAnim");
                this.m_frontNode = t.node.getChildByName("frontAnim");
                this.m_bodyAnim = null;
                if (this.m_bodyNode) {
                    var n = this.m_bodyNode.getChildByName("body");
                    n && (this.m_bodyAnim = n.getComponent(cc.Animation));
                }
                this.initAnim();
            };
            e.prototype.initData = function (t) {
                this.m_uiData = t;
            };
            e.prototype.initAnim = function () {
                this.initDieAnim();
            };
            e.prototype.initDieAnim = function () {
                if (!this.m_backDieAnim0) {
                    (t = cc.instantiate(o.GValue.pfFrameAnim)).name = "m_backDieAnim0";
                    this.m_backDieAnim0 = t.getComponent(s.default);
                    t.parent = this.m_backNode;
                    t.opacity = 0;
                }
                if (!this.m_backDieAnim1) {
                    (t = cc.instantiate(o.GValue.pfFrameAnim)).name = "m_backDieAnim1";
                    this.m_backDieAnim1 = t.getComponent(s.default);
                    t.parent = this.m_backNode;
                    t.opacity = 0;
                }
                if (!this.m_frontDieAnim0) {
                    var t;
                    (t = cc.instantiate(o.GValue.pfFrameAnim)).name = "m_frontDieAnim0";
                    this.m_frontDieAnim0 = t.getComponent(s.default);
                    t.parent = this.m_frontNode;
                    t.opacity = 0;
                }
            };
            e.prototype.initHurtAnim = function () {
                if (!this.m_hurtAnim && u.EnemyMgr.hurtCount > 0) {
                    var t = cc.instantiate(o.GValue.pfFrameAnim);
                    t.name = "m_hurtAnim";
                    t.parent = this.m_frontNode;
                    this.m_hurtAnim = t.getComponent(s.default);
                    this.m_hurtAnim.init(u.EnemyMgr.enemyEffectAtlas, u.EnemyMgr.hurtImage, u.EnemyMgr.hurtCount, r.GConfig.ActionInterval);
                }
            };
            e.prototype.playAnim = function (t) {
                if (this.m_bodyAnim) {
                    t = t || "idle";
                    this.m_bodyAnim.play(t);
                }
            };
            e.prototype.pauseAnim = function () {
                this.m_bodyAnim && this.m_bodyAnim.pause();
            };
            e.prototype.resumeAnim = function () {
                this.m_bodyAnim && this.m_bodyAnim.resume();
            };
            e.prototype.playEnemyHurtAnim = function () {
                var t = this;
                this.m_hurtAnim || this.initHurtAnim();
                if (this.m_hurtAnim) {
                    this.m_hurtAnim.node.scale = this.m_uiData.hurtScale;
                    this.m_hurtAnim.play(1);
                    var e = .6 * this.m_enemy.radius, i = 2 * e;
                    this.m_hurtAnim.node.x = -e + c.DYTools.random_int(0, i);
                    this.m_hurtAnim.node.y = -e + c.DYTools.random_int(0, i);
                }
                if (9 != this.m_uiData.id) {
                    var n = r.GConfig.ActionInterval;
                    do {
                        if (this.m_hurtBodyAct) break;
                        this.m_hurtBodyTween || (this.m_hurtBodyTween = cc.tween().to(0, {
                            scaleX: 1,
                            scaleY: .9
                        }).to(2 * n, {
                            scaleX: 1.1,
                            scaleY: 1.12,
                            x: 2,
                            y: 12
                        }).to(1 * n, {
                            scale: 1,
                            x: 0,
                            y: 0
                        }).call(function () {
                            t.m_hurtBodyAct = null;
                        }));
                        this.m_bodyNode && (this.m_hurtBodyAct = this.m_hurtBodyTween.clone(this.m_bodyNode).start());
                    } while (0);
                    do {
                        if (this.m_hurtWhiteAct) break;
                        this.m_hurtWhiteTween || (this.m_hurtWhiteTween = cc.tween().to(0, {
                            scaleX: 1,
                            scaleY: .9,
                            opacity: 204
                        }).to(2 * n, {
                            scaleX: 1.1,
                            scaleY: 1.12,
                            opacity: 0
                        }).call(function () {
                            t.m_hurtWhiteAct = null;
                        }));
                        this.m_whiteNode && (this.m_hurtWhiteAct = this.m_hurtWhiteTween.clone(this.m_whiteNode).start());
                    } while (0);
                }
            };
            e.prototype.playTurretHurtAnim = function () {
                var t = this, e = r.GConfig.ActionInterval;
                do {
                    if (this.m_hurtWhiteAct) break;
                    this.m_hurtWhiteTween || (this.m_hurtWhiteTween = cc.tween().to(0, {
                        opacity: 204,
                        color: cc.Color.RED
                    }).to(2 * e, {
                        opacity: 0
                    }).delay(2 * e).to(0, {
                        opacity: 80,
                        color: cc.Color.WHITE
                    }).to(1 * e, {
                        opacity: 0
                    }).call(function () {
                        t.m_hurtWhiteAct = null;
                    }));
                    this.m_whiteNode && (this.m_hurtWhiteAct = this.m_hurtWhiteTween.clone(this.m_whiteNode).start());
                } while (0);
            };
            e.prototype.playWhiteAnim = function (t) {
                var e = this;
                if (!this.m_hurtWhiteAct) {
                    this.m_hurtWhiteTween || (this.m_hurtWhiteTween = cc.tween().to(0, {
                        opacity: 255
                    }).to(t, {
                        opacity: 0
                    }).call(function () {
                        e.m_hurtWhiteAct = null;
                    }));
                    this.m_whiteNode && (this.m_hurtWhiteAct = this.m_hurtWhiteTween.clone(this.m_whiteNode).start());
                }
            };
            e.prototype.playHealAnim = function () {
                if (!this.m_healAnim) {
                    var t = cc.instantiate(o.GValue.pfFrameAnim);
                    t.name = "healAnim";
                    t.opacity = 217;
                    this.m_healAnim = t.getComponent(s.default);
                    this.node.parent.addChild(t);
                    this.m_healAnim.init(u.EnemyMgr.enemyAtlas, "anim_bloodup_", 8, 4 * r.GConfig.ActionInterval);
                }
                this.m_healAnim.node.active = !0;
                this.m_healAnim.play();
            };
            e.prototype.hideHealAnim = function () {
                this.m_healAnim && this.m_healAnim.stop();
            };
            e.prototype.playDieAnim = function (t, e) {
                this.showFireAnim(!1);
                this.showIgniteAnim(!1);
                if (this.m_uiData) {
                    var i = null, n = 0, a = c.DYTools.random_int(this.m_uiData.blastAngle.x, this.m_uiData.blastAngle.y), o = this.entity.scaleX / Math.abs(this.entity.scaleX);
                    if (this.m_uiData.blastBack) {
                        if (this.m_uiData.blastBack[0]) {
                            this.m_backDieAnim0.init(t, this.m_uiData.blastBack[0], this.m_uiData.blastBackCount[0], r.GConfig.ActionInterval);
                            this.m_backDieAnim0.play(1);
                            this.m_backDieAnim0.node.scale = c.DYTools.random_int(this.m_uiData.blastBackScale[0].x, this.m_uiData.blastBackScale[0].y) / 100 * 1.43;
                            i = this.m_backDieAnim0;
                            n = this.m_uiData.blastBackCount[0];
                            this.m_backDieAnim0.node.angle = a;
                            this.m_backDieAnim0.node.scaleX = o * this.m_backDieAnim0.node.scale;
                        }
                        if (this.m_uiData.blastBack[1]) {
                            this.m_backDieAnim1.init(t, this.m_uiData.blastBack[1], this.m_uiData.blastBackCount[1], r.GConfig.ActionInterval);
                            this.m_backDieAnim1.play(1);
                            this.m_backDieAnim1.node.scale = c.DYTools.random_int(this.m_uiData.blastBackScale[1].x, this.m_uiData.blastBackScale[1].y) / 100 * 1.43;
                            if (this.m_uiData.blastBackCount[1] > n) {
                                i = this.m_backDieAnim1;
                                n = this.m_uiData.blastBackCount[1];
                            }
                            this.m_backDieAnim1.node.angle = a;
                            this.m_backDieAnim1.node.scaleX = o * this.m_backDieAnim1.node.scale;
                        }
                    }
                    if (this.m_uiData.blastFront) {
                        this.m_frontDieAnim0.node.scaleX = this.entity.scaleX;
                        this.m_frontDieAnim0.init(t, this.m_uiData.blastFront, this.m_uiData.blastFrontCount, r.GConfig.ActionInterval);
                        this.m_frontDieAnim0.play(1);
                        this.m_frontDieAnim0.node.scale = c.DYTools.random_int(this.m_uiData.blastFrontScale.x, this.m_uiData.blastFrontScale.y) / 100 * 1.43;
                        if (this.m_uiData.blastFrontCount > n) {
                            i = this.m_frontDieAnim0;
                            n = this.m_uiData.blastFrontCount;
                        }
                        this.m_frontDieAnim0.node.angle = a;
                        this.m_frontDieAnim0.node.scaleX = o * this.m_frontDieAnim0.node.scale;
                    }
                    i ? i.setStopCall(e) : e && e();
                } else e && e();
                if ("" != this.m_uiData.vestigeImage) {
                    var s = new cc.Node();
                    s.position = this.entity.node.position;
                    s.scale = c.DYTools.random_int(this.m_uiData.blastFrontScale.x, this.m_uiData.blastFrontScale.y) / 100;
                    s.addComponent(cc.Sprite).spriteFrame = u.EnemyMgr.enemyEffectAtlas.getSpriteFrame(this.m_uiData.vestigeImage);
                    s.color = this.m_uiData.effectColor;
                    cc.tween(s).delay(1.5).to(.4, {
                        opacity: 0
                    }).call(function () {
                        s.destroy();
                    }).start();
                    h.EffectMgr.addBlockEffect(s);
                }
            };
            e.prototype.createDieAnimEffect = function (t, e, i, n) {
                void 0 === e && (e = "anim_die_");
                void 0 === i && (i = 22);
                void 0 === n && (n = u.EnemyMgr.enemyAtlas);
                var a = cc.instantiate(o.GValue.pfFrameAnim), c = a.getComponent(s.default);
                a.setPosition(t);
                this.node.addChild(a);
                c.init(n, e, i, r.GConfig.ActionInterval);
                c.play(1);
                return a;
            };
            e.prototype.showFireAnim = function (t, e, i) {
                void 0 === e && (e = 1);
                void 0 === i && (i = 1);
                if (t) {
                    if (!this.m_fireAnim) {
                        var n = cc.instantiate(o.GValue.pfFrameAnim);
                        n.name = "m_fireAnim";
                        this.m_fireAnim = n.getComponent(s.default);
                        this.node.addChild(n);
                        this.m_fireAnim.init(u.EnemyMgr.enemyAtlas, "anim_enemy_fire_", 5, 3 * r.GConfig.ActionInterval);
                    }
                    e = 0 == e ? 1 : e;
                    i = 0 == i ? 1 : i;
                    this.m_fireAnim.setDstBlendFactorMode1();
                    this.m_fireAnim.node.setScale(e, i);
                    this.m_fireAnim.play(0);
                    this.m_fireAnim.node.stopAllActions();
                    this.m_fireAnim.node.runAction(cc.fadeIn(.1));
                } else {
                    var a = this;
                    if (this.m_fireAnim) {
                        var c = cc.fadeOut(.5), l = cc.callFunc(function () {
                            a.m_fireAnim.stop();
                        }), h = cc.sequence(c, l);
                        this.m_fireAnim.node.runAction(h);
                    }
                }
            };
            e.prototype.showIgniteAnim = function (t, e, i) {
                void 0 === e && (e = 1);
                void 0 === i && (i = 1);
                if (t) {
                    if (!this.m_igniteAnim) {
                        var n = cc.instantiate(o.GValue.pfFrameAnim);
                        n.name = "m_igniteAnim";
                        this.m_igniteAnim = n.getComponent(s.default);
                        this.node.addChild(n);
                        this.m_igniteAnim.init(u.EnemyMgr.enemyAtlas, "anim_enemy_ignite_", 12, r.GConfig.ActionInterval);
                    }
                    e = 0 == e ? 1 : e;
                    i = 0 == i ? 1 : i;
                    this.m_igniteAnim.setDstBlendFactorMode1();
                    this.m_igniteAnim.node.setScale(e, i);
                    this.m_igniteAnim.play(1);
                    this.m_igniteAnim.node.stopAllActions();
                    this.m_igniteAnim.node.runAction(cc.fadeIn(.1));
                } else {
                    var a = this;
                    if (this.m_igniteAnim) {
                        var c = cc.fadeOut(.5), l = cc.callFunc(function () {
                            a.m_igniteAnim.stop();
                        }), h = cc.sequence(c, l);
                        this.m_igniteAnim.node.runAction(h);
                    }
                }
            };
            e.prototype.setFrostEffectShow = function (t, e) {
                void 0 === e && (e = !1);
                var i = r.GConfig.ActionInterval, n = [], a = [];
                if (this.m_uiData) {
                    n = this.m_uiData.frostScale;
                    a = this.m_uiData.frostOffset;
                }
                n.length < 5 && (n = [1, 1, 1, 1, 1]);
                a.length < 5 && (a = [cc.Vec2.ZERO, cc.Vec2.ZERO, cc.Vec2.ZERO, cc.Vec2.ZERO, cc.Vec2.ZERO]);
                var c = 1 * n[0], l = 1 * n[1], h = 1 * n[2], p = 1 * n[3], d = 1 * n[4], f = a[0], m = a[1], g = a[2], _ = a[3], y = a[4];
                if (t) {
                    if (!this.m_frostGround) {
                        this.m_frostGround = new cc.Node();
                        this.m_frostGround.parent = this.m_backNode;
                        this.m_frostGround.addComponent(cc.Sprite).spriteFrame = u.EnemyMgr.enemyEffectAtlas.getSpriteFrame("enemy_frost_ground");
                    }
                    if (!this.m_frostBack) {
                        this.m_frostBack = new cc.Node();
                        this.m_frostBack.parent = this.m_backNode;
                        this.m_frostBack.addComponent(cc.Sprite).spriteFrame = u.EnemyMgr.enemyEffectAtlas.getSpriteFrame("enemy_frost_back");
                    }
                    if (!this.m_frostFront) {
                        this.m_frostFront = new cc.Node();
                        this.m_frostFront.parent = this.m_frontNode;
                        this.m_frostFront.addComponent(cc.Sprite).spriteFrame = u.EnemyMgr.enemyEffectAtlas.getSpriteFrame("enemy_frost_front");
                    }
                    if (!this.m_frostSnow) {
                        var v = cc.instantiate(o.GValue.pfFrameAnim);
                        this.m_frostSnow = v.getComponent(s.default);
                        v.parent = this.m_frontNode;
                        this.m_frostSnow.init(u.EnemyMgr.enemyEffectAtlas, "anim_enemy_frost_", 16, r.GConfig.ActionInterval);
                        this.m_frostSnow.play(0);
                    }
                    this.m_frostGround.stopAllActions();
                    this.m_frostGround.setPosition(f);
                    this.m_frostGround.scale = .8 * c;
                    this.m_frostGround.opacity = 0;
                    cc.tween(this.m_frostGround).to(3 * i, {
                        scale: c,
                        opacity: 255
                    }).start();
                    this.m_frostBack.stopAllActions();
                    this.m_frostBack.setPosition(m);
                    this.m_frostBack.scale = .8 * l;
                    this.m_frostBack.opacity = 0;
                    cc.tween(this.m_frostBack).to(3 * i, {
                        scale: l,
                        opacity: 255
                    }).start();
                    this.m_frostFront.stopAllActions();
                    this.m_frostFront.setPosition(g);
                    this.m_frostFront.scale = .8 * h;
                    this.m_frostFront.opacity = 0;
                    cc.tween(this.m_frostFront).to(3 * i, {
                        scale: h,
                        opacity: 255
                    }).start();
                    this.m_frostSnow.node.setPosition(_);
                    this.m_frostSnow.node.scale = p;
                    this.m_frostSnow.node.opacity = 255;
                } else {
                    if (this.m_frostGround) {
                        this.m_frostGround.stopAllActions();
                        this.m_frostGround.opacity = 0;
                    }
                    if (this.m_frostBack) {
                        this.m_frostBack.stopAllActions();
                        this.m_frostBack.opacity = 0;
                    }
                    if (this.m_frostFront) {
                        this.m_frostFront.stopAllActions();
                        this.m_frostFront.opacity = 0;
                    }
                    this.m_frostSnow && (this.m_frostSnow.node.opacity = 0);
                    if (e) this.m_frostBroken && (this.m_frostBroken.node.active = !1); else {
                        if (!this.m_frostBroken) {
                            var b = cc.instantiate(o.GValue.pfFrameAnim);
                            this.m_frostBroken = b.getComponent(s.default);
                            b.parent = this.m_frontNode;
                            this.m_frostBroken.init(u.EnemyMgr.enemyEffectAtlas, "anim_enemy_frost_broken_", 6, 2 * r.GConfig.ActionInterval);
                            this.m_frostBroken.node.scale = d;
                        }
                        this.m_frostBroken.node.active = !0;
                        this.m_frostBroken.node.setPosition(y);
                        this.m_frostBroken.play(1);
                    }
                }
            };
            e.prototype.setBurnEffectShow = function (t, e) {
                void 0 === e && (e = !1);
                var i = r.GConfig.ActionInterval, n = [], a = [];
                if (this.m_uiData) {
                    n = this.m_uiData.burnScale;
                    a = this.m_uiData.burnOffset;
                }
                n.length < 2 && (n = [1, 1]);
                a.length < 2 && (a = [cc.Vec2.ZERO, cc.Vec2.ZERO]);
                var c = 1 * n[0], l = 1 * n[1], h = a[0], p = a[1];
                if (t) {
                    if (!this.m_burnSmoke) {
                        var d = cc.instantiate(o.GValue.pfFrameAnim);
                        this.m_burnSmoke = d.getComponent(s.default);
                        d.parent = this.m_frontNode;
                        this.m_burnSmoke.init(u.EnemyMgr.enemyEffectAtlas, "anim_enemy_burn_smoke_", 16, r.GConfig.ActionInterval);
                        this.m_burnSmoke.play(0);
                    }
                    if (!this.m_burnFront) {
                        var f = cc.instantiate(o.GValue.pfFrameAnim);
                        this.m_burnFront = f.getComponent(s.default);
                        f.parent = this.m_frontNode;
                        this.m_burnFront.init(u.EnemyMgr.enemyEffectAtlas, "anim_enemy_burn_", 8, r.GConfig.ActionInterval);
                        this.m_burnFront.play(0);
                    }
                    this.m_burnSmoke.node.setPosition(h);
                    this.m_burnSmoke.node.scale = c;
                    this.m_burnSmoke.node.opacity = 255;
                    this.m_burnFront.node.stopAllActions();
                    this.m_burnFront.node.setPosition(p);
                    this.m_burnFront.node.scale = .8 * l;
                    this.m_burnFront.node.opacity = 0;
                    cc.tween(this.m_burnFront.node).to(3 * i, {
                        scale: l,
                        opacity: 255
                    }).start();
                } else {
                    this.m_burnSmoke && (this.m_burnSmoke.node.opacity = 0);
                    if (this.m_burnFront) {
                        this.m_burnFront.node.stopAllActions();
                        this.m_burnFront.node.opacity = 0;
                    }
                }
            };
            return e;
        }(l.default);
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../config/GameConfig": "GameConfig",
        "../../../config/GameConst": "GameConst",
        "../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../util/Tools": "Tools",
        "../common/CompBase": "CompBase",
        "../manager/battle/EffectManager": "EffectManager",
        "../manager/battle/EnemyManager": "EnemyManager"
    }],
    EnemyAreaMoveComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "bda85YB2UJFoZYTT1+NPGZO", "EnemyAreaMoveComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./EnemyMoveBaseComp"), s = t("../../../../config/GameEnum"), c = t("../../../../util/Tools"), l = cc._decorator, h = l.ccclass, u = (l.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.areaMoveData = null;
                    e.centerPos = cc.Vec3.ZERO;
                    e.curDir = cc.Vec3.ZERO;
                    e.totalLength = 0;
                    e.curMoveDis = 0;
                    e.isFuncActive = !1;
                    e._holdTime = 0;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.centerPos = this.node.position;
                    this.areaMoveData = e.areaData;
                    this.setNextPos();
                    this.node.on(s.EventTypeEnum.EnemyMoveRefresh, this.setNextPos.bind(this), this);
                };
                e.prototype.updatePos = function (e) {
                    t.prototype.updatePos.call(this, e);
                    if (this.m_updateSelf) {
                        var i = this.getCurVelocity() * e;
                        this.curMoveDis += i;
                        this.totalLength <= this.curMoveDis && (this._holdTimeCall = this._onHoldTime);
                        this._holdTimeCall && this._holdTimeCall(e);
                    }
                };
                e.prototype.setNextPos = function () {
                    var t = cc.Vec2.ZERO;
                    switch (this.areaMoveData.type) {
                        case 1:
                            t = this._getNextPosInRect();
                            break;

                        case 2:
                        default:
                            t = this._getNextPosInCircle();
                    }
                    var e = t.sub(this.node.getPosition());
                    this.setDir(e.normalize());
                    this.totalLength = e.mag();
                    this.curMoveDis = 0;
                };
                e.prototype._getNextPosInRect = function () {
                    var t = this._aabbAndRadiusData(), e = t.edgeTop, i = t.edgeBot, n = t.edgeLeft, a = t.edgeRight, r = t.circleTop, o = t.circleBot, s = t.circleLeft, l = t.circleRight, h = t.randomR;
                    if (l > a && s < n && r > e && o < i) {
                        var u = c.DYTools.random_int(n, a), p = c.DYTools.random_int(i, e);
                        return cc.v2(u, p);
                    }
                    return this._calculateCircleCircle(e, i, n, a, r, o, s, l, h);
                };
                e.prototype._getNextPosInCircle = function () {
                    var t = this._aabbAndRadiusData(), e = t.edgeTop, i = t.edgeBot, n = t.edgeLeft, a = t.edgeRight, r = t.circleTop, o = t.circleBot, s = t.circleLeft, c = t.circleRight, l = t.randomR, h = Math.min(this.areaMoveData.width, l);
                    return this._calculateCircleCircle(e, i, n, a, r, o, s, c, h);
                };
                e.prototype._getWidthOrRadius = function () {
                    switch (this.areaMoveData.type) {
                        case 1:
                            var t = this.areaMoveData.height / 2;
                            return {
                                width: this.areaMoveData.width / 2,
                                height: t
                            };

                        case 2:
                        default:
                            t = this.areaMoveData.width;
                            return {
                                width: this.areaMoveData.width,
                                height: t
                            };
                    }
                };
                e.prototype._aabbAndRadiusData = function () {
                    var t = this._getWidthOrRadius(), e = t.width, i = t.height, n = c.DYTools.random_int(this.areaMoveData.minRadius, this.areaMoveData.maxRadius), a = this.centerPos.y + i, r = this.centerPos.y - i, o = this.centerPos.x - e, s = this.centerPos.x + e, l = this.node.y + n, h = this.node.y - n, u = this.node.x + n;
                    return {
                        edgeTop: a,
                        edgeBot: r,
                        edgeLeft: o,
                        edgeRight: s,
                        circleTop: l,
                        circleBot: h,
                        circleLeft: this.node.x - n,
                        circleRight: u,
                        randomR: n
                    };
                };
                e.prototype._calculateCircleCircle = function (t, e, i, n, a, r, o, s, l) {
                    var h = Math.min(a, t), u = Math.max(r, e), p = Math.min(s, n), d = Math.max(o, i);
                    if (p - d < h - u) {
                        var f = c.DYTools.random_int(d, p);
                        if ((m = Math.sqrt(Math.pow(l, 2) - Math.pow(f - this.node.x, 2)) + this.node.y) >= u && m <= h) return cc.v2(f, m);
                        m = -Math.sqrt(Math.pow(l, 2) - Math.pow(f - this.node.x, 2)) + this.node.y;
                        return cc.v2(f, m);
                    }
                    var m = c.DYTools.random_int(u, h);
                    if ((f = Math.sqrt(Math.pow(l, 2) - Math.pow(m - this.node.y, 2)) + this.node.x) >= d && f <= p) return cc.v2(f, m);
                    f = -Math.sqrt(Math.pow(l, 2) - Math.pow(m - this.node.y, 2)) + this.node.x;
                    return cc.v2(f, m);
                };
                e.prototype._onHoldTime = function (t) {
                    if (this._holdTime > this.areaMoveData.interval) {
                        this._holdTimeCall = null;
                        this._holdTime = 0;
                        this.setNextPos();
                    } else this._holdTime += t;
                };
                e.prototype.reset = function () {
                    t.prototype.reset.call(this);
                };
                return r([h], e);
            }(o.default));
        i.default = u;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../util/Tools": "Tools",
        "./EnemyMoveBaseComp": "EnemyMoveBaseComp"
    }],
    EnemyAreaPatrolMoveComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "44402JKciVKO4sa9ANuBd6Z", "EnemyAreaPatrolMoveComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./EnemyMoveBaseComp"), s = t("../../../../util/Tools"), c = t("../../manager/battle/MapManager"), l = t("../../../../config/GameEnum"), h = cc._decorator, u = h.ccclass, p = (h.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.areaMoveData = null;
                    e.centerPos = cc.Vec3.ZERO;
                    e.m_curStartPos = null;
                    e.m_curEndPos = null;
                    e.totalLength = 0;
                    e.curMoveDis = 0;
                    e.isFuncActive = !1;
                    e._holdTime = 0;
                    e.moveTimesStop = 0;
                    e.curMoveTimes = 0;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.centerPos = this.node.position;
                    this.areaMoveData = e.areaPatrolData;
                    this.curMoveTimes = 0;
                    this.setMoveTimesStop();
                    this.setNextPos();
                    this.node.on(l.EventTypeEnum.EnemyMoveRefresh, this.setNextPos.bind(this), this);
                };
                e.prototype.updatePos = function (e) {
                    if (this.m_updateSelf) if (this.m_curEndPos) {
                        t.prototype.updatePos.call(this, e);
                        var i = this.node.getPosition();
                        if ((this.m_curEndPos.x - i.x) * (this.m_curEndPos.x - this.m_curStartPos.x) < -1e-6 || (this.m_curEndPos.y - i.y) * (this.m_curEndPos.y - this.m_curStartPos.y) < -1e-6) {
                            this.m_curEndPos = null;
                            this.m_curStartPos = null;
                            this._onHoldTime(e);
                        }
                    } else this._onHoldTime(e); else t.prototype.updatePos.call(this, e);
                };
                e.prototype.setNextPos = function () {
                    this.curMoveTimes++;
                    var t = cc.Vec2.ZERO;
                    switch (this.areaMoveData.type) {
                        case 1:
                            t = this._getNextPosInRect();
                            break;

                        case 2:
                        default:
                            t = this._getNextPosInCircle();
                    }
                    t = c.MapMgr.getEndPos(cc.v2(this.node.position), cc.v2(t));
                    this.m_curStartPos = this.node.getPosition();
                    this.m_curEndPos = t;
                    var e = t.sub(this.node.getPosition());
                    this.setDir(e.normalize());
                    this.totalLength = e.mag();
                    this.curMoveDis = 0;
                };
                e.prototype._getNextPosInRect = function () {
                    1 == this.areaMoveData.isNewArea && (this.centerPos = this.node.position);
                    var t = this.areaMoveData.height / 2, e = this.areaMoveData.width / 2, i = this.centerPos.x - e, n = this.centerPos.x + e, a = this.centerPos.y - t, r = this.centerPos.y + t, o = s.DYTools.random_int(i, n), c = s.DYTools.random_int(a, r);
                    return cc.v2(o, c);
                };
                e.prototype._getNextPosInCircle = function () {
                    1 == this.areaMoveData.isNewArea && (this.centerPos = this.node.position);
                    var t = s.DYTools.random_int(this.areaMoveData.minRadius, this.areaMoveData.maxRadius), e = t * t, i = Math.pow(s.DYTools.random_int(0, e), .5), n = s.DYTools.random_int(1, 360) / 360 * 2 * Math.PI, a = this.centerPos.x + i * Math.cos(n), r = this.centerPos.y + i * Math.sin(n);
                    return cc.v2(a, r);
                };
                e.prototype.setMoveTimesStop = function () {
                    this.moveTimesStop = s.DYTools.random_int(this.areaMoveData.minMoveTimesStop, this.areaMoveData.maxMoveTimesStop);
                };
                e.prototype._onHoldTime = function (t) {
                    if (this.curMoveTimes >= this.moveTimesStop) {
                        if (this._holdTime > this.areaMoveData.interval) {
                            this._holdTimeCall = null;
                            this._holdTime = 0;
                            this.curMoveTimes = 0;
                            this.setMoveTimesStop();
                            this.setNextPos();
                            return;
                        }
                        this._holdTime += t;
                    } else this.setNextPos();
                };
                e.prototype.reset = function () {
                    t.prototype.reset.call(this);
                };
                return r([u], e);
            }(o.default));
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/MapManager": "MapManager",
        "./EnemyMoveBaseComp": "EnemyMoveBaseComp"
    }],
    EnemyAttrBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "8eb912dsC9JrpizCYn1SEed", "EnemyAttrBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../common/CompBase"), s = cc._decorator, c = s.ccclass, l = (s.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.entityMoveComp = null;
                    e.entityFuncComp = null;
                    e.m_enemy = null;
                    e.m_funcId = 0;
                    e.type = 0;
                    e.isMerge = !1;
                    return e;
                }
                e.prototype.init = function (t, e, i) {
                    this.m_funcId = t;
                    this.m_enemy = e;
                    this.isMerge = i;
                    this.entityMoveComp = e.moveController;
                    this.entityFuncComp = e.funcController;
                    this.initBase(e);
                };
                e.prototype.willClear = function () { };
                e.prototype.clear = function () { };
                e.prototype.getType = function () {
                    return this.type;
                };
                e.prototype.onFuncStart = function () {
                    this.entityMoveComp.setUpdateSelf(!1);
                    this.entityMoveComp.setMoveSelf(!1);
                    this.entityFuncComp.onEnemyFuncStart(this.type, this.isMerge);
                    this.entityFuncComp.setIsFuncing(!0);
                };
                e.prototype.onFuncEnd = function () {
                    this.entityMoveComp.setUpdateSelf(!0);
                    this.entityMoveComp.setMoveSelf(!0);
                    this.entityFuncComp.onEnemyFuncFinish(this.type, this.isMerge);
                    this.entityFuncComp.setIsFuncing(!1);
                };
                e.prototype.funcTrigger = function () {
                    return !1;
                };
                e.prototype.funcCancel = function () { };
                e.prototype.funcForceEnd = function () { };
                return r([c], e);
            }(o.default));
        i.default = l;
        cc._RF.pop();
    }, {
        "../../common/CompBase": "CompBase"
    }],
    EnemyBandageAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b11a84L7ZVGX4ZqeaHf6pXx", "EnemyBandageAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.EnemyBandageItem = void 0;
        var o, s = t("../../../../data/manager/ConfigDataManager"), c = t("../../../../util/Tools"), l = t("./EnemyAttrBase"), h = t("../../manager/battle/EntityManager"), u = t("../../../../config/GameEnum"), p = t("../../manager/battle/SnakeManager"), d = t("../../manager/battle/EnemyManager"), f = t("../../../../frame/manager/FrameManager"), m = cc._decorator, g = m.ccclass, _ = (m.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_enemyEntity = null;
                    e.m_state = 0;
                    e._cdTime = 0;
                    e._atkRange = 0;
                    e._bandageLength = 0;
                    e._speedAdd = 0;
                    e._speedReduce = 0;
                    e._lastTime = 0;
                    e._bandageCount = 1;
                    e._initAngle = 0;
                    e._disAngle = 0;
                    e._wraningTime = 0;
                    e._curCDTime = 0;
                    e._curLastTime = 0;
                    e._curWraningTime = 0;
                    e.m_arrbandage = [];
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.m_enemyEntity = i;
                    this.m_state = o.CD;
                    var a = s.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this.type = a.type;
                    var r = c.DYTools.stringToNumber(a.para, "*"), l = r[0], h = r[1], u = r[2], p = r[3], d = r[4], f = r[5], m = r[6], g = r[7], _ = r[8], y = r[9];
                    this._cdTime = l;
                    this._atkRange = h;
                    this._bandageLength = u;
                    this._speedAdd = p;
                    this._speedReduce = d;
                    this._lastTime = f;
                    this._bandageCount = m;
                    this._initAngle = g;
                    this._disAngle = _;
                    this._wraningTime = y;
                    this._curCDTime = 0;
                    this._curWraningTime = 0;
                    this._curLastTime = 0;
                };
                e.prototype.activeBandageItem = function (t, e, i) {
                    for (var n = null, a = 0; a < this.m_arrbandage.length; a++) {
                        var r = this.m_arrbandage[a];
                        if (!r.isActive) {
                            r.isActive = !0;
                            n = r;
                            break;
                        }
                    }
                    if (null == n) {
                        (n = new y()).warning = this.createWarning();
                        n.bandage = this.createBandage();
                        n.minLength = n.bandage.height;
                        n.isActive = !0;
                        this.m_arrbandage.push(n);
                    }
                    n.offset = t;
                    n.startPos = e.add(t);
                    n.endPos = i;
                    n.warning.active = !1;
                    n.bandage.active = !1;
                    return n;
                };
                e.prototype.createBandage = function () {
                    var t = new cc.Node();
                    t.addComponent(cc.Sprite).spriteFrame = d.EnemyMgr.enemyAtlas.getSpriteFrame("enemy_4_skill");
                    t.setAnchorPoint(.5, 0);
                    this.node.parent.addChild(t, -1);
                    return t;
                };
                e.prototype.updateBandagePos = function () {
                    for (var t = 0; t < this.m_arrbandage.length; t++) {
                        var e = this.m_arrbandage[t];
                        e.bandage.setPosition(this.node.getPosition().add(e.offset));
                    }
                };
                e.prototype.setBandageShow = function (t) {
                    for (var e = 0; e < this.m_arrbandage.length; e++) {
                        var i = this.m_arrbandage[e];
                        if (i.isActive) {
                            i.bandage.active = t;
                            if (t) {
                                var n = cc.v2(0, 1), a = i.endPos.sub(i.startPos), r = cc.v2(a).signAngle(n), o = cc.misc.radiansToDegrees(r);
                                i.bandage.angle = -o;
                            }
                        }
                    }
                };
                e.prototype.setWarningShow = function (t) {
                    for (var e = 0; e < this.m_arrbandage.length; e++) {
                        var i = this.m_arrbandage[e];
                        i.isActive && (i.warning.active = t);
                    }
                };
                e.prototype.createWarning = function () {
                    var t = new cc.Node();
                    h.EntityMgr.addShadow(t);
                    return t;
                };
                e.prototype.funcForceEnd = function () {
                    if (this.m_state != o.CD) {
                        this.m_state = o.End;
                        this.removeAllBandageItem();
                    }
                };
                e.prototype.updateLogic = function (t) {
                    if (this.enabled) {
                        this.updateBandagePos();
                        switch (this.m_state) {
                            case o.CD:
                                this.updateCD(t);
                                break;

                            case o.Warning:
                                this.updateWarning(t);
                                break;

                            case o.Add:
                                this.updateAdd(t);
                                this.updateHurt(t);
                                break;

                            case o.Last:
                                this.updateLast(t);
                                this.updateHurt(t);
                                break;

                            case o.Reduce:
                                this.updateReduce(t);
                                this.updateHurt(t);
                                break;

                            case o.End:
                                this._curCDTime = 0;
                                this.m_state = o.CD;
                                this.onFuncEnd();
                        }
                    }
                };
                e.prototype.atkBandage = function () {
                    var t = this;
                    this.m_state = o.None;
                    this.m_enemyEntity.playAnimation("bandage_start");
                    this.m_enemyEntity.scheduleOnce(function () {
                        t.setBandageShow(!0);
                        t.m_state = o.Add;
                        f.FrameMgr.audioMgr.playEffect("enemy_bandage");
                    }, .5);
                };
                e.prototype.updateCD = function (t) {
                    this._curCDTime += t;
                    if (this._curCDTime >= this._cdTime) {
                        var e = this.node.getPosition(), i = p.SnakeMgr.getSnakeHead().node.getPosition();
                        if (cc.Vec2.distance(e, i) <= this._atkRange) {
                            this._curCDTime = 0;
                            this.onFuncStart();
                            this.entityMoveComp.enabled = !1;
                            if (this._bandageCount) for (var n = 0; n < this._bandageCount; n++) a = this.getAtkEndPos(e, i, this._initAngle, this._disAngle * n),
                                this.activeBandageItem(cc.v2(0, 0), e, a); else {
                                var a = this.getAtkEndPos(e, i, 0, 0);
                                this.activeBandageItem(cc.v2(0, 0), e, a);
                            }
                            this.updateBandagePos();
                            if (this._wraningTime > 0) {
                                this.m_state = o.Warning;
                                this.setWarningShow(!0);
                            } else this.atkBandage();
                        }
                    }
                };
                e.prototype.getAtkEndPos = function (t, e, i, n) {
                    var a = cc.Vec2.ZERO, r = cc.Vec2.distance(t, e), o = e.sub(t), s = cc.v2(o).signAngle(cc.v2(1, 0)), c = (-cc.misc.radiansToDegrees(s) + i + n) / 180 * Math.PI;
                    a.x = t.x + r * Math.cos(c);
                    a.y = t.y + r * Math.sin(c);
                    return a;
                };
                e.prototype.updateWarning = function (t) {
                    this._curWraningTime += t;
                    if (this._curWraningTime >= this._wraningTime) {
                        this._curWraningTime = 0;
                        this.setWarningShow(!1);
                        this.atkBandage();
                    }
                };
                e.prototype.updateAdd = function (t) {
                    for (var e = 0; e < this.m_arrbandage.length; e++) {
                        var i = this.m_arrbandage[e];
                        if (i.isActive) {
                            var n = i.bandage.height + this._speedAdd * t;
                            if (n >= this._bandageLength) {
                                n = this._bandageLength;
                                this.m_state = o.Last;
                                this._curLastTime = 0;
                            }
                            i.bandage.height = n;
                        }
                    }
                };
                e.prototype.updateLast = function (t) {
                    this._curLastTime += t;
                    if (this._curLastTime >= this._lastTime) {
                        this._curLastTime = 0;
                        this.m_state = o.Reduce;
                        this.m_enemyEntity.playAnimation("bandage_end");
                    }
                };
                e.prototype.updateReduce = function (t) {
                    for (var e = 0; e < this.m_arrbandage.length; e++) {
                        var i = this.m_arrbandage[e];
                        if (i.isActive) {
                            var n = i.bandage.height - this._speedReduce * t;
                            if (n <= i.minLength) {
                                n = i.minLength;
                                this.m_state = o.End;
                            }
                            i.bandage.height = n;
                        }
                    }
                };
                e.prototype.updateHurt = function () {
                    if (p.SnakeMgr.getSnakeHead().getColliders()) for (var t = p.SnakeMgr.getSnakeHead().node.getPosition(), e = p.SnakeMgr.getSnakeHead().getColliders().radius, i = 0; i < this.m_arrbandage.length; i++) {
                        var n = this.m_arrbandage[i], a = n.bandage.getContentSize(), r = n.bandage.angle, o = n.bandage.getPosition(), s = o.add(n.endPos.sub(n.startPos)), l = o, h = cc.Vec2.distance(o, s);
                        if (h > 0) {
                            var u = a.height / h;
                            l.x = o.x + .5 * u * (s.x - o.x);
                            l.y = o.y + .5 * u * (s.y - o.y);
                        }
                        c.DYTools.checkCircleRotateRect(t, e, l, a, r) && p.SnakeMgr.getSnakeHead().hurt(this.m_enemyEntity.getAtk());
                    }
                };
                e.prototype.removeAllBandageItem = function () {
                    for (var t = 0; t < this.m_arrbandage.length; t++) {
                        var e = this.m_arrbandage[t];
                        e.bandage.destroy();
                        e.warning.destroy();
                    }
                    this.m_arrbandage = [];
                };
                e.prototype.reset = function () {
                    this._cdTime = 0;
                    this._atkRange = 0;
                    this._bandageLength = 0;
                    this._speedAdd = 0;
                    this._speedReduce = 0;
                    this._lastTime = 0;
                    this._wraningTime = 0;
                    this.m_state = o.CD;
                    this.removeAllBandageItem();
                };
                e.prototype.clear = function () {
                    this.removeAllBandageItem();
                    this.node.targetOff(this);
                };
                e.prototype.onFuncEnd = function () {
                    t.prototype.onFuncEnd.call(this);
                    this.node.emit(u.EventTypeEnum.EnemyMoveRefresh);
                    this.m_enemyEntity.playAnimation("move");
                    this.m_state = o.CD;
                    this.removeAllBandageItem();
                    this.entityMoveComp.enabled = !0;
                };
                return r([g], e);
            }(l.default));
        i.default = _;
        (function (t) {
            t[t.None = 0] = "None";
            t[t.CD = 1] = "CD";
            t[t.Warning = 2] = "Warning";
            t[t.Add = 3] = "Add";
            t[t.Last = 4] = "Last";
            t[t.Reduce = 5] = "Reduce";
            t[t.End = 6] = "End";
        })(o || (o = {}));
        var y = function () {
            this.warning = null;
            this.bandage = null;
            this.offset = cc.Vec2.ZERO;
            this.startPos = cc.Vec2.ZERO;
            this.endPos = cc.Vec2.ZERO;
            this.minLength = 0;
            this.isActive = !1;
        };
        i.EnemyBandageItem = y;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e85e4akSd5I5qXdZhdy/YJZ", "EnemyBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../common/EntityBase"), s = t("../../../frame/manager/FrameManager"), c = t("../manager/battle/LootManager"), l = t("../../../config/GameEnum"), h = t("../../../util/Tools"), u = cc._decorator, p = u.ccclass, d = (u.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.radius = 0;
                    e.m_lootArr = [];
                    e.m_curHp = 0;
                    e.m_maxHp = 0;
                    e._preGiveGoldPercent = 0;
                    e._preEmitProgressPercent = 0;
                    e.m_isActive = !1;
                    e._isDead = !1;
                    e._removeAble = !1;
                    e.m_uiData = null;
                    e.shakeRatio = 0;
                    return e;
                }
                e.prototype.reset = function () {
                    this.m_lootArr.splice(0);
                    this.m_uiData = null;
                    this.shakeRatio = 0;
                };
                e.prototype.updateLogic = function () { };
                e.prototype.setLootArr = function (t) {
                    t && (this.m_lootArr = t);
                };
                Object.defineProperty(e.prototype, "maxHp", {
                    get: function () {
                        return this.m_maxHp;
                    },
                    set: function (t) {
                        this.m_maxHp = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "curHp", {
                    get: function () {
                        return this.m_curHp;
                    },
                    set: function (t) {
                        this.m_curHp = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "preGiveGoldPercent", {
                    get: function () {
                        return this._preGiveGoldPercent;
                    },
                    set: function (t) {
                        this._preGiveGoldPercent = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.hpChange = function () {
                    return 0;
                };
                e.prototype.showIgniteAnim = function (t, e) {
                    void 0 === e && (e = 0);
                };
                Object.defineProperty(e.prototype, "hurtAble", {
                    get: function () {
                        return this.isActive && !this.isDead && this.getCollideAble();
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getCollideAble = function () {
                    return !1;
                };
                Object.defineProperty(e.prototype, "isActive", {
                    get: function () {
                        return this.m_isActive;
                    },
                    set: function (t) {
                        this.m_isActive = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "isDead", {
                    get: function () {
                        return this._isDead;
                    },
                    set: function (t) {
                        this._isDead = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "removeAble", {
                    get: function () {
                        return this._removeAble;
                    },
                    set: function (t) {
                        this._removeAble = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "speed", {
                    get: function () {
                        return cc.Vec2.ZERO;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "uiData", {
                    get: function () {
                        return this.m_uiData;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.setShakeRatio = function (t) {
                    this.shakeRatio = t || 0;
                };
                e.prototype.onDie = function () {
                    this.isDead = !0;
                    this.isActive = !1;
                    this.uiData.shakeLevel >= 0 && h.DYTools.random_int(0, 99) < this.shakeRatio && s.FrameMgr.noticeMgr.emit(l.EventTypeEnum.ScreenShake, {
                        level: this.uiData.shakeLevel
                    });
                };
                e.prototype.checkLoot = function () {
                    if (this.m_lootArr && this.m_lootArr.length > 0) for (var t = 0; t < this.m_lootArr.length; t++) {
                        var e = this.m_lootArr[t];
                        c.LootMgr.addLoot(e.x, this.node.position, e.y);
                    }
                };
                return r([p], e);
            }(o.default));
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../../../frame/manager/FrameManager": "FrameManager",
        "../../../util/Tools": "Tools",
        "../common/EntityBase": "EntityBase",
        "../manager/battle/LootManager": "LootManager"
    }],
    EnemyBulletAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e0803tB3ARLc74DnpLHQ7hZ", "EnemyBulletAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../data/manager/ConfigDataManager"), s = t("./EnemyAttrBase"), c = t("../../bullet/FirePoint/FirePointEnemy"), l = t("../../manager/battle/BulletManager"), h = t("../../manager/battle/EnemyManager"), u = t("../../../../util/Tools"), p = cc._decorator, d = p.ccclass, f = (p.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_firePoint = null;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    var a = o.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this.type = a.type;
                    this._initFirePoint();
                };
                e.prototype.willClear = function () {
                    if (this.m_firePoint) {
                        l.BulletMgr.deleteFirePoint(this.m_firePoint, this.entity);
                        this.m_firePoint = null;
                    }
                };
                e.prototype.clear = function () {
                    if (this.m_firePoint) {
                        l.BulletMgr.deleteFirePoint(this.m_firePoint, this.entity);
                        this.m_firePoint = null;
                    }
                };
                e.prototype._initFirePoint = function () {
                    var t = this, e = h.EnemyMgr.getEnemyFirePointData(this.m_funcId, this.m_enemy.uiData);
                    if (e) {
                        var i = h.EnemyMgr.getEnemyBulletData(this.m_funcId, this.m_enemy.data.id);
                        if (i) {
                            this.m_firePoint ? this.m_firePoint.changeData(e, i) : this.m_firePoint = l.BulletMgr.createFirePoint(c.default, this.m_enemy.fireNode, e, i, this.entity, function () {
                                t.m_enemy.moveController.enabled = !1;
                                t.entityMoveComp.setMoveSelf(!1);
                            }, function () {
                                t.m_enemy.moveController.enabled = !0;
                                t.m_enemy.moveController.setUpdateSelf(!0);
                                t.m_enemy.funcController.onEnemyFuncFinish(t.type, t.isMerge);
                                t.entityMoveComp.setMoveSelf(!0, !1);
                            });
                            this.m_firePoint && (this.m_firePoint.enabled = !0);
                        } else u.DYTools.error("敌人炮口数据有问题", this.m_funcId, e.bulletId, this.m_enemy.data ? this.m_enemy.data.id : -1);
                    } else u.DYTools.error("敌人炮口数据有问题", this.m_funcId, this.m_enemy.data ? this.m_enemy.data.id : -1);
                };
                return r([d], e);
            }(s.default));
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../util/Tools": "Tools",
        "../../bullet/FirePoint/FirePointEnemy": "FirePointEnemy",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyBurrowAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "a947fkeo8tIbo0GyJ2e1G/k", "EnemyBurrowAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        }, o = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, s = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var c = t("../../../../data/manager/ConfigDataManager"), l = t("../../../../util/Tools"), h = t("./EnemyAttrBase"), u = t("../../../../config/GameEnum"), p = t("../../manager/battle/MapManager"), d = t("../../../../frame/manager/FrameManager"), f = cc._decorator, m = f.ccclass, g = (f.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_state = 0;
                    e.m_firstUpTime = 0;
                    e.m_upTime = 0;
                    e.m_downTime = 0;
                    e.m_showDelay = 0;
                    e.m_time = 0;
                    e.m_downMoveOver = !1;
                    e.m_tracePool = [];
                    e.m_moveDis = 0;
                    e.moveAuId = -1;
                    return e;
                }
                i = e;
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.m_enemy = i;
                    var a = c.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this.type = a.type;
                    var r = l.DYTools.stringToNumber(a.para, "*"), o = r[0], s = r[1], h = r[2], u = r[3];
                    this.m_firstUpTime = o;
                    this.m_upTime = s;
                    this.m_downTime = h;
                    this.m_showDelay = u;
                    this.setState(0);
                    this.m_time = this.m_upTime - this.m_firstUpTime;
                    this.node.on("onDie", this.onDie.bind(this), this);
                    this.node.on("enter", function () {
                        d.FrameMgr.audioMgr.playEffectForCD("enemy_burron_up", .1);
                    }, this);
                };
                e.prototype.updateLogic = function (t) {
                    if (this.enabled) switch (this.m_state) {
                        case 0:
                            this.m_time += t;
                            this.m_time > this.m_upTime && this.setState(1);
                            break;

                        case 1:
                            break;

                        case 2:
                            this.m_time += t;
                            if (this.m_downMoveOver) this.m_time > this.m_showDelay && this.setState(3); else if (this.m_time > this.m_downTime) {
                                this.m_downMoveOver = !0;
                                this.m_time = 0;
                                this.entityMoveComp.enabled = !1;
                            }
                            this.updateTrace(t);
                    }
                };
                e.prototype.updateTrace = function (t) {
                    var e = this;
                    this.m_moveDis += this.entityMoveComp.getCurVelocity() * t;
                    if (this.m_moveDis > 20) {
                        this.m_moveDis -= 20;
                        var i = this.m_tracePool.pop();
                        if (!i) {
                            var n = this.m_enemy.uiNode.children[0];
                            if (n) {
                                var a = n.getChildByName("trace");
                                if (a) {
                                    (i = cc.instantiate(a)).parent = p.MapMgr.blockLayer;
                                    i.active = !0;
                                }
                            }
                        }
                        if (i) {
                            var r = i.getComponent(cc.Animation);
                            r.play();
                            i.opacity = 255;
                            i.position = this.node.position;
                            i.angle = cc.misc.radiansToDegrees(cc.v2(0, -1).signAngle(this.entityMoveComp.getDir())) - 90;
                            cc.tween(i).to(2, {
                                opacity: 0
                            }).call(function () {
                                r.stop();
                                e.m_tracePool.push(i);
                            }).start();
                        }
                    }
                };
                e.prototype.setState = function (t) {
                    var e = this;
                    this.m_state = t;
                    switch (this.m_state) {
                        case 0:
                            this.m_time = 0;
                            this.entityMoveComp.enabled = !1;
                            this.m_enemy.playAnimation("idle");
                            this.m_enemy.setShadowShow(!0);
                            break;

                        case 1:
                            d.FrameMgr.audioMgr.playEffectForCD("enemy_burron_down", .1);
                            this.entityMoveComp.enabled = !1;
                            this.m_enemy.setCollideAble(!1);
                            this.m_enemy.hideHp();
                            this.m_enemy.playAnimation("fall", function () {
                                e.setState(2);
                            });
                            break;

                        case 2:
                            this.m_time = 0;
                            this.m_enemy.setShadowShow(!1);
                            this.m_enemy.playAnimation("move");
                            this.playAudio();
                            this.m_moveDis = 0;
                            this.onFuncStart();
                            break;

                        case 3:
                            this.stopAudio();
                            d.FrameMgr.audioMgr.playEffectForCD("enemy_burron_up", .1);
                            this.m_enemy.playAnimation("enter", function () {
                                e.onFuncEnd();
                                e.setState(0);
                                e.m_enemy.showHp(!0);
                            });
                    }
                };
                e.prototype.onCollideWall = function () {
                    if (2 == this.m_state) {
                        this.entityMoveComp.setDir(cc.Vec2.ZERO);
                        this.setState(3);
                    }
                };
                e.prototype.onFuncStart = function () {
                    this.m_enemy.setCollideAble(!1);
                    this.m_enemy.setIsInSky(!0);
                    this.entityMoveComp.setMoveSelf(!0);
                    this.entityMoveComp.setUpdateSelf(!0);
                    this.entityFuncComp.onEnemyFuncStart(this.type, this.isMerge);
                    this.entityMoveComp.enabled = !0;
                    this.m_time = 0;
                    this.m_downMoveOver = !1;
                };
                e.prototype.onFuncEnd = function () {
                    this.entityFuncComp.onEnemyFuncFinish(this.type, this.isMerge);
                    this.node.emit(u.EventTypeEnum.EnemyMoveRefresh);
                    this.m_enemy.setCollideAble(!0);
                    this.m_enemy.setIsInSky(!1);
                };
                e.prototype.onDie = function () {
                    var t = this;
                    this.node.off("onDie");
                    this.node.off("enter");
                    this.m_enemy.playAnimation("blast", function () {
                        t.m_enemy.playDieAnim();
                    });
                };
                e.prototype.playAudio = function () {
                    return o(this, void 0, void 0, function () {
                        var t;
                        return s(this, function (e) {
                            switch (e.label) {
                                case 0:
                                    t = this;
                                    return [4, d.FrameMgr.audioMgr.playEffect("enemy_burrow_move", !0)];

                                case 1:
                                    t.moveAuId = e.sent();
                                    2 != this.m_state && this.stopAudio();
                                    return [2];
                            }
                        });
                    });
                };
                e.prototype.stopAudio = function () {
                    if (this.moveAuId >= 0) {
                        d.FrameMgr.audioMgr.stopEffect(this.moveAuId);
                        this.moveAuId = -1;
                    }
                };
                e.clearAttr = function () {
                    this.moveAudioId = -1;
                    this.moveCount = 0;
                };
                e.playMoveAudio = function () {
                    return o(this, void 0, void 0, function () {
                        var t;
                        return s(this, function (e) {
                            switch (e.label) {
                                case 0:
                                    i.moveCount++;
                                    if (!(i.moveAudioId < 0)) return [3, 2];
                                    t = i;
                                    return [4, d.FrameMgr.audioMgr.playEffect("enemy_burrow_move")];

                                case 1:
                                    t.moveAudioId = e.sent();
                                    i.checkMoveAudio();
                                    e.label = 2;

                                case 2:
                                    return [2];
                            }
                        });
                    });
                };
                e.stopMoveAudio = function () {
                    return o(this, void 0, void 0, function () {
                        return s(this, function () {
                            i.moveCount--;
                            i.checkMoveAudio();
                            return [2];
                        });
                    });
                };
                e.checkMoveAudio = function () {
                    if (i.moveCount <= 0 && i.moveAudioId >= 0) {
                        d.FrameMgr.audioMgr.stopEffect(i.moveAudioId);
                        i.moveAudioId = -1;
                    }
                };
                var i;
                e.moveAudioId = -1;
                e.moveCount = 0;
                return i = r([m], e);
            }(h.default));
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/MapManager": "MapManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyCircleMoveComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "ae563zA2y1O4rFpKqWsK+cO", "EnemyCircleMoveComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./EnemyMoveBaseComp"), s = t("../../../../util/Tools"), c = cc._decorator, l = c.ccclass, h = (c.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._offset = cc.Vec2.ZERO;
                    e._radius = 0;
                    e._angularVelocity = 0;
                    e._colockWise = -1;
                    e._center = cc.Vec2.ZERO;
                    e._isRadiusDiff = !1;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.initData();
                    this.initMove();
                };
                e.prototype.initData = function () {
                    var t = s.DYTools.stringToNumber(this._data.para);
                    if (5 == t.length) {
                        this._offset = cc.v2(t[0], t[1]);
                        this._radius = t[2];
                        this._angularVelocity = t[3];
                        this._colockWise = 0 == t[4] ? -1 : 1;
                    }
                };
                e.prototype.initMove = function () {
                    this._center = this.node.getPosition().add(this._offset);
                    var t = this._offset.mag();
                    Math.abs(t - this._radius) > 5 && (this._isRadiusDiff = !0);
                };
                e.prototype.updatePos = function (e) {
                    if (this.m_updateSelf) {
                        this._isRadiusDiff && this._updateRadius(e);
                        this._updateMove(e);
                    } else t.prototype.updatePos.call(this, e);
                };
                e.prototype._updateMove = function (t) {
                    var e = this.node.getPosition().sub(this._center), i = this._angularVelocity * t * this._colockWise, n = e.rotate(cc.misc.degreesToRadians(i));
                    this.node.setPosition(this._center.add(n));
                    this.setDir(n.sub(e).normalize());
                };
                e.prototype._updateRadius = function (t) {
                    var e = this.node.getPosition().sub(this._center), i = e.mag(), n = i > this._radius ? -1 : 1, a = i + (this.initVelocity || 100) * t * n;
                    if (Math.abs(i - a) >= Math.abs(i - this._radius)) {
                        a = this._radius;
                        this._isRadiusDiff = !1;
                    }
                    this.node.setPosition(e.normalize().mul(a).add(this._center));
                };
                e.prototype.setUpdateSelf = function (t, e) {
                    void 0 === e && (e = !1);
                    this.updateSelf = t;
                    if (t) {
                        var i = this.node.getPosition().sub(this._center).mag();
                        Math.abs(i - this._radius) > 5 && (this._isRadiusDiff = !0);
                    }
                };
                e.prototype.onCustomMove = function (e) {
                    t.prototype.onCustomMove.call(this, e);
                    e[0] || this.initMove();
                };
                e.prototype.reset = function () {
                    t.prototype.reset.call(this);
                    this._offset = cc.Vec2.ZERO;
                    this._radius = 0;
                    this._angularVelocity = 0;
                    this._colockWise = -1;
                };
                return r([l], e);
            }(o.default));
        i.default = h;
        cc._RF.pop();
    }, {
        "../../../../util/Tools": "Tools",
        "./EnemyMoveBaseComp": "EnemyMoveBaseComp"
    }],
    EnemyCoinComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b0d76OfBjNC54g7RXjaxHMN", "EnemyCoinComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("../../../../util/GameFunc"), c = t("../../manager/battle/LootManager"), l = t("../comp/EnemyCompBase"), h = cc._decorator, u = h.ccclass, p = (h.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_type = o.CoinEnemyType.None;
                    e.m_hpPercent = 0;
                    e.m_percentCoin = 0;
                    e.m_dieCoin = 0;
                    e.m_lootCount = 0;
                    return e;
                }
                e.prototype.create = function (t, e, i, n, a) {
                    this.initBase(t);
                    this.m_type = e;
                    this.m_hpPercent = i;
                    this.m_percentCoin = n;
                    this.m_dieCoin = a;
                    this.m_lootCount = 0;
                };
                e.prototype.onHpChange = function (t, e) {
                    var i = Math.floor(t / e * 100), n = Math.floor((100 - i) / this.m_hpPercent);
                    if (n > this.m_lootCount) {
                        var a = n - this.m_lootCount;
                        this.m_lootCount = n;
                        this.onLoot(a * this.m_percentCoin);
                    }
                };
                e.prototype.onDie = function () {
                    this.onLoot(this.m_dieCoin, !0);
                };
                e.prototype.onLoot = function (t, e) {
                    void 0 === e && (e = !1);
                    switch (this.m_type) {
                        case o.CoinEnemyType.GoldMin:
                        case o.CoinEnemyType.GoldLarge:
                            c.LootMgr.addLootCoinGold(s.GFunc.getEnemyWorldPos(this.node), t, e ? 8 : 3);
                            break;

                        case o.CoinEnemyType.Diamond:
                            c.LootMgr.addLootCoinDiamond(s.GFunc.getEnemyWorldPos(this.node), t, e ? 8 : 3);
                            break;

                        case o.CoinEnemyType.SnakeUnit:
                            c.LootMgr.addLoot(o.LootType.Snake, this.node.position, Math.floor(t));
                    }
                };
                return r([u], e);
            }(l.default));
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../util/GameFunc": "GameFunc",
        "../../manager/battle/LootManager": "LootManager",
        "../comp/EnemyCompBase": "EnemyCompBase"
    }],
    EnemyColWallComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6f94bkrVrVGkZ1c2Rhx0DxC", "EnemyColWallComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../../config/GameEnum"), o = t("../../../../util/Tools"), s = t("../../common/CompBase"), c = t("../../../../config/GameConst"), l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_elastic = !1;
                e.m_elasticAble = !1;
                e.m_colWalls = [];
                e.m_colingWalls = [];
                e.m_colBlocks = [];
                e.m_lastPos = cc.Vec3.ZERO;
                e.m_dir = cc.Vec2.ZERO;
                e.m_colFrameCount = 2;
                return e;
            }
            e.prototype.init = function (t, e, i) {
                this.reset();
                this.m_elastic = t;
                this.initBase(e, i);
                this.entity.node.targetOff(this);
                this.entity.node.on(r.EventTypeEnum.EnemyDirChange, this.onDirChange.bind(this), this);
            };
            e.prototype.clear = function () {
                this.m_colingWalls.splice(0);
            };
            e.prototype.reset = function () {
                this.clear();
                this.m_colBlocks.splice(0);
                this.m_colWalls.splice(0);
                this.m_colFrameCount = 2;
                this.m_elastic = !1;
                this.m_elasticAble = !1;
            };
            e.prototype.onDirChange = function (t) {
                this.m_dir.x = t.x;
                this.m_dir.y = t.y;
            };
            e.prototype.updateLogic = function () {
                this.checkCollideWall();
                this.m_lastPos = this.entity.node.position;
            };
            e.prototype.checkCollideWall = function () {
                c.GValue.stopEnemyId, this.entity.onlyId;
                if (this.m_elasticAble) {
                    this.entity.onlyId, c.GValue.stopEnemyId;
                    var t = cc.v2(this.node.x, this.node.y), e = this._checkWallCollide(t), i = e.dx, n = e.dy, a = (e.rectArr,
                        e.lineArr), s = this._checkBlockCollide(t);
                    i || (i = s.dx);
                    n || (n = s.dy);
                    var l = s.blockDir, h = null;
                    if (a) if (1 == a.length) {
                        var u = this.m_dir, p = a[0];
                        h = this._calculateLineDir(p, u);
                        this.m_colingWalls.push(p);
                    } else if (a.length > 1) {
                        h = cc.Vec2.ZERO;
                        for (var d = 0; d < a.length; d++) {
                            var f = a[d], m = f.verVec;
                            h.addSelf(m);
                            this.m_colingWalls.push(f);
                        }
                    } else o.DYTools.error("llllllllllllll");
                    if (h) {
                        i && this.m_dir.x * h.x > 0 && (h.x = 0);
                        n && this.m_dir.y * h.y > 0 && (h.y = 0);
                        this.node && this.node.emit(r.EventTypeEnum.ContactWall, {
                            dir: h
                        });
                    } else i || n ? this.node && this.node.emit(r.EventTypeEnum.ContactWall, {
                        dx: i,
                        dy: n
                    }) : l && this.node && this.node.emit(r.EventTypeEnum.ContactWall, {
                        dir: l
                    });
                } else if (this.m_elastic) {
                    this.m_colFrameCount--;
                    0 == this.m_colFrameCount && 0 == this.m_colWalls.length && (this.m_elasticAble = !0);
                }
            };
            e.prototype._checkWallCollide = function (t) {
                for (var e = !1, i = !1, n = null, a = [], s = 0; s < this.m_colWalls.length; s++) {
                    var c = this.m_colWalls[s];
                    if (!o.DYTools.arrContain(this.m_colingWalls, c)) {
                        var l = c.data;
                        switch (c.type) {
                            case r.ColliderType.Circle:
                                a.push(c);
                                (p = Math.abs(this.m_lastPos.x - l.position.x)) > (d = Math.abs(this.m_lastPos.y - l.position.y)) ? e = !0 : i = !0;
                                break;

                            case r.ColliderType.Rectangle:
                                a.push(c);
                                switch (c.tag) {
                                    case 1:
                                        this.m_dir.y > 0 && (i = !0);
                                        break;

                                    case 2:
                                        this.m_dir.y < 0 && (i = !0);
                                        break;

                                    case 3:
                                        this.m_dir.x < 0 && (e = !0);
                                        break;

                                    case 4:
                                        this.m_dir.x > 0 && (e = !0);
                                        break;

                                    default:
                                        var h = l.center, u = cc.Vec2.ZERO;
                                        u.x = t.x - h.x;
                                        u.y = t.y - h.y;
                                        var p = Math.abs(this.m_lastPos.x - h.x), d = Math.abs(this.m_lastPos.y - h.y);
                                        p <= l.width / 2 && (e = !0);
                                        d <= l.height / 2 && (i = !0);
                                }
                                break;

                            case r.ColliderType.Line:
                                n || (n = []);
                                n.push(c);
                        }
                    }
                }
                return {
                    dx: e,
                    dy: i,
                    rectArr: a,
                    lineArr: n
                };
            };
            e.prototype._checkBlockCollide = function (t) {
                for (var e = this, i = !1, n = !1, a = null, s = function (s) {
                    var l = c.m_colBlocks[s];
                    if (o.DYTools.arrContain(c.m_colingWalls, l)) return "break";
                    c.m_colingWalls.push(l);
                    switch (l.type) {
                        case r.ColliderType.Circle:
                            var h = l.position.sub(t).signAngle(c.m_dir), u = Math.abs(h);
                            a = u < Math.PI / 2 ? 0 == h ? c.m_dir.mul(-1) : h < 0 ? c.m_dir.rotate(-(Math.PI - 2 * u)) : c.m_dir.rotate(Math.PI - 2 * u) : c.m_dir.mul(-1);
                            break;

                        case r.ColliderType.Rectangle:
                            var p = l, d = p.size.width, f = p.size.height, m = p.center, g = function () {
                                if (o.DYTools.isNumberDiffRange(e.node.y, m.y, f / 2)) {
                                    e.m_dir.x > 0 ? e.node.x < m.x && (i = !0) : e.node.x > m.x && (i = !0);
                                    return !0;
                                }
                                return !1;
                            }, _ = function () {
                                if (o.DYTools.isNumberDiffRange(e.node.x, m.x, d / 2)) {
                                    e.m_dir.y > 0 ? e.node.y < m.y && (n = !0) : e.node.y > m.y && (n = !0);
                                    return !0;
                                }
                                return !1;
                            };
                            if (!(d > f ? _() || g() : g() || _())) if (c.node.x > m.x && c.node.y > m.y) if (c.m_dir.x < 0 && c.m_dir.y < 0) {
                                n = !0;
                                i = !0;
                            } else c.m_dir.x < 0 ? i = !0 : c.m_dir.y < 0 && (n = !0); else if (c.node.x > m.x && c.node.y < m.y) if (c.m_dir.x < 0 && c.m_dir.y > 0) {
                                n = !0;
                                i = !0;
                            } else c.m_dir.x < 0 ? i = !0 : c.m_dir.y > 0 && (n = !0); else if (c.node.x < m.x && c.node.y < m.y) if (c.m_dir.x > 0 && c.m_dir.y > 0) {
                                n = !0;
                                i = !0;
                            } else c.m_dir.x > 0 ? i = !0 : c.m_dir.y > 0 && (n = !0); else if (c.m_dir.x > 0 && c.m_dir.y < 0) {
                                n = !0;
                                i = !0;
                            } else c.m_dir.x > 0 ? i = !0 : c.m_dir.y < 0 && (n = !0);
                    }
                }, c = this, l = 0; l < this.m_colBlocks.length && "break" !== s(l); l++);
                return {
                    dx: i,
                    dy: n,
                    blockDir: a
                };
            };
            e.prototype._calculateLineDir = function (t, e) {
                var i = null, n = t.tag, a = t.angle, r = t.data;
                switch (n) {
                    case 1:
                        if (0 == a) i = cc.v2(e.x, e.y > 0 ? -e.y : e.y); else if (a > 0) {
                            (d = cc.v2(1, 0).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                            i = cc.v2(e.x, e.y > 0 ? -e.y : e.y).rotate(2 * a);
                            var o = a, s = Math.PI + a;
                            if (o < d && s > d) i = cc.v2(e.x, e.y > 0 ? -e.y : e.y).rotate(2 * a); else {
                                var c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                null != l && (u = l * c.x + h);
                                this.node.y > u && (this.node.y = u);
                            }
                        } else {
                            (d = cc.v2(1, 0).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                            i = cc.v2(e.x, e.y > 0 ? -e.y : e.y).rotate(2 * a);
                            s = 2 * Math.PI + a, o = Math.PI + a;
                            if (r.start.y > r.end.y) if (o < d && s > d) i = cc.v2(e.x, e.y > 0 ? -e.y : e.y).rotate(2 * a); else {
                                c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                null != l && (u = l * c.x + h);
                                this.node.y > u && (this.node.y = u);
                            } else if (o > d || s < d) i = cc.v2(e.x, e.y > 0 ? -e.y : e.y).rotate(2 * a); else {
                                c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                null != l && (u = l * c.x + h);
                                this.node.y > u && (this.node.y = u);
                            }
                        }
                        break;

                    case 2:
                        if (0 == a) i = cc.v2(e.x, e.y < 0 ? -e.y : e.y); else if (a > 0) {
                            o = a, s = Math.PI + a;
                            (d = cc.v2(1, 0).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                            if (r.start.y > r.end.y) if (o < d && s > d) i = cc.v2(e.x, e.y < 0 ? -e.y : e.y).rotate(2 * a); else {
                                c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                null != l && (u = l * c.x + h);
                                this.node.y < u && (this.node.y = u);
                            } else if (o > d || s < d) i = cc.v2(e.x, e.y < 0 ? -e.y : e.y).rotate(2 * a); else {
                                c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                null != l && (u = l * c.x + h);
                                this.node.y < u && (this.node.y = u);
                            }
                        } else {
                            s = 2 * Math.PI + a, o = Math.PI + a;
                            (d = cc.v2(1, 0).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                            if (o < d && s > d) i = cc.v2(e.x, -e.y).rotate(2 * a); else {
                                c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                null != l && (u = l * c.x + h);
                                this.node.y < u && (this.node.y = u);
                            }
                        }
                        break;

                    case 3:
                        if (0 == a) i = cc.v2(e.x < 0 ? -e.x : e.x, e.y); else if (a > 0) {
                            o = a, s = Math.PI + a;
                            (d = cc.v2(0, 1).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                            if (o < d && s > d) i = cc.v2(e.x < 0 ? -e.x : e.x, e.y).rotate(2 * a); else {
                                c = this.entity.node.position, l = (f = t.param)[0], h = f[1];
                                var p = r.start.x;
                                null != l && (p = (c.y - h) / l);
                                this.node.x < p && (this.node.x = p);
                            }
                        } else {
                            s = 2 * Math.PI + a, o = Math.PI + a;
                            (d = cc.v2(0, 1).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                            if (o > d || s < d) i = cc.v2(e.x < 0 ? -e.x : e.x, e.y).rotate(2 * a); else {
                                c = this.entity.node.position, l = (f = t.param)[0], h = f[1], p = r.start.x;
                                null != l && (p = (c.y - h) / l);
                                this.node.x < p && (this.node.x = p);
                            }
                        }
                        break;

                    case 4:
                        if (0 == a) i = cc.v2(e.x > 0 ? -e.x : e.x, e.y); else if (a > 0) {
                            o = a, s = Math.PI + a;
                            (d = cc.v2(0, 1).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                            if (o > d || s < d) i = cc.v2(e.x > 0 ? -e.x : e.x, e.y).rotate(2 * a); else {
                                c = this.entity.node.position, l = (f = t.param)[0], h = f[1], p = r.start.x;
                                null != l && (p = (c.y - h) / l);
                                this.node.x > p && (this.node.x = p);
                            }
                        } else {
                            var d;
                            s = 2 * Math.PI + a, o = Math.PI + a;
                            (d = cc.v2(0, 1).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                            if (o < d && s > d) i = cc.v2(e.x > 0 ? -e.x : e.x, e.y).rotate(2 * a); else {
                                var f;
                                c = this.entity.node.position, l = (f = t.param)[0], h = f[1], p = r.start.x;
                                null != l && (p = (c.y - h) / l);
                                this.node.x > p && (this.node.x = p);
                            }
                        }
                }
                return i;
            };
            e.prototype.onCollideWall = function (t, e) {
                switch (t) {
                    case r.ContactType.Enter:
                        this.m_colWalls.push(e);
                        break;

                    case r.ContactType.Stay:
                        break;

                    case r.ContactType.Exit:
                        o.DYTools.arrRemove(this.m_colWalls, e);
                        o.DYTools.arrRemove(this.m_colingWalls, e);
                        this.m_elastic && (this.m_elasticAble || 0 != this.m_colWalls.length || (this.m_elasticAble = !0));
                }
            };
            e.prototype.onCollideBlock = function (t, e) {
                switch (t) {
                    case r.ContactType.Enter:
                        this.m_colBlocks.push(e);
                        break;

                    case r.ContactType.Stay:
                        break;

                    case r.ContactType.Exit:
                        o.DYTools.arrRemove(this.m_colBlocks, e);
                        o.DYTools.arrRemove(this.m_colingWalls, e);
                }
            };
            Object.defineProperty(e.prototype, "elastic", {
                get: function () {
                    return this.m_elastic;
                },
                set: function (t) {
                    this.m_elastic = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "elacticAble", {
                set: function (t) {
                    this.m_elasticAble = t;
                },
                enumerable: !1,
                configurable: !0
            });
            return e;
        }(s.default);
        i.default = l;
        cc._RF.pop();
    }, {
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../util/Tools": "Tools",
        "../../common/CompBase": "CompBase"
    }],
    EnemyCompBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "10044XLVbpIO46OxaAac8aZ", "EnemyCompBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../common/CompBase"), s = cc._decorator, c = s.ccclass, l = (s.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_enemy = null;
                    return e;
                }
                return r([c], e);
            }(o.default));
        i.default = l;
        cc._RF.pop();
    }, {
        "../../common/CompBase": "CompBase"
    }],
    EnemyDashAtkAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6c573yTFTREKKD9s8gnKBEl", "EnemyDashAtkAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../data/manager/ConfigDataManager"), s = t("../../../../util/Tools"), c = t("./EnemyAttrBase"), l = t("../../../../config/GameEnum"), h = t("../../manager/battle/SnakeManager"), u = cc._decorator, p = u.ccclass, d = (u.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_state = 0;
                    e.m_cdTime = 0;
                    e.m_range = 0;
                    e.m_minRadius = 0;
                    e.m_maxRadius = 0;
                    e.m_dashVelocity = 0;
                    e.m_atkDelay = 0;
                    e.m_totaCount = 0;
                    e.m_groupCD = 0;
                    e.m_time = 0;
                    e.m_curLength = 0;
                    e.m_totalLength = 0;
                    e.m_count = 0;
                    e.m_colRadius = 0;
                    e.m_colOffset = cc.Vec2.ZERO;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    var a = o.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this.type = a.type;
                    var r = s.DYTools.stringToNumber(a.para, "*"), c = r[0], l = r[1], h = r[2], u = r[3], p = r[4], d = r[5], f = r[6], m = r[7];
                    this.m_cdTime = c;
                    this.m_range = l;
                    this.m_minRadius = h;
                    this.m_maxRadius = u;
                    this.m_dashVelocity = p;
                    this.m_atkDelay = d;
                    this.m_totaCount = f || 0;
                    this.m_groupCD = m || 0;
                    this.setState(0);
                    this.node.on("onDie", this.onDie.bind(this), this);
                };
                e.prototype.updateLogic = function (t) {
                    if (this.enabled) switch (this.m_state) {
                        case 0:
                            this.m_time += t;
                            if (this.m_time > this.m_cdTime) {
                                var e = h.SnakeMgr.getSnakePosition();
                                s.DYTools.isNumberDiffRange(this.node.x, e.x, this.m_range) && s.DYTools.isNumberDiffRange(this.node.y, e.y, this.m_range) && this.setState(1);
                            }
                            break;

                        case 2:
                            this.m_curLength += this.m_dashVelocity * t;
                            this.m_curLength >= this.m_totalLength && this.setState(3);
                            break;

                        case 3:
                            this.m_time += t;
                            this.m_time > this.m_atkDelay && this.setState(4);
                            break;

                        case 4:
                            break;

                        case 5:
                            this.m_time += t;
                            this.m_time > this.m_groupCD && this.setState(2);
                    }
                };
                e.prototype.setState = function (t) {
                    var e = this;
                    this.m_state = t;
                    switch (this.m_state) {
                        case 0:
                            this.m_time = 0;
                            break;

                        case 1:
                            this.onFuncStart();
                            this.entityMoveComp.enabled = !1;
                            this.m_count = 0;
                            this.m_enemy.playAnimation("pre", function () {
                                e.setState(2);
                            });
                            break;

                        case 2:
                            this.m_time = 0;
                            var i = s.DYTools.random_int(this.m_minRadius, this.m_maxRadius), n = h.SnakeMgr.getSnakePosition().add(cc.v2(0, i).rotate(s.DYTools.random_int(0, 314) / 100)), a = n.sub(this.node.getPosition()).normalize();
                            this.entityMoveComp.setDir(a);
                            this.entityMoveComp.setVelocity(this.m_dashVelocity);
                            this.entityMoveComp.enabled = !0;
                            this.entityMoveComp.clearWall();
                            this.m_enemy.playAnimation("run");
                            this.m_totalLength = s.DYTools.getDisForVec2(n, this.node.getPosition());
                            this.m_curLength = 0;
                            break;

                        case 3:
                            this.m_enemy.playAnimation("idle");
                            this.entityMoveComp.enabled = !1;
                            break;

                        case 4:
                            this.m_time = 0;
                            this.m_enemy.playAnimation("attack", function () {
                                e.m_count++;
                                if (e.m_count >= e.m_totaCount) {
                                    e.onFuncEnd();
                                    e.setState(0);
                                } else e.setState(5);
                            });
                            var r = this.m_enemy.getColliders();
                            this.m_colRadius = r.radius;
                            this.m_colOffset = r.getOffset();
                            r.radius = 56;
                            r.offset = cc.v2(13, 4);
                            break;

                        case 5:
                            this.m_time = 0;
                    }
                };
                e.prototype.onCollideWall = function () {
                    if (2 == this.m_state) {
                        this.entityMoveComp.setDir(cc.Vec2.ZERO);
                        this.setState(3);
                    }
                };
                e.prototype.clear = function () {
                    this.node.targetOff(this);
                };
                e.prototype.onFuncEnd = function () {
                    t.prototype.onFuncEnd.call(this);
                    var e = this.m_enemy.getColliders();
                    e.radius = this.m_colRadius;
                    e.offset = this.m_colOffset;
                    this.node.emit(l.EventTypeEnum.EnemyMoveRefresh);
                    this.m_enemy.playAnimation("move");
                    this.m_state = 0;
                    this.m_enemy.setShadowJumpOffset(cc.v2(0, 0));
                    this.entityMoveComp.enabled = !0;
                };
                e.prototype.onDie = function () {
                    var t = this;
                    this.node.off("onDie");
                    this.m_enemy.playAnimation("blast", function () {
                        t.m_enemy.playDieAnim();
                    });
                };
                return r([p], e);
            }(c.default));
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyDashAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "71ec9DQOCNLcoBrHh4w5dPR", "EnemyDashAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../manager/battle/SnakeManager"), s = t("../../../../data/manager/ConfigDataManager"), c = t("../../../../util/Tools"), l = t("./EnemyAttrBase"), h = t("../../../../config/GameEnum"), u = t("../../../../frame/manager/FrameManager"), p = t("../../manager/battle/MapManager"), d = t("../../manager/battle/EnemyManager"), f = cc._decorator, m = f.ccclass, g = (f.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_enemyEntity = null;
                    e.m_state = 0;
                    e._dashVelocity = 0;
                    e._initVelocity = 0;
                    e._acceleration = 100;
                    e._atkRatio = 0;
                    e._rotateSpeed = 0;
                    e._warnTime = 0;
                    e._delay = 0;
                    e._dashCD = 0;
                    e._dashRange = 0;
                    e._dashType = 0;
                    e.m_dir = cc.v2(1, 0);
                    e._time = 0;
                    e._dis = 0;
                    e._audioId = -1;
                    e._warnLine = null;
                    e._pathWarnLineArr = [];
                    e._pathWarnHalfWidth = 25;
                    e.m_traceArr = [];
                    e.m_traceIndex = 0;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.m_enemyEntity = i;
                    var a = s.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this.type = a.type;
                    var r = c.DYTools.stringToNumber(a.para, "*"), o = r[0], l = r[1], u = r[2], p = r[3], d = r[4], f = r[5], m = r[6], g = r[7], _ = r[8];
                    this._dashVelocity = o;
                    this._initVelocity = o;
                    this._acceleration = l;
                    this._atkRatio = u;
                    this._rotateSpeed = p;
                    this._warnTime = d;
                    this._delay = f;
                    this._dashCD = m;
                    this._dashRange = g;
                    this._dashType = _ || 0;
                    this._pathWarnHalfWidth = 25 * this.entity.node.scale;
                    this.node.on(h.EventTypeEnum.ContactWall, this.onCollideWall.bind(this), this);
                };
                e.prototype.updateLogic = function (t) {
                    var e = this;
                    if (this.enabled) switch (this.m_state) {
                        case 0:
                            this._time += t;
                            if (this._time > this._dashCD && o.SnakeMgr.getSnakeHead().node.position.sub(this.entity.node.position).mag() <= this._dashRange) {
                                this._time = -100;
                                this.m_enemyEntity.playAnimation("idle");
                                this.onFuncStart();
                                this.entityMoveComp.setVelocity(0);
                                this.m_state = 1;
                                this._time = 0;
                            }
                            break;

                        case 1:
                            if (0 == this._time) {
                                this._dis = 0;
                                this.m_dir = this.entityMoveComp.getDir();
                                this._dashVelocity = this._initVelocity;
                                this.addWarnLine();
                                u.FrameMgr.audioMgr.playEffect("boss_spider_jumpPre").then(function (t) {
                                    e._audioId = t;
                                });
                            }
                            this.refreshFaceDir();
                            this._time += t;
                            if (this._time > this._warnTime) {
                                if (this._time <= this._warnTime + t) {
                                    cc.tween(this._warnLine).to(.3, {
                                        opacity: 0
                                    }).start();
                                    u.FrameMgr.audioMgr.playEffect("enemyDash");
                                    if (this._audioId > 0) {
                                        u.FrameMgr.audioMgr.stopEffect(this._audioId);
                                        this._audioId = -1;
                                    }
                                }
                                if (this._time >= this._warnTime + this._delay) {
                                    this.m_state = 2;
                                    this.m_traceIndex = 0;
                                    this.m_state = 3;
                                    this.entityMoveComp.setDir(this.m_dir);
                                    this.entityMoveComp.setVelocity(this._dashVelocity);
                                    this.m_enemyEntity.playAnimation("run");
                                    setTimeout(function () {
                                        e.refreshFaceDir();
                                    });
                                }
                                return;
                            }
                            this.aimingPlayer(t);
                            break;

                        case 2:
                            break;

                        case 3:
                            this.entityMoveComp.setDir(this.m_dir);
                            this.entityMoveComp.setVelocity(this._dashVelocity);
                            this._dis += this._dashVelocity * t;
                            var i = this._pathWarnLineArr[0], n = this.m_traceArr[this.m_traceIndex];
                            if (i) if (this._dis + this._pathWarnHalfWidth > i.height) {
                                this._dis -= i.height - this._pathWarnHalfWidth;
                                i.destroy();
                                this._pathWarnLineArr.splice(0, 1);
                                this.m_traceIndex++;
                            } else {
                                var a = 1 - this._dis / i.height;
                                i.getComponent(cc.Sprite).fillRange = a;
                                if (n) {
                                    n.node.opacity = 255;
                                    n.fillRange = this._dis / i.height;
                                }
                            }
                            this._dashVelocity -= this._acceleration * t;
                            this._dashVelocity <= 0 && this.onFuncEnd();
                    }
                };
                e.prototype.addWarnLine = function () {
                    if (!this._warnLine) {
                        this._warnLine = new cc.Node();
                        this._warnLine.addComponent(cc.Sprite).spriteFrame = d.EnemyMgr.enemyEffectAtlas.getSpriteFrame("warn_dash");
                        this._warnLine.anchorY = 1;
                        p.MapMgr.blockLayer.addChild(this._warnLine, 2);
                    }
                    this._warnLine.angle = this.entity.angle;
                    this._warnLine.position = this.entity.node.position;
                    this._warnLine.scale = .7 * this.entity.node.scale;
                    this._warnLine.active = !0;
                    this._warnLine.opacity = 255;
                };
                e.prototype.aimingPlayer = function (t) {
                    var e = o.SnakeMgr.getSnakePosition().sub(this.entity.node.getPosition()), i = cc.misc.degreesToRadians(this._rotateSpeed * t), n = this.m_dir.signAngle(e);
                    if (Math.abs(n) > i) {
                        i = n < 0 ? -i : i;
                        this.m_dir.rotateSelf(i);
                    } else this.m_dir.rotateSelf(n);
                    this.refreshFaceDir();
                    var a = cc.misc.radiansToDegrees(cc.v2(0, -1).signAngle(e));
                    this._warnLine.angle = a;
                };
                e.prototype.clearTrace = function () {
                    for (var t = 0; t < this.m_traceArr.length; t++) {
                        var e = this.m_traceArr[t];
                        cc.tween(e.node).to(.3, {
                            opacity: 0
                        }).start();
                    }
                    this.m_traceIndex = 0;
                };
                e.prototype.crossProduct = function (t, e) {
                    return t.x * e.y - t.y * e.x;
                };
                e.prototype.getReflectLine = function (t, e) {
                    var i = t.signAngle(e);
                    return e.rotate(2 * i);
                };
                e.prototype.refreshFaceDir = function () {
                    this.m_dir.equals(cc.Vec2.ZERO) || (0 == this.entity.rotateType ? this.entity.setFace && this.entity.setFace(this.m_dir) : this.entity.angle = -cc.misc.radiansToDegrees(this.m_dir.signAngle(cc.v2(0, -1))));
                };
                e.prototype.onCollideWall = function (t) {
                    if (0 != this.m_state) {
                        t.dx && this.reverseX();
                        t.dy && this.reverseY();
                        if (t.dir) {
                            this.m_dir = t.dir.normalize();
                            this.refreshFaceDir();
                        }
                        if (0 != this._dashType) {
                            this.entityMoveComp.setDir(this.m_dir);
                            this.entityMoveComp.setVelocity(this._dashVelocity);
                        } else this.entityMoveComp.setDir(cc.Vec2.ZERO);
                    }
                };
                e.prototype.reverseX = function () {
                    this.m_dir.x = -this.m_dir.x;
                    this.refreshFaceDir();
                };
                e.prototype.reverseY = function () {
                    this.m_dir.y = -this.m_dir.y;
                    this.refreshFaceDir();
                };
                Object.defineProperty(e.prototype, "atkRatio", {
                    get: function () {
                        return this._atkRatio;
                    },
                    set: function (t) {
                        this._atkRatio = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.reset = function () {
                    this._dashVelocity = 0;
                    this._initVelocity = 0;
                    this._acceleration = 100;
                    this._atkRatio = 0;
                    this._rotateSpeed = 0;
                    this._warnTime = 0;
                    this._dashCD = 0;
                    this._dashRange = 0;
                    this.m_state = 0;
                    this.m_dir = cc.v2(1, 0);
                    this._audioId = -1;
                    this._time = 0;
                    this._dis = 0;
                };
                e.prototype.clear = function () {
                    this.node.targetOff(this);
                    if (this._warnLine) {
                        this._warnLine.stopAllActions();
                        this._warnLine.destroy();
                        this._warnLine = null;
                    }
                    this._pathWarnLineArr.forEach(function (t) {
                        t.destroy();
                    });
                    this._pathWarnLineArr.splice(0);
                    this.m_traceArr.forEach(function (t) {
                        t.node.destroy();
                    });
                    this.m_traceArr.splice(0);
                };
                e.prototype.onFuncEnd = function () {
                    var e = this;
                    this._dashVelocity = 0;
                    this._time = 0;
                    this.entity.angle = 0;
                    this.m_state = 4;
                    this.clearTrace();
                    t.prototype.onFuncEnd.call(this);
                    this.m_enemyEntity.playAnimation("move");
                    this.m_state = 0;
                    setTimeout(function () {
                        e.refreshFaceDir();
                    });
                    this._pathWarnLineArr.forEach(function (t) {
                        t.destroy();
                    });
                    this._pathWarnLineArr.splice(0);
                };
                return r([m], e);
            }(l.default));
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyDieBulletAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "5f528EqNGNAS6OuixVTBIGI", "EnemyDieBulletAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../data/manager/ConfigDataManager"), s = t("../../../../util/Tools"), c = t("./EnemyAttrBase"), l = t("../../../../config/GameEnum"), h = t("../../manager/battle/BulletManager"), u = t("../../bullet/FirePoint/FirePointEnemy"), p = t("../../../../frame/manager/FrameManager"), d = cc._decorator, f = d.ccclass, m = (d.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_normalBulletId = 0;
                    e.m_dieBulletId = 0;
                    e.m_firePoint = null;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.m_enemy = i;
                    var a = o.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this.type = a.type;
                    var r = s.DYTools.stringToNumber(a.para, "*"), c = r[0], l = r[1];
                    this.m_normalBulletId = c;
                    this.m_dieBulletId = l;
                    this.initFirePoint();
                    this.node.on("onDie", this.onDie.bind(this), this);
                };
                e.prototype.initFirePoint = function () {
                    var t = this, e = h.BulletMgr.getFireData(this.m_normalBulletId);
                    if (e) {
                        var i = h.BulletMgr.getBulletData(this.m_normalBulletId, this.m_enemy.data.atk);
                        if (i) {
                            this.m_firePoint ? this.m_firePoint.changeData(e, i) : this.m_firePoint = h.BulletMgr.createFirePoint(u.default, this.m_enemy.fireNode, e, i, this.entity, function () {
                                t.m_enemy.moveController.enabled = !1;
                                t.entityMoveComp.setMoveSelf(!1);
                            }, function () {
                                t.m_enemy.moveController.enabled = !0;
                                t.m_enemy.moveController.setUpdateSelf(!0);
                                t.m_enemy.funcController.onEnemyFuncFinish(t.type, t.isMerge);
                                t.entityMoveComp.setMoveSelf(!0, !1);
                            });
                            this.m_firePoint && (this.m_firePoint.enabled = !0);
                        } else s.DYTools.error("敌人炮口数据有问题2", this.m_funcId, e.bulletId, this.m_enemy.data ? this.m_enemy.data.id : -1);
                    } else s.DYTools.error("敌人炮口数据有问题1", this.m_funcId, this.m_enemy.data ? this.m_enemy.data.id : -1);
                };
                e.prototype.updateLogic = function () {
                    this.enabled;
                };
                e.prototype.clear = function () {
                    this.node.targetOff(this);
                    if (this.m_firePoint) {
                        h.BulletMgr.deleteFirePoint(this.m_firePoint, this.entity);
                        this.m_firePoint = null;
                    }
                };
                e.prototype.onFuncEnd = function () {
                    t.prototype.onFuncEnd.call(this);
                    this.node.emit(l.EventTypeEnum.EnemyMoveRefresh);
                    this.m_enemy.playAnimation("move");
                    this.m_enemy.setShadowJumpOffset(cc.v2(0, 0));
                    this.entityMoveComp.enabled = !0;
                };
                e.prototype.onDie = function () {
                    var t = this;
                    this.node.off("onDie");
                    this.m_enemy.playAnimation("blast", function () {
                        t.m_enemy.uiNode.opacity = 0;
                        t.m_enemy.playDieAnim();
                        t.m_firePoint.fireNow();
                    });
                    p.FrameMgr.audioMgr.playEffect("enemy_die_bullet");
                    var e = h.BulletMgr.getFireData(this.m_dieBulletId);
                    if (e) {
                        var i = h.BulletMgr.getBulletData(this.m_dieBulletId, this.m_enemy.data.atk);
                        if (i) {
                            this.m_firePoint ? this.m_firePoint.changeData(e, i) : this.m_firePoint = h.BulletMgr.createFirePoint(u.default, this.m_enemy.fireNode, e, i, this.entity, null, null);
                            this.m_firePoint.enabled = !0;
                        } else s.DYTools.error("敌人炮口数据有问题4", this.m_funcId, e.bulletId, this.m_enemy.data ? this.m_enemy.data.id : -1);
                    } else s.DYTools.error("敌人炮口数据有问题3", this.m_funcId, this.m_enemy.data ? this.m_enemy.data.id : -1);
                };
                return r([f], e);
            }(c.default));
        i.default = m;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../bullet/FirePoint/FirePointEnemy": "FirePointEnemy",
        "../../manager/battle/BulletManager": "BulletManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyEnterComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "d20641GlNJOZLSgl9jqPL5l", "EnemyEnterComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../../config/GameConfig"), o = t("../../../../config/GameConst"), s = t("../../../../frame/manager/FrameManager"), c = t("../../../../frame/ui/FrameAnim"), l = t("../../../../util/Tools"), h = t("../../manager/battle/BattleManager"), u = t("../../manager/battle/EnemyManager"), p = t("../../manager/battle/EntityManager"), d = t("../../manager/battle/MapManager"), f = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_type = 0;
                e.m_data = null;
                e.m_finishCall = null;
                e.m_enterNode = null;
                e.m_anim = null;
                e.m_anim1 = null;
                e.m_anim2 = null;
                e.m_landAnim = null;
                e.m_time = 0;
                e.m_liftNode = null;
                e.m_flyTime = 0;
                e.m_speedX = 0;
                e.m_speedY = 0;
                e.m_startPos = cc.Vec2.ZERO;
                e.m_endPos = cc.Vec2.ZERO;
                e.m_midPos = cc.Vec2.ZERO;
                e.m_enterImageScale = 1;
                e.m_landImage = null;
                e.m_landCount = 0;
                e.m_accY = 0;
                e.m_showTime = 0;
                return e;
            }
            e.prototype.init = function (t, e, i, n, a) {
                this.initBase(t);
                this.m_enemy = t;
                this.m_type = e;
                this.m_data = i;
                this.m_finishCall = a;
                this.initData(n);
            };
            e.prototype.updateLogic = function (t) {
                if (this.enabled) switch (this.m_type) {
                    case 3:
                        this.updateWaterEnter(t);
                        break;

                    case 4:
                        this._udpateType4(t);
                        break;

                    case 100:
                        this._updateGoldFromSky(t);
                }
            };
            e.prototype.updateWaterEnter = function (t) {
                var e = this;
                this.m_time += t;
                var i = this.m_speedY + this.m_accY * t;
                if (this.m_speedY > 0 && i < 0) {
                    var n = this.m_flyTime - this.m_time;
                    this.m_accY = -Math.abs(2 * (this.m_endPos.y - this.node.y) / (n * n));
                }
                this.m_speedY = i;
                var a = this.node.x + t * this.m_speedX, s = this.node.y + t * i, h = !1;
                if (this.m_speedX > 0) {
                    if (a >= this.m_endPos.x) {
                        a = this.m_endPos.x;
                        s = this.m_endPos.y;
                        h = !0;
                    }
                } else if (this.m_speedX < 0 && a <= this.m_endPos.x) {
                    a = this.m_endPos.x;
                    s = this.m_endPos.y;
                    h = !0;
                }
                this.node.x = a;
                this.node.y = s;
                this.m_enterNode && (this.m_enterNode.angle = l.DYTools.getVecDegree(cc.v2(this.m_speedX, i)));
                if (h) {
                    this.node.zIndex = 0;
                    this.enabled = !1;
                    this.entity.scheduleOnce(function () {
                        if (e.m_enterNode) {
                            e.m_enterNode.stopAllActions();
                            e.m_enterNode.active = !1;
                        }
                        if (e.entity.uiNode) {
                            e.entity.uiNode.opacity = 255;
                            e.entity.uiNode.scaleX = 2;
                            e.entity.uiNode.scaleY = 1.03;
                            cc.tween(e.entity.uiNode).to(r.GConfig.ActionInterval, {
                                scaleX: 1.4,
                                scaleY: .9
                            }).to(2 * r.GConfig.ActionInterval, {
                                scaleX: .95,
                                scaleY: 1.4
                            }).to(3 * r.GConfig.ActionInterval, {
                                scaleX: 1,
                                scaleY: 1
                            }).call(function () {
                                e.onAnimOver();
                            }).start();
                        }
                    });
                    if (!this.m_landAnim) {
                        var d = cc.instantiate(o.GValue.pfFrameAnim);
                        d.anchorY = .7;
                        this.m_landAnim = d.getComponent(c.default);
                    }
                    this.m_landAnim.init(u.EnemyMgr.enemyEffectAtlas, this.m_landImage, this.m_landCount, 2 * r.GConfig.ActionInterval);
                    this.m_landAnim.node.parent = p.EntityMgr.getShadowLayer();
                    this.m_landAnim.node.x = this.m_endPos.x;
                    this.m_landAnim.node.y = this.m_endPos.y;
                    this.m_landAnim.node.scale = this.node.scale * this.m_enemy.uiData.enterLandScale;
                    "anim_enemy_land1_" == this.m_landImage ? this.m_landAnim.node.color = this.m_enemy.uiData.effectColor : this.m_landAnim.node.color = cc.Color.WHITE;
                    this.m_landAnim.play(1);
                }
            };
            e.prototype._udpateType4 = function (t) {
                if (this.m_showTime > 0) {
                    this.m_time += t;
                    if (this.m_showTime < this.m_time) {
                        this.m_anim && this.m_anim.stop();
                        this.onAnimOver();
                    }
                }
            };
            e.prototype._updateGoldFromSky = function () { };
            e.prototype.initData = function (t) {
                this.m_time = 0;
                switch (this.m_type) {
                    case 2:
                        this.m_endPos.x = t.x;
                        this.m_endPos.y = t.y;
                        break;

                    case 3:
                        this.m_flyTime = t[0];
                        this.m_midPos.x = t[1];
                        this.m_midPos.y = t[2];
                        this.m_startPos.x = t[3];
                        this.m_startPos.y = t[4];
                        this.m_endPos.x = t[5];
                        this.m_endPos.y = t[6];
                        this.m_enterImageScale = t[7];
                        this.m_landImage = t[8];
                        this.m_landCount = t[9];
                        var e = this.m_endPos.x - this.m_startPos.x;
                        this.m_speedX = e / this.m_flyTime;
                        var i = Math.abs(this.m_midPos.y - this.m_startPos.y), n = this.m_flyTime * (this.m_midPos.x - this.m_startPos.x) / (this.m_endPos.x - this.m_startPos.x);
                        this.m_accY = -2 * i / (n * n);
                        this.m_speedY = Math.abs(this.m_accY * n);
                        break;

                    case 4:
                        this.m_showTime = t[0] ? t[0] : -1;
                        this.m_showTime < 0 && (this.m_finishCall = null);
                }
            };
            e.prototype.onEnable = function () {
                var t = this;
                switch (this.m_type) {
                    case 1:
                        break;

                    case 2:
                        this.onAnimStart();
                        if (!this.m_liftNode) {
                            this.m_liftNode = new cc.Node("lift");
                            this.m_liftNode.parent = this.node;
                            this.m_liftNode.addComponent(cc.Sprite).spriteFrame = u.EnemyMgr.enemyAtlas.getSpriteFrame("enter_2");
                        }
                        var e = this.m_endPos.sub(this.node.getPosition());
                        this.m_liftNode.scaleX = e.x > 0 ? -1 : 1;
                        this.m_liftNode.angle = 0;
                        this.m_endPos.y > this.node.y ? this.m_liftNode.opacity = 0 : this.m_liftNode.opacity = 255;
                        this.m_liftNode.opacity = 0;
                        var i = this.node.scaleX, n = this.node.scaleY, a = r.GConfig.ActionInterval;
                        cc.tween(this.node).delay(2 * a).call(function () {
                            t.m_liftNode.angle = 180;
                        }).delay(2 * a).call(function () {
                            t.m_liftNode.active = !1;
                            t.onAnimOver();
                            t.m_enemy.setFace(e);
                            t.m_enemy.playAnimation("enter");
                        }).then(cc.tween().parallel(cc.tween().to(0, {
                            scaleX: 1.4 * i,
                            scaleY: .75 * n
                        }).to(3 * a, {
                            scaleX: 1.06 * i,
                            scaleY: 1.33 * n
                        }).to(3 * a, {
                            scaleX: i,
                            scaleY: n
                        }), cc.tween().to(6 * a, {
                            x: this.m_endPos.x,
                            y: this.m_endPos.y
                        }))).call(function () {
                            t.m_enemy.startBattle();
                        }).start();
                        break;

                    case 3:
                        this.onAnimStart();
                        if (!this.m_enterNode) {
                            this.m_enterNode = new cc.Node("enter");
                            this.m_enterNode.parent = this.node;
                            this.m_enterNode.setSiblingIndex(0);
                            this.m_enterNode.anchorY = 1;
                            this.m_enterNode.addComponent(cc.Sprite);
                            this.m_enterNode.getComponent(cc.Sprite).spriteFrame = u.EnemyMgr.enemyAtlas.getSpriteFrame("enemy_enter_water");
                        }
                        var l = this.m_enterImageScale;
                        this.m_enterNode.active = !0;
                        this.m_enterNode.angle = 0;
                        this.m_enterNode.opacity = 0;
                        this.m_enterNode.scale = l;
                        this.m_enterNode.color = this.m_enemy.uiData.effectColor;
                        a = r.GConfig.ActionInterval;
                        var p = this.m_flyTime - 6 * a;
                        cc.tween(this.m_enterNode).to(2 * a, {
                            scaleY: 1.25 * l,
                            opacity: 255
                        }).to(2 * a, {
                            scaleY: 2 * l
                        }).to(2 * a, {
                            scaleY: 1 * l
                        }).delay(p - a).to(a, {
                            scaleX: 2 * l,
                            scaleY: 1.03 * l
                        }).start();
                        if (!this.m_anim) {
                            (w = cc.instantiate(o.GValue.pfFrameAnim)).scale = 1.3;
                            this.m_anim = w.getComponent(c.default);
                            var f = g[h.BattleMgr.mapId], b = m[f] || 10;
                            this.m_anim.init(d.MapMgr.floorAtlas, f, b, g[f] || .1);
                        }
                        this.m_anim.node.parent = d.MapMgr.floorLayer;
                        this.m_anim.node.x = this.m_data.x;
                        this.m_anim.node.y = this.m_data.y;
                        this.m_anim.node.scale = this.node.scale;
                        this.m_anim.play(1);
                        var M = _[h.BattleMgr.mapId];
                        if (M) {
                            var S = y[M] || .07, k = m[M] || 5;
                            if (!this.m_anim2) {
                                (w = cc.instantiate(o.GValue.pfFrameAnim)).scale = 1.3;
                                w.color = cc.color(0, 255, 255);
                                this.m_anim2 = w.getComponent(c.default);
                                this.m_anim2.init(d.MapMgr.floorAtlas, M, k, 2 * r.GConfig.ActionInterval);
                                this.m_anim2.setDstBlendFactorMode1();
                                w.parent = d.MapMgr.floorLayer;
                                w.setSiblingIndex(1e3);
                            }
                            this.m_anim2.node.x = this.m_data.x;
                            this.m_anim2.node.y = this.m_data.y;
                            this.m_anim2.node.scale = this.node.scale;
                            this.m_anim2.play(1);
                            this.entity.scheduleOnce(function () {
                                if (!t.m_anim1) {
                                    var e = cc.instantiate(o.GValue.pfFrameAnim);
                                    e.scale = 1.3;
                                    t.m_anim1 = e.getComponent(c.default);
                                    t.m_anim1.init(d.MapMgr.floorAtlas, M, k, 2 * r.GConfig.ActionInterval);
                                    e.parent = d.MapMgr.floorLayer;
                                    e.setSiblingIndex(1e3);
                                }
                                t.m_anim1.node.x = t.m_data.x;
                                t.m_anim1.node.y = t.m_data.y;
                                t.m_anim1.node.scale = t.node.scale;
                                t.m_anim1.play(1);
                            }, S);
                        }
                        h.BattleMgr.mapId <= 2 ? s.FrameMgr.audioMgr.playEffectForCD("enemy_enter_water_1", .2) : s.FrameMgr.audioMgr.playEffectForCD("enemy_enter_water_" + h.BattleMgr.mapId, .2);
                        break;

                    case 4:
                        this.onAnimStart();
                        var C = v[h.BattleMgr.mapId];
                        if (C) {
                            if (this.m_anim) this.m_anim.node.active = !0; else {
                                var w = cc.instantiate(o.GValue.pfFrameAnim);
                                this.m_anim = w.getComponent(c.default);
                            }
                            this.m_anim.node.parent = d.MapMgr.blockLayer;
                            this.m_anim.node.x = this.m_data.x;
                            this.m_anim.node.y = this.m_data.y;
                            h.BattleMgr.mapId <= 2 && (this.m_anim.node.anchorY = .2);
                            b = m[C] || 5;
                            this.m_anim.init(d.MapMgr.floorAtlas, C, b, 2 * r.GConfig.ActionInterval, null, function () {
                                t.m_anim.node.active = !1;
                            });
                            this.m_anim.play(1);
                            this.m_enemy.startEnter();
                            this.onAnimOver();
                        }
                        break;

                    case 100:
                        this.onAnimStart();
                        var A = r.GConfig.ActionInterval, T = s.FrameMgr.loadMgr.get("TP_Enemy_Gold", cc.SpriteAtlas);
                        if (!this.m_enterNode) {
                            this.m_enterNode = new cc.Node("enter");
                            this.m_enterNode.parent = this.node;
                        }
                        var D = this.m_enterNode.getChildByName("line");
                        if (!D) {
                            (D = new cc.Node("line")).anchorY = .12;
                            D.parent = this.m_enterNode;
                            D.addComponent(cc.Sprite).spriteFrame = T.getSpriteFrame("gold_enter_3");
                        }
                        D.y = 2e3;
                        D.scaleX = 1.44;
                        D.scaleY = 2.47;
                        D.opacity = 255;
                        cc.tween(D).to(15 * A, {
                            y: 2,
                            scaleX: 1.2,
                            scaleY: 2.95
                        }).to(6 * A, {
                            y: 0,
                            scaleX: 1.35,
                            scaleY: .94,
                            opacity: 0
                        }).start();
                        var P = this.m_enterNode.getChildByName("circle2");
                        if (!P) {
                            (P = new cc.Node("circle2")).parent = this.m_enterNode;
                            P.addComponent(cc.Sprite).spriteFrame = T.getSpriteFrame("gold_enter_2");
                        }
                        P.scale = 1;
                        P.opacity = 0;
                        cc.tween(P).delay(15 * A).to(0, {
                            opacity: 255
                        }).to(5 * A, {
                            opacity: 0,
                            scale: 1.59
                        }).start();
                        var E = this.m_enterNode.getChildByName("circle1");
                        if (!E) {
                            (E = new cc.Node("circle1")).parent = this.m_enterNode;
                            E.addComponent(cc.Sprite).spriteFrame = T.getSpriteFrame("gold_enter_1");
                            E.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                        }
                        E.scale = 1;
                        E.opacity = 0;
                        cc.tween(E).delay(15 * A).to(0, {
                            opacity: 255
                        }).to(5 * A, {
                            opacity: 0,
                            scale: 1.85
                        }).start();
                        var B = this.m_enterNode.getChildByName("star");
                        if (!B) {
                            (B = new cc.Node("star")).parent = this.m_enterNode;
                            B.addComponent(cc.Sprite).spriteFrame = T.getSpriteFrame("gold_enter_4");
                            B.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                        }
                        B.scale = 1;
                        B.opacity = 0;
                        cc.tween(B).delay(15 * A).call(function () {
                            var e = t.entity.uiNode;
                            if (e) {
                                e.opacity = 255;
                                e.scaleX = 1;
                                e.scaleY = .81;
                                cc.tween(e).to(2 * A, {
                                    scaleX: .99,
                                    scaleY: 1.1
                                }).to(3 * A, {
                                    scaleX: 1,
                                    scaleY: .9
                                }).to(4 * A, {
                                    scaleX: 1,
                                    scaleY: 1
                                }).call(function () {
                                    t.onAnimOver();
                                }).start();
                            }
                        }).to(0, {
                            opacity: 255
                        }).to(5 * A, {
                            opacity: 0,
                            scaleX: .82,
                            scaleY: 2.62
                        }).start();
                }
            };
            e.prototype.onAnimStart = function () {
                this.entity.uiNode && (this.entity.uiNode.opacity = 0);
            };
            e.prototype.onAnimOver = function () {
                this.entity.uiNode && (this.entity.uiNode.opacity = 255);
                if (this.m_finishCall) {
                    this.m_finishCall();
                    this.m_finishCall = null;
                }
                this.enabled = !1;
            };
            return e;
        }(t("../comp/EnemyCompBase").default);
        i.default = f;
        var m = {
            anim_water10_: 8,
            anim_water11_: 11
        }, g = {
            1: "anim_water11_",
            2: "anim_water11_"
        }, _ = {
            1: "anim_water10_",
            2: "anim_water10_"
        }, y = {
            anim_water10_: .07,
            anim_water11_: .1
        }, v = {
            1: "anim_water10_",
            2: "anim_water10_",
            3: "anim_water10_",
            4: "anim_water10_",
            5: "anim_water10_",
            6: "anim_water10_",
            7: "anim_water10_"
        };
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/BattleManager": "BattleManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/MapManager": "MapManager",
        "../comp/EnemyCompBase": "EnemyCompBase"
    }],
    EnemyEntity: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b386bBACsdBc67F8XRrNqRU", "EnemyEntity");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameEnum"), s = t("../manager/battle/EnemyManager"), c = t("./EnemyBase"), l = t("../../../data/manager/ConfigDataManager"), h = t("../collide/CircleColliderComp"), u = t("../collide/RectColliderComp"), p = t("./EnemyAnimComp"), d = t("../../../frame/ui/UINum"), f = t("../manager/battle/LootManager"), m = t("../../../util/Tools"), g = t("../manager/battle/ShadowManager"), _ = t("../../../frame/manager/FrameManager"), y = t("../../../config/GameConst"), v = t("../../../config/GameConfig"), b = t("../manager/battle/EntityManager"), M = t("./attr/EnemyFuncController"), S = t("./move/EnemyMoveController"), k = t("../manager/battle/BattleManager"), C = t("../../../util/GameFunc"), w = t("./enter/EnemyEnterComp"), A = t("./EnemyModelComp"), T = t("./coin/EnemyCoinComp"), D = t("../manager/battle/EffectManager"), P = t("../manager/battle/SnakeManager"), E = t("../manager/battle/BossManager"), B = t("../../../frame/ui/FrameAnim"), F = cc._decorator, N = F.ccclass, x = F.property, R = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_group = o.ColliderGroup.Enemy;
                e.uiNode = null;
                e.animNode = null;
                e.hpNode = null;
                e.m_data = null;
                e.m_scale = 1;
                e.m_modelComp = null;
                e.m_enterComp = null;
                e.m_coinComp = null;
                e.m_animComp = null;
                e.m_collideComp = null;
                e._shadowFrontComp = null;
                e._shadowBackComp = null;
                e.m_funcController = null;
                e.m_moveController = null;
                e.hpBot = null;
                e.hpTop = null;
                e.hpMid = null;
                e.m_midTween = null;
                e.m_animMap = new Map();
                e.m_lockMask = null;
                e._startDir = cc.Vec2.ZERO;
                e._velocity = 0;
                e._rotate = 0;
                e._rotateType = 0;
                e._fireNode = null;
                e._lastTimeRe = 0;
                e._atkNumRe = 0;
                e._atkIntervalTimeRe = 0;
                e._curAtkIntervalTimeRe = 0;
                e.isCreatedByEnemy = !1;
                e.callbackDie = null;
                e.isInFrost = !1;
                e.m_frostEffectTime = 0;
                e.m_burnAtkDisTime = 0;
                e.m_burnEffectTime = 0;
                e.m_burnDisTime = 0;
                e.m_burnAtk = 0;
                e.m_curBurnDisTime = 0;
                e.isInBurn = !1;
                return e;
            }
            e.prototype.preLoad = function (t) {
                this.m_moveController = new S.default();
                this.m_funcController = new M.default();
                this.addAnimComp();
                var e = s.EnemyMgr.getPfEnemyModel(t);
                if (e) {
                    var i = cc.instantiate(e);
                    i.parent = this.uiNode;
                    this.m_modelComp = i.getComponent(A.default);
                    this.m_modelComp.create(this);
                    this.m_modelComp.init();
                }
            };
            e.prototype.getName = function () {
                return this.uiData.model;
            };
            e.prototype.reset = function () {
                t.prototype.reset.call(this);
                this.m_scale = 1;
                this.node.opacity = 255;
                this.isActive = !1;
                this.isDead = !1;
                this.removeAble = !1;
                this.uiNode.opacity = 255;
                this.hpNode.opacity = 255;
                this.m_curHp = 0;
                this.m_uiData = null;
                this._lastTimeRe = 0;
                this._atkNumRe = 0;
                this._atkIntervalTimeRe = 0;
                this._curAtkIntervalTimeRe = 0;
                this.setIsInSky(!1);
                this.setIsRevive(!1);
                this.setAlreadyRevive(!1);
                this.setIsDie(!1);
                this.m_animMap.clear();
                this.isCreatedByEnemy = !1;
                this._startDir = cc.Vec2.ZERO;
                this.hideLockedMark();
                this.callbackDie = null;
            };
            e.prototype.create = function (t) {
                this.reset();
                this.m_data = t;
                this.callbackDie = null;
                this.initData();
                this.createUI();
                this.createComp();
            };
            e.prototype.initData = function () {
                this.m_uiData = l.ConfigDataMgr.getData("ConfigEnemyUIData", this.data.uId);
                var t = l.ConfigDataMgr.getData("ConfigStageInfoData", k.BattleMgr.stage);
                this.m_maxHp = this.m_data.hp * t.enemyHpRatio;
                this.m_curHp = this.m_maxHp;
                this.preGiveGoldPercent = 100;
                this._velocity = this.m_data.speed;
                this._rotate = this.m_data.rotate;
                this._rotateType = this.m_data.rotateType;
                this._lastTimeRe = 0;
                this._atkNumRe = 0;
                this._atkIntervalTimeRe = 0;
                this._curAtkIntervalTimeRe = 0;
                this._fireNode = this.node;
                this.setIsInSky(!1);
                this.setIsRevive(!1);
                this.setAlreadyRevive(!1);
                this.setIsDie(!1);
                for (var e in this.m_uiData.actAnim) this.m_animMap.set(e, this.m_uiData.actAnim[e]);
            };
            e.prototype.createUI = function () {
                var t = s.EnemyMgr.enemyAtlas;
                this.uiData.id < 90 ? t = s.EnemyMgr.normalAtlas : this.uiData.id > 1e4 && (t = E.BossMgr.atlas);
                this.hpNode.setPosition(this.uiData.hpPos);
                if (!this.hpBot) {
                    var e = this.hpNode.getChildByName("bg");
                    this.hpBot = e.getComponent(cc.Sprite);
                    this.hpBot.spriteFrame = t.getSpriteFrame("mon_hp_0");
                }
                if (!this.hpMid) {
                    e = this.hpNode.getChildByName("mid");
                    this.hpMid = e.getComponent(cc.Sprite);
                    this.hpMid.spriteFrame = t.getSpriteFrame("mon_hp_2");
                }
                if (!this.hpTop) {
                    e = this.hpNode.getChildByName("pro");
                    this.hpTop = e.getComponent(cc.Sprite);
                    this.hpTop.spriteFrame = t.getSpriteFrame("mon_hp_1");
                }
                this.hpTop.fillRange = 1;
                this.hpMid.fillRange = 1;
                if (this.m_modelComp) if (this.uiData.model != this.m_modelComp.getName()) {
                    m.DYTools.error("enemy model error");
                    this.m_modelComp = null;
                } else this.m_modelComp.reset();
                if (!this.m_modelComp) {
                    var i = cc.instantiate(s.EnemyMgr.getPfEnemyModel(this.uiData.model));
                    i.parent = this.uiNode;
                    this.m_modelComp = i.getComponent(A.default);
                    this.m_modelComp.create(this);
                }
                this.m_modelComp.init();
                if (g.ShadowMgr.atlas && this.m_uiData) {
                    if (this._shadowFrontComp) {
                        n = g.ShadowMgr.atlas.getSpriteFrame(s.EnemyMgr.frontShadow);
                        this._shadowFrontComp.init(n, this.node, this.m_uiData.shadowOffsetFront.x, this.m_uiData.shadowOffsetFront.y, this.uiData.shadowScale);
                    } else {
                        var n = g.ShadowMgr.atlas.getSpriteFrame(s.EnemyMgr.frontShadow);
                        this._shadowFrontComp = g.ShadowMgr.addShadow(n, this.node, this.uiData.shadowScale, this.m_uiData.shadowOffsetFront);
                    }
                    if (this._shadowBackComp) {
                        n = g.ShadowMgr.atlas.getSpriteFrame(s.EnemyMgr.backShadow);
                        this._shadowBackComp.init(n, this.node, this.m_uiData.shadowOffsetBack.x, this.m_uiData.shadowOffsetBack.y, this.uiData.shadowScale);
                    } else {
                        n = g.ShadowMgr.atlas.getSpriteFrame(s.EnemyMgr.backShadow);
                        this._shadowBackComp = g.ShadowMgr.addShadow(n, this.node, this.uiData.shadowScale, this.m_uiData.shadowOffsetBack);
                    }
                    this.nodeScale = 1;
                    this.setShadowShow(!1);
                }
                this.initAllStateEffect();
            };
            e.prototype.createComp = function () {
                this.addAnimComp(this.m_uiData);
                this.addFuncComp();
            };
            e.prototype.addFuncComp = function () {
                this.m_funcController || (this.m_funcController = new M.default());
                this.m_funcController.init(this, this.m_data.funcId, this.m_data.mergeFuncIdArr);
            };
            e.prototype.addMoveComp = function () {
                this.m_moveController || (this.m_moveController = new S.default());
                this.m_moveController.init(this, this.m_data.moveId, this.node);
                this.m_moveController.setEnemyEntity(this);
            };
            e.prototype.addAnimComp = function (t) {
                if (!this.m_animComp) {
                    this.m_animComp = new p.default();
                    this.m_animComp.init(this, this.uiNode, this.animNode);
                }
                t && this.m_animComp.initData(t);
            };
            e.prototype.addCollideComp = function () {
                var t = this.uiData.col, e = this.node.scale;
                if (t.length >= 4) switch (t[0]) {
                    case o.ColliderType.None:
                        break;

                    case o.ColliderType.Circle:
                        if (this.m_collideComp) {
                            if (this.m_collideComp.type != o.ColliderType.Circle) {
                                delete this.m_collideComp;
                                this.m_collideComp = new h.default();
                            }
                        } else this.m_collideComp = new h.default();
                        var i = [t[1] * e, t[2] * e, t[3] * e];
                        this.m_collideComp.init(i, this);
                        this.radius = this.m_collideComp.data.radius * this.node.scale;
                        break;

                    case o.ColliderType.Rectangle:
                        if (t.length >= 5) {
                            if (this.m_collideComp) {
                                if (this.m_collideComp.type != o.ColliderType.Rectangle) {
                                    delete this.m_collideComp;
                                    this.m_collideComp = new u.default();
                                }
                            } else this.m_collideComp = new u.default();
                            i = [t[1] * e, t[2] * e, t[3] * e, t[4] * e];
                            this.m_collideComp.init(i, this);
                            this.radius = this.m_collideComp.data.widthHalf * this.node.scale;
                        }
                } else m.DYTools.error("enemy collide data error", this.data.id);
            };
            e.prototype.init = function () {
                this.addCollideComp();
                this.addMoveComp();
                this.initUI();
                this.m_scale = this.node.scale;
            };
            e.prototype.initUI = function () {
                this._fireNode = this.node;
                this.hpNode.scale = this.m_uiData.hpScale;
            };
            e.prototype.addEnterComp = function (t, e, i, n) {
                this.m_enterComp || (this.m_enterComp = new w.default());
                this.m_enterComp.init(this, t, e, i, n);
                this.m_enterComp.enabled = !0;
                return this.m_enterComp;
            };
            e.prototype.addCoinComp = function (t, e, i, n) {
                this.m_coinComp || (this.m_coinComp = new T.default());
                this.m_coinComp.create(this, t, e, i, n);
                return this.m_coinComp;
            };
            e.prototype.hideHp = function () {
                this.hpNode.active = !1;
            };
            e.prototype.showHp = function (t) {
                void 0 === t && (t = !1);
                this.hpNode.active = !0;
                if (t) {
                    this.hpNode.opacity = 0;
                    cc.tween(this.hpNode).to(.5, {
                        opacity: 255
                    }).start();
                }
            };
            e.prototype.setFace = function (t) {
                var e = t.y <= 1e-6;
                this.scaleX = t.x >= 0 ? 1 : -1;
                if (this.m_modelComp.show(e)) if (e) {
                    this._shadowFrontComp.node.opacity = 255;
                    this._shadowBackComp.node.opacity = 0;
                } else {
                    this._shadowFrontComp.node.opacity = 0;
                    this._shadowBackComp.node.opacity = 255;
                } else {
                    this._shadowFrontComp.node.opacity = 255;
                    this._shadowBackComp.node.opacity = 0;
                }
            };
            e.prototype.setShadowShow = function (t) {
                this._shadowFrontComp && (this._shadowFrontComp.node.active = t);
                this._shadowBackComp && (this._shadowBackComp.node.active = t);
                if (t) {
                    this._shadowFrontComp && this._shadowFrontComp.updatePos();
                    this._shadowBackComp && this._shadowBackComp.updatePos();
                }
            };
            e.prototype.setShadowJumpOffset = function (t) {
                this._shadowFrontComp && this._shadowFrontComp.setJumpOffset(t);
                this._shadowBackComp && this._shadowBackComp.setJumpOffset(t);
            };
            e.prototype.initAllStateEffect = function () {
                this.initFrost();
                this.initBurn();
            };
            e.prototype.hideAllStateEffect = function () {
                this.setFrost(!1);
                this.setBurn(!1);
            };
            e.prototype.updateStateEffect = function (t) {
                this.updateFrost(t);
                this.updateBurn(t);
            };
            e.prototype.initFrost = function () {
                this.isInFrost = !1;
                this.m_frostEffectTime = 0;
                this.m_animComp && this.m_animComp.setFrostEffectShow(!1, !0);
            };
            e.prototype.updateFrost = function (t) {
                if (this.isInFrostEffect()) {
                    this.m_frostEffectTime -= t;
                    this.m_frostEffectTime <= 0 && this.setFrost(!1);
                }
            };
            e.prototype.setFrost = function (t, e, i) {
                void 0 === e && (e = 0);
                void 0 === i && (i = 1);
                this.isIgnoreFrost() && (t = !1);
                var n = !1;
                this.isInFrost != t && (n = !0);
                this.isInFrost = t;
                this.m_frostEffectTime = e;
                this.m_animComp && n && this.m_animComp.setFrostEffectShow(t);
            };
            e.prototype.isInFrostEffect = function () {
                return this.isInFrost;
            };
            e.prototype.isIgnoreFrost = function () {
                return !!this.funcController && this.funcController.isIgnoreFrost();
            };
            e.prototype.initBurn = function () {
                this.isInBurn = !1;
                this.m_burnAtkDisTime = 0;
                this.m_burnEffectTime = 0;
                this.m_burnDisTime = 0;
                this.m_burnAtk = 0;
                this.m_curBurnDisTime = 0;
                this.m_animComp && this.m_animComp.setBurnEffectShow(!1, !0);
            };
            e.prototype.updateBurn = function (t) {
                if (this.isInBurnEffect()) {
                    this.m_burnEffectTime -= t;
                    if (this.m_burnEffectTime <= 0) this.setBurn(!1); else {
                        this.m_curBurnDisTime += t;
                        if (this.m_curBurnDisTime >= this.m_burnDisTime) {
                            this.m_curBurnDisTime = 0;
                            this.hpChange(-this.m_burnAtk, !1, !0);
                        }
                    }
                }
                this.m_burnAtkDisTime > 0 && (this.m_burnAtkDisTime -= t);
            };
            e.prototype.setBurn = function (t, e, i, n, a, r, o) {
                void 0 === e && (e = 0);
                void 0 === i && (i = 0);
                void 0 === n && (n = 0);
                void 0 === a && (a = 0);
                void 0 === r && (r = 0);
                void 0 === o && (o = 0);
                this.isIgnoreBurn() && (t = !1);
                var c = !1;
                this.isInBurn != t && (c = !0);
                this.isInBurn = t;
                if (this.m_burnAtkDisTime <= 0) {
                    this.m_burnAtkDisTime = i;
                    this.hpChange(-e, !1, !0);
                    var l = cc.instantiate(y.GValue.pfFrameAnim), h = l.getComponent(B.default);
                    l.parent = b.EntityMgr.getEffectLayer();
                    l.setPosition(this.node.getPosition());
                    l.angle = o;
                    h.init(s.EnemyMgr.enemyEffectAtlas, "anim_enemy_burn_pass_", 4, 2 * v.GConfig.ActionInterval);
                    h.setDstBlendFactorMode1();
                    h.setStopCall(function () {
                        h.node.destroy();
                    });
                    h.play(1);
                }
                this.m_burnEffectTime = a;
                this.m_burnDisTime = r;
                this.m_burnAtk = n;
                this.m_animComp && c && this.m_animComp.setBurnEffectShow(t);
            };
            e.prototype.isInBurnEffect = function () {
                return this.isInBurn;
            };
            e.prototype.isIgnoreBurn = function () {
                return !1;
            };
            e.prototype.startEnter = function () {
                var t = this;
                this.node.emit("enter");
                this.playAnimation("enter", function () {
                    t.startBattle();
                });
            };
            e.prototype.startBattle = function () {
                this.isActive = !0;
                this.showHp();
                this.setShadowShow(!0);
                this.playAnimation("idle");
                this.m_collideComp && (this.m_collideComp.enabled = !0);
                this.m_moveController.enabled = !0;
                this.m_funcController.enabled = !0;
            };
            e.prototype.updateLogic = function (t) {
                if (this.isDead) {
                    this.m_moveController.updateLogic(t);
                    this.m_funcController.updateLogic(t);
                } else {
                    this.m_enterComp && this.m_enterComp.updateLogic(t);
                    this.m_collideComp && this.m_collideComp.updateLogic(t);
                    if (this.isActive) {
                        this.m_modelComp && this.m_modelComp.updateLogic(t);
                        this.updateLastTimeRegionEffect(t);
                        this.m_moveController.updateLogic(t);
                        this.animNode && this.uiNode && (this.animNode.angle = this.uiNode.angle);
                        this.m_funcController.updateLogic(t);
                        this.updateStateEffect(t);
                    }
                }
            };
            e.prototype.onCollide = function (t, e) {
                switch (t) {
                    case o.ContactType.Enter:
                        if (e && e.entity) switch (e.entity.group) {
                            case o.ColliderGroup.Player:
                                var i = e.entity;
                                if (i) {
                                    var n = i.getColliderAtk();
                                    this.hpChange(-n);
                                    this.m_animComp.playEnemyHurtAnim();
                                }
                                break;

                            case o.ColliderGroup.PlayerBullet:
                                var a = e.entity;
                                if (a) {
                                    n = a.getBulletAttack() || 1;
                                    this.hpChange(-n, !0);
                                    this.m_animComp.playEnemyHurtAnim();
                                }
                        }
                }
            };
            e.prototype.onCollideWall = function (t, e) {
                this.m_moveController && this.m_moveController.onCollideWall(t, e);
            };
            e.prototype.onCollideBlock = function (t, e) {
                this.m_moveController && this.m_moveController.onCollideBlock(t, e);
            };
            e.prototype.hpChange = function (t, e, i) {
                void 0 === e && (e = !1);
                void 0 === i && (i = !1);
                if (this.m_collideComp && !this.m_collideComp.enabled && t < 0) return 0;
                if (!y.GValue.enemyAtkAble || this.m_curHp <= 0) return 0;
                var n = 0, a = this.m_curHp;
                this.m_curHp += t;
                this.m_curHp = this.m_curHp > this.m_maxHp ? this.m_maxHp : this.m_curHp;
                this.playHpAct();
                if (t < 0) {
                    e && (t = -P.SnakeMgr.getEnemyShowAtk(Math.abs(t)));
                    this.getIsRevive() || this.playAnimation("hurt");
                    i ? D.EffectMgr.showHurtNum({
                        pos: cc.v2(this.node.x, this.node.y + this.hpNode.y),
                        num: t,
                        numType: o.NumType.EnemyHurtRed,
                        scale: 1.1
                    }) : D.EffectMgr.showHurtNum({
                        pos: cc.v2(this.node.x, this.node.y + this.hpNode.y + 15),
                        num: t,
                        numType: o.NumType.EnemyHurt,
                        scale: 1.1
                    });
                }
                if (this.m_curHp <= 0) {
                    this.m_curHp = 0;
                    if (this.funcController.checkFuncRevive()) {
                        this.funcController.forceEndBandage();
                        this.playAnimation("idle");
                        var r = this._getBlastAtlas(), s = cc.instantiate(y.GValue.pfFrameAnim), c = s.getComponent(B.default);
                        s.parent = this.node.parent;
                        s.setPosition(this.node.getPosition());
                        c.init(r, this.m_uiData.blastFront, this.m_uiData.blastFrontCount, v.GConfig.ActionInterval);
                        c.setStopCall(function () {
                            c.destroy();
                        });
                        c.play(1);
                    } else {
                        this.funcController.forceEndBandage();
                        this.funcController.cancelFunc();
                        this.onDie();
                    }
                    n = -a;
                } else n = t;
                this.m_coinComp && this.m_coinComp.onHpChange(this.m_curHp, this.m_maxHp);
                return n;
            };
            e.prototype.playHpAct = function () {
                var t = this;
                if (this.hpTop) {
                    var e = this.hpTop.fillRange, i = this.curHp / this.maxHp;
                    this.hpTop.fillRange = i;
                    if (this.hpMid) {
                        if (this.m_midTween) {
                            this.hpMid.fillRange = e;
                            this.m_midTween.stop();
                            this.m_midTween = null;
                        }
                        this.m_midTween = cc.tween(this.hpMid).to(.1, {
                            fillRange: i
                        }).call(function () {
                            t.m_midTween = null;
                        }).start();
                    }
                }
            };
            e.prototype.setDead = function () {
                this.onDie(!1);
            };
            e.prototype.onDie = function (e) {
                var i = this;
                void 0 === e && (e = !0);
                t.prototype.onDie.call(this);
                this.setIsDie(!0);
                s.EnemyMgr.killedEnemyCount += 1;
                this.m_collideComp && (this.m_collideComp.enabled = !1);
                this.m_moveController.enabled = !1;
                this.m_funcController.enabled = !1;
                this.m_funcController.willClear();
                this.hideHp();
                this.node.stopAllActions();
                _.FrameMgr.noticeMgr.emit(o.EventTypeEnum.EnemyDie, this.node.position);
                this.setShadowShow(!1);
                this.hideLockedMark();
                this.hideHealAnim();
                this.getFuncType() != o.EnemyFuncType.Explosion && this.hideAllStateEffect();
                switch (this.getFuncType()) {
                    case o.EnemyFuncType.Explosion:
                    case o.EnemyFuncType.DieBullet:
                    case o.EnemyFuncType.Burrow:
                        this.node.emit("onDie");
                        break;

                    case o.EnemyFuncType.Split:
                        this.node.emit("onDie", function () {
                            i.uiNode.opacity = 0;
                            i.playDieAnim();
                        });
                        break;

                    default:
                        this.uiNode.opacity = 0;
                        this.playDieAnim();
                        this.node.emit("onDie");
                }
                var n = "eDie";
                if (this.m_uiData.dieAudio.length > 0) {
                    var a = Math.floor(Math.random() * this.m_uiData.dieAudio.length);
                    n = this.m_uiData.dieAudio[a];
                }
                _.FrameMgr.audioMgr.playEffectForCD(n, .1);
                if (e) {
                    this.checkLoot();
                    this.m_coinComp && this.m_coinComp.onDie();
                }
                if (this.callbackDie) {
                    this.callbackDie();
                    this.callbackDie = null;
                }
                this.node.off(o.EventTypeEnum.ContactWall);
                this.node.off(o.EventTypeEnum.EnemyMove);
                this.node.off(o.EventTypeEnum.EnemyDirChange);
                this.node.off(o.EventTypeEnum.EnemyMoveRefresh);
            };
            e.prototype.setCallbackDie = function (t) {
                this.callbackDie = t;
            };
            e.prototype.playDieAnim = function (t, e) {
                void 0 === e && (e = null);
                e = e || this._getBlastAtlas();
                this.m_animComp.playDieAnim(e, this.dieAnimEnd.bind(this));
            };
            e.prototype.dieAnimEnd = function () {
                this.m_modelComp && this.m_modelComp.clear();
                this.m_funcController.clear();
                this.m_moveController.clear();
                this.removeAble = !0;
                this.node.opacity = 0;
            };
            e.prototype.checkLoot = function () {
                t.prototype.checkLoot.call(this);
                switch (k.BattleMgr.gameType) {
                    case o.GameType.Normal:
                        if (!this.isCreatedByEnemy) {
                            f.LootMgr.addLootGold(C.GFunc.getEnemyWorldPos(this.node), [this.m_data.gold]);
                            f.LootMgr.addLootItem(C.GFunc.getEnemyWorldPos(this.node), [this.m_data.gold]);
                        }
                }
            };
            e.prototype.playAnimation = function (t, e) {
                var i = this.m_animMap.get(t);
                i = i || t;
                return !(!this.m_modelComp || !this.m_modelComp.playAnim(i, e));
            };
            e.prototype.setAnimEventCallback = function (t, e) {
                this.m_modelComp && this.m_modelComp.setAnimEventCallback(t, e);
            };
            e.prototype.addAnimation = function (t, e) {
                var i = this.m_animMap.get(t);
                i = i || t;
                this.m_modelComp && this.m_modelComp.addAnim(i, e);
            };
            e.prototype.showLockedMark = function () {
                this.isActive && !this.isDead && (this.m_lockMask || (this.m_lockMask = s.EnemyMgr.addLockMask(this, this.uiData.lockScale * this.node.scale, this.uiData.lockOffset)));
            };
            e.prototype.hideLockedMark = function () {
                if (this.m_lockMask) {
                    s.EnemyMgr.removeLockMask();
                    this.m_lockMask = null;
                }
            };
            e.prototype.showIgniteAnim = function (t, e) {
                void 0 === e && (e = 0);
                this.m_animComp.showIgniteAnim(t, this.m_data.effectScaleX, this.m_data.effectScaleY);
                D.EffectMgr.showHurtNum({
                    pos: cc.v2(this.node.x, this.node.y + this.hpNode.y + 10),
                    num: e,
                    numType: o.NumType.EnemyHurtRed,
                    scale: 1.1
                });
            };
            e.prototype.playWhiteAnim = function (t) {
                this.m_animComp.playWhiteAnim(t);
            };
            e.prototype.showHurtNum = function (t) {
                var e = cc.instantiate(y.GValue.pfNum);
                e.setPosition(this.node.getPosition());
                b.EntityMgr.getEnemyLayer().addChild(e);
                e.stopAllActions();
                var i = s.EnemyMgr.enemyAtlas, n = "-" + Math.ceil(t), a = e.getComponent(d.default);
                a.init();
                a.setAtlas(i);
                a.setType(o.NumType.EnemyHurtRed);
                a.setString(n);
                e.scale = .5;
                e.opacity = 0;
                var r = v.GConfig.ActionInterval, c = e.y, l = cc.tween(e).to(0, {
                    scale: .5,
                    opacity: 0
                }).to(4 * r, {
                    scale: 1.7,
                    opacity: 255
                }).to(8 * r, {
                    scale: .9
                }).to(8 * r, {
                    scale: 1
                }).to(8 * r, {
                    opacity: 0,
                    y: c + 20
                }).call(function () {
                    l.stop();
                    a.removeSelf();
                }).start();
            };
            e.prototype.showHealAnim = function () {
                this.m_animComp.playHealAnim();
            };
            e.prototype.hideHealAnim = function () {
                this.m_animComp.hideHealAnim();
            };
            e.prototype.setLastTimeRegionEffect = function (t, e, i) {
                if (!(t <= 0)) {
                    this._lastTimeRe <= 0 && this.m_animComp.showFireAnim(!0, this.m_data.effectScaleX, this.m_data.effectScaleY);
                    if (e > this._atkNumRe) {
                        this._lastTimeRe = t;
                        this._atkNumRe = e;
                        this._atkIntervalTimeRe = i;
                        this._curAtkIntervalTimeRe = 0;
                    }
                }
            };
            e.prototype.updateLastTimeRegionEffect = function (t) {
                if (!(this._lastTimeRe <= 0)) {
                    this._lastTimeRe -= t;
                    if (this._lastTimeRe <= 0) {
                        this._lastTimeRe = 0;
                        this._atkNumRe = 0;
                        this._atkIntervalTimeRe = 0;
                        this._curAtkIntervalTimeRe = 0;
                        this.m_animComp.showFireAnim(!1);
                    } else {
                        this._curAtkIntervalTimeRe -= t;
                        if (this._curAtkIntervalTimeRe <= 0 && this.isActive) {
                            this._curAtkIntervalTimeRe = this._atkIntervalTimeRe;
                            this.hpChange(-this._atkNumRe);
                        }
                    }
                }
            };
            e.prototype.frozen = function (t, e) {
                var i = this, n = this._velocity;
                this._velocity = Math.ceil(t * this._velocity);
                this.scheduleOnce(function () {
                    i._velocity = n;
                }, e);
            };
            e.prototype._getBlastAtlas = function () {
                var t = s.EnemyMgr.getBlastAtlas(this.uiData.blastAtlas);
                t || (k.BattleMgr.isGameType(o.GameType.Coin) ? t = _.FrameMgr.loadMgr.get("TP_Enemy_Gold", cc.SpriteAtlas) : this.uiData.id > 1e4 && (t = _.FrameMgr.loadMgr.get("TP_Boss", cc.SpriteAtlas)));
                return t;
            };
            Object.defineProperty(e.prototype, "nodeScale", {
                set: function (t) {
                    this.node.scale = t;
                    this._shadowBackComp && (this._shadowBackComp.node.scale = this.m_uiData.shadowScale * t);
                    this._shadowFrontComp && (this._shadowFrontComp.node.scale = this.m_uiData.shadowScale * t);
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "angle", {
                get: function () {
                    return this.uiNode.angle;
                },
                set: function (t) {
                    this.uiNode.angle = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "scaleX", {
                get: function () {
                    return this.uiNode.scaleX;
                },
                set: function (t) {
                    this.uiNode.scaleX = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "fireNode", {
                get: function () {
                    return this._fireNode;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.getCollider = function () {
                return this.m_collideComp;
            };
            e.prototype.getColliders = function () {
                return this.m_collideComp;
            };
            e.prototype.setCollideAble = function (t) {
                this.m_collideComp && (this.m_collideComp.enabled = t);
            };
            e.prototype.getCollideAble = function () {
                return this.m_collideComp && this.m_collideComp.enabled;
            };
            e.prototype.getAtk = function () {
                return this.m_data.atk;
            };
            Object.defineProperty(e.prototype, "collideAtk", {
                get: function () {
                    return this.m_data.atk;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "isFullHp", {
                get: function () {
                    return this.m_curHp == this.m_maxHp;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "maxHp", {
                get: function () {
                    return this.m_maxHp;
                },
                set: function (t) {
                    this.m_maxHp = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "curHp", {
                get: function () {
                    return this.m_curHp;
                },
                set: function (t) {
                    this.m_curHp = t;
                    this.playHpAct();
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "velocity", {
                get: function () {
                    return this._velocity;
                },
                set: function (t) {
                    this._velocity = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "speed", {
                get: function () {
                    return this.m_moveController.getSpeed();
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "rotateSpeed", {
                get: function () {
                    return this._rotate;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "rotateType", {
                get: function () {
                    return this._rotateType;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "startDir", {
                get: function () {
                    return this._startDir;
                },
                set: function (t) {
                    this._startDir = t;
                    this.setFace(cc.v2(t));
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "data", {
                get: function () {
                    return this.m_data;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "moveController", {
                get: function () {
                    return this.m_moveController;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "funcController", {
                get: function () {
                    return this.m_funcController;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.isFuncType = function (t) {
                return this.m_funcController.curFuncType == t;
            };
            e.prototype.getFuncType = function () {
                return this.m_funcController.curFuncType;
            };
            r([x(cc.Node)], e.prototype, "uiNode", void 0);
            r([x(cc.Node)], e.prototype, "animNode", void 0);
            r([x(cc.Node)], e.prototype, "hpNode", void 0);
            return r([N], e);
        }(c.default);
        i.default = R;
        cc._RF.pop();
    }, {
        "../../../config/GameConfig": "GameConfig",
        "../../../config/GameConst": "GameConst",
        "../../../config/GameEnum": "GameEnum",
        "../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../frame/manager/FrameManager": "FrameManager",
        "../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../frame/ui/UINum": "UINum",
        "../../../util/GameFunc": "GameFunc",
        "../../../util/Tools": "Tools",
        "../collide/CircleColliderComp": "CircleColliderComp",
        "../collide/RectColliderComp": "RectColliderComp",
        "../manager/battle/BattleManager": "BattleManager",
        "../manager/battle/BossManager": "BossManager",
        "../manager/battle/EffectManager": "EffectManager",
        "../manager/battle/EnemyManager": "EnemyManager",
        "../manager/battle/EntityManager": "EntityManager",
        "../manager/battle/LootManager": "LootManager",
        "../manager/battle/ShadowManager": "ShadowManager",
        "../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyAnimComp": "EnemyAnimComp",
        "./EnemyBase": "EnemyBase",
        "./EnemyModelComp": "EnemyModelComp",
        "./attr/EnemyFuncController": "EnemyFuncController",
        "./coin/EnemyCoinComp": "EnemyCoinComp",
        "./enter/EnemyEnterComp": "EnemyEnterComp",
        "./move/EnemyMoveController": "EnemyMoveController"
    }],
    EnemyExplosionAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "42364BtCHJOXZh18ELQfKJS", "EnemyExplosionAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, o = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = t("./EnemyAttrBase"), c = t("../../../../data/manager/ConfigDataManager"), l = t("../../../../util/Tools"), h = t("../../manager/battle/EnemyManager"), u = t("../../manager/battle/SnakeManager"), p = t("../../manager/battle/EntityManager"), d = t("../../../../frame/manager/FrameManager"), f = t("../../../../config/GameEnum"), m = t("../../../../data/config/ConfigEnemyMoveData"), g = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._radius = 0;
                e._warnRadius = 0;
                e._playerDemage = 0;
                e._enemyDemage = 0;
                e._velocity = 0;
                e._accVelocity = 0;
                e._followTime = 0;
                e.m_followTime = 0;
                e.m_rangeNode = null;
                e.m_audioId = -1;
                return e;
            }
            e.prototype.init = function (e, i, n) {
                t.prototype.init.call(this, e, i, n);
                var a = c.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                this.type = a.type;
                var r = l.DYTools.stringToNumber(a.para, "*"), o = r[0], s = r[1], h = r[2], u = r[3], p = r[4], f = r[5];
                this._radius = .8 * o;
                this._warnRadius = o;
                this._playerDemage = s;
                this._enemyDemage = h;
                this._velocity = u;
                this._accVelocity = p;
                this._followTime = f;
                this.m_audioId = -1;
                d.FrameMgr.loadMgr.loadAudio("explosion");
                this.node.on("onDie", this._onDie.bind(this), this);
            };
            e.prototype.updateLogic = function (t) {
                var e = this;
                if (this.m_followTime > 0) {
                    this.m_followTime -= t;
                    this.m_rangeNode.position = this.node.position;
                    if (this.m_followTime < 1e-6) {
                        this.m_followTime = 0;
                        this.m_enemy.moveController.enabled = !1;
                        this.m_enemy.funcController.enabled = !1;
                        d.FrameMgr.audioMgr.playEffect("explosion_blast");
                        this.m_enemy.playDieAnim();
                        this.m_enemy.uiNode.opacity = 0;
                        this.m_enemy.scheduleOnce(function () {
                            e._blast();
                        }, .1);
                    }
                }
            };
            e.prototype._onDie = function () {
                var t = this;
                this.node.off("onDie");
                this._playAudio();
                var e = new cc.Node("enemyExplosion");
                e.parent = p.EntityMgr.getEffectLayer();
                e.position = this.node.position;
                e.scale = this._warnRadius / 129;
                e.addComponent(cc.Sprite).spriteFrame = h.EnemyMgr.enemyEffectAtlas.getSpriteFrame("warn_explosion");
                this.m_rangeNode = e;
                this.m_enemy.playAnimation("ignite", function () {
                    t.m_enemy.playAnimation("blast");
                });
                this.m_followTime = this._followTime;
                this.m_enemy.velocity = this._velocity;
                this.m_enemy.moveController.changeMoveComp(f.EnemyMoveType.FollowP, new m.default());
                this.m_enemy.moveController.setMoveSelf(!1);
                this.m_enemy.moveController.setUpdateSelf(!0);
                this.m_enemy.moveController.setAccVelocity(this._accVelocity);
                this.m_enemy.moveController.enabled = !0;
                this.m_enemy.funcController.enabled = !0;
            };
            e.prototype._playAudio = function () {
                return r(this, void 0, void 0, function () {
                    var t;
                    return o(this, function (e) {
                        switch (e.label) {
                            case 0:
                                t = this;
                                return [4, d.FrameMgr.audioMgr.playEffect("explosion", !0)];

                            case 1:
                                t.m_audioId = e.sent();
                                if (!this.m_rangeNode && this.m_audioId >= 0) {
                                    d.FrameMgr.audioMgr.stopEffect(this.m_audioId);
                                    this.m_audioId = -1;
                                }
                                return [2];
                        }
                    });
                });
            };
            e.prototype._blast = function () {
                var t = this;
                this.m_enemy.playAnimation("blast");
                var e = this.node.position, i = u.SnakeMgr.getSnakeHead();
                i && i.hurtAble && this._checkInArea(e, i.node.position) && i.getMainEntity().cutHp(this._playerDemage);
                this._enemyDemage > 0 && h.EnemyMgr.enemys.forEach(function (i) {
                    !i.isDead && t._checkInArea(e, i.node.position) && i.hpChange(-t._enemyDemage);
                });
                this.m_rangeNode.destroy();
                this.m_rangeNode = null;
                if (this.m_audioId >= 0) {
                    d.FrameMgr.audioMgr.stopEffect(this.m_audioId);
                    this.m_audioId = -1;
                }
                this.m_enemy.hideAllStateEffect();
            };
            e.prototype._checkInArea = function (t, e) {
                var i = e.sub(t);
                return Math.abs(i.x) < this._radius && Math.abs(i.y) < this._radius;
            };
            e.prototype.clear = function () {
                this._radius = 0;
                this._playerDemage = 0;
                this._enemyDemage = 0;
                this._velocity = 0;
                this._accVelocity = 0;
                this._followTime = 0;
                this.m_followTime = 0;
                if (this.m_rangeNode) {
                    this.m_rangeNode.destroy();
                    this.m_rangeNode = null;
                }
            };
            return e;
        }(s.default);
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/config/ConfigEnemyMoveData": "ConfigEnemyMoveData",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyFallToGroundAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1a89ci6hq9PyZA1Tof36TTu", "EnemyFallToGroundAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./EnemyAttrBase"), s = t("../../manager/battle/SnakeManager"), c = t("../../../../data/manager/ConfigDataManager"), l = t("../../../../util/Tools"), h = t("../../manager/battle/EntityManager"), u = t("../../manager/battle/BulletManager"), p = cc._decorator, d = p.ccclass, f = (p.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._velocity = 0;
                    e._delay = 0;
                    e._cd = 0;
                    e._time = 0;
                    e._isJumping = !1;
                    e._isFlying = !1;
                    e._targetPos = cc.Vec3.ZERO;
                    e._initScale = 1;
                    e._warnCircle = null;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    var a = c.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this.type = a.type;
                    var r = l.DYTools.stringToNumber(a.para, "*"), o = r[0], s = r[1], h = r[2];
                    this._velocity = o;
                    this._delay = s;
                    this._cd = h;
                };
                e.prototype.updateLogic = function (t) {
                    if (this._isJumping) {
                        if (this._isFlying) {
                            this._time += t;
                            if (this._time > this._delay) {
                                this._isFlying = !1;
                                this._time = 0;
                                this.fallToGround();
                            }
                        }
                    } else {
                        this._time += t;
                        if (this._time > this._cd) {
                            this._isJumping = !0;
                            this.jumpUp();
                            this._time = 0;
                        }
                    }
                };
                e.prototype.jumpUp = function () {
                    var t = this;
                    this.onFuncStart();
                    this._targetPos = s.SnakeMgr.getPlayerPos();
                    this.getEntity().getColliders().enabled = !1;
                    this._initScale = this.node.scale;
                    var e = 2e3 / this._velocity;
                    cc.tween(this.node).by(e, {
                        y: 2e3,
                        scale: 1.3
                    }).call(function () {
                        t._isFlying = !0;
                    }).start();
                    this.addWarn();
                };
                e.prototype.fallToGround = function () {
                    var t = this, e = (this.node.y - this._targetPos.y) / this._velocity;
                    cc.tween(this.node).to(e, {
                        position: this._targetPos,
                        scale: this._initScale
                    }).call(function () {
                        t.getEntity().getColliders().enabled = !0;
                        t.onFuncEnd();
                        t._isJumping = !1;
                    }).start();
                    this._warnCircle.opacity = 0;
                    this._warnCircle.stopAllActions();
                };
                e.prototype.addWarn = function () {
                    if (!this._warnCircle) {
                        this._warnCircle = new cc.Node();
                        this._warnCircle.addComponent(cc.Sprite).spriteFrame = u.BulletMgr.getBulletSprite("warn_circle", !0);
                        this._warnCircle.parent = h.EntityMgr.getEnemyBulletLayer();
                        this._warnCircle.zIndex = -1;
                    }
                    this._warnCircle.position = this._targetPos;
                    this._warnCircle.active = !0;
                    this._warnCircle.opacity = 175;
                    cc.tween(this._warnCircle).by(3, {
                        angle: 360
                    }).repeatForever().start();
                };
                e.prototype.getEntity = function () {
                    return this.entity;
                };
                e.prototype.clear = function () {
                    this.node.stopAllActions();
                    if (this._warnCircle) {
                        this._warnCircle.stopAllActions();
                        this._warnCircle.destroy();
                        this._warnCircle = null;
                    }
                };
                e.prototype.onFuncStart = function () {
                    this.entityMoveComp.enabled = !1;
                };
                e.prototype.onFuncEnd = function () {
                    this.entityMoveComp.enabled = !0;
                    this.entityFuncComp.onEnemyFuncFinish(this.type, this.isMerge);
                };
                return r([d], e);
            }(o.default));
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyFollowPAreaPatrolComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "3d227hhXxFOSLPLMFtG0rbP", "EnemyFollowPAreaPatrolComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./EnemyMoveBaseComp"), s = t("../../../../util/Tools"), c = t("../../manager/battle/SnakeManager"), l = t("../../manager/battle/MapManager"), h = t("../../../../config/GameEnum"), u = cc._decorator, p = u.ccclass, d = (u.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.areaMoveData = null;
                    e.centerPos = cc.Vec3.ZERO;
                    e.m_curEndPos = null;
                    e.totalLength = 0;
                    e.curMoveDis = 0;
                    e.isFuncActive = !1;
                    e._holdTime = 0;
                    e.moveTimesStop = 0;
                    e.curMoveTimes = 0;
                    e.curFollowCDTime = 0;
                    e.curFollowLastTime = 0;
                    e.isFollowing = !1;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.centerPos = this.node.position;
                    this.areaMoveData = e.followPAreaPatrolData;
                    this.curMoveTimes = 0;
                    this.setMoveTimesStop();
                    this.curFollowCDTime = 0;
                    this.curFollowLastTime = 0;
                    this.isFollowing = !1;
                    this.setNextPos();
                    this.node.on(h.EventTypeEnum.EnemyMoveRefresh, this.setNextPos.bind(this), this);
                };
                e.prototype.updateDir = function (t) {
                    if (this.areaMoveData.followLastTime < 0) {
                        this.isFollowing = !1;
                        this.curFollowCDTime = 0;
                        this.areaMoveData.followCDTime = 99999;
                    } else if (this.areaMoveData.followCDTime < 0) {
                        this.isFollowing = !0;
                        this.curFollowLastTime = 0;
                        this.areaMoveData.followLastTime = 99999;
                    }
                    if (this.isFollowing) {
                        this.curFollowLastTime += t;
                        if (this.curFollowLastTime >= this.areaMoveData.followLastTime) {
                            this.isFollowing = !1;
                            this.curFollowCDTime = 0;
                            this.curFollowLastTime = 0;
                            this.setNextPos();
                        }
                    } else {
                        this.curFollowCDTime += t;
                        if (this.curFollowCDTime >= this.areaMoveData.followCDTime) {
                            this.isFollowing = !0;
                            this.curFollowCDTime = 0;
                            this.curFollowLastTime = 0;
                            this.setNextPos();
                        }
                    }
                };
                e.prototype.updatePos = function (e) {
                    if (this.m_updateSelf) {
                        var i = this.dir.equals(cc.Vec2.ZERO) ? 0 : this.getCurVelocity() * e;
                        this.curMoveDis += i;
                        if (this.totalLength > this.curMoveDis) {
                            var n = this.node.position, a = l.MapMgr.isInMap(cc.v2(n.x, n.y));
                            n.x = n.x + this.dir.x * i;
                            n.y = n.y + this.dir.y * i;
                            a && !l.MapMgr.isInMap(cc.v2(n.x, n.y)) || (this.node.position = n);
                        } else {
                            this.m_curEndPos = null;
                            this._holdTimeCall = this._onHoldTime;
                        }
                        this._holdTimeCall && this._holdTimeCall(e);
                    } else t.prototype.updatePos.call(this, e);
                };
                e.prototype.setNextPos = function () {
                    this.curMoveTimes++;
                    var t = cc.Vec2.ZERO;
                    switch (this.areaMoveData.type) {
                        case 1:
                            t = this._getNextPosInRect(this.isFollowing);
                            break;

                        case 2:
                        default:
                            t = this._getNextPosInCircle(this.isFollowing);
                    }
                    t = cc.v2(l.MapMgr.getEndPos(cc.v2(this.node.position), cc.v2(t)));
                    this.m_curEndPos = t;
                    var e = t.sub(this.node.getPosition());
                    this.totalLength = e.mag();
                    this.curMoveDis = 0;
                    this.setDir(e.normalize());
                };
                e.prototype.setChangeCenter = function (t) {
                    if (t) {
                        var e = this.node.position, i = c.SnakeMgr.getPlayerPos();
                        this.centerPos = cc.v3(.5 * (e.x + i.x), .5 * (e.y + i.y), .5 * (e.z + i.z));
                    } else 1 == this.areaMoveData.isNewArea && (this.centerPos = this.node.position);
                };
                e.prototype._getNextPosInRect = function (t) {
                    this.setChangeCenter(t);
                    var e = this.areaMoveData.height / 2, i = this.areaMoveData.width / 2;
                    if (t) {
                        var n = this.node.position, a = c.SnakeMgr.getPlayerPos();
                        i = Math.abs(n.x - a.x);
                        e = Math.abs(n.y - a.y);
                    }
                    var r = this.centerPos.x - i, o = this.centerPos.x + i, l = this.centerPos.y - e, h = this.centerPos.y + e, u = s.DYTools.random_int(r, o), p = s.DYTools.random_int(l, h);
                    return cc.v2(u, p);
                };
                e.prototype._getNextPosInCircle = function (t) {
                    this.setChangeCenter(t);
                    var e = s.DYTools.random_int(this.areaMoveData.minRadius, this.areaMoveData.maxRadius);
                    if (t) {
                        var i = this.node.position;
                        e = .5 * c.SnakeMgr.getPlayerPos().sub(i).mag();
                    }
                    var n = e * e, a = Math.pow(s.DYTools.random_int(0, n), .5), r = s.DYTools.random_int(1, 360) / 360 * 2 * Math.PI, o = this.centerPos.x + a * Math.cos(r), l = this.centerPos.y + a * Math.sin(r);
                    return cc.v2(o, l);
                };
                e.prototype.setMoveTimesStop = function () {
                    this.moveTimesStop = s.DYTools.random_int(this.areaMoveData.minMoveTimesStop, this.areaMoveData.maxMoveTimesStop);
                };
                e.prototype._onHoldTime = function (t) {
                    if (this.curMoveTimes >= this.moveTimesStop) {
                        if (this._holdTime > this.areaMoveData.interval) {
                            this._holdTimeCall = null;
                            this._holdTime = 0;
                            this.curMoveTimes = 0;
                            this.setMoveTimesStop();
                            this.setNextPos();
                            return;
                        }
                        this._holdTime += t;
                    } else this.setNextPos();
                };
                e.prototype.reset = function () {
                    t.prototype.reset.call(this);
                };
                return r([p], e);
            }(o.default));
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyMoveBaseComp": "EnemyMoveBaseComp"
    }],
    EnemyFuncController: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "f033bBaSO9A1odvViQZBbRi", "EnemyFuncController");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../common/CompBase"), s = t("../../../../data/manager/ConfigDataManager"), c = t("../../../../config/GameEnum"), l = t("./EnemyDashAttr"), h = t("./EnemyFallToGroundAttr"), u = t("../../../../util/Tools"), p = t("./EnemySplitAttr"), d = t("./EnemySummonAttr"), f = t("./EnemyAddBloodAttr"), m = t("./EnemyExplosionAttr"), g = t("./EnemyBulletAttr"), _ = t("./EnemySprintAttr"), y = t("./EnemyJumpAttr"), v = t("./EnemyReviveAttr"), b = t("./EnemyBandageAttr"), M = t("./EnemyBurrowAttr"), S = t("./EnemyDashAtkAttr"), k = t("./EnemyDieBulletAttr"), C = cc._decorator, w = C.ccclass, A = (C.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._funcDatas = [];
                    e._attrComp = null;
                    e._attrCompArr = [];
                    e.m_enemy = null;
                    e._curIndex = 0;
                    e._lastFuncId = 0;
                    e._curFuncData = null;
                    e._time = 0;
                    e._repeateTimes = 0;
                    e._isFuncFinish = !0;
                    e._curFuncType = 0;
                    e._isMergeStart = !1;
                    e._isFuncing = !1;
                    return e;
                }
                e.prototype.init = function (t, e, i) {
                    this.m_enemy = t;
                    this.initBase(t);
                    this.initData(e);
                    this.refreshCurFunc();
                    this.setMergeComp(i);
                    this._isFuncing = !1;
                };
                e.prototype.initData = function (t) {
                    for (var e = t.split("#"), i = 0, n = e.length; i < n; i++) {
                        var a = u.DYTools.stringToNumber(e[i], "*"), r = new T();
                        r.id = a[0];
                        if (3 == a.length) {
                            r.repeat = a[1];
                            r.delay = a[2];
                        }
                        this._funcDatas.push(r);
                    }
                };
                e.prototype.setMergeComp = function (t) {
                    this._isMergeStart = !1;
                    if (t) {
                        this._attrCompArr = [];
                        for (var e = 0; e < t.length; e++) {
                            var i = t[e], n = s.ConfigDataMgr.getData("ConfigEnemyFuncData", i);
                            if (n) {
                                var a = this.getComp(n.type);
                                if (a) {
                                    var r = new a();
                                    r.init(n.id, this.m_enemy, !0);
                                    r.enabled = !0;
                                    this._attrCompArr.push(r);
                                }
                            }
                        }
                    }
                };
                e.prototype.setComp = function () {
                    var t = this._curFuncData.id;
                    if (t && t == this._lastFuncId) {
                        this._attrComp && (this._attrComp.enabled = !0);
                        return !1;
                    }
                    var e = s.ConfigDataMgr.getData("ConfigEnemyFuncData", t);
                    if (!e) return !1;
                    this._attrComp && this._attrComp.clear();
                    this._attrComp = null;
                    this._curFuncType = e.type;
                    var i = this.getComp(e.type);
                    if (i) {
                        this._attrComp = new i();
                        this._attrComp.init(e.id, this.m_enemy, !1);
                        this._attrComp.enabled = !0;
                        return !0;
                    }
                    return !1;
                };
                e.prototype.getComp = function (t) {
                    var e = null;
                    switch (t) {
                        case c.EnemyFuncType.Bullet:
                            e = g.default;
                            break;

                        case c.EnemyFuncType.Dash:
                            e = l.default;
                            break;

                        case c.EnemyFuncType.FallToGround:
                            e = h.default;
                            break;

                        case c.EnemyFuncType.Split:
                            e = p.default;
                            break;

                        case c.EnemyFuncType.Summon:
                            e = d.default;
                            break;

                        case c.EnemyFuncType.AddBlood:
                            e = f.default;
                            break;

                        case c.EnemyFuncType.Explosion:
                            e = m.default;
                            break;

                        case c.EnemyFuncType.Sprint:
                            e = _.default;
                            break;

                        case c.EnemyFuncType.Jump:
                            e = y.default;
                            break;

                        case c.EnemyFuncType.Revive:
                            e = v.default;
                            break;

                        case c.EnemyFuncType.Bandage:
                            e = b.default;
                            break;

                        case c.EnemyFuncType.Burrow:
                            e = M.default;
                            break;

                        case c.EnemyFuncType.DashAtk:
                            e = S.default;
                            break;

                        case c.EnemyFuncType.DieBullet:
                            e = k.default;
                    }
                    return e;
                };
                e.prototype.refreshCurFunc = function () {
                    this._lastFuncId = this._curFuncData ? this._curFuncData.id : 0;
                    this._curIndex = this._curIndex >= this._funcDatas.length ? 0 : this._curIndex;
                    this._curFuncData = this._funcDatas[this._curIndex];
                    this._curIndex++;
                };
                e.prototype.updateLogic = function (t) {
                    if (this.enabled) if (this.m_enemy.isDead) this.updateAttrExplosion(t); else if (this._isFuncFinish) {
                        this._isMergeStart || (this._time += t);
                        if (this._time > this._curFuncData.delay) {
                            this.setComp();
                            this._time = 0;
                            this._repeateTimes = 1;
                            this._isFuncFinish = !1;
                        }
                    } else this.m_enemy.isInFrostEffect() || this.updateAttrAll(t);
                };
                e.prototype.updateAttrExplosion = function (t) {
                    this._isMergeStart || this._attrComp && this._attrComp.getType() == c.EnemyFuncType.Explosion && this._attrComp.updateLogic(t);
                    if (this._attrCompArr) for (var e = 0; e < this._attrCompArr.length; e++) {
                        var i = this._attrCompArr[e];
                        i && i.getType() == c.EnemyFuncType.Explosion && i.updateLogic(t);
                    }
                };
                e.prototype.updateAttrAll = function (t) {
                    this._isMergeStart || this._attrComp && this._attrComp.updateLogic(t);
                    if (this._attrCompArr) for (var e = 0; e < this._attrCompArr.length; e++) {
                        var i = this._attrCompArr[e];
                        i && i.updateLogic(t);
                    }
                };
                e.prototype.checkFuncRevive = function () {
                    if (this._attrComp && this._attrComp.getType() == c.EnemyFuncType.Revive) return this._attrComp.funcTrigger();
                    if (this._attrCompArr) for (var t = 0; t < this._attrCompArr.length; t++) {
                        var e = this._attrCompArr[t];
                        if (e && e.getType() == c.EnemyFuncType.Revive) return e.funcTrigger();
                    }
                    return !1;
                };
                e.prototype.forceEndBandage = function () {
                    this._attrComp && this._attrComp.getType() == c.EnemyFuncType.Bandage && this._attrComp.funcForceEnd();
                    if (this._attrCompArr) for (var t = 0; t < this._attrCompArr.length; t++) {
                        var e = this._attrCompArr[t];
                        e && e.getType() == c.EnemyFuncType.Bandage && e.funcForceEnd();
                    }
                };
                e.prototype.cancelFunc = function () {
                    this._attrComp && this._attrComp.funcCancel();
                    if (this._attrCompArr) for (var t = 0; t < this._attrCompArr.length; t++) {
                        var e = this._attrCompArr[t];
                        e && e.funcCancel();
                    }
                };
                e.prototype.getIsFuncing = function () {
                    return this._isFuncing;
                };
                e.prototype.setIsFuncing = function (t) {
                    this._isFuncing = t;
                };
                e.prototype.isIgnoreFrost = function () {
                    return !!(this._attrComp && this._attrComp.enabled && this.getIsFuncing());
                };
                e.prototype.onEnemyFuncStart = function (t, e) {
                    e && (this._isMergeStart = !0);
                };
                e.prototype.onEnemyFuncFinish = function (t, e) {
                    if (e) this._isMergeStart = !1; else if (this._curFuncData.repeat < 0 || this._repeateTimes < this._curFuncData.repeat) this._repeateTimes += 1; else {
                        this._isFuncFinish = !0;
                        this.refreshCurFunc();
                        this._attrComp && (this._attrComp.enabled = !1);
                    }
                };
                e.prototype.willClear = function () {
                    if (this._attrCompArr) for (var t = this._attrCompArr.length - 1; t >= 0; t--) this._attrCompArr[t].willClear();
                    this._attrComp && this._attrComp.willClear();
                };
                e.prototype.clear = function () {
                    this._funcDatas = [];
                    if (this._attrComp) {
                        this._attrComp.clear();
                        this._attrComp = null;
                    }
                    if (this._attrCompArr) {
                        for (var t = this._attrCompArr.length - 1; t >= 0; t--) this._attrCompArr[t].clear();
                        this._attrCompArr = [];
                    }
                    this.enabled = !1;
                    this._time = 0;
                    this._repeateTimes = 0;
                    this._isFuncFinish = !0;
                    this._curIndex = 0;
                    this._lastFuncId = 0;
                    this._curFuncData = null;
                    this._curFuncType = 0;
                };
                Object.defineProperty(e.prototype, "curFuncType", {
                    get: function () {
                        return this._curFuncType;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                return r([w], e);
            }(o.default));
        i.default = A;
        var T = function () {
            this.repeat = -1;
            this.delay = 0;
        };
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../util/Tools": "Tools",
        "../../common/CompBase": "CompBase",
        "./EnemyAddBloodAttr": "EnemyAddBloodAttr",
        "./EnemyBandageAttr": "EnemyBandageAttr",
        "./EnemyBulletAttr": "EnemyBulletAttr",
        "./EnemyBurrowAttr": "EnemyBurrowAttr",
        "./EnemyDashAtkAttr": "EnemyDashAtkAttr",
        "./EnemyDashAttr": "EnemyDashAttr",
        "./EnemyDieBulletAttr": "EnemyDieBulletAttr",
        "./EnemyExplosionAttr": "EnemyExplosionAttr",
        "./EnemyFallToGroundAttr": "EnemyFallToGroundAttr",
        "./EnemyJumpAttr": "EnemyJumpAttr",
        "./EnemyReviveAttr": "EnemyReviveAttr",
        "./EnemySplitAttr": "EnemySplitAttr",
        "./EnemySprintAttr": "EnemySprintAttr",
        "./EnemySummonAttr": "EnemySummonAttr"
    }],
    EnemyJumpAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2cee71SYPRK0Kx0t6Xc0Cz+", "EnemyJumpAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../manager/battle/SnakeManager"), s = t("../../../../data/manager/ConfigDataManager"), c = t("../../../../util/Tools"), l = t("./EnemyAttrBase"), h = t("../../manager/battle/MapManager"), u = t("../../manager/battle/EntityManager"), p = t("../../../../frame/manager/FrameManager"), d = t("../../../../config/GameEnum"), f = t("../../../../config/GameConst"), m = t("../../../../frame/ui/FrameAnim"), g = t("../../manager/battle/EnemyManager"), _ = t("../../../../config/GameConfig"), y = cc._decorator, v = y.ccclass, b = (y.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_enemyEntity = null;
                    e.m_state = 0;
                    e._atkRatio = 0;
                    e._dashCD = 0;
                    e._flyTime = 0;
                    e._wraningTime = 0;
                    e._dashRange = 0;
                    e._jumpHeight = 300;
                    e._jumpRaduis = 100;
                    e._jumpMaxDis = 300;
                    e._fallRadius = 0;
                    e._warningScale = 1;
                    e._fallEffectScale = 1;
                    e.m_dir = cc.v2(1, 0);
                    e._time = 0;
                    e._lastTime = 0;
                    e._curWraningTime = 0;
                    e.m_landAnim = null;
                    e.m_speedX = 0;
                    e.m_speedY = 0;
                    e.m_startPos = cc.Vec2.ZERO;
                    e.m_endPos = cc.Vec2.ZERO;
                    e.m_accY = 0;
                    e.m_wraning = null;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.m_enemyEntity = i;
                    this.m_state = 0;
                    var a = s.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this.type = a.type;
                    var r = c.DYTools.stringToNumber(a.para, "*"), o = r[0], l = r[1], h = r[2], u = r[3], p = r[4], d = r[5], f = r[6], m = r[7], g = r[8], _ = r[9];
                    this._atkRatio = 1;
                    this._dashCD = o;
                    this._wraningTime = l;
                    this._flyTime = h;
                    this._dashRange = u;
                    this._jumpHeight = p;
                    this._jumpRaduis = d;
                    this._jumpMaxDis = f;
                    this._fallRadius = m;
                    this._warningScale = g;
                    this._fallEffectScale = _;
                };
                e.prototype.updateLogic = function (t) {
                    var e = this;
                    if (this.enabled) switch (this.m_state) {
                        case 0:
                            this._time += t;
                            if (this._time > this._dashCD && o.SnakeMgr.getSnakeHead().node.position.sub(this.entity.node.position).mag() <= this._dashRange) {
                                this.m_dir = this.entityMoveComp.getDir();
                                this.onFuncStart();
                                this._time = 0;
                                this._lastTime = 0;
                                this._curWraningTime = 0;
                                this.setJumpPos();
                                var i = this.m_endPos.x - this.m_startPos.x > 0 ? cc.v2(1, 0) : cc.v2(-1, 0);
                                this.refreshFaceDir(i);
                                if (this._wraningTime <= 0) {
                                    this.m_state = 2;
                                    p.FrameMgr.audioMgr.playEffect("enemy_jump_up");
                                } else {
                                    this.createWarning(cc.v3(this.m_endPos));
                                    this.m_state = 1;
                                }
                            }
                            break;

                        case 1:
                            this.entityMoveComp.enabled = !1;
                            this._curWraningTime += t;
                            if (this._curWraningTime >= this._wraningTime) {
                                this.m_enemyEntity.playAnimation("jump_start", function () {
                                    e.m_enemyEntity.playAnimation("jump_idle");
                                });
                                this.m_state = 2;
                                p.FrameMgr.audioMgr.playEffect("enemy_jump_up");
                            }
                            break;

                        case 2:
                            this.entityMoveComp.enabled = !1;
                            this._lastTime += t;
                            this.m_state = 3;
                            this.setIsInSky(!0);
                            this.m_enemy.setCollideAble(!1);
                            var n = cc.jumpTo(this._flyTime, this.m_endPos, this._jumpHeight, 1), a = cc.callFunc(function () {
                                if (8 == e.m_enemy.uiData.id || 9 == e.m_enemy.uiData.id) {
                                    if (!e.m_landAnim) {
                                        var t = cc.instantiate(f.GValue.pfFrameAnim);
                                        t.anchorY = .7;
                                        e.m_landAnim = t.getComponent(m.default);
                                    }
                                    if (e.m_landAnim) {
                                        e.m_landAnim.init(g.EnemyMgr.enemyEffectAtlas, e.m_enemy.uiData.enterLandImage, e.m_enemy.uiData.enterLandCount, 2 * _.GConfig.ActionInterval);
                                        e.m_landAnim.node.parent = u.EntityMgr.getShadowLayer();
                                        e.m_landAnim.node.x = e.m_endPos.x;
                                        e.m_landAnim.node.y = e.m_endPos.y;
                                        e.m_landAnim.node.scale = e.node.scale * e.m_enemy.uiData.enterLandScale;
                                        "anim_enemy_land1_" == e.m_enemy.uiData.enterLandImage ? e.m_landAnim.node.color = e.m_enemy.uiData.effectColor : e.m_landAnim.node.color = cc.Color.WHITE;
                                        e.m_landAnim.play(1);
                                    }
                                }
                                p.FrameMgr.audioMgr.playEffect("enemy_jump_down");
                                e.m_enemyEntity.playAnimation("jump_over");
                                e.node.zIndex = 0;
                                e.setIsInSky(!1);
                                e.m_enemy.setCollideAble(!0);
                                e.fallHurt();
                                e.onFuncEnd();
                            }), r = cc.sequence(n, a);
                            this.node.runAction(r);
                            break;

                        case 3:
                            var s = this.m_startPos, c = this.m_endPos;
                            if (this.m_startPos > this.m_endPos) {
                                s = this.m_endPos;
                                c = this.m_startPos;
                            }
                            var l, h = this.node.position.x;
                            s.x == c.x && (c.x += 5);
                            var d = (h - s.x) / (c.x - s.x);
                            l = (c.y - s.y) * d + s.y - this.node.position.y;
                            this.m_enemy.setShadowJumpOffset(cc.v2(0, l));
                    }
                };
                e.prototype.setIsInSky = function (t) {
                    this.m_enemy.setIsInSky(t);
                };
                e.prototype.setJumpPos = function () {
                    var t = this._jumpRaduis, e = o.SnakeMgr.getSnakePosition(), i = e.sub(this.node.getPosition()), n = i.mag();
                    if (this._jumpMaxDis < n) {
                        var a = cc.v2(0, 1).signAngle(i), r = cc.v2(0, this._jumpMaxDis).rotate(a);
                        e = this.node.getPosition().add(r);
                    }
                    e.x += c.DYTools.random_int(-t, t);
                    e.y += c.DYTools.random_int(-t, t);
                    this.m_startPos = this.entity.node.getPosition();
                    this.m_endPos = h.MapMgr.getEndPos(this.m_startPos, e);
                };
                e.prototype.fallHurt = function () {
                    var t = this.entity.node.getPosition(), e = o.SnakeMgr.getSnakeHead().node.getPosition(), i = cc.Vec2.distance(t, e);
                    if (this._fallRadius && this._fallRadius > 0) {
                        var n = new cc.Node();
                        n.addComponent(cc.Sprite).spriteFrame = g.EnemyMgr.enemyEffectAtlas.getSpriteFrame("enemy_jumphurt_ground");
                        u.EntityMgr.addShadow(n);
                        n.setPosition(t);
                        n.scale = 1.42;
                        var a = cc.delayTime(15 * _.GConfig.ActionInterval), r = cc.fadeOut(7 * _.GConfig.ActionInterval), s = cc.destroySelf(), c = cc.sequence(a, r, s);
                        n.runAction(c);
                        var l = cc.instantiate(f.GValue.pfFrameAnim), h = l.getComponent(m.default);
                        h.node.setPosition(t);
                        u.EntityMgr.addShadow(l);
                        h.init(g.EnemyMgr.enemyEffectAtlas, "anim_enemy_jumphurt_", 10, _.GConfig.ActionInterval);
                        h.setStopCall(function () {
                            h.destroy();
                        });
                        h.play(1);
                        this._fallEffectScale && (l.scale = this._fallEffectScale);
                        i <= this._fallRadius && o.SnakeMgr.snakeHurt(this.m_enemy.getAtk());
                    }
                };
                e.prototype.createWarning = function (t) {
                    this.destroyWraning();
                    this.m_wraning = new cc.Node();
                    u.EntityMgr.addShadow(this.m_wraning);
                    var e = this.m_wraning.addComponent(sp.Skeleton);
                    e.skeletonData = p.FrameMgr.loadMgr.get("spine_enemy_warning", sp.SkeletonData);
                    e.premultipliedAlpha = !1;
                    e.setCompleteListener(function (t) {
                        var i = t.animation ? t.animation.name : "";
                        "idle" == i ? e.setAnimation(0, "play", !0) : "idle2" == i && e.setAnimation(0, "play2", !0);
                    });
                    this.m_wraning.active = !0;
                    this.m_wraning.opacity = 255;
                    this.m_wraning.position = t;
                    var i = 1;
                    this._warningScale && this._warningScale > 0 && (i = this._warningScale);
                    this.m_wraning.scale = i;
                    e.setAnimation(0, "idle2", !1);
                };
                e.prototype.destroyWraning = function () {
                    if (this.m_wraning) {
                        var t = this.m_wraning.getComponent(sp.Skeleton);
                        t && (t.enabled = !1);
                        this.m_wraning.opacity = 0;
                        this.m_wraning.active = !1;
                        this.m_wraning.destroy();
                        this.m_wraning = null;
                    }
                };
                e.prototype.refreshFaceDir = function (t) {
                    if (!t.equals(cc.Vec2.ZERO)) if (0 == this.entity.rotateType) {
                        var e = cc.misc.radiansToDegrees(cc.v2(0, -1).signAngle(t));
                        e = (e + 360) % 360;
                        if (1 == this.m_state || 2 == this.m_state || 3 == this.m_state) this.entity.angle = e; else {
                            this.entity.angle = 0;
                            this.entity.setFace && this.entity.setFace(t);
                        }
                    } else this.entity.angle = -cc.misc.radiansToDegrees(cc.v2(t).signAngle(cc.v2(0, -1)));
                };
                Object.defineProperty(e.prototype, "atkRatio", {
                    get: function () {
                        return this._atkRatio;
                    },
                    set: function (t) {
                        this._atkRatio = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.reset = function () {
                    this._atkRatio = 0;
                    this._dashCD = 0;
                    this._wraningTime = 0;
                    this._flyTime = 0;
                    this._dashRange = 0;
                    this.m_state = 0;
                    this.m_dir = cc.v2(1, 0);
                    this._time = 0;
                    this._lastTime = 0;
                    this._curWraningTime = 0;
                    this.destroyWraning();
                };
                e.prototype.willClear = function () {
                    if (this.m_landAnim) {
                        this.m_landAnim.node.destroy();
                        this.m_landAnim = null;
                    }
                    this.destroyWraning();
                };
                e.prototype.clear = function () {
                    if (this.m_landAnim) {
                        this.m_landAnim.node.destroy();
                        this.m_landAnim = null;
                    }
                    this.destroyWraning();
                    this.node.targetOff(this);
                };
                e.prototype.onFuncEnd = function () {
                    var e = this;
                    this._time = 0;
                    this._lastTime = 0;
                    this._curWraningTime = 0;
                    t.prototype.onFuncEnd.call(this);
                    this.node.emit(d.EventTypeEnum.EnemyMoveRefresh);
                    this.m_enemyEntity.playAnimation("move");
                    this.m_state = 0;
                    this.destroyWraning();
                    this.m_enemy.setShadowJumpOffset(cc.v2(0, 0));
                    this.entityMoveComp.enabled = !0;
                    setTimeout(function () {
                        e.m_dir = e.entityMoveComp.getDir();
                        e.refreshFaceDir(e.m_dir);
                    });
                };
                return r([v], e);
            }(l.default));
        i.default = b;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/EntityManager": "EntityManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyLockMask: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "ecaa2HXcT1BWa6Q6JxtkL25", "EnemyLockMask");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../manager/battle/EnemyManager"), s = cc._decorator, c = s.ccclass, l = s.property, h = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.anim = null;
                e.m_target = null;
                e.m_offset = cc.Vec2.ZERO;
                e.m_initScaleY = 1;
                return e;
            }
            e.prototype.create = function () {
                this.m_initScaleY = this.node.scaleY;
                for (var t = o.EnemyMgr.enemyAtlas, e = this.anim.node, i = 0; i < e.childrenCount; i++) {
                    var n = e.children[i], a = n.getComponent(cc.Sprite);
                    a && (a.spriteFrame = t.getSpriteFrame(n.name));
                }
            };
            e.prototype.setTarget = function (t, e, i) {
                void 0 === e && (e = 1);
                void 0 === i && (i = cc.Vec2.ZERO);
                this.m_target = t;
                this.node.scaleX = e;
                this.node.scaleY = this.m_initScaleY * e;
                this.m_offset = i;
                this.anim.node.setPosition(this.m_offset);
                if (t) {
                    this.node.opacity = 255;
                    this.play();
                } else {
                    this.node.opacity = 0;
                    this.stop();
                }
            };
            e.prototype.play = function () {
                this.anim.play();
            };
            e.prototype.stop = function () {
                this.anim.stop();
            };
            e.prototype.updateLogic = function () {
                this.m_target && (this.node.position = this.m_target.position);
            };
            r([l(cc.Animation)], e.prototype, "anim", void 0);
            return r([c], e);
        }(cc.Component);
        i.default = h;
        cc._RF.pop();
    }, {
        "../manager/battle/EnemyManager": "EnemyManager"
    }],
    EnemyManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "86577Ic4u1NSJPq4ZhHJCWi", "EnemyManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        }, o = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, s = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.EnemyMgr = void 0;
        var c = t("../../../../frame/manager/FrameManager"), l = t("./EntityManager"), h = t("./MapManager"), u = t("../../../../data/config/ConfigEnemyUIData"), p = t("../../../../data/config/ConfigEnemyMoveData"), d = t("../../../../data/config/ConfigEnemyFuncData"), f = t("../../../../data/manager/ConfigDataManager"), m = t("../../../../data/config/ConfigEnemyData"), g = t("../../enemy/EnemyEntity"), _ = t("./BattleManager"), y = t("../../../../util/GameFunc"), v = t("../../../../util/Tools"), b = t("../../../../config/GameEnum"), M = t("./BulletManager"), S = t("../../../../config/GameConst"), k = t("../../../../frame/manager/BattleFlowManager"), C = t("../common/GuideManager"), w = t("../../enemy/EnemyLockMask"), A = t("./wave/NormalWaveManager"), T = t("../../../../data/storage/GameData"), D = t("../../../../frame/manager/CameraManager"), P = t("./GameRuleManager"), E = t("../../../../config/GameConfig"), B = t("../../../../frame/manager/PopupManager"), F = t("./SnakeManager"), N = t("./wave/CoinWaveManager"), x = t("../../enemy/attr/EnemyBurrowAttr"), R = cc._decorator, I = R.ccclass, G = (R.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_enabled = !1;
                    e.m_jsonName = "";
                    e.m_normalAtlas = null;
                    e.m_enemyAtlas = null;
                    e.m_blastAtlasMap = new Map();
                    e.m_enemyBlastAtlas = null;
                    e.m_enemyEffectAtlas = null;
                    e.m_frontShadow = "";
                    e.m_backShadow = "";
                    e.m_enemyModelNameArr = [];
                    e.m_bossEnemyModelArr = [];
                    e.m_enemyModelMap = new Map();
                    e.m_enemyPoolMap = new Map();
                    e.m_enemyPoolCount = 0;
                    e.m_pointDataMap = new Map();
                    e.m_enemyArr = [];
                    e.m_inScreenEnemy = [];
                    e.m_outScreenEnemy = [];
                    e.m_hasEnemyAlive = !1;
                    e.m_newEnemy = new Map();
                    e.m_killedEnemyCount = 0;
                    e._extraEnemyCount = 0;
                    e.hurtImage = "";
                    e.hurtCount = 0;
                    e.m_siblingArr = [];
                    e._shakeTime = 0;
                    e._shakeDuration = 0;
                    e._shakeEnemyNum = 0;
                    e._shakeEnemyArr = [];
                    e.m_pfLockMask = null;
                    e.m_lockMaskArr = [];
                    e.m_lockMask = null;
                    return e;
                }
                i = e;
                e.prototype.addLoadingRes = function () {
                    this.m_enemyModelNameArr.splice(0);
                    var t = ["enemyUI", "enemyMove", "enemyFunc"], e = ["PfEnemy", "WarnUI", "EnemyLockMask"], i = _.BattleMgr.stageRange;
                    this.m_jsonName = "enemy" + i.x + "-" + i.y;
                    t.push(this.m_jsonName);
                    for (var n = ["TP_Enemy", "TP_EnemyBlast", "TP_EnemyBlast1", "TP_EnemyBlast2", "TP_EnemyEffect", "TP_Enemy_Gold"], a = 1, r = "TP_EnemyBlast" + (10 * _.BattleMgr.enemyId + a), o = c.FrameMgr.loadMgr.getUrl(r, cc.SpriteAtlas); o;) {
                        n.push(r);
                        this.m_blastAtlasMap.set(r, null);
                        a++;
                        r = "TP_EnemyBlast" + (10 * _.BattleMgr.enemyId + a);
                        o = c.FrameMgr.loadMgr.getUrl(r, cc.SpriteAtlas);
                    }
                    var s = "Enemy_" + (a = 100);
                    for (o = c.FrameMgr.loadMgr.getUrl(s, cc.Prefab); o;) {
                        this.m_enemyModelNameArr.push(s);
                        e.push(s);
                        s = "Enemy_" + ++a;
                        o = c.FrameMgr.loadMgr.getUrl(s, cc.Prefab);
                    }
                    e.push("Enemy_150", "Enemy_151", "Enemy_152", "Enemy_153");
                    this.m_enemyModelNameArr.push("Enemy_150", "Enemy_151", "Enemy_152", "Enemy_153");
                    var l = "Enemy_" + _.BattleMgr.enemyId + "_";
                    for (s = l + (a = 1), o = c.FrameMgr.loadMgr.getUrl(s, cc.Prefab); o;) {
                        this.m_enemyModelNameArr.push(s);
                        e.push(s);
                        s = l + ++a;
                        o = c.FrameMgr.loadMgr.getUrl(s, cc.Prefab);
                    }
                    n.push("TP_Enemy_" + _.BattleMgr.enemyId);
                    return [{
                        itemType: cc.SpriteAtlas,
                        itemNames: n,
                        loadType: b.LoadType.All
                    }, {
                        itemType: cc.TextAsset,
                        itemNames: t,
                        loadType: b.LoadType.All
                    }, {
                        itemType: cc.AudioClip,
                        itemNames: ["eDie"],
                        loadType: b.LoadType.All
                    }, {
                        itemType: cc.Prefab,
                        itemNames: e,
                        loadType: b.LoadType.All
                    }];
                };
                e.prototype.startBattle = function () {
                    this.m_enabled = !0;
                    this.m_enemyArr.forEach(function (t) {
                        t.startBattle();
                    });
                };
                e.prototype.getInitTime = function () {
                    return 130;
                };
                e.prototype.initData = function () {
                    f.ConfigDataMgr.initJsonMapWithLoaded("ConfigEnemyData", this.m_jsonName, m.default);
                    f.ConfigDataMgr.initJsonMapWithLoaded("ConfigEnemyUIData", "enemyUI", u.default);
                    f.ConfigDataMgr.initJsonMapWithLoaded("ConfigEnemyMoveData", "enemyMove", p.default);
                    f.ConfigDataMgr.initJsonMapWithLoaded("ConfigEnemyFuncData", "enemyFunc", d.default);
                    this.m_normalAtlas || (this.m_normalAtlas = c.FrameMgr.loadMgr.get("TP_Enemy", cc.SpriteAtlas));
                    if (!this.m_enemyAtlas) {
                        this.m_enemyAtlas = c.FrameMgr.loadMgr.get("TP_Enemy_" + _.BattleMgr.enemyId, cc.SpriteAtlas);
                        this.m_enemyAtlas || (this.m_enemyAtlas = c.FrameMgr.loadMgr.get("TP_Enemy_Gold", cc.SpriteAtlas));
                    }
                    for (var t = 1; ;) {
                        var e = "TP_EnemyBlast" + (10 * _.BattleMgr.enemyId + t++), i = c.FrameMgr.loadMgr.get(e, cc.SpriteAtlas);
                        if (!i) break;
                        this.m_blastAtlasMap.set(e, i);
                    }
                    this.m_blastAtlasMap.set("TP_EnemyBlast1", c.FrameMgr.loadMgr.get("TP_EnemyBlast1", cc.SpriteAtlas));
                    this.m_blastAtlasMap.set("TP_EnemyBlast2", c.FrameMgr.loadMgr.get("TP_EnemyBlast2", cc.SpriteAtlas));
                    this.m_enemyBlastAtlas || (this.m_enemyBlastAtlas = c.FrameMgr.loadMgr.get("TP_EnemyBlast", cc.SpriteAtlas));
                    this.m_enemyEffectAtlas || (this.m_enemyEffectAtlas = c.FrameMgr.loadMgr.get("TP_EnemyEffect", cc.SpriteAtlas));
                    var n = this;
                    (function () {
                        var t = new Map();
                        switch (_.BattleMgr.gameType) {
                            case b.GameType.Normal:
                                var e = new Map(), i = [];
                                i.push(e);
                                for (var a = 0, r = 1, o = (m = A.NormalWaveMgr.allData).waves[r]; o;) {
                                    for (var s = 0; s < o.pointData.length; s++) for (var l = o.pointData[s], h = 0; h < l.batches.length; h++) {
                                        var u = l.batches[h], p = f.ConfigDataMgr.getData("ConfigEnemyData", u.enemyId);
                                        if (p && (M = f.ConfigDataMgr.getData("ConfigEnemyUIData", p.uId))) {
                                            var d = e.get(M.model) || 0;
                                            d += u.num;
                                            e.set(M.model, d);
                                        }
                                    }
                                    r++;
                                    if (!(o = m.waves[r])) {
                                        r = 10 * ++a + 1;
                                        if (o = m.waves[r]) {
                                            e = new Map();
                                            i.push(e);
                                        }
                                    }
                                }
                                for (s = 0; s < i.length; s++) i[s].forEach(function (e, i) {
                                    (t.get(i) || 0) < e && t.set(i, e);
                                });
                                break;

                            case b.GameType.Coin:
                                var m, y = (m = N.CoinWaveMgr.data).minGoldEnemyId, v = f.ConfigDataMgr.getData("ConfigEnemyData", y);
                                v && (M = f.ConfigDataMgr.getData("ConfigEnemyUIData", v.uId)) && t.set(M.model, m.minGoldPoints.length);
                                y = m.largeGoldEnemyId;
                                (v = f.ConfigDataMgr.getData("ConfigEnemyData", y)) && (M = f.ConfigDataMgr.getData("ConfigEnemyUIData", v.uId)) && t.set(M.model, m.largeGoldPoints.length);
                                y = m.snakeUnitEnemyId;
                                (v = f.ConfigDataMgr.getData("ConfigEnemyData", y)) && (M = f.ConfigDataMgr.getData("ConfigEnemyUIData", v.uId)) && t.set(M.model, m.snakeUnitPoints.length);
                                y = m.diamondEnemyId;
                                (v = f.ConfigDataMgr.getData("ConfigEnemyData", y)) && (M = f.ConfigDataMgr.getData("ConfigEnemyUIData", v.uId)) && t.set(M.model, m.diamondPoints.length);
                                y = m.crazyEnemyId;
                                if (v = f.ConfigDataMgr.getData("ConfigEnemyData", y)) {
                                    var M;
                                    (M = f.ConfigDataMgr.getData("ConfigEnemyUIData", v.uId)) && t.set(M.model, m.crazyPoints.length);
                                }
                                break;

                            case b.GameType.Boss:
                        }
                        n.m_enemyModelMap.clear();
                        n.m_enemyPoolMap.clear();
                        var S = c.FrameMgr.loadMgr.get("PfEnemy", cc.Prefab);
                        for (s = 0; s < n.m_enemyModelNameArr.length; s++) {
                            var k = n.m_enemyModelNameArr[s];
                            n.m_enemyModelMap.set(k, c.FrameMgr.loadMgr.get(k, cc.Prefab));
                            var C = [];
                            n.m_enemyPoolMap.set(k, C);
                            var w = t.get(k) || 0;
                            n.m_enemyPoolCount += w;
                            for (h = 0; h < w; h++) {
                                var T = cc.instantiate(S);
                                C.push(T);
                                T.getComponent(g.default).preLoad(k);
                            }
                        }
                        for (s = 0; s < n.m_bossEnemyModelArr.length; s++) {
                            k = n.m_bossEnemyModelArr[s];
                            n.m_enemyModelMap.set(k, c.FrameMgr.loadMgr.get(k, cc.Prefab));
                            C = [];
                            n.m_enemyPoolMap.set(k, C);
                            n.m_enemyPoolCount += 5;
                            for (h = 0; h < 5; h++) {
                                T = cc.instantiate(S);
                                C.push(T);
                                T.getComponent(g.default).preLoad(k);
                            }
                        }
                    })();
                    this.m_frontShadow = "enemy_1_0";
                    this.m_backShadow = "enemy_1_1";
                };
                e.prototype.init = function () {
                    var t = h.MapMgr.getWavePointDatas();
                    if (t) for (var e = 0, i = t.length; e < i; e++) this.m_pointDataMap.set(t[e].id, t[e]); else cc.error("没有出生点数据");
                    this.initShake();
                    this.initLockMask();
                };
                e.prototype.clear = function () {
                    this.m_enabled = !1;
                    this.m_pointDataMap.clear();
                    this.m_enemyAtlas = null;
                    this.m_normalAtlas = null;
                    this.m_enemyBlastAtlas = null;
                    this.m_enemyEffectAtlas = null;
                    this.m_blastAtlasMap.clear();
                    this.m_outScreenEnemy = [];
                    this.m_inScreenEnemy = [];
                    this.m_killedEnemyCount = 0;
                    this._extraEnemyCount = 0;
                    for (var t = 0; t < this.m_enemyArr.length; t++) {
                        this.m_enemyArr[t].isDead = !0;
                        this.m_enemyArr[t].node.destroy();
                    }
                    this.m_enemyArr.splice(0);
                    this.m_siblingArr.splice(0);
                    v.DYTools.clearArrayForComp(this.m_lockMaskArr);
                    v.DYTools.clearMapForNodeArr(this.m_enemyPoolMap);
                    this.m_enemyPoolCount = 0;
                    f.ConfigDataMgr.clearData("ConfigEnemyData", !1);
                    f.ConfigDataMgr.clearData("ConfigEnemyUIData", !1);
                    f.ConfigDataMgr.clearData("ConfigEnemyMoveData", !1);
                    f.ConfigDataMgr.clearData("ConfigEnemyFuncData", !1);
                    this.m_newEnemy.clear();
                    this.hurtImage = "";
                    this.hurtCount = 0;
                    x.default.clearAttr();
                };
                e.prototype.addBossEnemyModelName = function (t) {
                    this.m_bossEnemyModelArr.push(t);
                };
                e.prototype.releaseBossEnemy = function () {
                    for (var t = 0, e = this.m_bossEnemyModelArr; t < e.length; t++) {
                        var i = e[t];
                        this.m_enemyModelMap.delete(i);
                    }
                    this.m_bossEnemyModelArr.splice(0);
                };
                e.prototype.updateLogic = function (t) {
                    if (this.m_enabled) {
                        this.m_outScreenEnemy.splice(0);
                        this.m_inScreenEnemy.splice(0);
                        this.m_hasEnemyAlive = !1;
                        this.updateEnemy(t);
                        this.updateNewEnemy();
                        this.updateShake(t);
                        this.updateLockMask(t);
                        this.updateSiblingIndex();
                    }
                };
                e.prototype.updateEnemy = function (t) {
                    for (var e = this.m_enemyArr.length, i = 0; i < e; i++) {
                        var n = this.m_enemyArr[i];
                        this.spliceEnemy(n);
                        if (n.isDead) {
                            if (n.removeAble) {
                                this.putEnemyModel(n);
                                this.m_enemyArr.splice(i, 1);
                                this._checkEnemyOutScreen(n) ? v.DYTools.arrRemove(this.m_outScreenEnemy, n) : v.DYTools.arrRemove(this.m_inScreenEnemy, n);
                                i--;
                                e--;
                                C.GuideMgr.addGuideEnemy();
                                continue;
                            }
                        } else this.m_hasEnemyAlive = !0;
                        n.updateLogic(t);
                    }
                };
                e.prototype.updateNewEnemy = function () {
                    var t = this;
                    this.m_newEnemy.size > 0 && this.m_newEnemy.forEach(function (e, i) {
                        if (e.isActive && !e.isDead) {
                            D.CameraMgr.enabled = !1;
                            P.GameRuleMgr.gameBreak();
                            c.FrameMgr.loadMgr.loadPrefab("PopupNewEnemy");
                            var n = e.node.getPosition().sub(S.GValue.BattleCameraNode.getPosition());
                            n.x > -S.GValue.ViewCenter.x && n.x < S.GValue.ViewCenter.x && n.y < .6 * S.GValue.ViewCenter.y || D.CameraMgr.cameraFocus(e.node.getPosition().add(cc.v2(0, .6 * -S.GValue.ViewCenter.y)), null, .5);
                            (function () {
                                c.FrameMgr.audioMgr.playEffect("newEnemyFocus");
                                var n = new cc.Node("lock-new");
                                n.parent = l.EntityMgr.getEnemyLayer();
                                n.setPosition(e.node.getPosition());
                                13 == e.uiData.id && (n.scale = 1.5);
                                var a = new cc.Node("light");
                                a.parent = n;
                                a.addComponent(cc.Sprite).spriteFrame = t.enemyEffectAtlas.getSpriteFrame("new_light");
                                var r = new cc.Node("circle");
                                r.parent = n;
                                r.addComponent(cc.Sprite).spriteFrame = t.enemyEffectAtlas.getSpriteFrame("new_circle");
                                var h = .75 * E.GConfig.ActionInterval;
                                r.scale = 5.5;
                                r.angle = 125;
                                r.opacity = 0;
                                cc.tween(r).to(9 * h, {
                                    scale: 1,
                                    angle: 0,
                                    opacity: 255
                                }).to(5 * h, {
                                    scale: 1.25
                                }).to(6 * h, {
                                    scale: 1.1
                                }).to(9 * h, {
                                    scale: 1.25
                                }).to(6 * h, {
                                    scale: 1.1
                                }).call(function () {
                                    return o(t, void 0, void 0, function () {
                                        var t;
                                        return s(this, function (a) {
                                            switch (a.label) {
                                                case 0:
                                                    t = e.node.convertToWorldSpaceAR(cc.Vec2.ZERO);
                                                    return [4, y.GFunc.showNewEnemy({
                                                        enemyId: i,
                                                        scaleX: e.scaleX,
                                                        worldPos: t.sub(S.GValue.BattleCameraNode.getPosition())
                                                    })];

                                                case 1:
                                                    if (a.sent() == B.PopupShowResult.Fail) {
                                                        y.GFunc.showFloatTip({
                                                            txt: "资源下载失败，请检查网络后再试!"
                                                        });
                                                        D.CameraMgr.cameraFocus(F.SnakeMgr.getSnakePosition(), function () {
                                                            D.CameraMgr.enabled = !0;
                                                            P.GameRuleMgr.gameResume();
                                                        }, .5);
                                                    }
                                                    n.destroy();
                                                    this.m_newEnemy.delete(i);
                                                    return [2];
                                            }
                                        });
                                    });
                                }).to(9 * h, {
                                    scale: 1.25
                                }).to(5 * h, {
                                    scale: 1.15,
                                    opacity: 0
                                }).start();
                                a.opacity = 0;
                                cc.tween(a).delay(8 * h).to(h, {
                                    scale: 1.5,
                                    opacity: 255
                                }).to(5 * h, {
                                    scale: 1.8
                                }).to(6 * h, {
                                    scale: 1.5
                                }).to(9 * h, {
                                    scale: 1.8
                                }).to(6 * h, {
                                    scale: 1.5
                                }).to(9 * h, {
                                    scale: 1.8
                                }).to(5 * h, {
                                    scale: 1.7,
                                    opacity: 0
                                }).start();
                            })();
                        }
                    });
                };
                e.prototype.updateSiblingIndex = function () {
                    for (var t = [], e = this.m_siblingArr.concat(this.m_enemyArr), i = 0, n = e.length; i < n; i++) {
                        var a = e[i];
                        if (a && a.node) {
                            var r = 100 * Math.abs(Math.floor(a.node.y - 1e4)), o = a.node.x + r;
                            a.node.siIndex = o;
                            t.push(a.node);
                        }
                    }
                    t.sort(function (t, e) {
                        return t.siIndex - e.siIndex;
                    });
                    var s = 0;
                    for (i = 0, n = t.length; i < n; i++) t[i].setSiblingIndex(s++);
                };
                e.prototype.addSiblingEntity = function (t) {
                    this.m_siblingArr.push(t);
                };
                e.prototype.removeSiblingEntity = function (t) {
                    v.DYTools.arrRemove(this.m_siblingArr, t);
                };
                e.prototype.createWaveEnemy = function (t) {
                    var e = this.createNormalEnemy(t.enemyId);
                    this.setRandomProperty(e, t.hpRan, t.speedRan, t.scaleRan);
                    if (t.info) {
                        e.setShakeRatio(t.info.shakeRatio);
                        e.setLootArr(t.info.lootArr[t.info.index]);
                        this.setSpawnPos(e, t.info.pointId);
                    }
                    e.init();
                    return e;
                };
                e.prototype.createNormalEnemy = function (t) {
                    var e = f.ConfigDataMgr.getData("ConfigEnemyData", t), i = f.ConfigDataMgr.getData("ConfigEnemyUIData", e.uId), n = this.getEnemyModel(i.model);
                    n.onlyId = y.GFunc.onlyId;
                    n.create(e);
                    n.name = "enemy" + n.onlyId;
                    l.EntityMgr.addEnemy(n.node);
                    this.m_enemyArr.push(n);
                    if (S.GValue.enemyOnlyId) {
                        var a = new cc.Node("id");
                        a.parent = n.node;
                        a.addComponent(cc.Label).string = n.onlyId.toString();
                        a.color = cc.Color.RED;
                    }
                    n.uiData.introduction && T.GData.getEnemyInfo(n.uiData.id) && (this.m_newEnemy.get(n.uiData.id) || this.m_newEnemy.set(n.uiData.id, n));
                    return n;
                };
                e.prototype.setRandomProperty = function (t, e, i, n) {
                    if (e && 2 == e.length) {
                        t.maxHp *= e[0] + (e[1] - e[0]) * Math.random();
                        t.curHp = t.maxHp;
                    }
                    i && 2 == i.length && (t.velocity *= i[0] + (i[1] - i[0]) * Math.random());
                    if (n && 2 == n.length) {
                        var a = n[0] + (n[1] - n[0]) * Math.random();
                        t.nodeScale = a;
                    }
                    return t;
                };
                e.prototype.setSpawnPos = function (t, e) {
                    var i = this.m_pointDataMap.get(e), n = cc.Vec3.ZERO;
                    if (i) {
                        n = i.width || i.height ? cc.v3(i.x + (Math.random() - .5) * i.width, i.y + (Math.random() - .5) * i.height, 0) : cc.v3(i.x, i.y, 0);
                        if (null != i.angle) {
                            var a = i.angle + (Math.random() - .5) * i.angleRandom, r = cc.v2(1, 0).rotate(cc.misc.degreesToRadians(a));
                            t.startDir = r;
                        }
                    } else v.DYTools.error("没有出生点" + e + "的数据");
                    t.node.position = n;
                };
                e.prototype.spliceEnemy = function (t) {
                    t.isDead || (this._checkEnemyOutScreen(t) ? this.m_outScreenEnemy.push(t) : this.m_inScreenEnemy.push(t));
                };
                e.prototype._checkEnemyOutScreen = function (t) {
                    return (Math.abs(t.node.x - S.GValue.BattleCameraNode.x) - t.radius) * S.GValue.BattleCamera.zoomRatio > S.GValue.ViewCenter.x || (Math.abs(t.node.y - S.GValue.BattleCameraNode.y) - t.radius) * S.GValue.BattleCamera.zoomRatio > S.GValue.ViewCenter.y;
                };
                e.prototype.getPoolCount = function () {
                    return this.m_enemyPoolCount;
                };
                e.prototype.getPfEnemyModel = function (t) {
                    return this.m_enemyModelMap.get(t);
                };
                Object.defineProperty(e.prototype, "normalAtlas", {
                    get: function () {
                        return this.m_normalAtlas;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "enemyAtlas", {
                    get: function () {
                        return this.m_enemyAtlas;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "enemyBlastAtlas", {
                    get: function () {
                        return this.m_enemyBlastAtlas;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getBlastAtlas = function (t) {
                    return this.m_blastAtlasMap.get(t);
                };
                Object.defineProperty(e.prototype, "enemyEffectAtlas", {
                    get: function () {
                        return this.m_enemyEffectAtlas;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "frontShadow", {
                    get: function () {
                        return this.m_frontShadow;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "backShadow", {
                    get: function () {
                        return this.m_backShadow;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getEnemyModel = function (t) {
                    var e = this.m_enemyPoolMap.get(t);
                    e || (e = []);
                    var i = e.pop();
                    i || (i = cc.instantiate(c.FrameMgr.loadMgr.get("PfEnemy", cc.Prefab))).getComponent(g.default).preLoad(t);
                    return i.getComponent(g.default);
                };
                e.prototype.putEnemyModel = function (t) {
                    if (t) {
                        var e = this.m_enemyPoolMap.get(t.getName());
                        e || (e = []);
                        e.push(t.node);
                    }
                };
                Object.defineProperty(e.prototype, "enemys", {
                    get: function () {
                        return this.m_enemyArr;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "inScreenEnemys", {
                    get: function () {
                        return this.m_inScreenEnemy;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "outScreenEnemys", {
                    get: function () {
                        return this.m_outScreenEnemy;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "killedEnemyCount", {
                    get: function () {
                        return this.m_killedEnemyCount;
                    },
                    set: function (t) {
                        this.m_killedEnemyCount = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "extraEnemyCount", {
                    get: function () {
                        return this._extraEnemyCount;
                    },
                    set: function (t) {
                        this._extraEnemyCount = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "allEnemyDead", {
                    get: function () {
                        return this.killedEnemyCount >= this.extraEnemyCount + A.NormalWaveMgr.getTotalWaveEnemy();
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getPointData = function (t) {
                    return this.m_pointDataMap.get(t);
                };
                e.prototype.isEnemyOver = function () {
                    return 0 == this.m_enemyArr.length;
                };
                e.prototype.hasEnemyAlive = function () {
                    return this.m_hasEnemyAlive;
                };
                e.prototype.isNormalEnemyOver = function () {
                    return 0 == this.m_enemyArr.length;
                };
                e.prototype.getEnemyMoveData = function (t) {
                    return f.ConfigDataMgr.getData("ConfigEnemyMoveData", t);
                };
                e.prototype.getEnemyFirePointData = function (t, e) {
                    var i = f.ConfigDataMgr.getData("ConfigEnemyFuncData", t);
                    if (i && e) {
                        var n = parseInt(i.para);
                        if (n == n) {
                            var a = M.BulletMgr.getFireData(n);
                            if (a) return a;
                            v.DYTools.warn("子弹表里ID为", n, "的数据不存在");
                        }
                    }
                    return null;
                };
                e.prototype.getEnemyBulletData = function (t, e) {
                    var i = f.ConfigDataMgr.getData("ConfigEnemyData", e), n = f.ConfigDataMgr.getData("ConfigEnemyFuncData", t);
                    if (n && i) {
                        var a = Number(n.para);
                        if (a == a) {
                            var r = M.BulletMgr.getBulletData(a, i.atk);
                            if (r) return r;
                            v.DYTools.warn("子弹表里ID为", a, "的数据不存在");
                        }
                    }
                    return null;
                };
                e.prototype.letEnemysDie = function (t) {
                    if (t) for (var e = 0, i = this.m_enemyArr; e < i.length; e++) !(r = i[e]).isDead && t.contains(r.node.getPosition()) && r.setDead(); else for (var n = 0, a = this.m_enemyArr; n < a.length; n++) {
                        var r;
                        !(r = a[n]).isDead && r.setDead();
                    }
                };
                e.prototype.initShake = function () {
                    this._shakeTime = 0;
                    this._shakeEnemyNum = 0;
                    this._shakeEnemyArr.splice(0);
                    this._shakeDuration = .5;
                    c.FrameMgr.noticeMgr.on(b.EventTypeEnum.EnemyDie, this.addShake, this);
                };
                e.prototype.updateShake = function (t) {
                    this._shakeTime += t;
                    for (var e = 0; e < this._shakeEnemyArr.length; e++) {
                        var i = this._shakeEnemyArr[e];
                        if (!(this._shakeTime - i > this._shakeDuration)) break;
                        this._shakeEnemyNum--;
                        this._shakeEnemyArr.splice(e, 1);
                        e--;
                    }
                };
                e.prototype.addShake = function () {
                    this._shakeEnemyNum++;
                    this._shakeEnemyArr.push(this._shakeTime);
                };
                Object.defineProperty(e.prototype, "shakeNum", {
                    get: function () {
                        return this._shakeEnemyNum;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.initLockMask = function () {
                    this.m_pfLockMask = c.FrameMgr.loadMgr.get("EnemyLockMask", cc.Prefab);
                    var t = cc.instantiate(this.m_pfLockMask);
                    this.m_lockMask = t.getComponent(w.default);
                    this.m_lockMask.create();
                    t.parent = h.MapMgr.getPropLayer();
                    t.opacity = 0;
                };
                e.prototype.updateLockMask = function (t) {
                    this.m_lockMask && this.m_lockMask.updateLogic(t);
                };
                e.prototype.addLockMask = function (t, e, i) {
                    void 0 === e && (e = 1);
                    void 0 === i && (i = cc.Vec2.ZERO);
                    if (t) {
                        this.m_lockMask && this.m_lockMask.setTarget(t.node, e, i);
                        return this.m_lockMask;
                    }
                    return null;
                };
                e.prototype.removeLockMask = function () {
                    this.m_lockMask && this.m_lockMask.setTarget(null);
                };
                Object.defineProperty(e.prototype, "enabled", {
                    get: function () {
                        return this.m_enabled;
                    },
                    set: function (t) {
                        this.m_enabled = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                var i;
                e.instance = new i();
                return r([I], e);
            }(k.BattleFlowBase));
        i.default = G;
        i.EnemyMgr = G.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/config/ConfigEnemyData": "ConfigEnemyData",
        "../../../../data/config/ConfigEnemyFuncData": "ConfigEnemyFuncData",
        "../../../../data/config/ConfigEnemyMoveData": "ConfigEnemyMoveData",
        "../../../../data/config/ConfigEnemyUIData": "ConfigEnemyUIData",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../data/storage/GameData": "GameData",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/CameraManager": "CameraManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/manager/PopupManager": "PopupManager",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../../enemy/EnemyEntity": "EnemyEntity",
        "../../enemy/EnemyLockMask": "EnemyLockMask",
        "../../enemy/attr/EnemyBurrowAttr": "EnemyBurrowAttr",
        "../common/GuideManager": "GuideManager",
        "./BattleManager": "BattleManager",
        "./BulletManager": "BulletManager",
        "./EntityManager": "EntityManager",
        "./GameRuleManager": "GameRuleManager",
        "./MapManager": "MapManager",
        "./SnakeManager": "SnakeManager",
        "./wave/CoinWaveManager": "CoinWaveManager",
        "./wave/NormalWaveManager": "NormalWaveManager"
    }],
    EnemyModelComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "8811alK4idGkYN5qAQrW3h1", "EnemyModelComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameEnum"), s = t("../../../util/Tools"), c = t("../manager/battle/SnakeManager"), l = cc._decorator, h = l.ccclass, u = l.property, p = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.anim = null;
                e.frontNode = null;
                e.backNode = null;
                e.m_doubleFace = !0;
                e.m_front = !0;
                e.m_curAnim = "";
                e.m_lastAnim = "";
                e.m_animCompeleteCall = new Map();
                e.m_animEventCallMap = new Map();
                e.m_animState = null;
                e.m_animArr = [];
                e.eyeNode = null;
                e.m_eyePos = cc.Vec3.ZERO;
                e.rotateArr = [];
                e.hurtArr = [];
                e.m_entity = null;
                e.m_hurting = !1;
                return e;
            }
            e.prototype.onLoad = function () {
                this.eyeNode && (this.m_eyePos = this.eyeNode.position);
            };
            e.prototype.create = function (t) {
                this.m_entity = t;
                this.frontNode && this.backNode ? this.m_doubleFace = !0 : this.m_doubleFace = !1;
                for (var e = 0, i = this.anim.getClips(); e < i.length; e++) {
                    var n = i[e];
                    n && this.m_animArr.push(n.name);
                }
                this.show();
                this.anim.on("finished", this.onAnimFinished.bind(this), this);
            };
            e.prototype.reset = function () {
                this.m_curAnim = "";
            };
            e.prototype.init = function () {
                this.m_entity.node.on(o.EventTypeEnum.EnemyDirChange, this.onDirChange.bind(this), this);
                this._setRotateAngle(0);
                this.playAnim("idle");
            };
            e.prototype.clear = function () {
                this.m_curAnim = "";
                this.m_lastAnim = "";
                this.m_animCompeleteCall.clear();
                this.m_animEventCallMap.clear();
                this.m_animState = null;
            };
            e.prototype.updateLogic = function () {
                this.updateEyeRotate();
            };
            e.prototype.show = function (t) {
                void 0 === t && (t = !0);
                if (this.m_doubleFace) {
                    this.m_front = t;
                    this.frontNode.active = this.m_front;
                    this.backNode.active = !this.m_front;
                    return !0;
                }
                this.frontNode && (this.frontNode.active = !0);
                this.backNode && (this.backNode.active = !0);
                return !1;
            };
            e.prototype.playAnim = function (t, e) {
                this.m_animCompeleteCall.set(t, e);
                if (this.m_curAnim == t) return null;
                if (s.DYTools.arrContain(this.m_animArr, t)) {
                    if ("hurt" == t || "hurt2" == t) {
                        if ("move" == this.m_curAnim || "idle" == this.m_curAnim) {
                            this.m_lastAnim = this.m_curAnim;
                            this.m_curAnim = t;
                            this.m_animState = this.anim.play(t);
                            return this.m_animState;
                        }
                        return null;
                    }
                    this.m_lastAnim = this.m_curAnim;
                    this.m_curAnim = t;
                    this.m_animState = this.anim.play(t);
                    "run" == this.m_lastAnim && this._setRotateAngle(0);
                    "move" == t && (this.m_animState.speed = this.m_entity.data.moveRatio);
                    return this.m_animState;
                }
                e && e();
                return null;
            };
            e.prototype.setAnimEventCallback = function (t, e) {
                this.m_animEventCallMap.set(t, e);
            };
            e.prototype.addAnim = function (t, e) {
                this.anim.playAdditive(t);
                this.m_animCompeleteCall.set(t, e);
            };
            e.prototype.getName = function () {
                return this.node.name;
            };
            e.prototype.updateEyeRotate = function () {
                if (this.eyeNode) {
                    var t = c.SnakeMgr.getPlayerPos().sub(this.m_entity.node.position);
                    if (t.equals(cc.Vec3.ZERO)) this.eyeNode.position = this.m_eyePos; else {
                        var e = t.normalizeSelf().mul(this.m_entity.uiData.eyeRadius);
                        this.eyeNode.x = this.m_eyePos.x + (this.m_entity.scaleX > 0 ? e.x : -e.x);
                        this.eyeNode.y = this.m_eyePos.y + e.y;
                    }
                }
            };
            e.prototype.onAnimFinished = function (t, e) {
                e && ("hurt" != e.name && "hurt2" != e.name && "wall" != e.name || "hurt" != this.m_lastAnim && "hurt2" != this.m_lastAnim && this.playAnim(this.m_lastAnim));
                this.checkAnimCall(e ? e.name : this.m_curAnim);
            };
            e.prototype.onBullet = function () {
                var t = this.m_animEventCallMap.get("bullet");
                t && t();
                this.m_animEventCallMap.delete("bullet");
            };
            e.prototype.checkAnimCall = function (t) {
                var e = this.m_animCompeleteCall.get(t);
                e && e();
                this.m_animCompeleteCall.delete(t);
            };
            e.prototype.onDirChange = function (t) {
                if ("run" == this.m_curAnim) {
                    var e = cc.misc.radiansToDegrees(cc.v2(0, -1).signAngle(t));
                    this._setRotateAngle(e);
                }
            };
            e.prototype._setRotateAngle = function (t) {
                t = this.m_entity.scaleX > 0 ? t : -t;
                for (var e = 0; e < this.rotateArr.length; e++) this.rotateArr[e].angle = t;
            };
            e.prototype.playHurtAnim = function () {
                var t = this;
                if (!this.m_hurting) {
                    this.m_hurting = !0;
                    if (this.hurtArr.length > 0) for (var e = function (e) {
                        var n = i.hurtArr[e];
                        cc.tween(n).call(function () {
                            n.color = cc.color(249, 123, 211);
                        }).delay(.1).call(function () {
                            0 == e && (t.m_hurting = !1);
                        }).start();
                    }, i = this, n = 0; n < this.hurtArr.length; n++) e(n);
                }
            };
            r([u(cc.Animation)], e.prototype, "anim", void 0);
            r([u(cc.Node)], e.prototype, "frontNode", void 0);
            r([u(cc.Node)], e.prototype, "backNode", void 0);
            r([u(cc.Node)], e.prototype, "eyeNode", void 0);
            r([u({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "rotateArr", void 0);
            r([u({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "hurtArr", void 0);
            return r([h], e);
        }(cc.Component);
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../../../util/Tools": "Tools",
        "../manager/battle/SnakeManager": "SnakeManager"
    }],
    EnemyMoveBaseComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2b11fiH1DBE5rNh1+Hdllip", "EnemyMoveBaseComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("../../../../frame/manager/FrameManager"), c = t("../../common/CompBase"), l = t("../EnemyEntity"), h = t("../../manager/battle/MapManager"), u = cc._decorator, p = u.ccclass, d = (u.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._data = null;
                    e.m_moveSelf = !0;
                    e.m_updateSelf = !0;
                    e._speedFix = 1;
                    e._speed = cc.Vec2.ZERO;
                    e._rotateSpeed = 0;
                    e._rotateType = 0;
                    e.m_initVelocity = 0;
                    e._speedUpdateAble = !0;
                    e.m_customMove = !1;
                    e.m_customTime = 0;
                    e.m_enemy = null;
                    e.m_dir = cc.Vec2.ZERO;
                    e.m_curVelocity = 0;
                    e.m_accAble = !0;
                    e.m_accVelocity = 0;
                    return e;
                }
                e.prototype.init = function (t, e) {
                    this.initBase(e);
                    this._data = t;
                    e instanceof l.default && (this.m_enemy = e);
                    this.m_initVelocity = this._data.type == o.EnemyMoveType.None ? 0 : e.velocity;
                    this.m_initVelocity *= this._data.speedFix;
                    this.velocity = this.m_initVelocity;
                    this._rotateSpeed = e.rotateSpeed || 100;
                    this._rotateType = e.rotateType || 0;
                    this.entity.angle = 0;
                    this.initSpeed();
                    this.node.on(o.EventTypeEnum.ContactWall, this.onCollideWall.bind(this), this);
                    s.FrameMgr.noticeMgr.on(o.EventTypeEnum.EnemyCustomMove, this.onCustomMove, this);
                };
                e.prototype.initData = function () { };
                e.prototype.initSpeed = function () { };
                e.prototype.checkMoveAnim = function () {
                    this.m_moveSelf && (this.m_curVelocity > 1e-6 ? this.m_enemy.playAnimation("move") : this.m_enemy.playAnimation("idle"));
                };
                e.prototype.updateLogic = function (t) {
                    if (this.enabled) {
                        this.updateCustomMove(t);
                        this.onUpdate(t);
                        if (this.m_updateSelf) {
                            this.updateDir(t);
                            this.updateVelocity(t);
                        }
                        this.updatePos(t);
                    }
                };
                e.prototype.onUpdate = function () { };
                e.prototype.updateCustomMove = function (t) {
                    if (this.m_customMove) {
                        this.m_customTime -= t;
                        if (this.m_customTime < 0) {
                            this.entity.moveController && this.entity.moveController.setUpdateSelf(!0);
                            this.entity.funcController && (this.entity.funcController.enabled = !0);
                            this.velocity = this.m_initVelocity;
                            this.m_customMove = !1;
                        }
                    }
                };
                e.prototype.updateSpeed = function () { };
                e.prototype.updateDir = function () { };
                e.prototype.updateVelocity = function (t) {
                    this.m_accAble && 0 != this.m_accVelocity && this.setVelocity(this.m_curVelocity + this.m_accVelocity * t);
                };
                e.prototype.updatePos = function (t) {
                    if (0 != this.speed.x || 0 != this.speed.y) {
                        var e = h.MapMgr.isInMap(cc.v2(this.node.x, this.node.y)), i = cc.Vec3.ZERO;
                        i.x = this.node.x + this.speed.x * t;
                        i.y = this.node.y + this.speed.y * t;
                        i = this.adjustPos(i);
                        e && !h.MapMgr.isInMap(cc.v2(i.x, i.y)) || (this.node.position = i);
                    }
                };
                e.prototype.adjustPos = function (t) {
                    if (!this.entity.isSplit) return t;
                    var e = this.entity.getColliders();
                    if (!Array.isArray(e)) {
                        for (var i = e.other, n = null, a = 0; a < i.length; a++) if ((r = i[a]).type == o.ColliderType.Line) {
                            n || (n = []);
                            n.push(r);
                        }
                        if (n) {
                            var r, s = this.entity.radius, c = (r = n[0]).param, l = c[0], h = c[1], u = r.tag;
                            [].push(u);
                            switch (u) {
                                case 1:
                                    var p = 0;
                                    p = null != l ? this.node.x * l + h - s : r.data.start.y - s;
                                    t.y > p && (t.y = p);
                                    break;

                                case 2:
                                    p = 0;
                                    p = null != l ? this.node.x * l + h + s : r.data.start.y + s;
                                    t.y < p && (t.y = p);
                                    break;

                                case 3:
                                    var d = 0;
                                    d = null != l ? (this.node.y - h) / l + s : r.data.start.x + s;
                                    t.x < d && (t.x = d);
                                    break;

                                case 4:
                                    d = 0;
                                    d = null != l ? (this.node.y - h) / l - s : r.data.start.x - s;
                                    t.x > d && (t.x = d);
                            }
                        }
                    }
                    return t;
                };
                e.prototype.onCollideWall = function (t) {
                    if (this.m_customMove || this.m_updateSelf) {
                        t.dx && this.reverseX();
                        t.dy && this.reverseY();
                        t.dir && this.setDir(t.dir.normalize());
                        this.noticeDirChange();
                    }
                };
                e.prototype.reverseX = function () {
                    this._speed.x = -this.speed.x;
                    this.m_dir.x = -this.m_dir.x;
                    this.refreshFaceDir();
                };
                e.prototype.reverseY = function () {
                    this._speed.y = -this.speed.y;
                    this.m_dir.y = -this.m_dir.y;
                    this.refreshFaceDir();
                };
                e.prototype.refreshFaceDir = function () {
                    if (!this.speed.equals(cc.Vec2.ZERO)) if (0 == this._rotateType) this.entity.setFace && this.entity.setFace(this.speed); else {
                        var t = -cc.misc.radiansToDegrees(this.speed.signAngle(cc.v2(0, -1)));
                        t = (t + 360) % 360;
                        this.entity.angle = t;
                    }
                };
                e.prototype.reset = function () {
                    this._data = null;
                    this.m_dir = cc.Vec2.ZERO;
                    this._speed = cc.Vec2.ZERO;
                    this.m_initVelocity = 0;
                    this.noticeDirChange();
                    s.FrameMgr.noticeMgr.off(o.EventTypeEnum.EnemyCustomMove, this.onCustomMove, this);
                    this.m_customMove = !1;
                };
                e.prototype.onCustomMove = function (t) {
                    this.m_customMove = t[0];
                    this.m_customMove && (this.m_customTime = t[1]);
                };
                e.prototype.noticeDirChange = function () {
                    this.node.emit(o.EventTypeEnum.EnemyDirChange, this.speed);
                };
                e.prototype.setMoveSelf = function (t, e) {
                    void 0 === e && (e = !0);
                    this.m_moveSelf = t;
                    e && this.checkMoveAnim();
                };
                Object.defineProperty(e.prototype, "moveSelf", {
                    get: function () {
                        return this.m_moveSelf;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.setAccAble = function (t) {
                    this.m_accAble = t;
                };
                e.prototype.setAccVelocity = function (t) {
                    this.m_accVelocity = t;
                };
                e.prototype.setVelocity = function (t) {
                    if (this.velocity != t) {
                        this.velocity = t;
                        this.refreshSpeed();
                    }
                };
                e.prototype.setDir = function (t, e) {
                    void 0 === e && (e = !0);
                    this.m_dir = t;
                    e && this.refreshSpeed();
                };
                Object.defineProperty(e.prototype, "dir", {
                    get: function () {
                        return this.m_dir;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "speed", {
                    get: function () {
                        return this._speed;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.setSpeed = function (t, e) {
                    void 0 === e && (e = !0);
                    this._speed = t;
                    this.noticeDirChange();
                    this.checkMoveAnim();
                    e && this.refreshFaceDir();
                };
                e.prototype.refreshSpeed = function () {
                    this.setSpeed(this.m_dir.mul(this.getCurVelocity()));
                };
                Object.defineProperty(e.prototype, "velocity", {
                    get: function () {
                        return this.m_curVelocity;
                    },
                    set: function (t) {
                        this.m_curVelocity = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getCurVelocity = function () {
                    return this.entity ? this.m_curVelocity * this.entity.getSpeedFactor() : this.m_curVelocity;
                };
                Object.defineProperty(e.prototype, "initVelocity", {
                    get: function () {
                        return this.m_initVelocity;
                    },
                    set: function (t) {
                        this.m_initVelocity = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "updateSelf", {
                    get: function () {
                        return this.m_updateSelf;
                    },
                    set: function (t) {
                        this.m_updateSelf = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.setUpdateSelf = function (t, e) {
                    void 0 === e && (e = !1);
                    this.m_updateSelf = t;
                    if (t) {
                        this.dir.equals(cc.Vec2.ZERO) && this.setDir(cc.v2(0, 1).rotate(cc.misc.degreesToRadians(this.entity.angle)));
                        e || this.setVelocity(this.initVelocity);
                    }
                };
                return r([p], e);
            }(c.default));
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../common/CompBase": "CompBase",
        "../../manager/battle/MapManager": "MapManager",
        "../EnemyEntity": "EnemyEntity"
    }],
    EnemyMoveController: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "16df5u9j3NFLaMnPNBdy3nN", "EnemyMoveController");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../common/CompBase"), s = t("../EnemyEntity"), c = t("./EnemyMoveBaseComp"), l = t("../../../../util/Tools"), h = t("../../../../data/manager/ConfigDataManager"), u = t("../../../../config/GameEnum"), p = t("./EnemyAreaMoveComp"), d = t("./EnemyPathMoveComp"), f = t("./EnemyColWallComp"), m = t("./EnemyPursuitComp"), g = t("./EnemyRandomMoveComp"), _ = t("./EnemyCircleMoveComp"), y = t("./EnemyAreaPatrolMoveComp"), v = t("./EnemyFollowPAreaPatrolComp"), b = cc._decorator, M = b.ccclass, S = (b.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._moveDatas = [];
                    e._moveComp = null;
                    e._colWallComp = null;
                    e._entityUI = null;
                    e._enemyEntity = null;
                    e._curIndex = 0;
                    e._curMoveType = 0;
                    e._curMoveData = null;
                    e._time = 0;
                    e._repeateTimes = 0;
                    e._isMoveFinish = !1;
                    e._isPathMove = !1;
                    return e;
                }
                e.prototype.init = function (t, e, i) {
                    this.initBase(t);
                    this._entityUI = i;
                    this.node.on(u.EventTypeEnum.EnemyMove, this.onEnemyMoveFinish.bind(this), this);
                    this.initData(e);
                    this.setComp();
                };
                e.prototype.setEnemyEntity = function (t) {
                    this._enemyEntity = t;
                };
                e.prototype.onEnable = function () {
                    if (this._moveComp) {
                        this._moveComp.checkMoveAnim();
                        this._moveComp.refreshFaceDir();
                    }
                };
                e.prototype.onDisable = function () { };
                e.prototype.initData = function (t) {
                    for (var e = t.split("#"), i = 0, n = e.length; i < n; i++) {
                        var a = l.DYTools.stringToNumber(e[i], "*"), r = new k();
                        r.id = a[0];
                        2 == a.length && (r.time = a[1]);
                        this._moveDatas.push(r);
                    }
                };
                e.prototype.setComp = function () {
                    this.getCurMove();
                    this._isPathMove = !1;
                    var t = this._curMoveData.id, e = h.ConfigDataMgr.getData("ConfigEnemyMoveData", t);
                    if (e) {
                        this._moveComp && this.entity instanceof s.default && (this.entity.startDir = this._moveComp.speed);
                        this._curMoveType = e.type;
                        this._colWallComp || (this._colWallComp = new f.default());
                        this._colWallComp.init(this.isType(u.EnemyMoveType.Random), this.entity);
                        this._colWallComp.enabled = !0;
                        this.changeMoveComp(this._curMoveType, e);
                    }
                };
                e.prototype.changeMoveComp = function (t, e) {
                    this._moveComp && delete this._moveComp;
                    this._curMoveType = t;
                    switch (this._curMoveType) {
                        case u.EnemyMoveType.Path:
                            this._moveComp = new d.default();
                            this._isPathMove = !0;
                            break;

                        case u.EnemyMoveType.Area:
                            this._moveComp = new p.default();
                            break;

                        case u.EnemyMoveType.FollowP:
                            this._moveComp = new m.default();
                            break;

                        case u.EnemyMoveType.Random:
                            this._moveComp = new g.default();
                            break;

                        case u.EnemyMoveType.Circle:
                            this._moveComp = new _.default();
                            break;

                        case u.EnemyMoveType.AreaPatrol:
                            this._moveComp = new y.default();
                            break;

                        case u.EnemyMoveType.FollowPAreaPatrol:
                            this._moveComp = new v.default();
                            break;

                        default:
                            this._moveComp = new c.default();
                    }
                    this._moveComp.init(e, this.entity, this._entityUI);
                    this._moveComp.enabled = !0;
                };
                e.prototype.getCurMove = function () {
                    if (this._curIndex >= this._moveDatas.length) this._curMoveData.time = -1; else {
                        this._curMoveData = this._moveDatas[this._curIndex];
                        this._curIndex++;
                    }
                };
                e.prototype.updateLogic = function (t) {
                    if (this.enabled && !this._enemyEntity.isInFrostEffect()) {
                        this.entity.updateReduceSpeedLogic(t) && this._moveComp && this._moveComp.refreshSpeed();
                        this._colWallComp && this._colWallComp.updateLogic(t);
                        this._moveComp && this._moveComp.updateLogic(t);
                        if (this._isPathMove) {
                            if (this._isMoveFinish) {
                                this._repeateTimes += 1;
                                if (this._curMoveData.time < 0 || this._repeateTimes >= this._curMoveData.time) {
                                    this.setComp();
                                    this._repeateTimes = 0;
                                    this._isMoveFinish = !1;
                                }
                            }
                        } else {
                            if (this._curMoveData.time < 0) return;
                            if (this.updateSelf) {
                                this._time += t;
                                if (this._time >= this._curMoveData.time) {
                                    this.setComp();
                                    this._time = 0;
                                }
                            }
                        }
                    }
                };
                e.prototype.onEnemyMoveFinish = function (t, e) {
                    e || (this._isMoveFinish = !0);
                };
                e.prototype.onCollideWall = function (t, e) {
                    this._colWallComp && this._colWallComp.onCollideWall(t, e);
                };
                e.prototype.onCollideBlock = function (t, e) {
                    this._colWallComp && this._colWallComp.onCollideBlock(t, e);
                };
                e.prototype.clear = function () {
                    this._moveDatas = [];
                    delete this._moveComp;
                    this._moveComp = null;
                    this.enabled = !1;
                    this._time = 0;
                    this._repeateTimes = 0;
                    this._isMoveFinish = !1;
                    this._curIndex = 0;
                    this._curMoveData = null;
                    this._curMoveType = 0;
                    this.node.targetOff(this);
                };
                e.prototype.isType = function (t) {
                    if (Array.isArray(t)) {
                        for (var e = 0, i = t.length; e < i; e++) if (this._curMoveType == t[e]) return !0;
                        return !1;
                    }
                    return this._curMoveType == t;
                };
                e.prototype.getSpeed = function () {
                    return this._moveComp.speed || cc.Vec2.ZERO;
                };
                Object.defineProperty(e.prototype, "moveSelf", {
                    get: function () {
                        return this._moveComp.moveSelf;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.setMoveSelf = function (t, e) {
                    void 0 === e && (e = !0);
                    this._moveComp.setMoveSelf(t, e);
                };
                e.prototype.setDir = function (t, e) {
                    void 0 === e && (e = !0);
                    this._moveComp.setDir(t, e);
                };
                e.prototype.getDir = function () {
                    return this._moveComp.dir;
                };
                e.prototype.setVelocity = function (t) {
                    this._moveComp.setVelocity(t);
                };
                e.prototype.getVelocity = function () {
                    return this._moveComp.velocity;
                };
                e.prototype.getCurVelocity = function () {
                    return this._moveComp.getCurVelocity();
                };
                e.prototype.setAccVelocity = function (t) {
                    this._moveComp.setAccVelocity(t);
                };
                e.prototype.getInitVelocity = function () {
                    return this._moveComp.initVelocity;
                };
                Object.defineProperty(e.prototype, "updateSelf", {
                    get: function () {
                        return this._moveComp.updateSelf;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.setUpdateSelf = function (t, e) {
                    void 0 === e && (e = !1);
                    this._moveComp.setUpdateSelf(t, e);
                    this._colWallComp.elastic = !t || this.isType(u.EnemyMoveType.Random);
                };
                Object.defineProperty(e.prototype, "elacticAble", {
                    set: function (t) {
                        this._colWallComp && (this._colWallComp.elacticAble = t);
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "elactic", {
                    get: function () {
                        return this._colWallComp && this._colWallComp.elastic;
                    },
                    set: function (t) {
                        this._colWallComp && (this._colWallComp.elastic = t);
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.clearWall = function () {
                    this._colWallComp && this._colWallComp.clear();
                };
                e.prototype.setElactic = function (t) {
                    this.elacticAble = t;
                    this.elactic = t;
                };
                e.prototype.getMoveComp = function () {
                    return this._moveComp;
                };
                return r([M], e);
            }(o.default));
        i.default = S;
        var k = function () {
            this.time = -1;
        };
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../util/Tools": "Tools",
        "../../common/CompBase": "CompBase",
        "../EnemyEntity": "EnemyEntity",
        "./EnemyAreaMoveComp": "EnemyAreaMoveComp",
        "./EnemyAreaPatrolMoveComp": "EnemyAreaPatrolMoveComp",
        "./EnemyCircleMoveComp": "EnemyCircleMoveComp",
        "./EnemyColWallComp": "EnemyColWallComp",
        "./EnemyFollowPAreaPatrolComp": "EnemyFollowPAreaPatrolComp",
        "./EnemyMoveBaseComp": "EnemyMoveBaseComp",
        "./EnemyPathMoveComp": "EnemyPathMoveComp",
        "./EnemyPursuitComp": "EnemyPursuitComp",
        "./EnemyRandomMoveComp": "EnemyRandomMoveComp"
    }],
    EnemyPathMoveComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1bd7bJzqAdPqZ5App0guJUD", "EnemyPathMoveComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("./EnemyMoveBaseComp"), c = cc._decorator, l = c.ccclass, h = (c.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.pathData = null;
                    e.isPathEnd = !1;
                    e.pathRepeatTimes = 0;
                    e.curPointIndex = 0;
                    e.curPointData = null;
                    e.m_curEndPos = cc.Vec2.ZERO;
                    e.pointRepeatTimes = 0;
                    e.pointDelayTime = -1;
                    e.destAngle = 0;
                    e.totalLength = 0;
                    e.curMoveDis = 0;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.pathData = e.pathData;
                    if (0 == this.pathData.pointArr.length) {
                        cc.error("没有路点数据");
                        this.isPathEnd = !0;
                    } else this.setCurPointData();
                };
                e.prototype.setCurPointData = function () {
                    if (this.curPointIndex >= this.pathData.pointArr.length) {
                        this.curPointIndex = 0;
                        this.pathRepeatTimes += 1;
                        if (this.pathData.repeat > 0 && this.pathRepeatTimes >= this.pathData.repeat) {
                            this.isPathEnd = !0;
                            this.node.emit(o.EventTypeEnum.EnemyMove, o.EnemyMoveType.Path, !1);
                            return;
                        }
                    }
                    this.curPointData = this.pathData.pointArr[this.curPointIndex];
                    this.totalLength = this.curPointData.dir.mag();
                    this.setDir(this.curPointData.dir.normalize());
                    this.m_curEndPos = this.node.getPosition().add(this.curPointData.dir);
                    this.pointRepeatTimes = 0;
                    this.curMoveDis = 0;
                };
                e.prototype.updatePos = function (e) {
                    var i = this.node.getPosition();
                    t.prototype.updatePos.call(this, e);
                    if (this.m_updateSelf && !this.dir.equals(cc.Vec2.ZERO)) {
                        var n = this.node.getPosition();
                        if ((this.m_curEndPos.x - n.x) * (this.m_curEndPos.x - i.x) < -1e-6 || (this.m_curEndPos.y - n.y) * (this.m_curEndPos.y - i.y) < -1e-6) {
                            this.pointDelayTime = this.curPointData.delay || 0;
                            this.setDir(cc.Vec2.ZERO);
                        }
                    }
                };
                e.prototype.onUpdate = function (t) {
                    if (this.m_updateSelf) {
                        if (this.isPathEnd) return;
                        if (!this.updatePointTime(t)) return;
                        this.updateRotate(t);
                    }
                };
                e.prototype.updateRotate = function (t) {
                    this.entity.angle;
                    var e = (this.destAngle - this.entity.angle + 360) % 360;
                    if (0 != e) {
                        var i = this._rotateSpeed * t;
                        e < 180 ? i > e && this.destAngle : i > 360 - e && this.destAngle;
                    }
                };
                e.prototype.updatePointTime = function (t) {
                    if (this.pointDelayTime >= 0) {
                        this.pointDelayTime -= t;
                        if (!(this.pointDelayTime < 0)) return !1;
                        this.pointRepeatTimes += 1;
                        if (this.pointRepeatTimes >= this.curPointData.repeat) {
                            this.curPointIndex += 1;
                            this.setCurPointData();
                        } else this.curMoveDis = 0;
                    }
                    return !0;
                };
                e.prototype.reset = function () {
                    t.prototype.reset.call(this);
                    this.isPathEnd = !1;
                    this.pathRepeatTimes = 0;
                    this.curPointIndex = 0;
                    this.curPointData = null;
                    this.pointRepeatTimes = 0;
                    this.pointDelayTime = -1;
                    this.destAngle = 0;
                    this.totalLength = 0;
                    this.curMoveDis = 0;
                };
                e.prototype.setUpdateSelf = function (t, e) {
                    void 0 === e && (e = !1);
                    this.updateSelf = t;
                    t && this.setVelocity(this.initVelocity);
                };
                return r([l], e);
            }(s.default));
        i.default = h;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "./EnemyMoveBaseComp": "EnemyMoveBaseComp"
    }],
    EnemyPursuitComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "0d8d9/go+NDia4HD8g4+d3r", "EnemyPursuitComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../../util/Tools"), o = t("../../manager/battle/MapManager"), s = t("../../manager/battle/SnakeManager"), c = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_duration = .5;
                e.m_time = 0;
                e.m_endPos = cc.Vec2.ZERO;
                e.m_destPos = null;
                e.m_destPosArr = [];
                return e;
            }
            e.prototype.onInit = function () {
                this.m_destPos = null;
                this.m_destPosArr = [];
                this.m_time = 0;
                this.m_duration = .1 * r.DYTools.random_int(5, 9);
            };
            e.prototype.updateDir = function (t) {
                this.m_time += t;
                if (!this.m_destPos || this.m_time > this.m_duration) {
                    this.setDir(this.getWayDir());
                    this.m_time = 0;
                }
            };
            e.prototype.updatePos = function (e) {
                if (this.m_updateSelf) {
                    if (this.speed) {
                        var i = this.speed.mul(e);
                        if (0 == i.x && 0 == i.y) return;
                        var n = this.node.x + i.x, a = this.node.y + i.y;
                        if (this.node.y != this.m_destPos.y) {
                            if ((this.node.y - this.m_destPos.y) * (a - this.m_destPos.y) <= -1e-6) {
                                n = this.m_destPos.x;
                                a = this.m_destPos.y;
                                this.nextPathPoints();
                            }
                        } else if (this.node.x != this.m_destPos.x) {
                            if ((this.node.x - this.m_destPos.x) * (n - this.m_destPos.x) <= -1e-6) {
                                n = this.m_destPos.x;
                                a = this.m_destPos.y;
                                this.nextPathPoints();
                            }
                        } else {
                            this.nextPathPoints();
                            n = this.node.x;
                            a = this.node.y;
                        }
                        this.node.x = n;
                        this.node.y = a;
                    }
                } else t.prototype.updatePos.call(this, e);
            };
            e.prototype.firstPathPoint = function () {
                if (this.m_destPosArr.length > 0) {
                    this.m_destPos = this.m_destPosArr[0];
                    this.m_destPosArr.splice(0, 1);
                }
            };
            e.prototype.nextPathPoints = function () {
                if (this.m_destPosArr.length > 0) {
                    this.m_destPos = this.m_destPosArr[0];
                    this.m_destPosArr.splice(0, 1);
                } else this.m_time = this.m_duration + 1;
            };
            e.prototype.getWayDir = function () {
                var t = cc.Vec2.ZERO, e = cc.v2(this.node.x, this.node.y);
                this.m_endPos.x = s.SnakeMgr.getPlayerPos().x;
                this.m_endPos.y = s.SnakeMgr.getPlayerPos().y;
                this.m_destPos = cc.Vec2.ZERO;
                if (o.MapMgr.isCrossObstruct(e, this.m_endPos)) {
                    this.m_destPosArr = o.MapMgr.getPathPoints(e, this.m_endPos);
                    if (0 == this.m_destPosArr.length) {
                        var i = e.x + r.DYTools.random_int(-200, 200), n = e.y + r.DYTools.random_int(-200, 200);
                        this.m_endPos = o.MapMgr.getEndPos(e, cc.v2(i, n));
                        t = this.m_endPos.sub(e);
                        this.m_destPos = this.m_endPos;
                    } else {
                        this.firstPathPoint();
                        t.x = this.m_destPos.x - this.node.x;
                        t.y = this.m_destPos.y - this.node.y;
                    }
                } else {
                    t = this.m_endPos.sub(e);
                    this.m_destPos = this.m_endPos;
                }
                return t.normalize();
            };
            e.prototype.setUpdateSelf = function (t, e) {
                void 0 === e && (e = !1);
                this.m_updateSelf = t;
                if (t) {
                    this.setDir(this.getWayDir());
                    this.m_time = 0;
                    e || this.setVelocity(this.initVelocity);
                }
            };
            return e;
        }(t("./EnemyMoveBaseComp").default);
        i.default = c;
        cc._RF.pop();
    }, {
        "../../../../util/Tools": "Tools",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyMoveBaseComp": "EnemyMoveBaseComp"
    }],
    EnemyRandomMoveComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "4f886RZEXlMmqzYB1Lo3Yp/", "EnemyRandomMoveComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./EnemyMoveBaseComp"), s = cc._decorator, c = s.ccclass, l = (s.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._startDir = cc.Vec2.ZERO;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    this._startDir = i.startDir;
                    t.prototype.init.call(this, e, i, n);
                };
                e.prototype.initSpeed = function () {
                    if (this._startDir.equals(cc.Vec2.ZERO)) {
                        var t = cc.v2(Math.random() - .5, Math.random() - .5).normalize();
                        this.setDir(t);
                    } else this.setDir(this._startDir.normalize());
                };
                return r([c], e);
            }(o.default));
        i.default = l;
        cc._RF.pop();
    }, {
        "./EnemyMoveBaseComp": "EnemyMoveBaseComp"
    }],
    EnemyReviveAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1a49fNa5yhDhod1/gfv3tiu", "EnemyReviveAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o, s = t("../../../../data/manager/ConfigDataManager"), c = t("../../../../util/Tools"), l = t("./EnemyAttrBase"), h = t("../../../../config/GameEnum"), u = t("../../../../config/GameConst"), p = t("../../../../frame/ui/FrameAnim"), d = t("../../manager/battle/EnemyManager"), f = t("../../../../config/GameConfig"), m = t("../../../../frame/manager/FrameManager"), g = cc._decorator, _ = g.ccclass, y = (g.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_enemyEntity = null;
                    e.m_state = 0;
                    e.m_maxReviveTimes = 1;
                    e.m_curReviveTimes = 0;
                    e.m_lastTime = 0;
                    e.m_curTime = 0;
                    e.m_hpFactor = 1;
                    e.m_preMaxHp = 0;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.m_enemyEntity = i;
                    this.m_state = o.None;
                    var a = s.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this.type = a.type;
                    var r = c.DYTools.stringToNumber(a.para, "*"), l = r[0], h = r[1], u = r[2];
                    this.m_maxReviveTimes = l;
                    this.m_lastTime = h;
                    this.m_hpFactor = u;
                    this.m_curReviveTimes = 0;
                    this.m_preMaxHp = 0;
                };
                e.prototype.updateLogic = function (t) {
                    var e = this;
                    if (this.enabled) switch (this.m_state) {
                        case o.None:
                            break;

                        case o.Reviveing:
                            this.m_curTime += t;
                            this.m_curTime >= this.m_lastTime && (this.m_state = o.ReviveEnd);
                            break;

                        case o.ReviveEnd:
                            this.m_state = o.None;
                            this.m_enemyEntity.playAnimation("bandage_revive", function () {
                                e.onFuncEnd();
                                var t = e.m_preMaxHp, i = t;
                                e.m_enemyEntity.maxHp = t;
                                e.m_enemyEntity.curHp = i;
                            });
                            var i = d.EnemyMgr.getBlastAtlas(this.m_enemy.uiData.blastAtlas), n = cc.instantiate(u.GValue.pfFrameAnim), a = n.getComponent(p.default);
                            n.parent = this.m_enemyEntity.node.parent;
                            n.setPosition(this.m_enemyEntity.node.getPosition().add(cc.v2(0, 10)));
                            n.scale = 1.5;
                            a.init(i, "anim_enemy_bandage_revive_", 7, 2 * f.GConfig.ActionInterval);
                            a.setStopCall(function () {
                                a.destroy();
                            });
                            a.play(1);
                    }
                };
                e.prototype.funcTrigger = function () {
                    if (this.m_maxReviveTimes >= 0 && this.m_curReviveTimes >= this.m_maxReviveTimes) return !1;
                    if (this.m_state == o.Reviveing) return !1;
                    this.m_curReviveTimes += 1;
                    this.m_preMaxHp <= 0 && (this.m_preMaxHp = this.m_enemyEntity.maxHp);
                    var t = this.m_preMaxHp * this.m_hpFactor;
                    this.m_enemyEntity.maxHp = t;
                    this.m_enemyEntity.curHp = t;
                    this.m_enemyEntity.setIsRevive(!0);
                    this.onFuncStart();
                    this.m_curTime = 0;
                    this.m_state = o.Reviveing;
                    m.FrameMgr.audioMgr.playEffect("enemy_revive");
                    this.m_enemyEntity.playAnimation("revive_ready");
                    return !0;
                };
                e.prototype.funcCancel = function () {
                    this.m_enemyEntity.getIsRevive() && this.onFuncEnd();
                };
                e.prototype.reset = function () {
                    this.m_state = o.None;
                    this.m_enemyEntity.setIsRevive(!1);
                };
                e.prototype.clear = function () {
                    this.node.targetOff(this);
                    this.m_enemyEntity.setIsRevive(!1);
                };
                e.prototype.onFuncEnd = function () {
                    t.prototype.onFuncEnd.call(this);
                    this.node.emit(h.EventTypeEnum.EnemyMoveRefresh);
                    this.m_enemyEntity.playAnimation("move");
                    this.m_state = o.None;
                    this.m_enemy.setShadowJumpOffset(cc.v2(0, 0));
                    this.entityMoveComp.enabled = !0;
                    this.m_enemyEntity.setIsRevive(!1);
                };
                return r([_], e);
            }(l.default));
        i.default = y;
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Reviveing = 1] = "Reviveing";
            t[t.ReviveEnd = 2] = "ReviveEnd";
        })(o || (o = {}));
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemyRoleComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b3e8a47XOZHI6wOFLpcge6h", "EnemyRoleComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = cc._decorator, s = o.ccclass, c = (o.property, function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            e.prototype.create = function () { };
            return r([s], e);
        }(cc.Component));
        i.default = c;
        cc._RF.pop();
    }, {}],
    EnemySplitAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "835afa4UNFOI4zI4txjlp0H", "EnemySplitAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("../../../../data/manager/ConfigDataManager"), c = t("../../../../frame/manager/FrameManager"), l = t("../../../../util/Tools"), h = t("../../manager/battle/EnemyManager"), u = t("../../manager/battle/SnakeManager"), p = t("./EnemyAttrBase"), d = cc._decorator, f = d.ccclass, m = (d.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._createInfo = [];
                    e._pointList = [];
                    e._checkTimes = 0;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.node.on("onDie", this.onDie, this);
                    var a = s.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this._createInfo = [];
                    if (a && a.para) for (var r = a.para.split("#"), o = 0; o < r.length; o++) {
                        var c = r[o].split("*");
                        if (c.length > 3) {
                            var l = Number(c[0]), h = Number(c[1]), u = Number(c[2]), p = Number(c[3]), d = Number(c[4]), f = Number(c[5]), m = Number(c[6]);
                            this._createInfo.push({
                                id: l,
                                count: h,
                                angle: u,
                                range: p,
                                hp: d,
                                speed: f,
                                size: m
                            });
                        }
                    }
                };
                e.prototype.onDie = function (t) {
                    var e = this;
                    void 0 === t && (t = null);
                    this.node.off("onDie", this.onDie, this);
                    this.m_enemy.playAnimation("split", function () {
                        t && t();
                    });
                    this._pointList = [];
                    var i = u.SnakeMgr.getSnakeHead().node, n = l.DYTools.getAngle(i.position, this.node.position);
                    n = n == n ? n : 0;
                    this._createInfo.forEach(function (t) {
                        var i = t.count, a = t.id;
                        e._minAngle = n - t.angle / 2;
                        e._maxAngle = n + t.angle / 2;
                        e._range = t.range;
                        for (var r = 0; r < i; r++) {
                            var o = h.EnemyMgr.createNormalEnemy(a);
                            e._setEnemyPos(o);
                            h.EnemyMgr.setRandomProperty(o, [t.hp, t.hp], [t.speed, t.speed], [t.size, t.size]);
                            o.init();
                            o.moveController.setUpdateSelf(!1);
                            o.moveController.setVelocity(0);
                            o.funcController.enabled = !1;
                            o.moveController.elacticAble = !0;
                            o.isCreatedByEnemy = !0;
                            e._checkTimes = 0;
                            var s = e._getPoint(e._minAngle, e._maxAngle, e._range);
                            s = e._checkPoint(o, s);
                            e._enemyFlyOut(o, s);
                        }
                        h.EnemyMgr.extraEnemyCount += i;
                    });
                };
                e.prototype._setEnemyPos = function (t) {
                    t.node.x = this.node.x;
                    t.node.y = this.node.y;
                };
                e.prototype._getPoint = function (t, e, i) {
                    var n = l.DYTools.random_int(t, e), a = l.DYTools.random_int(1, i), r = cc.v2(0, a).rotate(cc.misc.degreesToRadians(n));
                    return cc.v2(this.node.x + r.x, this.node.y + r.y);
                };
                e.prototype._checkPoint = function (t, e) {
                    this._checkTimes++;
                    var i = cc.rect(e.x, e.y, t.uiNode.width, t.uiNode.height);
                    if (!this._checkOverlap(i) || this._checkTimes >= 3) {
                        this._pointList.push(i);
                        return e;
                    }
                    var n = this._getPoint(this._minAngle, this._maxAngle, this._range);
                    return this._checkPoint(t, n);
                };
                e.prototype._checkOverlap = function (t) {
                    for (var e = 0; e < this._pointList.length; e++) {
                        var i = this._pointList[e];
                        if (cc.Intersection.rectRect(i, t)) return !0;
                    }
                    return !1;
                };
                e.prototype._enemyFlyOut = function (t, e) {
                    var i = l.DYTools.getAngle(t.node.position, e);
                    i = i == i ? i : this.entity.angle;
                    var n = l.DYTools.getDisForVec(t.node, e) / .5, a = cc.v2(e).sub(t.node.getPosition());
                    t.moveController.setUpdateSelf(!1);
                    t.moveController.setDir(a.normalizeSelf());
                    t.moveController.setVelocity(n);
                    t.funcController.enabled = !1;
                    c.FrameMgr.noticeMgr.emit(o.EventTypeEnum.EnemyCustomMove, [!0, .5]);
                    t.scheduleOnce(function () {
                        t.startBattle();
                    }, .4);
                };
                return r([f], e);
            }(p.default));
        i.default = m;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemySprintAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "f1004NGRC9HPIAGsZyHpKHl", "EnemySprintAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../manager/battle/SnakeManager"), s = t("../../../../data/manager/ConfigDataManager"), c = t("../../../../util/Tools"), l = t("./EnemyAttrBase"), h = t("../../../../config/GameEnum"), u = t("../../manager/battle/MapManager"), p = t("../../manager/battle/EnemyManager"), d = t("../../../../frame/manager/FrameManager"), f = cc._decorator, m = f.ccclass, g = (f.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_enemyEntity = null;
                    e._warnLine = null;
                    e.m_warnPosDiff = cc.Vec2.ZERO;
                    e.m_state = 0;
                    e._dashVelocity = 0;
                    e._atkRatio = 0;
                    e._dashCD = 0;
                    e._dashTime = 0;
                    e._dashRange = 0;
                    e._speed = cc.v2(1, 0);
                    e.m_dir = cc.Vec2.ZERO;
                    e._normalVelocity = 0;
                    e._time = 0;
                    e._lastTime = 0;
                    e._isCollideWall = !1;
                    e.m_elactic = !1;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.m_enemyEntity = i;
                    this.m_state = 0;
                    this._isCollideWall = !1;
                    var a = s.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                    this.type = a.type;
                    var r = c.DYTools.stringToNumber(a.para, "*"), o = r[0], l = r[1], u = r[2], p = r[3];
                    this._atkRatio = 1;
                    this._dashCD = o;
                    this._dashVelocity = l;
                    this._dashTime = u;
                    this._dashRange = p;
                    this.node.on(h.EventTypeEnum.ContactWall, this.onCollideWall.bind(this), this);
                };
                e.prototype.updateLogic = function (t) {
                    var e = this;
                    if (this.enabled) switch (this.m_state) {
                        case 0:
                            this._time += t;
                            if (this._time > this._dashCD && o.SnakeMgr.getSnakeHead().node.position.sub(this.entity.node.position).mag() <= this._dashRange && this.isSpeedToSnake2()) {
                                this.m_dir = this.entityMoveComp.getDir();
                                this._normalVelocity = this.entityMoveComp.getCurVelocity();
                                this._speed = this.m_dir.mul(this._dashVelocity);
                                this.onFuncStart();
                                this.m_elactic = this.m_enemyEntity.moveController.elactic;
                                this.m_state = 1;
                                this._time = 0;
                                this._lastTime = 0;
                                this.entityMoveComp.setVelocity(0);
                                this.m_enemyEntity.playAnimation("ready", function () {
                                    e.m_enemyEntity.playAnimation("run");
                                    d.FrameMgr.audioMgr.playEffect("enemy_sprint");
                                    e.m_enemyEntity.moveController.setElactic(!0);
                                    e.m_state = 2;
                                    e._isCollideWall = !1;
                                    e.entityMoveComp.setVelocity(e._dashVelocity);
                                });
                            }
                            break;

                        case 2:
                            this._isCollideWall || this.entityMoveComp.setVelocity(this._dashVelocity);
                            this._lastTime += t;
                            if (this._lastTime >= this._dashTime) {
                                this.onFuncEnd();
                                this.m_enemyEntity.moveController.setElactic(this.m_elactic);
                            }
                            if (this._warnLine) {
                                this._warnLine.x = this.node.x + this.m_warnPosDiff.x;
                                this._warnLine.y = this.node.y + this.m_warnPosDiff.y;
                            }
                    }
                };
                e.prototype.len = function (t, e, i, n) {
                    var a = (t - i) * (t - i) + (e - n) * (e - n);
                    return Math.sqrt(a);
                };
                e.prototype.isSpeedToSnake2 = function () {
                    var t = o.SnakeMgr.getSnakeHead().node.position, e = t.x, i = t.y, n = o.SnakeMgr.getSnakeHead().getColliders().radius, a = this.entity.node.position, r = a.x, s = a.y, c = this.entityMoveComp.getSpeed(), l = c.x, h = c.y, u = a.x + 1e3 * l, p = a.y + 1e3 * h;
                    if (r == u && s == p) return !1;
                    var d = this.len(r, s, e, i), f = this.len(u, p, e, i);
                    if (d <= n || f <= n) return !0;
                    var m = ((e - r) * (u - r) + (i - s) * (p - s)) / (this.len(r, s, e, i) * this.len(r, s, u, p)), g = Math.sqrt(1 - m * m), _ = n / this.len(r, s, e, i);
                    return !(m <= 0) && g <= _;
                };
                e.prototype.refreshFaceDir = function () {
                    if (!this.m_dir.equals(cc.Vec2.ZERO)) if (0 == this.entity.rotateType) {
                        var t = cc.misc.radiansToDegrees(cc.v2(0, -1).signAngle(this.m_dir));
                        t = (t + 360) % 360;
                        if (2 == this.m_state) this.entity.angle = t; else {
                            this.entity.angle = 0;
                            this.entity.setFace && this.entity.setFace(this.m_dir);
                        }
                    } else this.entity.angle = -cc.misc.radiansToDegrees(cc.v2(this.m_dir).signAngle(cc.v2(0, -1)));
                };
                e.prototype.showWarnLine = function () {
                    if (!this._warnLine) {
                        this._warnLine = new cc.Node("warn_sprint");
                        this._warnLine.addComponent(cc.Sprite).spriteFrame = p.EnemyMgr.enemyEffectAtlas.getSpriteFrame("warn_sprint");
                        this._warnLine.anchorY = 1;
                        u.MapMgr.blockLayer.addChild(this._warnLine, 2);
                    }
                    var t = cc.v2(0, -1).signAngle(this._speed), e = cc.misc.radiansToDegrees(t);
                    e = (e + 360) % 360;
                    this._warnLine.angle = e;
                    this.m_warnPosDiff = cc.v2(0, -this.m_enemyEntity.radius - 20).rotate(t);
                    this._warnLine.setPosition(this.node.getPosition().add(this.m_warnPosDiff));
                    this._warnLine.active = !0;
                    this._warnLine.opacity = 255;
                };
                e.prototype.hideWarnLine = function () {
                    this._warnLine && (this._warnLine.active = !1);
                };
                e.prototype.onCollideWall = function (t) {
                    if (0 != this.m_state) {
                        if (t.dir) this.m_dir = t.dir.normalize(); else {
                            if (t.dx) {
                                this._speed.x = -this._speed.x;
                                this.m_dir.x = -this.m_dir.x;
                            }
                            if (t.dy) {
                                this._speed.y = -this._speed.y;
                                this.m_dir.y = -this.m_dir.y;
                            }
                        }
                        this._isCollideWall = !0;
                        this.entityMoveComp.setDir(this.m_dir);
                        this.entityMoveComp.setVelocity(0);
                        this.onFuncEnd();
                    }
                };
                Object.defineProperty(e.prototype, "atkRatio", {
                    get: function () {
                        return this._atkRatio;
                    },
                    set: function (t) {
                        this._atkRatio = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.reset = function () {
                    this._dashVelocity = 0;
                    this._atkRatio = 0;
                    this._dashCD = 0;
                    this._dashTime = 0;
                    this._dashRange = 0;
                    this.m_state = 0;
                    this._speed = cc.v2(1, 0);
                    this._time = 0;
                    this._lastTime = 0;
                };
                e.prototype.clear = function () {
                    if (this._warnLine) {
                        this._warnLine.destroy();
                        this._warnLine = null;
                    }
                    this.node.targetOff(this);
                };
                e.prototype.onFuncStart = function () {
                    t.prototype.onFuncStart.call(this);
                };
                e.prototype.onFuncEnd = function () {
                    var e = this;
                    this._time = 0;
                    this._lastTime = 0;
                    t.prototype.onFuncEnd.call(this);
                    this.entityMoveComp.setVelocity(this._normalVelocity);
                    this.m_state = 0;
                    setTimeout(function () {
                        e.refreshFaceDir();
                    });
                };
                return r([m], e);
            }(l.default));
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EnemySummonAttr: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b8d96/hdUxPcqFbz0ZiesE2", "EnemySummonAttr");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("./EnemyAttrBase"), o = t("../../../../data/manager/ConfigDataManager"), s = t("../../../../util/Tools"), c = t("../../manager/battle/EnemyManager"), l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._cd = 0;
                e._summonDatas = [];
                e._isSummoning = !1;
                e._indexes = [];
                e._time = 0;
                return e;
            }
            e.prototype.init = function (e, i, n) {
                var a = this;
                t.prototype.init.call(this, e, i, n);
                var r = o.ConfigDataMgr.getData("ConfigEnemyFuncData", e);
                this.type = r.type;
                var s = r.para.split("&");
                this._cd = Number(s[0]);
                s[1].split("#").forEach(function (t) {
                    if ("" != t) {
                        var e = new h();
                        e.loadJson(t);
                        a._summonDatas.push(e);
                        a._indexes.push(0);
                    }
                });
            };
            e.prototype.updateLogic = function (t) {
                if (this.enabled) {
                    this._time += t;
                    if (this._isSummoning) this.updateSummon(); else if (this._time > this._cd) {
                        this._isSummoning = !0;
                        this._time = 0;
                        this._indexes.forEach(function () { });
                        this.onFuncStart();
                    }
                }
            };
            e.prototype.updateSummon = function () {
                for (var t = !0, e = 0; e < this._summonDatas.length; e++) {
                    for (var i = this._summonDatas[e], n = this._indexes[e]; n < i.num && this._time > n * i.delay;) {
                        var a = c.EnemyMgr.createNormalEnemy(i.enemyId);
                        a.node.position = this.node.position.add(i.pos);
                        a.init();
                        a.startBattle();
                        a.isCreatedByEnemy = !0;
                        n += 1;
                        c.EnemyMgr.extraEnemyCount += 1;
                    }
                    this._indexes[e] = n;
                    n < i.num && (t = !1);
                }
                if (t) {
                    this._isSummoning = !1;
                    this._time = 0;
                    this.onFuncEnd();
                }
            };
            e.prototype.onFuncStart = function () {
                t.prototype.onFuncStart.call(this);
                this.entityMoveComp.setVelocity(0);
            };
            e.prototype.clear = function () {
                this._summonDatas.splice(0);
                this._isSummoning = !1;
                this._indexes.splice(0);
                this._time = 0;
                this._cd = 0;
            };
            return e;
        }(r.default);
        i.default = l;
        var h = function () {
            function t() {
                this.delay = 0;
                this.enemyId = 0;
                this.num = 0;
                this.pos = cc.Vec3.ZERO;
            }
            t.prototype.loadJson = function (t) {
                var e = s.DYTools.stringToNumber(t, "*");
                if (5 == e.length) {
                    this.delay = e[0];
                    this.enemyId = e[1];
                    this.num = e[2];
                    this.pos = cc.v3(e[3], e[4]);
                }
            };
            return t;
        }();
        cc._RF.pop();
    }, {
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "./EnemyAttrBase": "EnemyAttrBase"
    }],
    EntityBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "26470I1orZAbpTWlxg4j/tB", "EntityBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameEnum"), s = cc._decorator, c = s.ccclass, l = (s.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_onlyid = 0;
                    e.m_group = o.ColliderGroup.None;
                    e._isInSky = !1;
                    e._isDie = !1;
                    e._isRevive = !1;
                    e._alreadyRevive = !1;
                    e._reduceSpeedTime = 0;
                    e._reduceSpeedFactor = 0;
                    e._curReduceSpeedFactor = 0;
                    e._burnInstantHurtDisTime = 0;
                    return e;
                }
                Object.defineProperty(e.prototype, "onlyId", {
                    get: function () {
                        return this.m_onlyid;
                    },
                    set: function (t) {
                        this.m_onlyid = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "group", {
                    get: function () {
                        return this.m_group;
                    },
                    set: function (t) {
                        this.m_group = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "angle", {
                    get: function () {
                        return this.node.angle;
                    },
                    set: function (t) {
                        this.node.angle = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "scaleX", {
                    get: function () {
                        return this.node.scaleX;
                    },
                    set: function (t) {
                        this.node.scaleX = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "velocity", {
                    get: function () {
                        return 0;
                    },
                    set: function () { },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "hurtAble", {
                    get: function () {
                        return !1;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "rotateSpeed", {
                    get: function () {
                        return 0;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "rotateType", {
                    get: function () {
                        return 0;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.remove = function () { };
                e.prototype.onCollide = function () { };
                e.prototype.getColliders = function () {
                    return null;
                };
                e.prototype.getCollider = function () {
                    return null;
                };
                e.prototype.setIsInSky = function (t) {
                    this._isInSky = t;
                };
                e.prototype.getIsInSky = function () {
                    return this._isInSky;
                };
                e.prototype.setIsRevive = function (t) {
                    this._isRevive = t;
                    t && this.setAlreadyRevive(!0);
                };
                e.prototype.getIsRevive = function () {
                    return this._isRevive;
                };
                e.prototype.setAlreadyRevive = function (t) {
                    this._alreadyRevive = t;
                };
                e.prototype.getAlreadyRevive = function () {
                    return this._alreadyRevive;
                };
                e.prototype.setIsDie = function (t) {
                    this._isDie = t;
                };
                e.prototype.getIsDie = function () {
                    return this._isDie;
                };
                e.prototype.getSpeedFactor = function () {
                    return this._isRevive ? 0 : this._reduceSpeedTime > 0 ? .01 * (100 - this._reduceSpeedFactor) : 1;
                };
                e.prototype.setReduceSpeed = function (t, e) {
                    this._reduceSpeedTime = t;
                    this._reduceSpeedFactor = e;
                };
                e.prototype.updateReduceSpeedLogic = function (t) {
                    this._reduceSpeedTime -= t;
                    this._reduceSpeedTime < 0 && (this._reduceSpeedTime = 0);
                    var e = this.getSpeedFactor();
                    if (this._curReduceSpeedFactor != e) {
                        this._curReduceSpeedFactor = e;
                        return !0;
                    }
                    return !1;
                };
                e.prototype.updateBurnInstantHurtDis = function (t) {
                    this._burnInstantHurtDisTime > 0 && (this._burnInstantHurtDisTime -= t);
                };
                e.prototype.checkBurnInstantHurtDis = function (t) {
                    if (this._burnInstantHurtDisTime <= 0) {
                        this._burnInstantHurtDisTime = t;
                        return !0;
                    }
                    return !1;
                };
                return r([c], e);
            }(cc.Component));
        i.default = l;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum"
    }],
    EntityManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "d7331Uv2nxKH4Vlm4/YLzsk", "EntityManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.EntityMgr = void 0;
        var r = t("../../../../config/GameEnum"), o = t("../../../../frame/manager/BattleFlowManager"), s = t("./BattleManager"), c = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._battleLayer = null;
                e._effectBottomLayer = null;
                e._shadowLayer = null;
                e._enemyLayer = null;
                e._lootLayer = null;
                e._playerLayer = null;
                e._itemLayer = null;
                e._effectLayer = null;
                e._playerBulletLayer = null;
                e._enemyBulletLayer = null;
                return e;
            }
            e.prototype.addLoadingRes = function () {
                return [{
                    itemType: cc.SpriteAtlas,
                    itemNames: ["TP_BattleCommon"],
                    loadType: r.LoadType.All
                }];
            };
            e.prototype.initData = function () { };
            e.prototype.init = function (t) {
                void 0 === t && (t = s.BattleMgr.mapNode);
                this._battleLayer = t;
                this._effectBottomLayer = this._battleLayer.getChildByName("effectBottom");
                this._enemyLayer = this._battleLayer.getChildByName("enemyLayer");
                this._itemLayer = this._battleLayer.getChildByName("itemLayer");
                this._playerLayer = this._battleLayer.getChildByName("playerLayer");
                this._playerBulletLayer = this._battleLayer.getChildByName("playerBulletLayer");
                this._enemyBulletLayer = this._battleLayer.getChildByName("enemyBulletLayer");
                this._effectLayer = this._battleLayer.getChildByName("effectLayer");
                this._lootLayer = this._battleLayer.getChildByName("lootLayer");
                this._shadowLayer = this._battleLayer.getChildByName("mapBot").getChildByName("shadowLayer");
            };
            e.prototype.clear = function () {
                this._battleLayer = null;
                this._effectBottomLayer = null;
                this._shadowLayer = null;
                this._enemyLayer = null;
                this._lootLayer = null;
                this._playerLayer = null;
                this._itemLayer = null;
                this._effectLayer = null;
                this._playerBulletLayer = null;
                this._enemyBulletLayer = null;
            };
            e.prototype.addBottomEffect = function (t, e) {
                if (t && this._effectBottomLayer) {
                    t.parent = this._effectBottomLayer;
                    e && t.setPosition(e);
                }
            };
            e.prototype.addPlayer = function (t, e) {
                if (this._playerLayer && t) {
                    t.parent = this._playerLayer;
                    t.x = e.x;
                    t.y = e.y;
                }
            };
            e.prototype.addEnemy = function (t) {
                t && (t.parent = this._enemyLayer);
            };
            e.prototype.addShadow = function (t) {
                t && (t.parent = this._shadowLayer);
            };
            e.prototype.addEffect = function (t) {
                t && (t.parent = this._effectLayer);
            };
            e.prototype.getPlayerBulletLayer = function () {
                return this._playerBulletLayer;
            };
            e.prototype.getShadowLayer = function () {
                return this._shadowLayer;
            };
            e.prototype.getEnemyLayer = function () {
                return this._enemyLayer;
            };
            e.prototype.getEnemyBulletLayer = function () {
                return this._enemyBulletLayer;
            };
            e.prototype.addItem = function (t) {
                t && (t.parent = this._itemLayer);
            };
            e.prototype.getItemLayer = function () {
                return this._itemLayer;
            };
            e.prototype.addLoot = function (t) {
                t && (t.parent = this._lootLayer);
            };
            e.prototype.getLootLayer = function () {
                return this._lootLayer;
            };
            e.prototype.getPlayerLayer = function () {
                return this._playerLayer;
            };
            e.prototype.getEffectLayer = function () {
                return this._effectLayer;
            };
            e.instance = new e();
            return e;
        }(o.BattleFlowBase);
        i.default = c;
        i.EntityMgr = c.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "./BattleManager": "BattleManager"
    }],
    EntityWall: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "af4677MheBLAZVkFWp3kx2L", "EntityWall");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameEnum"), s = t("../common/EntityBase"), c = cc._decorator, l = c.ccclass, h = (c.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_group = o.ColliderGroup.Wall;
                    return e;
                }
                return r([l], e);
            }(s.default));
        i.default = h;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../common/EntityBase": "EntityBase"
    }],
    FetterDataContainer: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "10fddHFuNRINofbX0vB5I/U", "FetterDataContainer");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../config/ConfigSnakeData"), o = function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            e.prototype.initData = function (t) {
                if (t) for (var e = 0; e < t.length; e++) {
                    var i = new r.ConfigFetterLvData();
                    i.loadJson(t[e]);
                    var n = this.dataMap.get(i.id);
                    if (!n) {
                        (n = new r.ConfigFetterData()).id = i.id;
                        this.dataMap.set(n.id, n);
                    }
                    n.levelDatas[i.lv] = i;
                    n.maxLv = Math.max(i.lv, n.maxLv);
                }
            };
            return e;
        }(t("./BaseDataContainer").default);
        i.default = o;
        cc._RF.pop();
    }, {
        "../config/ConfigSnakeData": "ConfigSnakeData",
        "./BaseDataContainer": "BaseDataContainer"
    }],
    FetterItem: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "49456GthFdA3LdQx2pokf6x", "FetterItem");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../../config/GameConfig"), s = t("../../../../../../config/GameConst"), c = t("../../../../../../config/GameEnum"), l = t("../../../../../../data/storage/GameData"), h = t("../../../../../../frame/manager/FrameManager"), u = t("../../../../../../frame/manager/PopupManager"), p = t("../../../../../../frame/ui/FrameAnim"), d = t("../../../../../../util/GameFunc"), f = t("../../../../../../util/Tools"), m = t("../../../../../battle/manager/battle/SnakeManager"), g = t("./FetterSnakeItem"), _ = t("./PopupFetterInfo"), y = cc._decorator, v = y.ccclass, b = y.property, M = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.nameSpr = null;
                e.lvNode = null;
                e.txtLab = null;
                e.lockNode = null;
                e.cardList = null;
                e.cardNode = null;
                e.upgradeBtn = null;
                e.upgradeSpr = null;
                e.unlockBtn = null;
                e.unlockSpr = null;
                e.fullNode = null;
                e.atlas = null;
                e.m_data = null;
                e.m_level = 0;
                e.m_full = !1;
                e.m_lvNum = null;
                e.m_itemArr = [];
                return e;
            }
            e.prototype.create = function (t) {
                this.m_data = t;
                this.m_level = l.GData.getFetterLevel(this.m_data.id);
                this.nameSpr.spriteFrame = this.atlas.getSpriteFrame("name" + this.m_data.id);
                this.m_lvNum || (this.m_lvNum = d.GFunc.createUINum({
                    atlas: this.atlas,
                    type: c.NumType.SnakeUI,
                    parent: this.lvNode,
                    distance: 2
                }));
                this.createCards();
                this.refresh();
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                h.FrameMgr.languageMgr.setImage(this.nameSpr, this.atlas, "name" + this.m_data.id);
                h.FrameMgr.languageMgr.setImage(this.upgradeSpr, this.atlas, this.upgradeBtn.interactable ? "btn2" : "btn2b");
                h.FrameMgr.languageMgr.setImage(this.unlockSpr, this.atlas, this.unlockBtn.interactable ? "btn4" : "btn4b");
                h.FrameMgr.languageMgr.setImage(this.fullNode.getComponent(cc.Sprite), this.atlas, "max");
                for (var t = 0, e = this.m_itemArr; t < e.length; t++) e[t].refreshLanguage();
            };
            e.prototype.lvupAble = function () {
                return this.upgradeBtn.node.active && this.upgradeBtn.interactable || this.unlockBtn.node.active && this.unlockBtn.interactable;
            };
            e.prototype.createCards = function () {
                var t = this.m_level + 1;
                t > this.m_data.maxLv && (t = this.m_data.maxLv);
                var e = this.m_data.levelDatas[t];
                if (e) {
                    this.cardNode.parent = null;
                    for (var i = 0, n = e.condition.length; i < n; i++) {
                        var a = e.condition[i], r = null;
                        (r = i == n - 1 ? this.cardNode : cc.instantiate(this.cardNode)).parent = this.cardList;
                        var o = r.getComponent(g.default);
                        o.create(a.x, a.y, this.atlas);
                        this.m_itemArr.push(o);
                    }
                }
            };
            e.prototype.refresh = function (t) {
                void 0 === t && (t = !1);
                this.m_level = l.GData.getFetterLevel(this.m_data.id);
                this.m_full = this.m_data.maxLv == this.m_level;
                if (t) {
                    this.cardNode.parent = this.node;
                    this.cardList.destroyAllChildren();
                    this.m_itemArr.splice(0);
                    this.createCards();
                } else this.refreshCard();
                this.refreshInfo();
                this.refreshBtn();
                t && 1 == this.m_level && this.playUnlockAnim();
                return this.m_full;
            };
            e.prototype.refreshInfo = function () {
                if (0 == this.m_level) {
                    this.lvNode.active = !1;
                    this.nameSpr.node.x = 0;
                } else {
                    this.lvNode.active = !0;
                    this.m_lvNum.setString(this.m_level.toString());
                    this.nameSpr.node.x = -40;
                }
                var t = Math.max(this.m_level, 1), e = this.m_data.levelDatas[t], i = h.FrameMgr.languageMgr.getTxt(e.desc);
                12 == e.param[0].x || 3 == e.param[0].x ? i += e.param[0].y : i += Math.round(100 * e.param[0].y) + "%";
                this.txtLab.string = i;
            };
            e.prototype.refreshCard = function () {
                for (var t = 0, e = this.m_itemArr; t < e.length; t++) e[t].refresh(this.m_full);
            };
            e.prototype.refreshBtn = function () {
                var t = this.m_level;
                if (0 == t) {
                    this.lockNode.active = !0;
                    this.unlockBtn.node.active = !0;
                    this.upgradeBtn.node.active = !1;
                    if (m.SnakeMgr.isFetterLvupAble(this.m_data)) this.unlockBtn.interactable = !0; else {
                        this.unlockBtn.interactable = !1;
                        f.DYTools.removeChildByName(this.unlockBtn.node, "anim");
                    }
                    h.FrameMgr.languageMgr.setImage(this.unlockSpr, this.atlas, this.unlockBtn.interactable ? "btn4" : "btn4b");
                    f.DYTools.removeChildByName(this.upgradeBtn.node, "anim");
                } else {
                    f.DYTools.removeChildByName(this.unlockBtn.node, "anim");
                    this.unlockBtn.node.active = !1;
                    this.lockNode.active = !1;
                    var e = t + 1, i = this.m_data.levelDatas[e];
                    if (i) {
                        this.fullNode.active = !1;
                        this.upgradeBtn.node.active = !0;
                        for (var n = !0, a = 0; a < i.condition.length; a++) {
                            var r = i.condition[a], c = r.x, l = r.y, u = m.SnakeMgr.getSnakeLv(c);
                            if (!m.SnakeMgr.isSnakeUnlock(c) || l > u) {
                                n = !1;
                                break;
                            }
                        }
                        this.upgradeBtn.interactable = n;
                        h.FrameMgr.languageMgr.setImage(this.upgradeSpr, this.atlas, this.upgradeBtn.interactable ? "btn2" : "btn2b");
                        if (n) {
                            var d = this.upgradeBtn.node.getChildByName("anim");
                            if (!d) {
                                (d = cc.instantiate(s.GValue.pfFrameAnim)).name = "anim";
                                d.parent = this.upgradeBtn.node;
                                d.y = 4;
                                d.scaleX = 1.74;
                                d.scaleY = 1.1;
                                var g = d.getComponent(p.default);
                                g.init(this.atlas, "anzou", 9, 2 * o.GConfig.ActionInterval);
                                g.slowAble = !1;
                            }
                            var _ = d.getComponent(p.default);
                            _.stop();
                            _.setDuration(2);
                            _.play();
                        } else f.DYTools.removeChildByName(this.upgradeBtn.node, "anim");
                    } else {
                        this.fullNode.active = !0;
                        this.upgradeBtn.node.active = !1;
                    }
                }
            };
            e.prototype.onBtnClicked = function () {
                this.m_full || 0 == this.m_level || f.DYTools.isBtnClickedAble() && u.PopupMgr.show({
                    cls: _.default,
                    options: {
                        data: this.m_data,
                        item: this
                    }
                });
            };
            e.prototype.onBtnUpgradeClicked = function () {
                if (f.DYTools.isBtnClickedAble(!1)) {
                    var t = this.m_level + 1, e = this.m_data.levelDatas[t];
                    if (e) {
                        for (var i = !0, n = 0; n < e.condition.length; n++) {
                            var a = e.condition[n], r = a.x, o = a.y, s = m.SnakeMgr.getSnakeLv(r);
                            if (!m.SnakeMgr.isSnakeUnlock(r) || o > s) {
                                i = !1;
                                break;
                            }
                        }
                        if (i) {
                            h.FrameMgr.audioMgr.playEffect(1 == t ? "fetter_unlock" : "fetter_lvup");
                            var u = l.GData.getFetterLevel(this.m_data.id);
                            l.GData.setFetterLevel(this.m_data.id, u + 1);
                            l.GData.setGuided(c.GuideType.MainFetter);
                            h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.FetterRefresh);
                            this.refresh(!0);
                        } else {
                            h.FrameMgr.audioMgr.playEffect("ui_click");
                            f.DYTools.error("err fetter info 44");
                        }
                    } else {
                        h.FrameMgr.audioMgr.playEffect("ui_click");
                        f.DYTools.error("err fetter info 33");
                    }
                }
            };
            e.prototype.playShowAnim = function (t) {
                var e = this, i = null;
                this.unlockBtn.node.active && this.unlockBtn.interactable ? i = this.unlockBtn.node : this.upgradeBtn.node.active && this.upgradeBtn.interactable && (i = this.upgradeBtn.node);
                i && (i.opacity = 0);
                cc.Tween.stopAllByTarget(this.unlockBtn.node);
                cc.Tween.stopAllByTarget(this.upgradeBtn.node);
                var n = o.GConfig.ActionInterval, a = this.node.y;
                this.node.opacity = 0;
                this.node.scale = .95;
                this.node.y = a - 215;
                cc.tween(this.node).delay(t).to(7 * n, {
                    opacity: 255,
                    y: a + 9,
                    scale: 1
                }).to(3 * n, {
                    y: a - 2
                }).call(function () {
                    e.playBtnShowAnim();
                }).to(4 * n, {
                    y: a
                }).start();
            };
            e.prototype.playBtnShowAnim = function () {
                var t = this, e = null;
                this.unlockBtn.node.active && this.unlockBtn.interactable ? e = this.unlockBtn.node : this.upgradeBtn.node.active && this.upgradeBtn.interactable && (e = this.upgradeBtn.node);
                if (e) {
                    var i = o.GConfig.ActionInterval;
                    e.scale = .8;
                    e.opacity = 0;
                    cc.tween(e).to(4 * i, {
                        scale: 1.05,
                        opacity: 255
                    }).to(5 * i, {
                        scale: 1
                    }).call(function () {
                        var n = .5;
                        if (e == t.unlockBtn.node) {
                            var a = t.unlockBtn.node.getChildByName("yellow");
                            if (!a) {
                                (a = new cc.Node("yellow")).parent = t.unlockBtn.node;
                                a.scale = .9;
                                a.addComponent(cc.Sprite).spriteFrame = t.atlas.getSpriteFrame("light_0");
                                a.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                            }
                            a.opacity = 0;
                            cc.Tween.stopAllByTarget(a);
                            cc.tween(e).to(5 * i, {
                                scale: 1.1 * .9
                            }).call(function () {
                                a.scale = .9;
                                a.opacity = 255;
                                cc.tween(a).to(13 * i, {
                                    scaleX: .855,
                                    scale: 2.1 * .9,
                                    opacity: 0
                                }).start();
                            }).to(4 * i, {
                                scale: .864
                            }).to(3 * i, {
                                scale: .9
                            }).to(4 * i, {
                                scale: .882
                            }).to(5 * i, {
                                scale: .9
                            }).delay(2).union().repeatForever().start();
                            n = 1;
                        }
                        var r = e.getChildByName("anim");
                        if (!r) {
                            (r = cc.instantiate(s.GValue.pfFrameAnim)).name = "anim";
                            r.parent = e;
                            r.y = 4;
                            r.scaleX = 1.74;
                            r.scaleY = 1.1;
                            var o = r.getComponent(p.default);
                            o.init(t.atlas, "anzou", 9, 2 * i);
                            o.slowAble = !1;
                        }
                        r.getComponent(p.default).stop();
                        t.scheduleOnce(function () {
                            var t = e.getChildByName("anim");
                            if (t) {
                                var i = t.getComponent(p.default);
                                i.setDuration(2);
                                i.play();
                            }
                        }, n);
                    }).start();
                }
            };
            e.prototype.playUnlockAnim = function () {
                var t = this;
                h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.HomeShield, !0);
                var e = o.GConfig.ActionInterval;
                this.lockNode.active = !0;
                cc.tween(this.lockNode).to(4 * e, {
                    scale: 1.8
                }).delay(3 * e).to(e, {
                    scaleX: 1.9,
                    scaleY: 1.5
                }).to(e, {
                    scaleX: 1.95,
                    scaleY: 1.45
                }).start();
                this.scheduleOnce(function () {
                    t.lockNode.scale = 1;
                    var i = t.lockNode.getChildByName("0");
                    if (i) {
                        var n = i.y;
                        i.scale = 1.8;
                        i.y = n - 10;
                        cc.tween(i).to(3 * e, {
                            y: n - 30,
                            opacity: 0
                        }).call(function () {
                            a.active = !1;
                        }).start();
                    }
                    var a = t.lockNode.getChildByName("1");
                    if (a) {
                        n = a.y;
                        a.scale = 1.8;
                        a.y = n + 10;
                        cc.tween(a).to(3 * e, {
                            y: n + 30,
                            opacity: 0
                        }).call(function () {
                            a.active = !1;
                        }).start();
                    }
                }, 11 * e);
                this.scheduleOnce(function () {
                    var i = t.node.getChildByName("bgLight");
                    if (i) {
                        i.active = !0;
                        i.opacity = 225;
                        cc.tween(i).to(4 * e, {
                            opacity: 255
                        }).to(13 * e, {
                            opacity: 0
                        }).start();
                    }
                }, 16 * e);
                this.scheduleOnce(function () {
                    var i = t.lockNode.getChildByName("circle");
                    if (i) {
                        i.active = !0;
                        i.scale = 1.25;
                        cc.tween(i).to(5 * e, {
                            opacity: 0,
                            scale: 2.1
                        }).start();
                    }
                    var n = t.lockNode.getChildByName("point");
                    if (n) {
                        n.active = !0;
                        n.scale = 1.2;
                        cc.tween(n).to(5 * e, {
                            opacity: 0,
                            scale: 1.65
                        }).start();
                    }
                    var a = t.lockNode.getChildByName("star");
                    if (a) {
                        a.active = !0;
                        a.scale = 1;
                        cc.tween(a).to(4 * e, {
                            scaleX: 2.8,
                            scaleY: .85
                        }).delay(e).call(function () {
                            a.active = !1;
                            t.lockNode.active = !1;
                        }).start();
                    }
                }, 12 * e);
                var i = this.upgradeBtn.node;
                i.scale = .9;
                i.opacity = 0;
                cc.tween(i).to(6 * e, {
                    scale: 1.05,
                    opacity: 255
                }).to(5 * e, {
                    scale: .98
                }).to(4 * e, {
                    scale: 1
                }).start();
                var n = i.getChildByName("white");
                if (n) {
                    n.active = !0;
                    cc.tween(n).to(6 * e, {
                        opacity: 0
                    }).start();
                }
                var a = i.getChildByName("whiteEdge");
                if (!a) {
                    (a = new cc.Node("whiteEdge")).parent = i;
                    a.y = 3;
                    a.addComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame("white_1");
                }
                cc.tween(a).to(3 * e, {
                    opacity: 180,
                    scale: .85
                }).to(3 * e, {
                    opacity: 0,
                    scale: .65
                }).start();
                var r = this;
                (function () {
                    var t = r.txtLab.node.color;
                    cc.tween(r.txtLab.node).delay(12 * e).to(4 * e, {
                        scale: 1.4,
                        color: cc.Color.WHITE
                    }).to(4 * e, {
                        scale: 1.45,
                        color: t
                    }).to(4 * e, {
                        scale: .97
                    }).to(6 * e, {
                        scale: 1
                    }).start();
                    var i = r.txtLab.node.parent.getChildByName("yellowTop");
                    if (!i) {
                        i = new cc.Node("yellowTop");
                        r.txtLab.node.parent.addChild(i, 1);
                        i.addComponent(cc.Sprite).spriteFrame = r.atlas.getSpriteFrame("light_1");
                    }
                    i.opacity = 0;
                    cc.tween(i).delay(12 * e).delay(3 * e).call(function () {
                        i.opacity = 230;
                        i.scaleX = 4.25;
                        i.scaleY = 1;
                    }).to(7 * e, {
                        opacity: 0,
                        scaleX: 3.85,
                        scaleY: .83
                    }).start();
                    var n = r.txtLab.node.parent.getChildByName("yellowBg");
                    if (!n) {
                        n = new cc.Node("yellowBg");
                        r.txtLab.node.parent.addChild(n, -1);
                        n.addComponent(cc.Sprite).spriteFrame = r.atlas.getSpriteFrame("white_0");
                    }
                    n.opacity = 0;
                    cc.tween(n).delay(12 * e).delay(9 * e).call(function () {
                        n.scaleX = 3.88;
                        n.scaleY = 1.14;
                        n.opacity = 242;
                        n.color = cc.color(255, 204, 0);
                    }).to(4 * e, {
                        scaleX: 3.65,
                        scaleY: .74,
                        opacity: 128,
                        color: cc.color(217, 135, 18)
                    }).to(6 * e, {
                        opacity: 0
                    }).call(function () {
                        h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.HomeShield, !1);
                    }).start();
                })();
            };
            r([b(cc.Sprite)], e.prototype, "nameSpr", void 0);
            r([b(cc.Node)], e.prototype, "lvNode", void 0);
            r([b(cc.Label)], e.prototype, "txtLab", void 0);
            r([b(cc.Node)], e.prototype, "lockNode", void 0);
            r([b(cc.Node)], e.prototype, "cardList", void 0);
            r([b(cc.Node)], e.prototype, "cardNode", void 0);
            r([b(cc.Button)], e.prototype, "upgradeBtn", void 0);
            r([b(cc.Sprite)], e.prototype, "upgradeSpr", void 0);
            r([b(cc.Button)], e.prototype, "unlockBtn", void 0);
            r([b(cc.Sprite)], e.prototype, "unlockSpr", void 0);
            r([b(cc.Node)], e.prototype, "fullNode", void 0);
            r([b(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([v], e);
        }(cc.Component);
        i.default = M;
        cc._RF.pop();
    }, {
        "../../../../../../config/GameConfig": "GameConfig",
        "../../../../../../config/GameConst": "GameConst",
        "../../../../../../config/GameEnum": "GameEnum",
        "../../../../../../data/storage/GameData": "GameData",
        "../../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../../frame/manager/PopupManager": "PopupManager",
        "../../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../../util/GameFunc": "GameFunc",
        "../../../../../../util/Tools": "Tools",
        "../../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "./FetterSnakeItem": "FetterSnakeItem",
        "./PopupFetterInfo": "PopupFetterInfo"
    }],
    FetterSnakeItem: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1e1083jO79KJa9evGzYN/u5", "FetterSnakeItem");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../../config/GameEnum"), s = t("../../../../../../frame/manager/FrameManager"), c = t("../../../../../../frame/manager/PopupManager"), l = t("../../../../../../util/GameFunc"), h = t("../../../../../../util/Tools"), u = t("../../../../../battle/manager/battle/SnakeManager"), p = t("../snake/PopupSnakeInfo"), d = cc._decorator, f = d.ccclass, m = d.property, g = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.cardSpr = null;
                e.kuangSpr = null;
                e.botSpr = null;
                e.lvNode = null;
                e.arrowNode = null;
                e.lockNode = null;
                e.needPoint = null;
                e.needLvLab = null;
                e.lvupSpine = null;
                e.m_snakeType = 0;
                e.m_atlas = null;
                e.m_lvNum = null;
                e.m_needLv = 0;
                return e;
            }
            e.prototype.create = function (t, e, i, n) {
                var a = this;
                void 0 === n && (n = !1);
                this.m_snakeType = t;
                this.m_needLv = e;
                this.m_atlas = i;
                this.initUI();
                this.refresh(n);
                this.lvupSpine && this.lvupSpine.setCompleteListener(function () {
                    a.lvupSpine.node.opacity = 0;
                });
            };
            e.prototype.refreshLanguage = function () {
                s.FrameMgr.languageMgr.setImage(this.lockNode.getComponent(cc.Sprite), this.m_atlas, "lock");
            };
            e.prototype.refresh = function (t) {
                void 0 === t && (t = !1);
                var e = u.SnakeMgr.getSnakeLv(this.m_snakeType);
                this.m_lvNum.setString("l" + e);
                this.needLvLab.string = "Lv." + this.m_needLv;
                if (u.SnakeMgr.isSnakeUnlock(this.m_snakeType)) {
                    if (this.m_needLv <= e) {
                        this.needLvLab.node.color = cc.color(145, 249, 93);
                        this.needPoint.spriteFrame = this.m_atlas.getSpriteFrame("dian1");
                        this.needLvLab.node.getComponent(cc.LabelOutline).enabled = !0;
                    } else {
                        this.needLvLab.node.color = cc.color(64, 79, 101);
                        this.needPoint.spriteFrame = this.m_atlas.getSpriteFrame("dian2");
                        this.needLvLab.node.getComponent(cc.LabelOutline).enabled = !1;
                    }
                    this.lockNode.active = !1;
                    this.m_lvNum.node.active = !0;
                    if (t) {
                        this.lvNode.parent.active = !1;
                        this.arrowNode.active = !1;
                    } else e < this.m_needLv && u.SnakeMgr.isSnakeLvupAble(this.m_snakeType) ? this.arrowNode.active = !0 : this.arrowNode.active = !1;
                } else {
                    this.needLvLab.node.color = cc.color(64, 79, 101);
                    this.needLvLab.node.getComponent(cc.LabelOutline).enabled = !1;
                    this.needPoint.spriteFrame = this.m_atlas.getSpriteFrame("dian2");
                    this.m_lvNum.node.active = !1;
                    this.arrowNode.active = !1;
                    this.lockNode.active = !0;
                }
            };
            e.prototype.initUI = function () {
                var t = s.FrameMgr.loadMgr.get("TP_SnakeUI", cc.SpriteAtlas);
                this.cardSpr.spriteFrame = t ? t.getSpriteFrame("item_" + this.m_snakeType) : null;
                this.m_lvNum = l.GFunc.createUINum({
                    atlas: this.m_atlas,
                    type: o.NumType.SnakeUI,
                    parent: this.lvNode,
                    distance: 2
                });
                var e = u.SnakeMgr.getSnakeConfigDataForType(this.m_snakeType);
                if (t) {
                    this.botSpr.spriteFrame = t.getSpriteFrame("bg_" + e.quality);
                    this.kuangSpr.spriteFrame = t.getSpriteFrame("kuang_" + e.quality);
                }
            };
            e.prototype.onBtnClicked = function () {
                h.DYTools.isBtnClickedAble() && (this.lockNode.active ? l.GFunc.showFloatTip({
                    txt: s.FrameMgr.languageMgr.getTxt(1005),
                    bgType: 2
                }) : c.PopupMgr.show({
                    cls: p.default,
                    options: {
                        snakeType: this.m_snakeType
                    }
                }));
            };
            r([m(cc.Sprite)], e.prototype, "cardSpr", void 0);
            r([m(cc.Sprite)], e.prototype, "kuangSpr", void 0);
            r([m(cc.Sprite)], e.prototype, "botSpr", void 0);
            r([m(cc.Node)], e.prototype, "lvNode", void 0);
            r([m(cc.Node)], e.prototype, "arrowNode", void 0);
            r([m(cc.Node)], e.prototype, "lockNode", void 0);
            r([m(cc.Sprite)], e.prototype, "needPoint", void 0);
            r([m(cc.Label)], e.prototype, "needLvLab", void 0);
            r([m(sp.Skeleton)], e.prototype, "lvupSpine", void 0);
            return r([f], e);
        }(cc.Component);
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../../../config/GameEnum": "GameEnum",
        "../../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../../frame/manager/PopupManager": "PopupManager",
        "../../../../../../util/GameFunc": "GameFunc",
        "../../../../../../util/Tools": "Tools",
        "../../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "../snake/PopupSnakeInfo": "PopupSnakeInfo"
    }],
    FetterUI: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6bda7sBBWdJ54i0TYcGD6R6", "FetterUI");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../../config/GameConfig"), s = t("../../../../../../config/GameConst"), c = t("../../../../../../config/GameEnum"), l = t("../../../../../../data/manager/ConfigDataManager"), h = t("../../../../../../data/storage/GameData"), u = t("../../../../../../frame/manager/FrameManager"), p = t("../../../../../../frame/manager/PopupManager"), d = t("../../../../../../frame/ui/UIComponent"), f = t("../../../../../../util/GameFunc"), m = t("../../../../../../util/Tools"), g = t("../../../../../battle/manager/battle/SnakeManager"), _ = t("../../../../../battle/manager/common/GuideManager"), y = t("./FetterItem"), v = cc._decorator, b = v.ccclass, M = v.property, S = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.topNode = null;
                e.scrollView = null;
                e.content = null;
                e.item = null;
                e.atlas = null;
                e.titleSpr = null;
                e.tipSpr = null;
                e.m_itemArr = [];
                e.m_minPosY = 0;
                e.attrNode = null;
                e.attrLab = null;
                e.attrTitleSpr = null;
                return e;
            }
            e.prototype.create = function () {
                f.GFunc.adjustTopUI(this.topNode);
                f.GFunc.adjustTopUI(this.scrollView.node);
                this.scrollView.node.height = s.GValue.ViewHeight - 360 - s.GValue.SafeOffsetY;
                this.scrollView.node.children[0].height = this.scrollView.node.height;
                this.m_minPosY = -this.scrollView.node.height - 160;
                this.createList();
                this.onScroll();
                this.on(c.EventTypeEnum.FetterRefresh, this.refresh.bind(this));
                this.on(c.EventTypeEnum.SnakeLvup, this.refresh.bind(this));
                this.on(c.EventTypeEnum.ItemRefresh, this.refresh.bind(this));
                this.refreshLanguage();
            };
            e.prototype.onEnable = function () {
                m.DYTools.removeChildByName(this.content, "finger");
                this.refresh(!0);
                this.playEnterAnim();
            };
            e.prototype.refreshLanguage = function () {
                u.FrameMgr.languageMgr.setImage(this.titleSpr, this.atlas, "title");
                u.FrameMgr.languageMgr.setImage(this.tipSpr, this.atlas, "txt");
                u.FrameMgr.languageMgr.setImage(this.attrTitleSpr, this.atlas, "title2");
                for (var t = 0, e = this.m_itemArr; t < e.length; t++) e[t].refreshLanguage();
            };
            e.prototype.refresh = function (t) {
                void 0 === t && (t = !1);
                for (var e = 0, i = this.m_itemArr; e < i.length; e++) i[e].refresh();
                this.checkGuide();
            };
            e.prototype.createList = function () {
                var t = l.ConfigDataMgr.getAllData("ConfigFetterData"), e = [];
                t.forEach(function (t) {
                    e.push(t);
                });
                e.sort(function (t, e) {
                    var i = g.SnakeMgr.isFetterLvupAble(t), n = g.SnakeMgr.isFetterLvupAble(e);
                    if (i && n) return t.id - e.id;
                    if (i || n) return i ? -1 : 1;
                    var a = g.SnakeMgr.isFetterLvupAbleForSnakeLvup(t), r = g.SnakeMgr.isFetterLvupAbleForSnakeLvup(e);
                    if (a && r) return t.id - e.id;
                    if (a || r) return a ? -1 : 1;
                    var o = g.SnakeMgr.isFetterHasSnakeLvup(t), s = g.SnakeMgr.isFetterHasSnakeLvup(e), c = h.GData.getFetterLevel(t.id) > 0, l = h.GData.getFetterLevel(e.id) > 0, u = c && o, p = l && s;
                    return u && p ? t.id - e.id : u || p ? u ? -1 : 1 : o && s ? t.id - e.id : o || s ? o ? -1 : 1 : c && l ? t.id - e.id : c || l ? c ? -1 : 1 : t.id - e.id;
                });
                for (var i = 0, n = e.length; i < n; i++) {
                    var a = e[i], r = null;
                    (r = i == n - 1 ? this.item : cc.instantiate(this.item)).parent = this.content;
                    var o = r.getComponent(y.default);
                    o.create(a);
                    this.m_itemArr.push(o);
                    r.y = -170 - 346 * i;
                }
                this.content.height = 346 * e.length + 40;
            };
            e.prototype.onScroll = function () {
                for (var t = 0; t < this.m_itemArr.length; t++) {
                    var e = this.m_itemArr[t].node, i = e.y + this.content.y;
                    i > 170 || i < this.m_minPosY ? e.opacity = 0 : e.opacity = 255;
                }
            };
            e.prototype.onBtnTipClicked = function () {
                m.DYTools.isBtnClickedAble() && this.showAttr();
            };
            e.prototype.onBtnAttrCloseClicked = function () {
                this.attrNode.active = !1;
                this.attrNode.parent = this.node;
            };
            e.prototype.showAttr = function () {
                this.attrNode.active = !0;
                this.attrNode.parent = p.PopupMgr.getContainer(1);
                var t = "";
                g.SnakeMgr.refreshFetterData().forEach(function (e, i) {
                    switch (i) {
                        case c.SnakeAddType.CirtProb:
                            t += "\n" + u.FrameMgr.languageMgr.getTxt(1) + " +" + Math.round(100 * e) + "%";
                            break;

                        case c.SnakeAddType.CirtAtkRatio:
                            t += "\n" + u.FrameMgr.languageMgr.getTxt(1) + Math.round(100 * e) + "%";
                            break;

                        case c.SnakeAddType.CircleNum:
                            t += "\n" + u.FrameMgr.languageMgr.getTxt(1) + Math.round(e) + "%";
                            break;

                        case c.SnakeAddType.CircleAtkRatio:
                            t += "\n" + u.FrameMgr.languageMgr.getTxt(100) + Math.round(100 * e) + "%";
                            break;

                        case c.SnakeAddType.CircleCD:
                            t += "\n" + u.FrameMgr.languageMgr.getTxt(103) + Math.round(100 * e) + "%";
                            break;

                        case c.SnakeAddType.SkillAtkRatio:
                            t += "\n" + u.FrameMgr.languageMgr.getTxt(102) + Math.round(100 * e) + "%";
                            break;

                        case c.SnakeAddType.SkillCD:
                        case c.SnakeAddType.SkillCirtProb:
                        case c.SnakeAddType.SkillCirtAtkRatio:
                        case c.SnakeAddType.SkillAddNormalAtk:
                            t += "\n" + u.FrameMgr.languageMgr.getTxt(1) + Math.round(100 * e) + "%";
                            break;

                        case c.SnakeAddType.SnakeBodyGoldAddRatio:
                            t += "\n" + u.FrameMgr.languageMgr.getTxt(104) + Math.round(100 * e) + "%";
                            break;

                        case c.SnakeAddType.SnakeInitBodyAdd:
                            t += "\n" + u.FrameMgr.languageMgr.getTxt(101) + Math.round(e);
                    }
                });
                this.attrLab.string = t;
                this.attrLab.node.parent.height = this.attrNode.height + 90;
            };
            e.prototype.checkGuide = function () {
                if (s.GValue.MainSceneGuide > 0) m.DYTools.removeChildByName(this.content, "finger"); else if (_.GuideMgr.guideAble(c.GuideType.MainFetter)) {
                    for (var t = null, e = 0, i = this.m_itemArr; e < i.length; e++) {
                        var n = i[e];
                        if (n.lvupAble()) {
                            t = n;
                            break;
                        }
                    }
                    if (t) {
                        var a = this.content.getChildByName("finger");
                        a || (a = f.GFunc.createfinger(this.content, "finger", 0));
                        a.active = !0;
                        a.setPosition(t.node.getPosition().add(cc.v2(30, -100)));
                    }
                } else m.DYTools.removeChildByName(this.content, "finger");
            };
            e.prototype.playEnterAnim = function () {
                var t = o.GConfig.ActionInterval, e = this.topNode.getChildByName("content");
                if (e) {
                    var i = e.y;
                    e.y = i - 11;
                    e.opacity = 0;
                    cc.tween(e).to(4 * t, {
                        opacity: 255,
                        y: i
                    }).start();
                }
                for (var n = 2 * t, a = 3 * t, r = 0; r < this.m_itemArr.length; r++) this.m_itemArr[r].playShowAnim(a + n * r);
            };
            r([M(cc.Node)], e.prototype, "topNode", void 0);
            r([M(cc.ScrollView)], e.prototype, "scrollView", void 0);
            r([M(cc.Node)], e.prototype, "content", void 0);
            r([M(cc.Node)], e.prototype, "item", void 0);
            r([M(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            r([M(cc.Sprite)], e.prototype, "titleSpr", void 0);
            r([M(cc.Sprite)], e.prototype, "tipSpr", void 0);
            r([M(cc.Node)], e.prototype, "attrNode", void 0);
            r([M(cc.Label)], e.prototype, "attrLab", void 0);
            r([M(cc.Sprite)], e.prototype, "attrTitleSpr", void 0);
            return r([b], e);
        }(d.default);
        i.default = S;
        cc._RF.pop();
    }, {
        "../../../../../../config/GameConfig": "GameConfig",
        "../../../../../../config/GameConst": "GameConst",
        "../../../../../../config/GameEnum": "GameEnum",
        "../../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../../data/storage/GameData": "GameData",
        "../../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../../frame/manager/PopupManager": "PopupManager",
        "../../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../../util/GameFunc": "GameFunc",
        "../../../../../../util/Tools": "Tools",
        "../../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "../../../../../battle/manager/common/GuideManager": "GuideManager",
        "./FetterItem": "FetterItem"
    }],
    FireBulletData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "d71e752op5L0rM/PjyqjSf9", "FireBulletData");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.BulletData = i.FireData = void 0;
        var r = t("../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.bulletId = 0;
                e.fireRange = 0;
                e.fireType = 0;
                e.fireSpeed = 0;
                e.fireWarnTime = 0;
                e.fireWarnWaitTime = 0;
                e.offset = cc.Vec2.ZERO;
                e.effectOffset = cc.Vec2.ZERO;
                e.effectImg = "";
                e.effectImgCount = 0;
                return e;
            }
            e.prototype.loadJson = function (e) {
                t.prototype.loadJson.call(this, e);
                this.bulletId = r.DYTools.setNum(e, "bid");
                this.fireRange = r.DYTools.setNum(e, "fr");
                this.fireType = r.DYTools.setNum(e, "ft");
                this.fireSpeed = r.DYTools.setNum(e, "fs");
                this.fireWarnTime = r.DYTools.setNum(e, "fwt");
                this.fireWarnWaitTime = r.DYTools.setNum(e, "fwwt");
                this.offset = r.DYTools.setVec2(e, "po");
                this.effectOffset = r.DYTools.setVec2(e, "eo");
                var i = r.DYTools.setStringArr(e, "ei");
                this.effectImg = i[0] || "";
                this.effectImgCount = i[1] ? parseInt(i[1]) : 0;
            };
            return e;
        }(t("../config/ConfigBaseData").default);
        i.FireData = o;
        var s = function () {
            function t() {
                this.bulletAtk = 0;
                this.critProb = 0;
                this.critAtkRatio = 0;
                this.image = [];
                this.anchorY = .5;
                this.frameCount = 0;
                this.scaleAct = !1;
                this.bulletSpeed = 0;
                this.bulletRotateSpeed = 0;
                this.bulletAccStartTime = 0;
                this.bulletAccLastTime = 0;
                this.bulletAcc = 0;
                this.colliderData = [];
                this.colliderType = 0;
                this.bulletType = 0;
                this.scale = 0;
                this.revolve = 0;
                this.paraString = [];
                this.otherPara = [];
                this.audio = null;
                this.bulletOffset = cc.Vec2.ZERO;
                this.selfOffset = cc.Vec2.ZERO;
                this.bulletNotThrough = [];
                this.tailPara = [];
                this.tailCrazyPara = [];
                this.hurtImage = "";
                this.hurtCount = 0;
            }
            t.prototype.copy = function (t) {
                this.bulletAtk = t.bulletAtk;
                this.image = t.image;
                this.anchorY = t.anchorY;
                this.frameCount = t.frameCount;
                this.scaleAct = t.scaleAct;
                this.bulletSpeed = t.bulletSpeed;
                this.bulletRotateSpeed = t.bulletRotateSpeed;
                this.bulletAccStartTime = t.bulletAccStartTime;
                this.bulletAccLastTime = t.bulletAccLastTime;
                this.bulletAcc = t.bulletAcc;
                this.scale = t.scale;
                this.revolve = t.revolve;
                this.colliderData = t.colliderData;
                this.colliderType = t.colliderType;
                this.paraString = t.paraString;
                this.otherPara = t.otherPara;
                this.audio = t.audio;
                this.bulletType = t.bulletType;
                this.bulletOffset = cc.v2(t.bulletOffset.x, t.bulletOffset.y);
                this.selfOffset = cc.v2(t.selfOffset.x, t.selfOffset.y);
                this.bulletNotThrough = t.bulletNotThrough;
                this.tailCrazyPara = t.tailCrazyPara;
                this.tailPara = t.tailPara;
                this.hurtImage = t.hurtImage;
                this.hurtCount = t.hurtCount;
            };
            return t;
        }();
        i.BulletData = s;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools",
        "../config/ConfigBaseData": "ConfigBaseData"
    }],
    FirePointBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "a51f7FFUl9AC6CvwLpOoxM/", "FirePointBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../frame/manager/FrameManager"), l = t("../../../../frame/ui/FrameAnim"), h = t("../../common/EntityBase"), u = t("../../manager/battle/BulletManager"), p = t("../../manager/battle/EntityManager"), d = cc._decorator, f = d.ccclass, m = (d.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._isFiring = !1;
                    e._intervalNow = 0;
                    e._startCall = null;
                    e._endCall = null;
                    e.m_audio = "";
                    e.m_isPlayAudio = !0;
                    e.m_snakeCrazy = !1;
                    return e;
                }
                Object.defineProperty(e.prototype, "creator", {
                    get: function () {
                        return this.m_creator;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "fireData", {
                    get: function () {
                        return this._fireData;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "bulletData", {
                    get: function () {
                        return this._bulletData;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.init = function (t, e, i, n, a) {
                    void 0 === n && (n = null);
                    void 0 === a && (a = null);
                    this._setData(t, e, i);
                    this._intervalNow = 0;
                    this._startCall = n;
                    this.setEndCall(a);
                    this.m_audio = i.audio;
                    this.m_audio && "" != this.m_audio || (this.m_audio = this.isEnemy ? "enemyBullet" : "bullet");
                    this.m_isPlayAudio = !0;
                };
                e.prototype.setEndCall = function (t) {
                    this._endCall = t;
                };
                e.prototype._setData = function (t, e, i) {
                    this.m_creator = t;
                    this._fireData = e;
                    this._bulletData = i;
                    this.node.opacity = this.creator.node.opacity;
                    this._isFiring = !1;
                };
                e.prototype.changeData = function (t, e) {
                    this._setData(this.creator, t, e);
                };
                e.prototype.clear = function () {
                    this.m_creator = null;
                    this._fireData = null;
                    this._bulletData = null;
                    if (this._frameAnim) {
                        this._frameAnim.clear();
                        this._frameAnim.node.destroy();
                        this._frameAnim = null;
                    }
                    this._isFiring = !1;
                };
                e.prototype.updateLogic = function (t) {
                    if (this.enabled && this._fireData && this._bulletData && !this.isPauseShoot()) if (this._isFiring) this.checkHasWarning() && this.updateWarning(t); else if (this.canShoot(t)) {
                        this._intervalNow > 0 && (this._intervalNow -= t);
                        if (this._intervalNow > 0) return;
                        this.onFireBegin();
                    }
                };
                e.prototype.canShoot = function () {
                    return !0;
                };
                e.prototype.onFireBegin = function () {
                    this._isFiring = !0;
                    this._intervalNow += this._fireData.fireSpeed;
                    this.onFireStartCall();
                    this.checkHasWarning() ? this.beginWarning() : this.fire();
                };
                e.prototype.onFireFinish = function () {
                    this._isFiring = !1;
                    this.onFireEndCall();
                };
                e.prototype.onFireStartCall = function () {
                    this._startCall && this._startCall();
                };
                e.prototype.onFireEndCall = function () {
                    this._endCall && this._endCall();
                };
                e.prototype.fire = function () {
                    var t = this;
                    this.playFireAnim(function () {
                        t.onFire(function () {
                            t.onFireFinish();
                        });
                        t.playFireAudio();
                    });
                };
                e.prototype.onFire = function (t) {
                    t && t();
                };
                e.prototype.checkHasWarning = function () {
                    return !!this.isEnemy && this.fireData.fireWarnTime > 0;
                };
                e.prototype.beginWarning = function () { };
                e.prototype.updateWarning = function () { };
                e.prototype.isPauseShoot = function () {
                    return !1;
                };
                e.prototype.setFirstDelay = function (t) {
                    this._intervalNow = t;
                };
                e.prototype.getSpriteNodeAngle = function () {
                    return this.creator.angle;
                };
                e.prototype.initFrameAnim = function () {
                    var t = this, e = cc.instantiate(s.GValue.pfFrameAnim);
                    if (e) {
                        var i = e.getComponent(l.default);
                        p.EntityMgr.addEffect(e);
                        i && (this._frameAnim = i);
                        var n = c.FrameMgr.loadMgr.get("TP_hurtEffect", cc.SpriteAtlas);
                        if (n) {
                            this._frameAnim.init(n, this.fireData.effectImg, this.fireData.effectImgCount, 2 * o.GConfig.ActionInterval, null, function () {
                                t._frameAnim.node.active = !1;
                            });
                            this._frameAnim.setDstBlendFactorMode1();
                        }
                    }
                };
                e.prototype.changeFrameAnim = function () {
                    var t = this;
                    this.fireData.effectImg || this._frameAnim && this._frameAnim.stop();
                    var e = c.FrameMgr.loadMgr.get("TP_hurtEffect", cc.SpriteAtlas);
                    e && this._frameAnim && this._frameAnim.init(e, this.fireData.effectImg, this.fireData.effectImgCount, o.GConfig.ActionInterval, null, function () {
                        t._frameAnim.node.active = !1;
                    });
                };
                e.prototype.stopFireAnim = function () {
                    this._frameAnim && this._frameAnim.stop();
                };
                e.prototype.updatePos = function () { };
                e.prototype.playFireAnim = function (t) {
                    if (this._frameAnim && !this._frameAnim.isPlaying()) {
                        this._frameAnim.node.active = !0;
                        this._frameAnim.play(1);
                    }
                    t && t();
                };
                e.prototype.playFireAudio = function () {
                    this.m_isPlayAudio && this._playAudioForCD(this.m_audio, .1);
                };
                e.prototype._playAudioForCD = function (t, e) {
                    if (this.m_isPlayAudio) {
                        var i = u.BulletMgr.fireEffectAbleMap.get(t);
                        if (null == i || i) {
                            c.FrameMgr.audioMgr.playEffect(t);
                            u.BulletMgr.fireEffectAbleMap.set(t, !1);
                            this.scheduleOnce(function () {
                                u.BulletMgr.fireEffectAbleMap.set(t, !0);
                            }, e);
                        }
                    }
                };
                e.prototype.setSnakeCrazy = function (t) {
                    this.m_snakeCrazy = t;
                    this.isEnemy || (this.m_snakeCrazy ? this.m_audio = "snakeFire_1_1" : this.m_audio = "bullet");
                };
                return r([f], e);
            }(h.default));
        i.default = m;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../common/EntityBase": "EntityBase",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/EntityManager": "EntityManager"
    }],
    FirePointEnemy: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "f1827C2utBOrb07YXd7HLm5", "FirePointEnemy");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConst"), s = t("../../../../config/GameEnum"), c = t("../../../../util/Tools"), l = t("../../manager/battle/BulletManager"), h = t("../../manager/battle/MapManager"), u = t("../../manager/battle/SnakeManager"), p = t("../../manager/battle/WarnLineManager"), d = t("./FirePointBase"), f = cc._decorator, m = f.ccclass, g = (f.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._target = null;
                    e._warnInterval = 0;
                    e._warnWaitTime = 0;
                    e._warnLines = [];
                    e._isShowingWarning = !1;
                    e._hideWarningAngle = 0;
                    e.m_fireReady = !1;
                    e.isEnemy = !0;
                    return e;
                }
                e.prototype.init = function (e, i, n, a, r) {
                    void 0 === a && (a = null);
                    void 0 === r && (r = null);
                    t.prototype.init.call(this, e, i, n, a, r);
                    this._warnInterval = this.fireData.fireWarnTime;
                    this._warnWaitTime = this.fireData.fireWarnWaitTime;
                    this._isShowingWarning = !1;
                };
                e.prototype.fireNow = function () {
                    var t = this;
                    this._isFiring = !0;
                    this._intervalNow = this._fireData.fireSpeed;
                    this.onFire(function () {
                        t.onFireFinish();
                    });
                };
                e.prototype._setData = function (t, e, i) {
                    this.m_creator = t;
                    this._fireData = e;
                    this._bulletData = i;
                    this.node.opacity = this.creator.node.opacity;
                    this._isFiring = !1;
                };
                e.prototype.canShoot = function () {
                    if (!this.creator || this.creator.isDead || this.m_fireReady) {
                        this.hideWarnLine();
                        return !1;
                    }
                    if (this._fireData) switch (this._fireData.fireType) {
                        case s.FirePointType.EnemyAimSnake:
                            return this.findSnakeHeadInRadius();

                        case s.FirePointType.NoAim:
                            return !0;

                        default:
                            return this.findSnakeHeadInRadius();
                    }
                    return !1;
                };
                e.prototype.findSnakeHeadInRadius = function () {
                    var t = u.SnakeMgr.getSnakeHead(), e = this.creator, i = !1;
                    t && c.DYTools.getDisForVec(e.node, t.node) <= this.fireData.fireRange && (i = !0);
                    if (!i) {
                        this._target = null;
                        this.hideWarnLine();
                        return !1;
                    }
                    this._target = t;
                    return !0;
                };
                e.prototype.isPauseShoot = function () {
                    return !1;
                };
                e.prototype.beginWarning = function () {
                    this._isShowingWarning = !0;
                    this._warnInterval = this.fireData.fireWarnTime;
                    this._warnWaitTime = this.fireData.fireWarnWaitTime;
                };
                e.prototype.updateWarning = function (t) {
                    if (this._isShowingWarning) {
                        if (this._warnInterval <= 0) {
                            if (this._warnWaitTime <= 0) {
                                this.fire();
                                this.hideWarnLine();
                                return !1;
                            }
                            this._warnWaitTime -= t;
                            return !0;
                        }
                        this._warnInterval -= t;
                        if (this._fireData && this._fireData.fireType == s.FirePointType.NoAim) this.showWarnLine(0, 2e3); else {
                            var e = this.node.getPosition().add(this.creator.node.getPosition()), i = cc.misc.radiansToDegrees(cc.v2(0, -1).signAngle(this._target.node.getPosition().sub(e)));
                            this._hideWarningAngle = i;
                            var n = this._target.node.x - e.x, a = this._target.node.y - e.y, r = Math.sqrt(n * n + a * a);
                            this.showWarnLine(i, r);
                            this.refreshFaceDir(e.x >= this._target.node.x);
                        }
                        return !0;
                    }
                };
                e.prototype.onFire = function (t) {
                    if (this._fireData) switch (this._fireData.fireType) {
                        case s.FirePointType.EnemyAimSnake:
                            this.onFireAimSnake(this._bulletData, this.creator, this._target, t, !0);
                            break;

                        case s.FirePointType.NoAim:
                            this.onFireAimSnake(this._bulletData, this.creator, this._target, t, !1);
                            break;

                        default:
                            this.onFireAimSnake(this._bulletData, this.creator, this._target, t, !0);
                    } else t && t();
                };
                e.prototype.onFireAimSnake = function (t, e, i, n, a) {
                    var r = this, o = t.paraString;
                    if (o.length >= 3) {
                        var h = Number(o[0]), u = Number(o[1]), p = Number(o[2]), d = o.length > 3 ? Number(o[3]) : 0, f = 1, m = 0, g = 0;
                        if (o.length >= 6) {
                            f = Number(o[4]);
                            m = Number(o[5]);
                            f <= 0 && (f = 1);
                            g = o.length > 7 ? Number(o[6]) : 0;
                        }
                        var _ = 0;
                        a && (this.checkHasWarning() ? _ = this._hideWarningAngle + 180 : e && i && (_ = c.DYTools.getAngle(e.node.position, i.node.position)));
                        for (var y = null, v = null, b = function (a) {
                            u += g * a;
                            var o = null, b = null;
                            if (M._bulletData.bulletType == s.BulletType.Jump) if (5 == M._bulletData.otherPara.length) {
                                var S = Number(M._bulletData.otherPara[1]), k = Number(M._bulletData.otherPara[2]), C = Number(M._bulletData.otherPara[3]), w = Number(M._bulletData.otherPara[4]), A = (S + a * k) / 360 * 2 * Math.PI, T = (P = c.DYTools.random_int(C, w)) * Math.sin(A), D = P * Math.cos(A);
                                o = cc.v3(T, D, 0);
                            } else if (2 == M._bulletData.otherPara.length) {
                                var P;
                                C = 0, w = Number(M._bulletData.otherPara[1]), A = c.DYTools.random_int(0, 360) / 360 * 2 * Math.PI,
                                    T = (P = c.DYTools.random_int(C, w)) * Math.sin(A), D = P * Math.cos(A);
                                b = cc.v3(T, D, 0);
                            }
                            var E = function () {
                                for (var c = t.selfOffset, d = 0; d < h; d++) {
                                    var m = t.bulletOffset, g = u + d * p + _, y = l.BulletMgr.getBullet(!0, r._bulletData.bulletType);
                                    y.init(r._bulletData, e, !0, i);
                                    y.setPos(m, c.rotate(cc.misc.degreesToRadians(g)));
                                    y.setAngle(g);
                                    y.setWave(a);
                                    i && y.setTargetPos(i.node.position);
                                    if (r._bulletData.bulletType == s.BulletType.Jump) {
                                        y.setAngle(0);
                                        null != o ? y.setTargetPos(y.node.position.add(o)) : null != b && i && y.setTargetPos(i.node.position.add(b));
                                    }
                                    y.node.setSiblingIndex(d);
                                }
                                a == f - 1 && n && n();
                            };
                            if (0 == m && 0 == d) {
                                v || (v = []);
                                v.push(E);
                            } else {
                                y || (y = []);
                                if (a > 0 && 0 != m) {
                                    var B = cc.delayTime(m);
                                    y.push(B);
                                }
                                if (0 != d) {
                                    for (var F = t.selfOffset, N = function (n) {
                                        if (n > 0) {
                                            var c = cc.delayTime(d);
                                            y.push(c);
                                        }
                                        var h = cc.callFunc(function () {
                                            var c = t.bulletOffset, h = u + n * p + _, d = l.BulletMgr.getBullet(!0, r._bulletData.bulletType);
                                            d.init(r._bulletData, e, !0, i);
                                            d.setPos(c, F.rotate(cc.misc.degreesToRadians(h)));
                                            d.setAngle(h);
                                            d.setWave(a);
                                            i && d.setTargetPos(i.node.position);
                                            if (r._bulletData.bulletType == s.BulletType.Jump) {
                                                d.setAngle(0);
                                                null != o ? d.setTargetPos(d.node.position.add(o)) : null != b && i && d.setTargetPos(i.node.position.add(b));
                                            }
                                            d.node.setSiblingIndex(n);
                                        });
                                        y.push(h);
                                    }, x = 0; x < h; x++) N(x);
                                    a == f - 1 && n && n();
                                } else {
                                    var R = cc.callFunc(E.bind(M));
                                    y.push(R);
                                }
                            }
                        }, M = this, S = 0; S < f; S++) b(S);
                        if (0 == m && 0 == d) for (var k = 0, C = v; k < C.length; k++) (0, C[k])(); else {
                            var w = cc.sequence(y);
                            w.setTag(999);
                            this.creator.node.stopActionByTag(999);
                            this.creator.node.runAction(w);
                        }
                    } else {
                        c.DYTools.error("bullet anim enemy error", JSON.stringify(t));
                        n && n();
                    }
                };
                e.prototype.playFireAnim = function (e) {
                    var i = this;
                    t.prototype.playFireAnim.call(this);
                    if (this.creator) {
                        this.creator.setAnimEventCallback && this.creator.setAnimEventCallback("bullet", function () {
                            e && e();
                        });
                        this.creator.playAnimation ? this.creator.uiData && 403 == this.creator.uiData.id ? this.creator.addAnimation("bullet", function () {
                            try {
                                i.creator && !i.creator.isDead && i.creator.moveController.setMoveSelf(!0);
                            } catch (t) {
                                c.DYTools.error("eeeeeeeeeeeeeeee");
                            }
                        }) : this.creator.playAnimation("bullet", function () {
                            try {
                                i.creator && !i.creator.isDead && i.creator.moveController.setMoveSelf(!0);
                            } catch (t) {
                                c.DYTools.error("eeeeeeeeeeeeeeee");
                            }
                        }) || e && e() : e && e();
                    } else e && e();
                };
                e.prototype.showWarnLine = function (t, e) {
                    var i = this, n = this.bulletData.paraString;
                    if (n.length >= 3) {
                        var a = Number(n[0]), r = Number(n[1]), s = Number(n[2]);
                        if (this._warnLines.length != a) {
                            this._warnLines.forEach(function (t) {
                                p.WarnLineMgr.putWarnLine(t);
                            });
                            this._warnLines = [];
                            for (var c = 0; c < a; c++) {
                                var l = p.WarnLineMgr.getWarnLine();
                                l.init();
                                l.node.parent = h.MapMgr.blockLayer;
                                l.node.zIndex = 2;
                                this._warnLines.push(l);
                            }
                        }
                        var u = this.node.convertToWorldSpaceAR(cc.Vec2.ZERO);
                        u = this.creator.node.parent.convertToNodeSpaceAR(u);
                        this._warnLines.forEach(function (e, i) {
                            var n = r + i * s + t;
                            e.updateAngle(n);
                            e.updateHeight(10 * o.GValue.ViewHeight);
                            e.node.x = u.x;
                            e.node.y = u.y;
                        });
                        this._warnLines.forEach(function (t) {
                            Math.abs(t.angle - i.getWarnLineAngle()) < 1 && t.updateHeight(e);
                        });
                    }
                };
                e.prototype.createWarnLine = function () { };
                e.prototype.hideWarnLine = function () {
                    this._warnLines.forEach(function (t) {
                        p.WarnLineMgr.putWarnLine(t);
                    });
                    this._warnLines = [];
                    this._isShowingWarning = !1;
                };
                e.prototype.getWarnLineAngle = function () {
                    var t = 0;
                    this._warnLines.forEach(function (e) {
                        t += e.angle;
                    });
                    return t / this._warnLines.length;
                };
                e.prototype.clear = function () {
                    this.hideWarnLine();
                    t.prototype.clear.call(this);
                };
                e.prototype.refreshFaceDir = function (t) {
                    0 == this.creator.rotateType && (this.creator.scaleX = t ? -1 : 1);
                };
                return r([m], e);
            }(d.default));
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../../manager/battle/WarnLineManager": "WarnLineManager",
        "./FirePointBase": "FirePointBase"
    }],
    FirePointSnake: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6d895mzuPlOUobtM9bOw2qS", "FirePointSnake");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../util/Tools"), s = t("../../manager/battle/EnemyManager"), c = t("../../manager/battle/SnakeManager"), l = t("./FirePointBase"), h = t("../../../../frame/manager/FrameManager"), u = t("../../../../config/GameEnum"), p = t("../../../../config/GameConfig"), d = t("../../manager/battle/BossManager"), f = t("../../manager/battle/PropManager"), m = t("../../manager/battle/BulletManager"), g = cc._decorator.ccclass, _ = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.isEnemy = !1;
                e._sprite = null;
                e._target = null;
                e._targetPos = null;
                e._fireNode = null;
                return e;
            }
            e.prototype.getSpriteNodeAngle = function () {
                return this._fireNode ? this._fireNode.angle : 0;
            };
            e.prototype.clear = function () {
                t.prototype.clear.call(this);
                h.FrameMgr.noticeMgr.off(u.EventTypeEnum.OnCircleCDOver, this.onCircleCDOver, this);
            };
            e.prototype.init = function (e, i, n) {
                t.prototype.init.call(this, e, i, n);
                this.initUI();
                h.FrameMgr.noticeMgr.on(u.EventTypeEnum.OnCircleCDOver, this.onCircleCDOver, this);
                h.FrameMgr.noticeMgr.on(u.EventTypeEnum.OnCircleCD, this.onCircleCD, this);
            };
            e.prototype.initUI = function () {
                if (!this._sprite) {
                    this._fireNode = new cc.Node("fire");
                    this.node.addChild(this._fireNode, -1);
                    var t = new cc.Node("sprite");
                    this._fireNode.addChild(t);
                    this._sprite = t.addComponent(cc.Sprite);
                    this._sprite.sizeMode = cc.Sprite.SizeMode.RAW;
                    this._sprite.trim = !1;
                }
            };
            e.prototype.initSkillImg = function () { };
            e.prototype.onCircleCDOver = function () { };
            e.prototype.onCircleCD = function () { };
            e.prototype.setSprite = function (t) {
                this._sprite.spriteFrame = c.SnakeMgr.snakeAtlas.getSpriteFrame(t);
            };
            e.prototype.canShoot = function () {
                if (!this._fireData) return !1;
                var t = s.EnemyMgr.enemys;
                t = (t = t.concat(d.BossMgr.getBosses())).concat(f.PropMgr.atkAbleProps);
                switch (this._fireData.fireType) {
                    case u.FirePointType.SnakeHeadAimEnemy:
                        return !!this.findEnemyInRadius(c.SnakeMgr.getSnakeHead(), t) || this.findEnemyInRadius(this.creator, t);

                    case u.FirePointType.SnakeBodyAimEnemy:
                        return this.findEnemyInRadius(this.creator, t);

                    case u.FirePointType.NoAim:
                        return !0;

                    default:
                        return this.findEnemyInRadius(c.SnakeMgr.getSnakeHead(), t);
                }
                return !1;
            };
            e.prototype.findEnemyInRadius = function (t, e) {
                var i = 99999;
                this._target = null;
                this._targetPos = null;
                for (var n = 0; n < e.length; n++) {
                    var a = e[n];
                    if (a.hurtAble && !a.getIsInSky()) if (a.getHurtAbleEntity) for (var r = a.getHurtAbleEntity(), s = 0; s < r.length; s++) {
                        var c = r[s];
                        (l = c.node.getPosition().sub(t.node.getPosition())).x = Math.abs(l.x);
                        l.y = Math.abs(l.y);
                        if (c.radius) {
                            l.x -= c.radius;
                            l.y -= c.radius;
                        }
                        if (l.x <= this.fireData.fireRange && l.y <= this.fireData.fireRange && (h = Math.sqrt(l.x * l.x + l.y * l.y)) <= this.fireData.fireRange && h < i) {
                            i = h;
                            this._target = c;
                        }
                    } else {
                        var l;
                        (l = a.node.getPosition().sub(t.node.getPosition())).x = Math.abs(l.x);
                        l.y = Math.abs(l.y);
                        if (a.radius) {
                            l.x -= a.radius;
                            l.y -= a.radius;
                        }
                        if (l.x <= this.fireData.fireRange && l.y <= this.fireData.fireRange) {
                            var h;
                            if ((h = Math.sqrt(l.x * l.x + l.y * l.y)) <= this.fireData.fireRange && h < i) {
                                i = h;
                                this._target = a;
                            }
                        }
                    }
                }
                if (!this._target) return !1;
                var u = o.DYTools.getAngle(this.creator.node.position, this._target.node.position);
                u = u == u ? u : this._fireNode.angle;
                this._targetPos = this._target.node.getPosition();
                this.setFireSpriteAngle(u);
                return !0;
            };
            e.prototype.updatePos = function (t) {
                if (this.creator) {
                    this.node.x = this.creator.node.x + this.fireData.offset.x;
                    this.node.y = this.creator.node.y + this.fireData.offset.y;
                    this.node.opacity = this.creator.node.opacity;
                    this.setFireAnimPosition();
                    if (this._fireData.fireType == u.FirePointType.NoAim) {
                        var e = this.bulletData.paraString;
                        if (e.length >= 3) {
                            var i = Number(e[1]);
                            this._fireNode.angle = i;
                        }
                    } else if (!this._target) {
                        var n = this._fireNode.angle, a = this.creator.node.children[0].angle, r = a - this._fireNode.angle, o = 300 * t;
                        (r = (r + 360) % 360) < 180 ? o > r ? n = a : n += o : o > 360 - r ? n = a : n -= o;
                        this._fireNode.angle = n;
                    }
                }
            };
            e.prototype.onFire = function (t) {
                switch (this._fireData.fireType) {
                    case u.FirePointType.SnakeHeadAimEnemy:
                    case u.FirePointType.SnakeBodyAimEnemy:
                        this.onFireSnakeAimEnemy(this._bulletData, this.creator, this._target, t, !0);
                        break;

                    case u.FirePointType.NoAim:
                        this.onFireSnakeAimEnemy(this._bulletData, this.creator, this._target, t, !1);
                        break;

                    default:
                        this.onFireSnakeAimEnemy(this._bulletData, this.creator, this._target, t, !0);
                }
            };
            e.prototype.onFireSnakeAimEnemy = function (t, e, i, n, a) {
                var r = t.paraString;
                if (r.length >= 3) {
                    var s = Number(r[0]), c = Number(r[1]), l = Number(r[2]), h = 1, u = 0;
                    if (r.length >= 5) {
                        h = Number(r[3]);
                        u = Number(r[4]);
                        h <= 0 && (h = 1);
                    }
                    var p = null;
                    i && i.node && cc.isValid(i.node) && (p = i);
                    var d = 0;
                    if (a) if (i) {
                        var f = null;
                        f = i.node && cc.isValid(i.node) ? i.node.getPosition() : this._targetPos;
                        var g = i.getCollider();
                        g && (f = g.node.getPosition().add(g.getOffset()));
                        d = o.DYTools.getAngle(e.node.position, f);
                    } else d = e.angle;
                    for (var _ = [], y = function (i) {
                        var a = cc.delayTime(i * u), r = cc.callFunc(function () {
                            for (var a = 0; a < s; a++) {
                                var r = t.bulletOffset, o = c + a * l + d, u = m.BulletMgr.getBullet(!1, t.bulletType);
                                u.init(t, e, !1, p);
                                u.setPos(r);
                                u.setAngle(o);
                                u.setWave(i);
                                u.node.zIndex = a;
                            }
                            i == h - 1 && n && n();
                        });
                        _.push(a);
                        _.push(r);
                    }, v = 0; v < h; v++) y(v);
                    var b = cc.sequence(_);
                    b.setTag(999);
                    this.node.stopActionByTag(999);
                    this.node.runAction(b);
                } else {
                    o.DYTools.error("bullet anim enemy error", JSON.stringify(t));
                    n && n();
                }
            };
            e.prototype.playFireAnim = function (e) {
                t.prototype.playFireAnim.call(this);
                this.setFireAnimPosition();
                cc.tween(this._sprite.node).to(2 * p.GConfig.ActionInterval, {
                    y: -25
                }).call(function () {
                    e && e();
                }).to(3 * p.GConfig.ActionInterval, {
                    y: 17
                }).to(2 * p.GConfig.ActionInterval, {
                    y: 0
                }).start();
            };
            e.prototype.setFireAnimPosition = function () {
                if (this._frameAnim && this._fireNode && this._frameAnim.isPlaying()) {
                    var t = this.fireData.effectOffset.x, e = this.fireData.effectOffset.y, i = cc.v2(t, e).rotate(cc.misc.degreesToRadians(this._fireNode.angle));
                    this._frameAnim.node.setPosition(i.add(this.node.getPosition()));
                    this._frameAnim.node.angle = this._fireNode.angle;
                }
            };
            e.prototype.setFireSpriteAngle = function (t) {
                if (this._fireNode && this._target) {
                    var e = t;
                    this._fireNode.angle = e;
                }
            };
            return r([g], e);
        }(l.default);
        i.default = _;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/BossManager": "BossManager",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/PropManager": "PropManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./FirePointBase": "FirePointBase"
    }],
    FloatTip: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6dbe9874LJM+oX5cD7hkgNH", "FloatTip");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../frame/ui/PopupBase"), s = t("../../../../config/GameEnum"), c = cc._decorator, l = c.ccclass, h = c.property, u = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.atlas = null;
                e.bg = null;
                e.text = null;
                e.textLab = null;
                return e;
            }
            e.prototype.init = function (t) {
                t.bgType && (this.bg.spriteFrame = this.atlas.getSpriteFrame("tipBg_" + t.bgType));
                t.textId ? this.text.spriteFrame = this.atlas.getSpriteFrame("zi" + t.textId) : this.text.spriteFrame = null;
                t.txt && (this.textLab.string = t.txt);
                this.node.y = -60;
            };
            e.prototype.show = function (t) {
                var e = this;
                this.init(t);
                cc.tween(this.node).to(.3, {
                    y: 100
                }).delay(.5).call(function () {
                    e.hide(!1);
                }).start();
            };
            e.attr = {
                layer: 3,
                name: "FloatTip",
                cache: s.PopupCacheMode.Normal
            };
            r([h(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            r([h(cc.Sprite)], e.prototype, "bg", void 0);
            r([h(cc.Sprite)], e.prototype, "text", void 0);
            r([h(cc.Label)], e.prototype, "textLab", void 0);
            return r([l], e);
        }(o.default);
        i.default = u;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/ui/PopupBase": "PopupBase"
    }],
    FollowMove: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6812c+fplJNdIStGcDOaCp5", "FollowMove");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../data/manager/ConfigDataManager"), c = t("../../../../../frame/manager/FrameManager"), l = t("../../../../battle/manager/battle/GameRuleManager"), h = t("../../../../battle/manager/battle/SnakeManager"), u = cc._decorator, p = u.ccclass, d = u.property, f = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.touchBg = null;
                e.touchPoint = null;
                e.bgNode = null;
                e.fontNode = null;
                e.guideSide = null;
                e.showBack = null;
                e.showPoint = null;
                e._firstTouchId = -1;
                e._deltaSumX = 0;
                e._deltaSumY = 0;
                e.dirNormalize = cc.Vec2.ZERO;
                e._responseAble = !1;
                return e;
            }
            e.prototype.onEnable = function () {
                this.node.on(cc.Node.EventType.TOUCH_START, this._onTouchStart, this);
                this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
                this.node.on(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);
                this.node.on(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);
                c.FrameMgr.noticeMgr.on(o.EventTypeEnum.GameStateChange, this._onGameStateChange, this);
                this._disPlayLogic(!1);
                this._disPlayShow(!1);
            };
            e.prototype.onDisable = function () {
                this.node.off(cc.Node.EventType.TOUCH_START, this._onTouchStart, this);
                this.node.off(cc.Node.EventType.TOUCH_MOVE, this._onTouchMove, this);
                this.node.off(cc.Node.EventType.TOUCH_END, this._onTouchEnd, this);
                this.node.off(cc.Node.EventType.TOUCH_CANCEL, this._onTouchCancel, this);
                c.FrameMgr.noticeMgr.off(o.EventTypeEnum.GameStateChange, this._onGameStateChange, this);
            };
            e.prototype._onGameStateChange = function (t) {
                if (t == o.GameState.Over || t == o.GameState.WillOver || t == o.GameState.SnakeDie) {
                    this._hideAll();
                    c.FrameMgr.noticeMgr.emit(o.EventTypeEnum.TouchStart);
                }
            };
            e.prototype._onGuide = function () {
                this._responseAble = !0;
            };
            e.prototype._onGuideBegin = function () {
                this._responseAble = !1;
                this.bgNode.active = !0;
                this.bgNode.opacity = 170;
                this.guideSide.node.active = !0;
                this.guideSide.animation = "play";
            };
            e.prototype._onGuideOver = function () {
                this._responseAble = !0;
                this.bgNode.active = !1;
                this.bgNode.opacity = 0;
                this.guideSide.node.active = !1;
                this.guideSide.animation = null;
            };
            e.prototype._onTouchStart = function (t) {
                -1 == this._firstTouchId && (this._firstTouchId = t.getID());
                if (this._firstTouchId == t.getID()) {
                    this._hideBackGround();
                    c.FrameMgr.noticeMgr.emit(o.EventTypeEnum.TouchStart);
                    h.SnakeMgr.headTargetPos = cc.v2(h.SnakeMgr.getSnakeHead().node.position);
                }
            };
            e.prototype._onTouchMove = function (t) {
                if (this._firstTouchId == t.getID() && this._responseAble) {
                    var e = t.getDelta().x, i = t.getDelta().y;
                    this._deltaSumX += e;
                    this._deltaSumY += i;
                    if (!(cc.v2(this._deltaSumX, this._deltaSumY).mag() < 4)) {
                        var n = h.SnakeMgr.touchRat ? h.SnakeMgr.touchRat : 1;
                        h.SnakeMgr.headTargetPos.x += this._deltaSumX * n;
                        h.SnakeMgr.headTargetPos.y += this._deltaSumY * n;
                        this.dirNormalize.x = this._deltaSumX;
                        this.dirNormalize.y = this._deltaSumY;
                        c.FrameMgr.noticeMgr.emit(o.EventTypeEnum.TouchMove, {
                            dir: this.dirNormalize
                        });
                        this._deltaSumX = 0;
                        this._deltaSumY = 0;
                    }
                }
            };
            e.prototype._onTouchEnd = function (t) {
                this._firstTouchId == t.getID() && this._responseAble && l.GameRuleMgr.isInBattle() && this._end();
            };
            e.prototype._onTouchCancel = function (t) {
                this._firstTouchId == t.getID() && this._end();
            };
            e.prototype._end = function () {
                this._showBackGround();
                c.FrameMgr.noticeMgr.emit(o.EventTypeEnum.TouchEnd);
            };
            e.prototype._disPlayShow = function (t) {
                this.showBack.active = t;
                this.showPoint.active = t;
            };
            e.prototype._disPlayLogic = function (t) {
                this.touchBg.active = t;
                this.touchPoint.active = t;
            };
            e.prototype._showBackGround = function () {
                this.bgNode.active = !0;
                this.fontNode.active = !0;
                var t = s.ConfigDataMgr.getGlobalDataNumArr(o.GlobalKey.Slow);
                this.bgNode.stopAllActions();
                this.bgNode.opacity = 0;
                this.fontNode.opacity = 0;
                cc.tween(this.bgNode).delay(t[0]).to(1, {
                    opacity: 178.5
                }).start();
                this.fontNode.stopAllActions();
                cc.tween(this.fontNode).delay(t[0]).to(1, {
                    opacity: 255
                }).start();
                this.showBack.active = !1;
                this.showPoint.active = !1;
            };
            e.prototype._hideBackGround = function () {
                this.bgNode.stopAllActions();
                this.fontNode.stopAllActions();
                this.bgNode.active = !1;
                this.fontNode.active = !1;
            };
            e.prototype._hideAll = function () {
                this.bgNode.stopAllActions();
                this.fontNode.stopAllActions();
                this.bgNode.active = !1;
                this.fontNode.active = !1;
                this._disPlayShow(!1);
            };
            r([d(cc.Node)], e.prototype, "touchBg", void 0);
            r([d(cc.Node)], e.prototype, "touchPoint", void 0);
            r([d(cc.Node)], e.prototype, "bgNode", void 0);
            r([d(cc.Node)], e.prototype, "fontNode", void 0);
            r([d(sp.Skeleton)], e.prototype, "guideSide", void 0);
            r([d(cc.Node)], e.prototype, "showBack", void 0);
            r([d(cc.Node)], e.prototype, "showPoint", void 0);
            return r([p], e);
        }(cc.Component);
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../battle/manager/battle/GameRuleManager": "GameRuleManager",
        "../../../../battle/manager/battle/SnakeManager": "SnakeManager"
    }],
    FrameAnim: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "be95ep8oHFBL4uPYHpTQhoJ", "FrameAnim");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../config/GameConfig"), s = t("../../logic/battle/manager/battle/BattleManager"), c = t("../../logic/battle/manager/battle/GameRuleManager"), l = t("../../util/Tools"), h = cc._decorator, u = h.ccclass, p = h.property, d = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.sprite = null;
                e._atlas = null;
                e._imageNum = 0;
                e._frameDuration = 0;
                e._hideWhenStop = !0;
                e._slowAble = !0;
                e.imageArr = [];
                e.playTimes = 0;
                e.maxPlayTimes = cc.macro.REPEAT_FOREVER;
                e.time = 0;
                e.index = 0;
                e._isPlaying = !1;
                e.willStop = !1;
                e._loopCall = null;
                e._playCall = null;
                e._stopCall = null;
                e.m_duration = 0;
                e.m_playTime = -1;
                e.sWidth = -1;
                e.sHeight = -1;
                return e;
            }
            e.prototype.init = function (t, e, i, n, a, r, o, s) {
                void 0 === a && (a = null);
                void 0 === r && (r = null);
                void 0 === o && (o = null);
                void 0 === s && (s = !0);
                this._hideWhenStop = s;
                this._hideWhenStop && (this.node.opacity = 0);
                this._atlas = t;
                this._imageNum = i;
                this._frameDuration = n;
                this._loopCall = a;
                this._playCall = o;
                this._stopCall = r;
                this._isPlaying = !1;
                this.imageArr.splice(0);
                if (this._atlas) for (var c = 0; c < i; c++) this.imageArr.push(this._atlas.getSpriteFrame(e + c)); else l.DYTools.error("no attt", e);
                if (!this.sprite) {
                    this.sprite = this.node.addComponent(cc.Sprite);
                    this.sprite.sizeMode = cc.Sprite.SizeMode.RAW;
                    this.sprite.trim = !1;
                }
            };
            e.prototype.clear = function () {
                this.imageArr.splice(0);
                this._isPlaying = !1;
                this._imageNum = 0;
                this._loopCall = null;
                this._playCall = null;
                this._stopCall = null;
                this._atlas = null;
            };
            e.prototype.setAnchor = function (t) {
                this.sprite && this.sprite.node.setAnchorPoint(t);
            };
            Object.defineProperty(e.prototype, "atlas", {
                get: function () {
                    return this._atlas;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.dstBlendFacotr = function () { };
            e.prototype.setDstBlendFactorMode1 = function () {
                this.sprite && (this.sprite.dstBlendFactor = cc.macro.BlendFactor.ONE);
            };
            e.prototype.setStopCall = function (t) {
                this._stopCall = t;
            };
            e.prototype.setDuration = function (t) {
                this.m_duration = t;
            };
            e.prototype.setSize = function (t, e) {
                void 0 === e && (e = 1);
                if (1 == e) {
                    this.sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;
                    this.node.setContentSize(t);
                } else if (2 == e) {
                    for (var i = 0, n = this.imageArr; i < n.length; i++) {
                        var a = n[i];
                        a.insetBottom = 20;
                        a.insetTop = 20;
                        a.insetLeft = 20;
                        a.insetRight = 20;
                    }
                    this.sprite.type = cc.Sprite.Type.SLICED;
                    this.sprite.sizeMode = cc.Sprite.SizeMode.CUSTOM;
                    this.node.setContentSize(t);
                }
            };
            e.prototype.getSpSize0 = function () {
                return this.imageArr[0].getOriginalSize();
            };
            Object.defineProperty(e.prototype, "color", {
                set: function (t) {
                    this.sprite.node.color = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.play = function (t, e) {
                void 0 === t && (t = 0);
                void 0 === e && (e = 0);
                this.playTimes = 0;
                this.maxPlayTimes = t > 0 ? t : cc.macro.REPEAT_FOREVER;
                this.time = 0;
                this.index = e;
                this.sprite.spriteFrame = this.imageArr[0];
                this.node.opacity = 255;
                this._isPlaying = !0;
                this._playCall && this._playCall();
                this.willStop = !1;
            };
            e.prototype.stop = function (t) {
                void 0 === t && (t = !1);
                this._hideWhenStop && (t ? cc.tween(this.node).to(4 * o.GConfig.ActionInterval, {
                    opacity: 0
                }).start() : this.node.opacity = 0);
                this._isPlaying = !1;
                this._stopCall && this._stopCall();
                this.willStop = !1;
            };
            e.prototype.setWillStop = function () {
                this.willStop = !0;
            };
            e.prototype.isPlaying = function () {
                return this._isPlaying;
            };
            e.prototype.update = function (t) {
                if (this._slowAble) {
                    if (!c.GameRuleMgr.isCanUpdate()) return;
                    t /= s.BattleMgr.timeScale;
                }
                this.updateGameLogic(t);
            };
            e.prototype.updateGameLogic = function (t) {
                if (this._isPlaying) if (this.m_playTime >= 0) {
                    this.m_playTime += t;
                    if (this.m_playTime > this.m_duration) {
                        this.m_playTime = -1;
                        this.node.opacity = 255;
                    }
                } else {
                    this.time += t;
                    if (this.time >= this._frameDuration) {
                        this.index++;
                        if (this.index >= this._imageNum) {
                            this.playTimes++;
                            this.index = 0;
                            this._loopCall && this._loopCall();
                            if (this.willStop) this.stop(); else if (this.playTimes >= this.maxPlayTimes) {
                                this.stop();
                                return;
                            }
                            if (this.m_duration > 0) {
                                this.m_playTime = 0;
                                this.node.opacity = 0;
                            }
                        }
                        this.time = 0;
                        this.sprite.spriteFrame = this.imageArr[this.index];
                        this.sWidth >= 0 && (this.sprite.node.width = this.sWidth);
                        this.sHeight >= 0 && (this.sprite.node.height = this.sHeight);
                    }
                }
            };
            Object.defineProperty(e.prototype, "slowAble", {
                set: function (t) {
                    this._slowAble = t;
                },
                enumerable: !1,
                configurable: !0
            });
            r([p(cc.Sprite)], e.prototype, "sprite", void 0);
            return r([u], e);
        }(cc.Component);
        i.default = d;
        cc._RF.pop();
    }, {
        "../../config/GameConfig": "GameConfig",
        "../../logic/battle/manager/battle/BattleManager": "BattleManager",
        "../../logic/battle/manager/battle/GameRuleManager": "GameRuleManager",
        "../../util/Tools": "Tools"
    }],
    FrameManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "3d23a3sKGZPLKiSZaVnp7/h", "FrameManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.FrameMgr = i.FrameManager = void 0;
        var n = t("../../platform/PlatformManager"), a = t("./AudioManager"), r = t("./LanguageManager"), o = t("./LoadManager"), s = t("./NoticeManager"), c = t("./PopupManager"), l = t("./ReportManager"), h = t("./UIManager"), u = function () {
            function t() {
                this.loadMgr = o.LoadMgr;
                this.audioMgr = a.AudioMgr;
                this.popupMgr = c.PopupMgr;
                this.platformMgr = n.PlatformMgr;
                this.noticeMgr = s.NoticeMgr;
                this.uiManager = new h.default();
                this.reportMgr = l.ReportMgr;
                this.languageMgr = r.LanguageMgr;
            }
            t.instance = new t();
            return t;
        }();
        i.FrameManager = u;
        i.FrameMgr = u.instance;
        cc._RF.pop();
    }, {
        "../../platform/PlatformManager": "PlatformManager",
        "./AudioManager": "AudioManager",
        "./LanguageManager": "LanguageManager",
        "./LoadManager": "LoadManager",
        "./NoticeManager": "NoticeManager",
        "./PopupManager": "PopupManager",
        "./ReportManager": "ReportManager",
        "./UIManager": "UIManager"
    }],
    FullScreen: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2a404PuQq5LI6myz7m/mYzh", "FullScreen");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../config/GameConst"), s = cc._decorator, c = s.ccclass, l = (s.property,
            function (t) {
                a(e, t);
                function e() {
                    return null !== t && t.apply(this, arguments) || this;
                }
                e.prototype.onLoad = function () {
                    this.node.width = o.GValue.ViewSize.width;
                    this.node.height = o.GValue.ViewSize.height;
                    o.GValue.IPADWidth > 0 && (this.node.width = o.GValue.IPADWidth);
                };
                return r([c], e);
            }(cc.Component));
        i.default = l;
        cc._RF.pop();
    }, {
        "../../config/GameConst": "GameConst"
    }],
    GameConfig: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "521fcX3gRxJSpf5fD4W7CiT", "GameConfig");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.GConfig = void 0;
        var n, a;
        (function (t) {
            t[t.Debug = 0] = "Debug";
            t[t.Release = 1] = "Release";
        })(n || (n = {}));
        (function (t) {
            t[t.Local = 0] = "Local";
            t[t.Android = 2] = "Android";
            t[t.iOS = 3] = "iOS";
        })(a || (a = {}));
        var r = function () {
            function t() {
                this.version = "0.0.4";
                this.versionCode = 4;
                this.environment = n.Release;
                this.channel = a.Android;
                this.ReportAble = !0
                this.logAble = !1;
                this.cheatAble = 1;
                this.cheatShow = 1;
                this.ColliderDraw = 1;
                this.ActionInterval = .0333;
                this.HawkeyeiOSForeign = ["snake_ios_overseas", "snake_", "1019"];
            }
            Object.defineProperty(t.prototype, "isDebug", {
                get: function () {
                    return 1; //this.environment == n.Debug;
                },
                enumerable: !1,
                configurable: !0
            });
            t.prototype.isChannel = function (t) {
                return this.channel == t;
            };
            t.prototype.getChannel = function () {
                return this.channel;
            };
            t.prototype.getHawkeyeConfig = function () {
                switch (this.getChannel()) {
                    case a.Local:
                    case a.Android:
                    case a.iOS:
                    default:
                        return this.HawkeyeiOSForeign;
                }
            };
            t.instance = new t();
            return t;
        }();
        i.default = r;
        i.GConfig = r.instance;
        cc._RF.pop();
    }, {}],
    GameConst: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "91cd9s1JSZJ+Y0ktbI5lVOl", "GameConst");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.GValue = void 0;
        var n = t("../data/manager/ConfigDataManager"), a = t("../util/Tools"), r = t("./GameEnum"), o = function () {
            function t() {
                this.ViewSize = cc.Size.ZERO;
                this.ViewHeight = 0;
                this.ViewWidth = 0;
                this.ViewCenter = cc.Vec2.ZERO;
                this.ScreenFit = !0;
                this.IPADWidth = 0;
                this.IPADHeight = 0;
                this.SafeOffsetY = 0;
                this.LowerMemory = !1;
                this.OnlineTime = 0;
                this.FirstMain = !0;
                this.CommonAtlas = null;
                this.InitPower = 0;
                this.PowerTime = 0;
                this.pfNum = null;
                this.pfFrameAnim = null;
                this.pfPpModal = null;
                this.MainScene = null;
                this.NewStageReward = !1;
                this.MainSceneTag = r.MainSceneTag.Main;
                this.MainSceneGuide = 0;
                this.CurResId = 0;
                this.ResFinished = !1;
                this.BossResStage = 0;
                this.BattleFinish = !1;
                this.BattleToMain = !1;
                this.BattleNewStage = !1;
                this.BattleCamera = null;
                this.BattleCameraNode = null;
                this.enemyAtkAble = !0;
                this.stopEnemyId = 0;
                this.guideAble = !0;
                this.enemyOnlyId = !1;
                this.atkCirtProb = 0;
                this.atkCirtAtkRatio = 0;
                this.circleNum = 0;
                this.circleAtkRatio = 0;
                this.circleCD = 0;
                this.skillAtkAddRatio = 0;
                this.skillCD = 0;
                this.skillCirtProb = 0;
                this.skillCirtAtkRatio = 0;
                this.skillAddNormalAtk = 0;
            }
            t.prototype.init = function () {
                this.ViewSize = cc.view.getVisibleSize();
                this.ViewHeight = this.ViewSize.height;
                this.ViewWidth = this.ViewSize.width;
                this.ViewCenter = cc.v2(this.ViewWidth >> 1, this.ViewHeight >> 1);
                a.DYTools.log("vvvvvvvvv", this.ViewWidth, this.ViewHeight);
            };
            t.prototype.initData = function () {
                this.InitPower = Math.round(n.ConfigDataMgr.getGlobalDataNum(r.GlobalKey.PowerRecoverMax));
                this.PowerTime = Math.round(n.ConfigDataMgr.getGlobalDataNum(r.GlobalKey.PowerPerTime));
            };
            Object.defineProperty(t.prototype, "MaxPower", {
                get: function () {
                    return this.InitPower;
                },
                enumerable: !1,
                configurable: !0
            });
            t.instance = new t();
            return t;
        }();
        i.default = o;
        i.GValue = o.instance;
        cc._RF.pop();
    }, {
        "../data/manager/ConfigDataManager": "ConfigDataManager",
        "../util/Tools": "Tools",
        "./GameEnum": "GameEnum"
    }],
    GameData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "96c60UBhElF5YoAI4t5Xppj", "GameData");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.GData = i.GameData = void 0;
        var n = t("../../config/GameConfig"), a = t("../../frame/manager/FrameManager"), r = t("../../util/Tools"), o = function () {
            function t() {
                this.versionCode = 0;
                this.userId = "";
                this.registerTime = 0;
                this.newPlayer = 1;
                this.powerTimes = 0;
                this.language = 2;
                this.loadingStep = [];
                this.shopGuide = 0;
                this.guide = [];
                this.stageReward = [];
                this.firstRevive = 1;
                this.ptt = 0;
                this.pShopFreeBox = 0;
                this.shopBoxOpenTimes = {};
                this.stage = 1;
                this.finishStage = 0;
                this.gcsl = 0;
                this.dcsl = 0;
                this.pcsl = 0;
                this.eInfo = [];
                this.snakeArr = [101];
                this.snakeLv = {};
                this.curSnakeId = 10101;
                this.curSnakeEvolutionNum = 0;
                this.turretLv = 1;
                this.turretNum = 1;
                this.item = {};
                this.fetter = {};
            }
            t.prototype.loadJson = function (t) {
                this.versionCode = r.DYTools.setInt(t, "versionCode");
                this.userId = r.DYTools.setString(t, "userId");
                this.registerTime = r.DYTools.setNum(t, "registerTime");
                this.newPlayer = r.DYTools.setInt(t, "newPlayer");
                this.powerTimes = r.DYTools.setInt(t, "powerTimes");
                this.language = r.DYTools.setInt(t, "language");
                this.loadingStep = r.DYTools.setNumArr(t, "loadingStep", null, null);
                this.shopGuide = r.DYTools.setInt(t, "shopGuide");
                this.guide = r.DYTools.setNumArr(t, "guide", null, null);
                this.stageReward = r.DYTools.setNumArr(t, "stageReward", null, null);
                this.firstRevive = r.DYTools.setInt(t, "firstRevive");
                this.ptt = r.DYTools.setInt(t, "ptt");
                this.pShopFreeBox = r.DYTools.setInt(t, "pShopFreeBox");
                this.stage = r.DYTools.setInt(t, "stage");
                this.finishStage = r.DYTools.setInt(t, "finishStage");
                this.gcsl = r.DYTools.setInt(t, "gcsl");
                this.dcsl = r.DYTools.setInt(t, "dcsl");
                this.pcsl = r.DYTools.setInt(t, "pcsl");
                this.eInfo = r.DYTools.setIntArr(t, "eInfo", null);
                this.snakeArr = r.DYTools.setNumArr(t, "snakeArr", null, null);
                this.curSnakeId = r.DYTools.setInt(t, "curSnakeId", 1e4);
                this.curSnakeEvolutionNum = r.DYTools.setInt(t, "curSnakeEvolutionNum", 0);
                this.turretLv = r.DYTools.setInt(t, "turretLv", 1);
                this.turretNum = r.DYTools.setInt(t, "turretNum", 1);
                if (t.hasOwnProperty("snakeLv")) {
                    var e = t.snakeLv;
                    for (var i in e) {
                        var n = parseInt(i), a = parseInt(e[n]);
                        this.snakeLv[n] = a;
                    }
                }
                if (t.hasOwnProperty("item")) {
                    e = t.item;
                    for (var i in e) {
                        n = parseInt(i), a = parseInt(e[n]);
                        this.item[n] = a;
                    }
                }
                if (t.hasOwnProperty("shopBoxOpenTimes")) {
                    e = t.shopBoxOpenTimes;
                    for (var i in e) {
                        n = parseInt(i);
                        var o = parseInt(e[n]);
                        this.shopBoxOpenTimes[n] = o;
                    }
                }
                this.fetter = r.DYTools.setNumberDict(t, "fetter");
            };
            return t;
        }(), s = function () {
            function t() {
                this.sound = 1;
                this.music = 1;
                this.touchType = 0;
                this.finishCount = 0;
            }
            t.prototype.loadJson = function (t) {
                this.sound = r.DYTools.setInt(t, "sound");
                this.music = r.DYTools.setInt(t, "music");
                this.touchType = r.DYTools.setInt(t, "touchType");
                this.finishCount = r.DYTools.setInt(t, "finishCount");
            };
            return t;
        }(), c = function () {
            function t() {
                this._userDataName = "SUD4";
                this._localDataName = "SLD4";
                this._battleDataName = "BattleData4";
                this.m_secretNum = 7107957142;
                this.m_userData = new o();
                this.m_localData = new s();
                this._timestamp = 0;
            }
            Object.defineProperty(t.prototype, "timestamp", {
                get: function () {
                    return this._timestamp;
                },
                set: function (t) {
                    this._timestamp = t;
                },
                enumerable: !1,
                configurable: !0
            });
            t.prototype.saveData = function (t, e) {
                cc.sys.localStorage.setItem(t, e);
            };
            t.prototype.getData = function (t) {
                return cc.sys.localStorage.getItem(t);
            };
            t.prototype.saveUserData = function () {
                this.saveData(this._userDataName, JSON.stringify(this.m_userData));
            };
            t.prototype.saveLocalData = function () {
                this.saveData(this._localDataName, JSON.stringify(this.m_localData));
            };
            t.prototype.init = function () {
                this.timestamp = r.DYTools.getPhoneTimestamp();
                this.initLocalData();
                this.initUserData();
                this.checkVersion();
            };
            t.prototype.clearData = function () {
                this.m_userData = new o();
                this.m_localData = new s();
                this.getUserID();
                this.saveUserData();
            };
            t.prototype.initUserData = function () {
                var t = this.getData(this._userDataName);
                if (t && "" != t) {
                    var e = JSON.parse(t);
                    this.m_userData.loadJson(e);
                } else this.getUserID();
            };
            t.prototype.initLocalData = function () {
                var t = this.getData(this._localDataName);
                if (t && "" != t) {
                    var e = JSON.parse(t);
                    this.m_localData.loadJson(e);
                }
            };
            t.prototype.checkVersion = function () {
                if (0 == this.m_userData.versionCode) {
                    this.m_userData.versionCode = n.GConfig.versionCode;
                    this.m_userData.gcsl = 0 ^ i.GData.m_secretNum;
                    this.m_userData.dcsl = 0 ^ i.GData.m_secretNum;
                    this.m_userData.pcsl = 0 ^ i.GData.m_secretNum;
                    this.saveUserData();
                } else if (this.m_userData.versionCode < n.GConfig.versionCode) {
                    this.m_userData.versionCode = n.GConfig.versionCode;
                    this.saveUserData();
                }
            };
            t.prototype.getSound = function () {
                return 1 == this.m_localData.sound;
            };
            t.prototype.setSound = function (t) {
                this.m_localData.sound = t ? 1 : 0;
                this.saveLocalData();
            };
            t.prototype.getMusic = function () {
                return 1 == this.m_localData.music;
            };
            t.prototype.setMusic = function (t) {
                this.m_localData.music = t ? 1 : 0;
                this.saveLocalData();
            };
            t.prototype.getTouchType = function () {
                return this.m_localData.touchType;
            };
            t.prototype.setTouchType = function (t) {
                this.m_localData.touchType = t;
                this.saveLocalData();
            };
            t.prototype.getExportCount = function () {
                return this.m_localData.finishCount;
            };
            t.prototype.setExportCount = function (t) {
                this.m_localData.finishCount = t;
                this.saveLocalData();
            };
            t.prototype.getUserID = function () {
                if ("" == this.m_userData.userId) {
                    this.m_userData.newPlayer = 1;
                    this.m_userData.userId = r.DYTools.getRandomUserId();
                    this.m_userData.registerTime = r.DYTools.getCurTimestamp();
                    this.saveUserData();
                }
                return this.m_userData.userId;
            };
            t.prototype.getRegisterTime = function () {
                return this.m_userData.registerTime;
            };
            t.prototype.getIsNewPlayer = function () {
                return 1 == this.m_userData.newPlayer;
            };
            t.prototype.setIsNewPlayer = function (t) {
                this.m_userData.newPlayer = t ? 1 : 0;
                this.saveUserData();
            };
            t.prototype.getPowerTimes = function () {
                return this.m_userData.powerTimes;
            };
            t.prototype.setPowerTimes = function (t) {
                this.m_userData.powerTimes = t;
                this.saveUserData();
            };
            t.prototype.getLanguage = function () {
                return this.m_userData.language;
            };
            t.prototype.setLanguage = function (t) {
                this.m_userData.language = t;
                this.saveUserData();
            };
            t.prototype.getLoadingStep = function (t) {
                return r.DYTools.arrContain(this.m_userData.loadingStep, t);
            };
            t.prototype.setLoadingStep = function (t) {
                if (!r.DYTools.arrContain(this.m_userData.loadingStep, t)) {
                    this.m_userData.loadingStep.push(t);
                    this.saveUserData();
                }
            };
            t.prototype.getShopGuide = function () {
                return this.m_userData.shopGuide;
            };
            t.prototype.setShopGuide = function (t) {
                this.m_userData.shopGuide = t;
                this.saveUserData();
            };
            t.prototype.getCurStage = function () {
                return this.m_userData.stage;
            };
            t.prototype.setCurStage = function (t) {
                this.m_userData.stage = t;
                this.saveUserData();
            };
            t.prototype.getFinishStage = function () {
                return this.m_userData.finishStage;
            };
            t.prototype.setFinishStage = function (t) {
                this.m_userData.finishStage = t;
                this.saveUserData();
            };
            t.prototype.getGold = function () {
                return this.m_userData.gcsl ^ this.m_secretNum;
            };
            t.prototype.setGold = function (t) {
                this.m_userData.gcsl = Math.round(t) ^ this.m_secretNum;
                this.saveUserData();
            };
            t.prototype.getDiamond = function () {
                return this.m_userData.dcsl ^ this.m_secretNum;
            };
            t.prototype.setDiamond = function (t) {
                this.m_userData.dcsl = Math.round(t) ^ this.m_secretNum;
                this.saveUserData();
            };
            t.prototype.getPower = function () {
                return this.m_userData.pcsl ^ this.m_secretNum;
            };
            t.prototype.setPower = function (t) {
                this.m_userData.pcsl = Math.round(t) ^ this.m_secretNum;
                this.saveUserData();
            };
            t.prototype.getEnemyInfo = function (t) {
                return !r.DYTools.arrContain(this.m_userData.eInfo, t);
            };
            t.prototype.setEnemyInfo = function (t) {
                this.m_userData.eInfo.push(t);
                this.saveUserData();
            };
            t.prototype.isGuided = function (t) {
                return r.DYTools.arrContain(this.m_userData.guide, t);
            };
            t.prototype.setGuided = function (t) {
                if (!r.DYTools.arrContain(this.m_userData.guide, t)) {
                    a.FrameMgr.reportMgr.sendReportGuide(t);
                    this.m_userData.guide.push(t);
                    this.saveUserData();
                }
            };
            t.prototype.isFirstRevive = function () {
                return 1 == this.m_userData.firstRevive;
            };
            t.prototype.setFirstRevive = function () {
                this.m_userData.firstRevive = 0;
                this.saveUserData();
            };
            t.prototype.getPowerTimestamp = function () {
                return this.m_userData.ptt;
            };
            t.prototype.setPowerTimestamp = function (t) {
                this.m_userData.ptt = Math.round(t);
                this.saveUserData();
            };
            t.prototype.getShopFreeBoxTimestamp = function () {
                return this.m_userData.pShopFreeBox;
            };
            t.prototype.setShopFreeBoxTimestamp = function (t) {
                this.m_userData.pShopFreeBox = Math.round(t);
                this.saveUserData();
            };
            t.prototype.getShopBoxOpenTimes = function (t) {
                var e = this.m_userData.shopBoxOpenTimes[t];
                if (!e) {
                    e = 0;
                    this.m_userData.shopBoxOpenTimes[t] = e;
                    this.saveUserData();
                }
                return e;
            };
            t.prototype.setShopBoxOpenTimes = function (t, e) {
                this.m_userData.shopBoxOpenTimes[t] = e;
                this.saveUserData();
            };
            t.prototype.stageRewardGeted = function (t) {
                return r.DYTools.arrContain(this.m_userData.stageReward, t);
            };
            t.prototype.setStageReward = function (t) {
                if (!r.DYTools.arrContain(this.m_userData.stageReward, t)) {
                    this.m_userData.stageReward.push(t);
                    this.saveUserData();
                }
            };
            t.prototype.getAllSnake = function () {
                return this.m_userData.snakeArr;
            };
            t.prototype.getSnakeUnlockId = function (t) {
                return r.DYTools.arrContain(this.m_userData.snakeArr, t);
            };
            t.prototype.setSnakeUnlockId = function (t) {
                if (!r.DYTools.arrContain(this.m_userData.snakeArr, t)) {
                    this.m_userData.snakeArr.push(t);
                    this.saveUserData();
                    return !0;
                }
                return !1;
            };
            t.prototype.getCurSnakeId = function () {
                return this.m_userData.curSnakeId;
            };
            t.prototype.setCurSnakeId = function (t) {
                this.m_userData.curSnakeId = t;
                this.saveUserData();
            };
            t.prototype.getSnakeTurretLv = function () {
                return this.m_userData.turretLv;
            };
            t.prototype.setSnakeTurretLv = function (t) {
                this.m_userData.turretLv = t;
                this.saveUserData();
            };
            t.prototype.getSnakeLv = function (t) {
                var e = this.m_userData.snakeLv[t];
                if (!e) {
                    e = 1;
                    this.m_userData.snakeLv[t] = e;
                    this.saveUserData();
                }
                return e;
            };
            t.prototype.getCurSnakeLv = function () {
                return this.getSnakeLv(this.getCurSnakeId());
            };
            t.prototype.setSnakeLv = function (t, e) {
                this.m_userData.snakeLv[t] = e;
                this.saveUserData();
            };
            t.prototype.setCurSnakeEvolutionNum = function (t) {
                this.m_userData.curSnakeEvolutionNum = t;
                this.saveUserData();
            };
            t.prototype.getCurSnakeEvolutionNum = function () {
                return this.m_userData.curSnakeEvolutionNum;
            };
            t.prototype.setTurretNum = function (t) {
                this.m_userData.turretNum = t;
                this.saveUserData();
            };
            t.prototype.getTurretNum = function () {
                return this.m_userData.turretNum;
            };
            t.prototype.getItemNum = function (t) {
                var e = this.m_userData.item[t];
                if (!e) {
                    e = 0;
                    this.m_userData.item[t] = e;
                    this.saveUserData();
                }
                return e;
            };
            t.prototype.setItemNum = function (t, e) {
                if (NaN !== t || void 0 !== t) {
                    this.m_userData.item[t] = e;
                    this.saveUserData();
                }
            };
            t.prototype.getAllFetter = function () {
                return this.m_userData.fetter;
            };
            t.prototype.getFetterLevel = function (t) {
                return this.m_userData.fetter[t] || 0;
            };
            t.prototype.setFetterLevel = function (t, e) {
                this.m_userData.fetter[t] = e;
                this.saveUserData();
            };
            t.instance = new t();
            return t;
        }();
        i.GameData = c;
        i.GData = c.instance;
        cc._RF.pop();
    }, {
        "../../config/GameConfig": "GameConfig",
        "../../frame/manager/FrameManager": "FrameManager",
        "../../util/Tools": "Tools"
    }],
    GameEnum: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "31aaf9rM8VLFpmbj/S06RY5", "GameEnum");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.RewardADType = i.BulletType = i.FirePointType = i.BossType = i.CoinEnemyType = i.EnemyState = i.SnakeBuffType = i.TrapType = i.LiftState = i.BossState = i.LoadingStep = i.GlobalKey = i.PropItemType = i.SnakeUnitType = i.EnemyFuncType = i.PoolType = i.LootType = i.NumType = i.EnemyMoveType = i.SnakeAddType = i.SnakeSkill = i.SnakeUnlockType = i.SnakeQualityType = i.GameState = i.ItemType = i.CameraType = i.LoadType = i.GameType = i.ContactType = i.ColliderType = i.ColliderGroup = i.GuideType = i.FetterType = i.MainSceneTag = i.PopupCacheMode = i.EventTypeEnum = i.LanguageType = i.PlatFormType = void 0;
        (function (t) {
            t[t.Local = 0] = "Local";
            t[t.Android = 1] = "Android";
            t[t.IOS = 2] = "IOS";
        })(i.PlatFormType || (i.PlatFormType = {}));
        (function (t) {
            t[t.ChineseSimple = 0] = "ChineseSimple";
            t[t.ChineseHant = 1] = "ChineseHant";
            t[t.English = 2] = "English";
        })(i.LanguageType || (i.LanguageType = {}));
        (function (t) {
            t.Background = "Background";
            t.Foreground = "Foreground";
            t.LanguageRefresh = "LanguageRefresh";
            t.CoinRefresh = "CoinRefresh";
            t.GoldRefresh = "GoldRefresh";
            t.DiamondRefresh = "DiamondRefresh";
            t.PowerRefresh = "PowerRefresh";
            t.ItemRefresh = "ItemRefresh";
            t.StageRefresh = "StageRefresh";
            t.RedPointRefresh = "RedPointRefresh";
            t.FetterRefresh = "FetterRefresh";
            t.SnakeLvup = "SnakeLvup";
            t.SnakeSelect = "SnakeSelect";
            t.MainGuide = "MainGuide";
            t.AgeShow = "AgeShow";
            t.MainChange = "MainChange";
            t.HomeShield = "HomeShield";
            t.TouchStart = "TouchStart";
            t.TouchMove = "TouchMove";
            t.TouchEnd = "TouchEnd";
            t.FixedUpdate = "FixedUpdate";
            t.Contact = "Contact";
            t.ContactWall = "ContactWall";
            t.BattleStart = "BattleStart";
            t.BattleQuit = "BattleQuit";
            t.GameOver = "GameOver";
            t.CameraMove = "CameraMove";
            t.EnemyAttr = "EnemyAttr";
            t.EnemyMove = "EnemyMove";
            t.EnemyDirChange = "EnemyDirChange";
            t.EnemyDie = "EnemyDie";
            t.EnemyCustomMove = "EnemyCustomMove";
            t.EnemyMoveRefresh = "EnemyMoveRefresh";
            t.TurretCutHp = "TurretCutHp";
            t.TurretDie = "TurretDie";
            t.BossCutHp = "BoosCutHp";
            t.GetGold = "GetGold";
            t.GuideMapStart = "GuideMapStart";
            t.GuideMapOver = "GuideMapOver";
            t.SkillHurtEnemy = "SkillHurtEnemy";
            t.PopupGuideBegin = "PopupGuideBegin";
            t.PopupGuideOver = "PopupGuideOver";
            t.BossEnter = "BossEnter";
            t.BossEnterEnd = "BossEnterEnd";
            t.BossDropStone = "BossDropStone";
            t.StopDropStone = "StopDropStone";
            t.BossBattle = "BossBattle";
            t.GameStateChange = "GameStateChange";
            t.BattleDataChange = "BattleDataChange";
            t.OnCircleCDOver = "OnCircleCDOver";
            t.OnCircleCD = "OnCircleCD";
            t.SnakeBuffStart = "SnakeBuffStart";
            t.SnakeBuffOver = "SnakeBuffOver";
            t.ScreenShake = "ScreenShake";
            t.ScreenShakeParam = "ScreenShakeParam";
            t.ScreenRed = "ScreenRed";
            t.HideScreenRed = "HideScreenRed";
            t.BattleUIHide = "BattleUIHide";
        })(i.EventTypeEnum || (i.EventTypeEnum = {}));
        (function (t) {
            t[t.Once = 1] = "Once";
            t[t.Normal = 2] = "Normal";
            t[t.Frequent = 3] = "Frequent";
        })(i.PopupCacheMode || (i.PopupCacheMode = {}));
        (function (t) {
            t[t.Shop = 0] = "Shop";
            t[t.Weapon = 1] = "Weapon";
            t[t.Main = 2] = "Main";
            t[t.Snake = 3] = "Snake";
            t[t.Fetter = 4] = "Fetter";
            t[t.Stage = 10] = "Stage";
        })(i.MainSceneTag || (i.MainSceneTag = {}));
        i.FetterType || (i.FetterType = {});
        (function (t) {
            t[t.None = 0] = "None";
            t[t.FirstBattle = 1] = "FirstBattle";
            t[t.MainStartBattle1 = 2] = "MainStartBattle1";
            t[t.MainTurret = 3] = "MainTurret";
            t[t.StageReward5 = 4] = "StageReward5";
            t[t.MapCircle = 5] = "MapCircle";
            t[t.PopupCircle = 6] = "PopupCircle";
            t[t.MainShop = 7] = "MainShop";
            t[t.PopupSkill = 8] = "PopupSkill";
            t[t.SnakeUse = 9] = "SnakeUse";
            t[t.SnakeLvup = 100] = "SnakeLvup";
            t[t.MainFetter = 101] = "MainFetter";
            t[t.MainShopRP = 102] = "MainShopRP";
            t[t.SnakeChange = 103] = "SnakeChange";
        })(i.GuideType || (i.GuideType = {}));
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Player = 1] = "Player";
            t[t.PlayerBullet = 2] = "PlayerBullet";
            t[t.Enemy = 3] = "Enemy";
            t[t.EnemyBullet = 4] = "EnemyBullet";
            t[t.EnemyBlock = 6] = "EnemyBlock";
            t[t.Loot = 8] = "Loot";
            t[t.VeinCell = 9] = "VeinCell";
            t[t.VeinSkill = 10] = "VeinSkill";
            t[t.Prop = 11] = "Prop";
            t[t.TrapBall = 12] = "TrapBall";
            t[t.Block = 20] = "Block";
            t[t.Wall = 21] = "Wall";
            t[t.Fence = 22] = "Fence";
            t[t.Effect = 100] = "Effect";
            t[t.PlayerSkill = 101] = "PlayerSkill";
        })(i.ColliderGroup || (i.ColliderGroup = {}));
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Circle = 1] = "Circle";
            t[t.Rectangle = 2] = "Rectangle";
            t[t.Polygon = 3] = "Polygon";
            t[t.Line = 4] = "Line";
        })(i.ColliderType || (i.ColliderType = {}));
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Enter = 1] = "Enter";
            t[t.Stay = 2] = "Stay";
            t[t.Exit = 3] = "Exit";
        })(i.ContactType || (i.ContactType = {}));
        (function (t) {
            t[t.Normal = 0] = "Normal";
            t[t.Turret = 1] = "Turret";
            t[t.Boss = 2] = "Boss";
            t[t.Coin = 3] = "Coin";
        })(i.GameType || (i.GameType = {}));
        (function (t) {
            t[t.All = -1] = "All";
            t[t.Normal = 0] = "Normal";
            t[t.Turret = 1] = "Turret";
            t[t.Boss = 2] = "Boss";
            t[t.Coin = 3] = "Coin";
        })(i.LoadType || (i.LoadType = {}));
        (function (t) {
            t[t.Follow = 0] = "Follow";
            t[t.Move = 1] = "Move";
        })(i.CameraType || (i.CameraType = {}));
        (function (t) {
            t[t.Currency = 0] = "Currency";
            t[t.Snake = 1] = "Snake";
            t[t.SnakeMaterial = 2] = "SnakeMaterial";
        })(i.ItemType || (i.ItemType = {}));
        (function (t) {
            t[t.Idle = 0] = "Idle";
            t[t.Ready = 1] = "Ready";
            t[t.Sortie = 2] = "Sortie";
            t[t.Battle = 3] = "Battle";
            t[t.Pause = 4] = "Pause";
            t[t.Break = 5] = "Break";
            t[t.WillOver = 6] = "WillOver";
            t[t.Over = 7] = "Over";
            t[t.SnakeDie = 8] = "SnakeDie";
            t[t.SnakeRelive = 9] = "SnakeRelive";
        })(i.GameState || (i.GameState = {}));
        (function (t) {
            t[t.None = 0] = "None";
            t[t.A = 1] = "A";
            t[t.S = 2] = "S";
        })(i.SnakeQualityType || (i.SnakeQualityType = {}));
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Stage = 1] = "Stage";
            t[t.Shop = 2] = "Shop";
            t[t.Sign = 3] = "Sign";
        })(i.SnakeUnlockType || (i.SnakeUnlockType = {}));
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Thorns = 1] = "Thorns";
            t[t.Flame = 2] = "Flame";
            t[t.Frost = 3] = "Frost";
        })(i.SnakeSkill || (i.SnakeSkill = {}));
        (function (t) {
            t[t.CirtProb = 1] = "CirtProb";
            t[t.CirtAtkRatio = 2] = "CirtAtkRatio";
            t[t.CircleNum = 3] = "CircleNum";
            t[t.CircleAtkRatio = 4] = "CircleAtkRatio";
            t[t.CircleCD = 5] = "CircleCD";
            t[t.SkillAtkRatio = 6] = "SkillAtkRatio";
            t[t.SkillCD = 7] = "SkillCD";
            t[t.SkillCirtProb = 8] = "SkillCirtProb";
            t[t.SkillCirtAtkRatio = 9] = "SkillCirtAtkRatio";
            t[t.SkillAddNormalAtk = 10] = "SkillAddNormalAtk";
            t[t.SnakeBodyGoldAddRatio = 11] = "SnakeBodyGoldAddRatio";
            t[t.SnakeInitBodyAdd = 12] = "SnakeInitBodyAdd";
        })(i.SnakeAddType || (i.SnakeAddType = {}));
        (function (t) {
            t[t.None = 1] = "None";
            t[t.Random = 2] = "Random";
            t[t.FollowP = 3] = "FollowP";
            t[t.Path = 4] = "Path";
            t[t.Area = 5] = "Area";
            t[t.Circle = 6] = "Circle";
            t[t.AreaPatrol = 7] = "AreaPatrol";
            t[t.FollowPAreaPatrol = 8] = "FollowPAreaPatrol";
        })(i.EnemyMoveType || (i.EnemyMoveType = {}));
        i.NumType = cc.Enum({
            SnakeUI: 1,
            Power: 2,
            WeaponAtk: 1,
            TurretLv: 2,
            Weapon: 5,
            HomeCoin: 3,
            MainStage: 4,
            StageReward: 7,
            RewardNum: 8,
            Loading: 6,
            BattleStage: 10,
            BattleCoin: 11,
            SettleAdd: 12,
            SettleStage: 13,
            EnemyHurt: 20,
            EnemyHurtRed: 21,
            SnakeHp: 25,
            ShopBox: 31,
            Weapon2: 32
        });
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Snake = 1] = "Snake";
            t[t.Crazy = 2] = "Crazy";
        })(i.LootType || (i.LootType = {}));
        (function (t) {
            t.EnemyBullet = "enemyBullet";
            t.SnakeBullet = "snakeBullet";
            t.EnemyBulletJumpSnake = "enemyBulletJumpSnake";
            t.SnakeBulletJumpEnemy = "snakeBulletJumpEnemy";
            t.SnakeSkillThorns = "snakeSkillThorns";
            t.SnakeSkillFlame = "snakeSkillFlame";
            t.SnakeSkillFrost = "snakeSkillFrost";
        })(i.PoolType || (i.PoolType = {}));
        (function (t) {
            t[t.None = 1] = "None";
            t[t.Bullet = 2] = "Bullet";
            t[t.Dash = 3] = "Dash";
            t[t.FallToGround = 4] = "FallToGround";
            t[t.Split = 5] = "Split";
            t[t.Summon = 6] = "Summon";
            t[t.AddBlood = 7] = "AddBlood";
            t[t.Explosion = 8] = "Explosion";
            t[t.Sprint = 9] = "Sprint";
            t[t.Jump = 10] = "Jump";
            t[t.Revive = 11] = "Revive";
            t[t.Bandage = 12] = "Bandage";
            t[t.Burrow = 13] = "Burrow";
            t[t.DashAtk = 14] = "DashAtk";
            t[t.DieBullet = 15] = "DieBullet";
        })(i.EnemyFuncType || (i.EnemyFuncType = {}));
        (function (t) {
            t[t.head = 1] = "head";
            t[t.body = 2] = "body";
            t[t.tail = 3] = "tail";
            t[t.intensifyBody = 4] = "intensifyBody";
        })(i.SnakeUnitType || (i.SnakeUnitType = {}));
        (function (t) {
            t[t.Snake = 1] = "Snake";
            t[t.LootSnake = 2] = "LootSnake";
        })(i.PropItemType || (i.PropItemType = {}));
        (function (t) {
            t[t.Slow = 1] = "Slow";
            t[t.Joystick = 2] = "Joystick";
            t[t.TriangleNum = 3] = "TriangleNum";
            t[t.ReliveTime = 4] = "ReliveTime";
            t[t.MaxStage = 5] = "MaxStage";
            t[t.RefreshProgress = 6] = "RefreshProgress";
            t[t.WeaponSysUnlock = 7] = "WeaponSysUnlock";
            t[t.ShopSysUnlock = 8] = "ShopSysUnlock";
            t[t.SnakeLevelUp = 9] = "SnakeLevelUp";
            t[t.SnakeBodyLength = 10] = "SnakeBodyLength";
            t[t.TurretRefreshGold = 11] = "TurretRefreshGold";
            t[t.BossRefreshGold = 12] = "BossRefreshGold";
            t[t.SnakeReviveTime = 13] = "SnakeReviveTime";
            t[t.SnakeHurtTime = 14] = "SnakeHurtTime";
            t[t.GuideProtectParam1 = 15] = "GuideProtectParam1";
            t[t.WeaponShowTime = 17] = "WeaponShowTime";
            t[t.WeaponPauseTime = 18] = "WeaponPauseTime";
            t[t.SnakeTurretDelay = 19] = "SnakeTurretDelay";
            t[t.FetterUnlock = 20] = "FetterUnlock";
            t[t.BattleCameraHeight = 30] = "BattleCameraHeight";
            t[t.BattleCameraRect = 31] = "BattleCameraRect";
            t[t.SnakeShadowOffset = 40] = "SnakeShadowOffset";
            t[t.VerificationTime = 50] = "VerificationTime";
            t[t.Verification = 51] = "Verification";
            t[t.AgeShow = 52] = "AgeShow";
            t[t.ReviveDiamond = 53] = "ReviveDiamond";
            t[t.PowerInit = 54] = "PowerInit";
            t[t.PowerCost = 55] = "PowerCost";
            t[t.PowerReward = 56] = "PowerReward";
            t[t.PowerRecoverMax = 57] = "PowerRecoverMax";
            t[t.PowerPerTime = 58] = "PowerPerTime";
            t[t.PowerDiamond = 59] = "PowerDiamond";
            t[t.ShopGuideCount = 60] = "ShopGuideCount";
            t[t.LootCrazyParam = 1100] = "LootCrazyParam";
        })(i.GlobalKey || (i.GlobalKey = {}));
        (function (t) {
            t[t.DataInit = 1] = "DataInit";
            t[t.LaunchShow = 2] = "LaunchShow";
            t[t.ScreenInit = 3] = "ScreenInit";
            t[t.LoadingResList = 4] = "LoadingResList";
            t[t.LoadingStart = 5] = "LoadingStart";
            t[t.LoadingCommonJson = 6] = "LoadingCommonJson";
            t[t.LoadingCommonAtlas = 7] = "LoadingCommonAtlas";
            t[t.LoadingCommonPrefab = 8] = "LoadingCommonPrefab";
            t[t.LoadingEnd = 9] = "LoadingEnd";
            t[t.LoadingSceneStart = 10] = "LoadingSceneStart";
            t[t.LoadingSceneShow = 11] = "LoadingSceneShow";
            t[t.LoadBattleStart = 12] = "LoadBattleStart";
            t[t.BattleResJson = 13] = "BattleResJson";
            t[t.BattleResTxt = 14] = "BattleResTxt";
            t[t.BattleResSpine = 15] = "BattleResSpine";
            t[t.BattleResAudio = 16] = "BattleResAudio";
            t[t.BattleResAtlas = 17] = "BattleResAtlas";
            t[t.BattleResPrefab = 18] = "BattleResPrefab";
            t[t.BattleResTexture = 19] = "BattleResTexture";
            t[t.LoadBattleEnd = 20] = "LoadBattleEnd";
            t[t.BattleInit = 21] = "BattleInit";
            t[t.BattleShow = 22] = "BattleShow";
            t[t.Stage1 = 23] = "Stage1";
            t[t.Touch = 24] = "Touch";
            t[t.Point2 = 25] = "Point2";
            t[t.Wave1 = 26] = "Wave1";
            t[t.Wave2 = 27] = "Wave2";
            t[t.Wave3 = 28] = "Wave3";
            t[t.Stage1Over = 29] = "Stage1Over";
            t[t.GuideBtnStart1 = 30] = "GuideBtnStart1";
            t[t.BtnStart1 = 31] = "BtnStart1";
            t[t.Loading2 = 32] = "Loading2";
            t[t.Stage2 = 33] = "Stage2";
            t[t.Stage2Start = 34] = "Stage2Start";
            t[t.Stage2Enemy1 = 35] = "Stage2Enemy1";
            t[t.Stage2Box1 = 36] = "Stage2Box1";
            t[t.Stage2Enemy2 = 37] = "Stage2Enemy2";
            t[t.Stage2Over = 38] = "Stage2Over";
            t[t.TurretBtn = 39] = "TurretBtn";
            t[t.TurretUI = 40] = "TurretUI";
            t[t.TurretLvup = 41] = "TurretLvup";
            t[t.TurretBackMain = 42] = "TurretBackMain";
            t[t.Loading3 = 43] = "Loading3";
            t[t.Stage3 = 44] = "Stage3";
            t[t.Stage3Over = 45] = "Stage3Over";
            t[t.Stage4 = 46] = "Stage4";
            t[t.Stage4Over = 47] = "Stage4Over";
            t[t.Stage5 = 48] = "Stage5";
            t[t.Stage5Over = 49] = "Stage5Over";
            t[t.StageReward6 = 50] = "StageReward6";
            t[t.StageReward6Btn = 51] = "StageReward6Btn";
            t[t.StageReward6Get = 52] = "StageReward6Get";
            t[t.StageReward6Back = 53] = "StageReward6Back";
            t[t.Stage6 = 54] = "Stage6";
            t[t.Stage6Over = 55] = "Stage6Over";
            t[t.Stage7 = 56] = "Stage7";
            t[t.GuideCircleStart = 57] = "GuideCircleStart";
            t[t.GuideCircleEnd = 58] = "GuideCircleEnd";
            t[t.Stage7Over = 59] = "Stage7Over";
            t[t.Stage8 = 60] = "Stage8";
            t[t.Stage8Over = 61] = "Stage8Over";
            t[t.Stage9 = 62] = "Stage9";
            t[t.Stage9Over = 63] = "Stage9Over";
            t[t.Stage10 = 64] = "Stage10";
            t[t.Stage10Over = 65] = "Stage10Over";
            t[t.ShopGuide = 66] = "ShopGuide";
            t[t.ShopGuideEnter = 67] = "ShopGuideEnter";
            t[t.ShopGuideBox = 68] = "ShopGuideBox";
            t[t.SnakeGuide = 69] = "SnakeGuide";
            t[t.SnakeGuideEnter = 70] = "SnakeGuideEnter";
            t[t.SnakeGuideSelect = 71] = "SnakeGuideSelect";
            t[t.SnakeGuideUse = 72] = "SnakeGuideUse";
            t[t.Stage11 = 73] = "Stage11";
            t[t.GuideSkillStart = 74] = "GuideSkillStart";
            t[t.GuideSkillEnd = 75] = "GuideSkillEnd";
            t[t.Stage11Over = 76] = "Stage11Over";
        })(i.LoadingStep || (i.LoadingStep = {}));
        (function (t) {
            t[t.Node = 0] = "Node";
            t[t.Enter = 1] = "Enter";
            t[t.Idle = 2] = "Idle";
            t[t.Attack = 3] = "Attack";
            t[t.Move = 4] = "Move";
        })(i.BossState || (i.BossState = {}));
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Enter = 1] = "Enter";
            t[t.Open = 2] = "Open";
            t[t.Close = 3] = "Close";
            t[t.Hide = 4] = "Hide";
        })(i.LiftState || (i.LiftState = {}));
        (function (t) {
            t[t.None = 0] = "None";
            t[t.Sunkens = 1] = "Sunkens";
            t[t.Quicksand = 2] = "Quicksand";
            t[t.Thorns = 3] = "Thorns";
            t[t.SnowBall = 4] = "SnowBall";
        })(i.TrapType || (i.TrapType = {}));
        (function (t) {
            t[t.Crazy = 1] = "Crazy";
            t[t.SkillAtkAdd = 2] = "SkillAtkAdd";
        })(i.SnakeBuffType || (i.SnakeBuffType = {}));
        (function (t) {
            t[t.Enter = 1] = "Enter";
            t[t.Idle = 2] = "Idle";
            t[t.Move = 3] = "Move";
            t[t.Run = 4] = "Run";
        })(i.EnemyState || (i.EnemyState = {}));
        (function (t) {
            t[t.None = 0] = "None";
            t[t.GoldMin = 1] = "GoldMin";
            t[t.GoldLarge = 2] = "GoldLarge";
            t[t.Diamond = 3] = "Diamond";
            t[t.SnakeUnit = 4] = "SnakeUnit";
            t[t.Crazy = 5] = "Crazy";
        })(i.CoinEnemyType || (i.CoinEnemyType = {}));
        (function (t) {
            t[t.Normal = 0] = "Normal";
            t[t.Tree = 1] = "Tree";
            t[t.Fire = 2] = "Fire";
            t[t.DesertHand = 3] = "DesertHand";
            t[t.Ice = 4] = "Ice";
            t[t.Spider = 11] = "Spider";
        })(i.BossType || (i.BossType = {}));
        (function (t) {
            t[t.SnakeHeadAimEnemy = 1] = "SnakeHeadAimEnemy";
            t[t.SnakeBodyAimEnemy = 2] = "SnakeBodyAimEnemy";
            t[t.EnemyAimSnake = 101] = "EnemyAimSnake";
            t[t.NoAim = 201] = "NoAim";
        })(i.FirePointType || (i.FirePointType = {}));
        (function (t) {
            t[t.Normal = 1] = "Normal";
            t[t.Jump = 2] = "Jump";
        })(i.BulletType || (i.BulletType = {}));
        (function (t) {
            t[t.Revive = 1] = "Revive";
            t[t.Settle5 = 2] = "Settle5";
            t[t.Power = 3] = "Power";
        })(i.RewardADType || (i.RewardADType = {}));
        cc._RF.pop();
    }, {}],
    GameFunc: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "36cf7vh1WBIObFwhg+ta9l5", "GameFunc");
        var n = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, a = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.GFunc = void 0;
        var r = t("../config/GameConfig"), o = t("../config/GameConst"), s = t("../config/GameEnum"), c = t("../data/manager/ConfigDataManager"), l = t("../data/storage/GameData"), h = t("../frame/manager/FrameManager"), u = t("../frame/manager/PopupManager"), p = t("../frame/manager/ReportManager"), d = t("../frame/ui/UINum"), f = t("../logic/battle/manager/battle/SnakeManager"), m = t("../logic/ui/popup/common/FloatTip"), g = t("../logic/ui/popup/common/PopupReward"), _ = t("../logic/ui/scene/battle/ui/PopupNewEnemy"), y = t("../logic/ui/scene/main/ui/ShopUI"), v = t("../other/Hawkeye"), b = t("../platform/PlatformManager"), M = t("./Tools"), S = function () {
            function t() {
                this.m_onlyId = 1;
                this.m_logUI = null;
                String.prototype.format = function (t) {
                    if (arguments.length > 0) {
                        for (var e = this, i = 0; i < arguments.length; i++) {
                            if (null == arguments[i]) return "";
                            var n = new RegExp("({[" + i + "]})", "g");
                            e = e.replace(n, arguments[i]);
                        }
                        return e;
                    }
                    return this;
                };
            }
            Object.defineProperty(t.prototype, "onlyId", {
                get: function () {
                    return this.m_onlyId++;
                },
                enumerable: !1,
                configurable: !0
            });
            t.prototype.setSwallowTouches = function (t, e) {
                t && t._touchListener && t._touchListener.setSwallowTouches && t._touchListener.setSwallowTouches(e);
            };
            t.prototype.refreshLabel = function (t) {
                t && t._forceUpdateRenderData && t._forceUpdateRenderData();
            };
            t.prototype.adjustTopUI = function (t) {
                if (t) {
                    var e = t.getComponent(cc.Widget);
                    e && (e.top += o.GValue.SafeOffsetY);
                    t.y -= o.GValue.SafeOffsetY;
                }
            };
            t.prototype.adjustBottomUI = function (t, e) {
                if (t) {
                    e && (t.y += e);
                    var i = t.getComponent(cc.Widget);
                    i && (i.bottom += e);
                }
            };
            t.prototype.updateTimestamp = function () {
                l.GData.timestamp += 1e3;
            };
            t.prototype.initBackFront = function () {
                cc.game.off(cc.game.EVENT_HIDE);
                cc.game.on(cc.game.EVENT_HIDE, function () {
                    M.DYTools.error("进入后台");
                    h.FrameMgr.noticeMgr.emit(s.EventTypeEnum.Background);
                });
                cc.game.off(cc.game.EVENT_SHOW);
                cc.game.on(cc.game.EVENT_SHOW, function () {
                    M.DYTools.error("进入前台");
                    h.FrameMgr.noticeMgr.emit(s.EventTypeEnum.Foreground);
                    b.PlatformMgr.getRefreshRate();
                    v.HKReport.initParam(!0);
                });
            };
            t.prototype.addLog = function (t) {
                this.m_logUI && this.m_logUI.addLog(t);
            };
            t.prototype.checkOnline = function (t) {
                t > .5 && (t = .016666666);
                o.GValue.OnlineTime += t;
                if (o.GValue.OnlineTime >= 30) {
                    o.GValue.OnlineTime = 0;
                    p.ReportMgr.sendReportOnline();
                }
            };
            t.prototype.checkIsNewPlayer = function () {
                if (l.GData.getIsNewPlayer()) {
                    var t = Math.round(c.ConfigDataMgr.getGlobalDataNum(s.GlobalKey.PowerInit, 30));
                    l.GData.setPower(t);
                    l.GData.setIsNewPlayer(!1);
                }
            };
            t.prototype.showFloatTip = function (t) {
                u.PopupMgr.show({
                    cls: m.default,
                    options: t
                });
            };
            t.prototype.showAdLoading = function () { };
            t.prototype.hideAdLoading = function () { };
            t.prototype.showNetLoading = function () { };
            t.prototype.hideNetLoading = function () { };
            t.prototype.showUILoading = function () { };
            t.prototype.hideUILoading = function () { };
            t.prototype.createUINum = function (t) {
                var e = cc.instantiate(o.GValue.pfNum), i = e.getComponent(d.default);
                i.init();
                t.scale && (e.scale = t.scale);
                t.atlas && i.setAtlas(t.atlas);
                t.type && i.setType(t.type);
                t.anchor && i.setAnchor(t.anchor);
                t.distance && i.setDistance(t.distance);
                t.color && i.setColor(t.color);
                t.txt && i.setString(t.txt);
                t.parent && (e.parent = t.parent);
                return i;
            };
            t.prototype.goldChange = function (t) {
                var e = l.GData.getGold() + t;
                e < 0 && (e = 0);
                l.GData.setGold(e);
                h.FrameMgr.noticeMgr.emit(s.EventTypeEnum.GoldRefresh);
            };
            t.prototype.isGoldEnough = function (t, e) {
                if (l.GData.getGold() >= t) {
                    e && this.goldChange(-t);
                    return !0;
                }
                return !1;
            };
            t.prototype.diamondChange = function (t) {
                var e = l.GData.getDiamond() + t;
                if (e < 0) return !1;
                l.GData.setDiamond(e);
                h.FrameMgr.noticeMgr.emit(s.EventTypeEnum.DiamondRefresh);
                return !0;
            };
            t.prototype.isDiamondEnough = function (t, e) {
                if (l.GData.getDiamond() >= t) {
                    e && this.diamondChange(-t);
                    return !0;
                }
                return !1;
            };
            t.prototype.powerChange = function (t) {
                var e = l.GData.getPower(), i = e + t;
                if (i < 0) return !1;
                var n = e >= o.GValue.MaxPower;
                l.GData.setPower(i);
                n && l.GData.getPower() < o.GValue.MaxPower && this.resetPowerRecoverTimestamp();
                h.FrameMgr.noticeMgr.emit(s.EventTypeEnum.PowerRefresh);
                return !0;
            };
            t.prototype.isPowerEnough = function (t, e) {
                if (l.GData.getPower() >= t) {
                    e && this.powerChange(-t);
                    return !0;
                }
                return !1;
            };
            t.prototype.checkPowerRecover = function () {
                if (l.GData.getPower() >= o.GValue.MaxPower) return -1;
                var t = -1, e = Math.floor((M.DYTools.getCurTimestamp() - l.GData.getPowerTimestamp()) / 1e3);
                if (e >= 0) {
                    var i = o.GValue.PowerTime, n = Math.floor(e / i), a = e - i * n;
                    if (n > 0) {
                        var r = l.GData.getPower() + n;
                        r = Math.min(r, o.GValue.MaxPower), l.GData.getPower();
                        l.GData.setPower(r);
                        l.GData.setPowerTimestamp(M.DYTools.getCurTimestamp() - 1e3 * a);
                        h.FrameMgr.noticeMgr.emit(s.EventTypeEnum.PowerRefresh);
                    }
                    t = i - a;
                } else t = o.GValue.PowerTime - e;
                return t;
            };
            t.prototype.resetPowerRecoverTimestamp = function () {
                l.GData.setPowerTimestamp(M.DYTools.getCurTimestamp());
            };
            t.prototype.getShopFreeBoxTime = function () {
                var t = c.ConfigDataMgr.getShopBoxData(y.default.boxFree_id);
                if (!t) {
                    console.error("no shop free box data");
                    return 0;
                }
                var e = l.GData.getShopFreeBoxTimestamp(), i = M.DYTools.getCurTimestamp() - e, n = 6e4 * t.CD - i;
                n < 0 && (n = 0);
                return n;
            };
            t.prototype.resetShopFreeBoxTimestamp = function () {
                l.GData.setShopFreeBoxTimestamp(M.DYTools.getCurTimestamp());
            };
            t.prototype.itemChange = function (t, e) {
                var i = l.GData.getItemNum(t) + e;
                if (i < 0) return !1;
                l.GData.setItemNum(t, i);
                h.FrameMgr.noticeMgr.emit(s.EventTypeEnum.ItemRefresh);
                return !0;
            };
            t.prototype.isItemEnough = function (t, e, i) {
                if (l.GData.getItemNum(t) >= e) {
                    i && this.itemChange(t, -e);
                    return !0;
                }
                return !1;
            };
            t.prototype.getFetterTxt = function (t) {
                switch (t) {
                    case s.SnakeAddType.CirtProb:
                }
            };
            t.prototype.createfinger = function (t, e, i) {
                void 0 === e && (e = "finger");
                void 0 === i && (i = 2);
                if (o.GValue.MainSceneGuide > 0) return null;
                var n = h.FrameMgr.loadMgr.get("TP_HomeUI", cc.SpriteAtlas), a = new cc.Node(e);
                t.addChild(a);
                var s = r.GConfig.ActionInterval, c = new cc.Node("c1");
                c.parent = a;
                c.addComponent(cc.Sprite).spriteFrame = n.getSpriteFrame("guide_circle_1");
                var l = new cc.Node("c2");
                l.parent = a;
                l.addComponent(cc.Sprite).spriteFrame = n.getSpriteFrame("guide_circle_2");
                var u = new cc.Node("c3");
                u.parent = a;
                u.addComponent(cc.Sprite).spriteFrame = n.getSpriteFrame("guide_circle_3");
                var p = new cc.Node("hand");
                p.parent = a;
                var d = new cc.Node("icon");
                d.parent = p;
                d.addComponent(cc.Sprite).spriteFrame = n.getSpriteFrame("guide_hand");
                cc.Tween.stopAllByTarget(d);
                cc.Tween.stopAllByTarget(c);
                cc.Tween.stopAllByTarget(l);
                cc.Tween.stopAllByTarget(u);
                c.opacity = 0;
                l.opacity = 0;
                u.opacity = 0;
                d.opacity = 0;
                var f = 0, m = 0, g = 0, _ = 0, y = 0, v = 0, b = 0, M = 0;
                switch (i) {
                    case 0:
                        p.setPosition(86, -64);
                        d.scaleX = 1;
                        d.scaleY = 1;
                        c.x = 20;
                        l.x = c.x;
                        u.x = c.x;
                        f = 746;
                        m = -614;
                        _ = (g = 0) - 360;
                        y = 36;
                        v = -2;
                        b = -3;
                        M = 0;
                        break;

                    case 1:
                        p.setPosition(-86, -64);
                        d.scaleX = -1;
                        d.scaleY = 1;
                        c.x = -20;
                        l.x = c.x;
                        u.x = c.x;
                        f = -746;
                        m = -614;
                        _ = (g = 0) - 360;
                        y = -36;
                        v = -2;
                        b = 3;
                        M = 0;
                        break;

                    case 2:
                        p.setPosition(86, 66);
                        d.scaleX = 1;
                        d.scaleY = 1;
                        c.x = 20;
                        l.x = c.x;
                        u.x = c.x;
                        f = 414;
                        m = 839;
                        _ = 360 + (g = 90);
                        y = 36;
                        v = 2;
                        b = -3;
                        M = 0;
                        break;

                    case 3:
                        p.setPosition(-86, 66);
                        d.scaleY = -1;
                        d.scaleX = 1;
                        c.x = -20;
                        l.x = c.x;
                        u.x = c.x;
                        f = -414;
                        m = 839;
                        _ = 360 + (g = 90);
                        y = -36;
                        v = 2;
                        b = 3;
                        M = 0;
                }
                var S = d.scaleX, k = d.scaleY;
                d.scaleX = 1.6 * S;
                d.scaleY = 1.6 * k;
                d.opacity = 0;
                d.x = f;
                d.y = m;
                d.angle = g;
                cc.tween(d).to(12 * s, {
                    scaleX: S,
                    scaleY: 1 * k,
                    x: 0,
                    y: 0,
                    angle: _,
                    opacity: 255
                }).to(3 * s, {
                    scaleY: .9 * k,
                    scaleX: .9 * S
                }).to(5 * s, {
                    scaleY: 1 * k,
                    scaleX: S
                }).call(function () {
                    cc.tween(d).delay(7 * s).to(9 * s, {
                        scaleY: 1.03 * k,
                        scaleX: 1.03 * S,
                        x: y,
                        y: v
                    }).to(4 * s, {
                        scaleY: 1 * k,
                        scaleX: S,
                        x: b,
                        y: M
                    }).call(function () {
                        l.scale = .87;
                        l.opacity = 255;
                        cc.tween(l).to(9 * s, {
                            scale: 3.14,
                            opacity: 204
                        }).to(4 * s, {
                            scale: 3.8,
                            opacity: 0
                        }).start();
                        cc.tween(u).delay(4 * s).call(function () {
                            u.scale = .91;
                            u.opacity = 255;
                        }).to(7 * s, {
                            scale: 3.05,
                            opacity: 180
                        }).to(5 * s, {
                            scale: 4.8,
                            opacity: 0
                        }).start();
                        c.scale = 1.3;
                        c.opacity = 255;
                        cc.tween(c).to(2 * s, {
                            scale: .77
                        }).to(3 * s, {
                            scale: 1.79,
                            opacity: 0
                        }).start();
                    }).to(5 * s, {
                        x: 0,
                        y: 0
                    }).union().repeatForever().start();
                }).start();
                return a;
            };
            t.prototype.onGetReward = function (t, e) {
                void 0 === e && (e = !1);
                for (var i = 0; i < t.length; i++) {
                    var n = t[i], a = n.x, r = n.y;
                    switch (a) {
                        case 1:
                            this.goldChange(r);
                            break;

                        case 2:
                            this.diamondChange(r);
                            break;

                        case 3:
                            this.powerChange(r);
                            break;

                        default:
                            a > 100 && a < 200 && f.SnakeMgr.setSnakeUnlockId(a);
                            this.itemChange(a, r);
                    }
                }
                e && this.showRewardUI(t);
            };
            t.prototype.showRewardUI = function (t) {
                u.PopupMgr.show({
                    cls: g.default,
                    options: t
                });
            };
            t.prototype.getStageData = function (t) {
                var e = null, i = c.ConfigDataMgr.getAllData("ConfigStageData");
                i && i.forEach(function (i) {
                    i.stageMax >= t && i.stageMin <= t && (e = i);
                });
                return e;
            };
            t.prototype.battleGoldChange = function (t, e, i) {
                h.FrameMgr.noticeMgr.emit(s.EventTypeEnum.BattleDataChange, {
                    type: "gold",
                    data: [t, e],
                    pos: i
                });
            };
            t.prototype.battleDiamondChange = function (t, e, i) {
                h.FrameMgr.noticeMgr.emit(s.EventTypeEnum.BattleDataChange, {
                    type: "diamond",
                    data: [t, e],
                    pos: i
                });
            };
            t.prototype.battleItemChange = function (t, e, i, n) {
                h.FrameMgr.noticeMgr.emit(s.EventTypeEnum.BattleDataChange, {
                    type: "item",
                    data: [t, e, i],
                    pos: n
                });
            };
            t.prototype.getSnakeTurretId = function (t) {
                var e = 0;
                c.ConfigDataMgr.getAllData("ConfigSnakeTurretLvupData").forEach(function (i) {
                    t >= i.id && 0 !== i.turretId && (e = i.turretId);
                });
                return e;
            };
            t.prototype.getFrameAnim = function (t, e) {
                var i = cc.instantiate(o.GValue.pfFrameAnim);
                t && (i.parent = t);
                e && (i.name = e);
                return i.getComponent("FrameAnim");
            };
            t.prototype.getEnemyWorldPos = function (t) {
                return t.getPosition().sub(o.GValue.BattleCameraNode.getPosition()).add(o.GValue.ViewCenter);
            };
            t.prototype.showNewEnemy = function (t) {
                return n(this, void 0, void 0, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, u.PopupMgr.show({
                                    cls: _.default,
                                    options: t
                                })];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.playRewardAD = function (t, e, i) {
                r.GConfig.isDebug ? e && e() : b.PlatformMgr.playRewardAd(t, e, i);
            };
            t.instance = new t();
            return t;
        }();
        i.GFunc = S.instance;
        cc._RF.pop();
    }, {
        "../config/GameConfig": "GameConfig",
        "../config/GameConst": "GameConst",
        "../config/GameEnum": "GameEnum",
        "../data/manager/ConfigDataManager": "ConfigDataManager",
        "../data/storage/GameData": "GameData",
        "../frame/manager/FrameManager": "FrameManager",
        "../frame/manager/PopupManager": "PopupManager",
        "../frame/manager/ReportManager": "ReportManager",
        "../frame/ui/UINum": "UINum",
        "../logic/battle/manager/battle/SnakeManager": "SnakeManager",
        "../logic/ui/popup/common/FloatTip": "FloatTip",
        "../logic/ui/popup/common/PopupReward": "PopupReward",
        "../logic/ui/scene/battle/ui/PopupNewEnemy": "PopupNewEnemy",
        "../logic/ui/scene/main/ui/ShopUI": "ShopUI",
        "../other/Hawkeye": "Hawkeye",
        "../platform/PlatformManager": "PlatformManager",
        "./Tools": "Tools"
    }],
    GameRuleManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "07fc4iE1gpGyYVeP14JLs+c", "GameRuleManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.GameRuleMgr = void 0;
        var n = t("../../../../config/GameEnum"), a = t("../../../../frame/manager/FrameManager"), r = t("./BattleManager"), o = t("./BossManager"), s = t("./wave/CoinWaveManager"), c = t("./EnemyManager"), l = t("./SnakeManager"), h = t("./wave/NormalWaveManager"), u = t("./BulletManager"), p = function () {
            function t() {
                this._gameState = n.GameState.Idle;
                this._gameResult = !1;
                this._flowEvents = [];
            }
            t.prototype.reset = function () {
                this._gameResult = !1;
                this._gameState = n.GameState.Idle;
            };
            t.prototype.init = function () { };
            t.prototype.changeState = function (t) {
                a.FrameMgr.noticeMgr.emit(n.EventTypeEnum.GameStateChange, t);
                this.setGameState(t);
                this.setFunctionByState(t);
                this.doFlowCall();
            };
            t.prototype.setGameState = function (t) {
                this._gameState = t;
                t == n.GameState.WillOver && a.FrameMgr.audioMgr.stopAll();
            };
            t.prototype.gameIdle = function () {
                this.setGameState(n.GameState.Idle);
            };
            t.prototype.gameSortie = function () {
                this.isCanUpdate() || this.setGameState(n.GameState.Sortie);
            };
            t.prototype.gameStart = function () {
                this.setGameState(n.GameState.Battle);
            };
            t.prototype.gamePause = function () {
                this.setGameState(n.GameState.Pause);
            };
            t.prototype.gameResume = function () {
                this.setGameState(n.GameState.Battle);
                cc.director.resume();
            };
            t.prototype.gameBreak = function () {
                this.setGameState(n.GameState.Break);
            };
            t.prototype.gameWillOver = function () {
                this.setGameState(n.GameState.WillOver);
            };
            t.prototype.gameOver = function () {
                this.setGameState(n.GameState.Over);
            };
            t.prototype.getNextState = function () {
                return this._gameState + 1;
            };
            t.prototype.isGameSortie = function () {
                return this._isGameState(n.GameState.Sortie);
            };
            t.prototype.isCanUpdate = function () {
                return this._isGameState(n.GameState.Battle) || this._isGameState(n.GameState.WillOver);
            };
            t.prototype.isGameWillOver = function () {
                return this._isGameState(n.GameState.WillOver);
            };
            t.prototype.isGameOver = function () {
                return this._isGameState(n.GameState.Over);
            };
            t.prototype.isInBattle = function () {
                return this._isGameState(n.GameState.Battle);
            };
            t.prototype.getGameResult = function () {
                return this._gameResult;
            };
            t.prototype.updateLogic = function () {
                if (!this._gameResult && !l.SnakeMgr.checkDeath()) if (h.NormalWaveMgr.enabled) {
                    if (!h.NormalWaveMgr.waveFinish) return;
                    if (c.EnemyMgr.isEnemyOver() && o.BossMgr.isBossOver()) {
                        this._gameResult = !0;
                        r.BattleMgr.result = !0;
                        u.BulletMgr.removeAllBullet();
                        this.changeState(n.GameState.WillOver);
                    }
                } else if (s.CoinWaveMgr.enabled) {
                    if (!s.CoinWaveMgr.isOver()) return;
                    if (1 == s.CoinWaveMgr.type) {
                        u.BulletMgr.enabled = !1;
                        u.BulletMgr.removeAllBullet();
                        c.EnemyMgr.enabled = !1;
                        this._gameResult = !0;
                        r.BattleMgr.result = !0;
                        this.changeState(n.GameState.WillOver);
                    } else if (c.EnemyMgr.isEnemyOver()) {
                        this._gameResult = !0;
                        r.BattleMgr.result = !0;
                        u.BulletMgr.removeAllBullet();
                        this.changeState(n.GameState.WillOver);
                    }
                }
            };
            t.prototype._isGameState = function (t) {
                return this._gameState == t;
            };
            t.prototype.setFunctionByState = function (t) {
                switch (t) {
                    case n.GameState.Battle:
                        this._flowEvents = [r.BattleMgr.init.bind(r.BattleMgr), r.BattleMgr.startBattleReady.bind(r.BattleMgr), r.BattleMgr.sortieBattle.bind(r.BattleMgr), r.BattleMgr.startBattle.bind(r.BattleMgr)];
                        break;

                    case n.GameState.WillOver:
                        l.SnakeMgr.funcAble = !1;
                        this._flowEvents = [r.BattleMgr.battleWillOver.bind(r.BattleMgr), r.BattleMgr.showGameResult.bind(r.BattleMgr)];
                        break;

                    case n.GameState.Over:
                        this._flowEvents = [r.BattleMgr.gameOver.bind(r.BattleMgr)];
                        break;

                    case n.GameState.SnakeDie:
                        this._flowEvents = [r.BattleMgr.snakeDie.bind(r.BattleMgr)];
                        break;

                    case n.GameState.SnakeRelive:
                        this._flowEvents = [r.BattleMgr.snakeRelive.bind(r.BattleMgr)];
                        break;

                    default:
                        this._flowEvents = [];
                }
            };
            t.prototype.doFlowCall = function () {
                var t = this._flowEvents.shift();
                t && t(this.doFlowCall.bind(this));
            };
            t.instance = new t();
            return t;
        }();
        i.default = p;
        i.GameRuleMgr = p.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "./BattleManager": "BattleManager",
        "./BossManager": "BossManager",
        "./BulletManager": "BulletManager",
        "./EnemyManager": "EnemyManager",
        "./SnakeManager": "SnakeManager",
        "./wave/CoinWaveManager": "CoinWaveManager",
        "./wave/NormalWaveManager": "NormalWaveManager"
    }],
    GuideManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c9e72boDPRFE5eJv329HVjh", "GuideManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.GuideMgr = void 0;
        var r = t("../../../../config/GameEnum"), o = t("../../../../data/storage/GameData"), s = t("../../../../frame/manager/BattleFlowManager"), c = t("../../../../frame/manager/FrameManager"), l = t("../../../../util/Tools"), h = t("../battle/BattleManager"), u = t("../battle/SnakeManager"), p = t("../../../../data/manager/ConfigDataManager"), d = t("../../../../config/GameConst"), f = t("../battle/BulletManager"), m = t("../battle/LootManager"), g = t("../battle/wave/NormalWaveManager"), _ = t("../battle/MapManager"), y = t("../../../../util/GameFunc"), v = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_guideAtlas = null;
                e._guideWave = !1;
                e._guideEnemyCount = 0;
                e._destOver = !0;
                e.m_gudiePointArr = [];
                e.m_gudieArrowArr = [];
                e.m_gudieArrowShadowArr = [];
                e.m_curGuidePoint = null;
                e.m_curGuideLineY = null;
                e.m_guideProtect = !1;
                e.m_guideProtectParam = [3, 1.5];
                e.m_guideProtectTime = 0;
                e.m_curGuideArrow = null;
                e.m_curGuideArrowShaodw = null;
                e.m_guideCircleAble = !1;
                e.m_popupGuideCircle = null;
                e.m_popupGuideSkill = null;
                return e;
            }
            e.prototype.addLoadingRes = function () {
                var t = [], e = [], i = !1;
                this.guideAble(r.GuideType.FirstBattle) && (i = !0);
                if (this.guideAble(r.GuideType.MapCircle) || h.BattleMgr.stage >= 6 && h.BattleMgr.stage <= 7) {
                    t.push("spine_guide_circle");
                    i = !0;
                }
                if (this.guideAble(r.GuideType.PopupCircle) || h.BattleMgr.stage >= 6 && h.BattleMgr.stage <= 7) {
                    e.push("PopupGuide");
                    t.push("spine_guide_attack");
                    i = !0;
                }
                if (this.guideAble(r.GuideType.PopupSkill)) {
                    e.push("PopupGuide");
                    t.push("spine_guide_snake_skill_102");
                    i = !0;
                }
                var n = [];
                i && n.push("TP_GuideUI");
                return [{
                    itemType: sp.SkeletonData,
                    itemNames: t,
                    loadType: r.LoadType.All
                }, {
                    itemType: cc.Prefab,
                    itemNames: e,
                    loadType: r.LoadType.All
                }, {
                    itemType: cc.SpriteAtlas,
                    itemNames: n,
                    loadType: r.LoadType.All
                }];
            };
            e.prototype.initData = function () {
                this.m_guideAtlas = c.FrameMgr.loadMgr.get("TP_GuideUI", cc.SpriteAtlas);
            };
            e.prototype.init = function () {
                this._guideWave = this.guideAble(r.GuideType.FirstBattle);
                this._guideWave && (this._destOver = !1);
                this.m_guideCircleAble = this.guideAble(r.GuideType.MapCircle);
                this.initPopupGuide();
            };
            e.prototype.clear = function () {
                this.m_guideAtlas = null;
                this.m_gudiePointArr.splice(0);
                this.m_gudieArrowArr.splice(0);
                this.m_gudieArrowShadowArr.splice(0);
                this.m_gudiePointArr.splice(0);
                this.m_curGuidePoint = null;
                this.m_curGuideLineY = null;
                this.m_curGuideArrow = null;
                this.m_curGuideArrowShaodw = null;
                this.m_guideProtect = !1;
                this.m_guideCircleAble = !1;
                this._guideWave = !1;
                this._guideEnemyCount = 0;
                this._destOver = !0;
                this.m_popupGuideCircle = null;
                this.m_popupGuideSkill = null;
            };
            e.prototype.updateLogic = function (t) {
                this.checkArriveGuidePoint(t);
                this.udpateArrow();
                this.checkGuideAttackCircle();
                this.updatePopupGuide(t);
            };
            e.prototype.getGuideAtlas = function () {
                return this.m_guideAtlas;
            };
            e.prototype.getGuideWave = function () {
                return this._guideWave;
            };
            e.prototype.getDestOver = function () {
                return this._destOver;
            };
            e.prototype.addGuideEnemy = function () {
                this._guideEnemyCount++;
                if (h.BattleMgr.stage < 3) switch (this._guideEnemyCount) {
                    case 1:
                        1 == h.BattleMgr.stage ? c.FrameMgr.reportMgr.sendReportLoading(r.LoadingStep.Wave1) : 2 == h.BattleMgr.stage && c.FrameMgr.reportMgr.sendReportLoading(r.LoadingStep.Stage2Enemy1);
                        break;

                    case 2:
                        2 == h.BattleMgr.stage && c.FrameMgr.reportMgr.sendReportLoading(r.LoadingStep.Stage2Enemy2);
                        break;

                    case 3:
                        1 == h.BattleMgr.stage && c.FrameMgr.reportMgr.sendReportLoading(r.LoadingStep.Wave2);
                        break;

                    case 7:
                        1 == h.BattleMgr.stage && c.FrameMgr.reportMgr.sendReportLoading(r.LoadingStep.Wave3);
                }
            };
            e.prototype.guideAble = function (t) {
                return 0;
                if (!d.GValue.guideAble) return !1;
                var e = !1;
                switch (t) {
                    case r.GuideType.FirstBattle:
                        e = 1 == o.GData.getCurStage() && !o.GData.isGuided(r.GuideType.FirstBattle);
                        break;

                    case r.GuideType.MainStartBattle1:
                        o.GData.getCurStage() <= 2 && !o.GData.isGuided(r.GuideType.MainStartBattle1) && (e = !0);
                        break;

                    case r.GuideType.MainTurret:
                        if (!o.GData.isGuided(r.GuideType.MainTurret)) {
                            var i = o.GData.getSnakeTurretLv() + 1, n = p.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", i);
                            n && y.GFunc.isGoldEnough(n.gold) && y.GFunc.isItemEnough(301, n.itemNum) && (e = !0);
                        }
                        break;

                    case r.GuideType.StageReward5:
                        6 != o.GData.getCurStage() || o.GData.isGuided(r.GuideType.StageReward5) || (e = !0);
                        break;

                    case r.GuideType.MapCircle:
                        o.GData.isGuided(r.GuideType.MapCircle) || u.SnakeMgr.getCurSnakeId() > 1 && 7 == h.BattleMgr.stage && (e = !0);
                        break;

                    case r.GuideType.PopupCircle:
                        o.GData.isGuided(r.GuideType.PopupCircle) || u.SnakeMgr.getCurSnakeId() > 1e4 && 7 == h.BattleMgr.stage && (e = !0);
                        break;

                    case r.GuideType.MainShop:
                        o.GData.isGuided(r.GuideType.MainShop) || 11 == h.BattleMgr.stage && (e = !0);
                        break;

                    case r.GuideType.SnakeUse:
                        !o.GData.isGuided(r.GuideType.SnakeUse) && 102 != u.SnakeMgr.getCurSnakeType() && u.SnakeMgr.isSnakeUnlock(102) && (e = !0);
                        break;

                    case r.GuideType.PopupSkill:
                        o.GData.isGuided(r.GuideType.PopupSkill) || u.SnakeMgr.getCurSnakeId() >= 10200 && (e = !0);
                        break;

                    case r.GuideType.SnakeLvup:
                        if (o.GData.getCurStage() > 15 && !o.GData.isGuided(r.GuideType.SnakeLvup)) for (var a = 0, s = o.GData.getAllSnake(); a < s.length; a++) {
                            var c = s[a];
                            u.SnakeMgr.isSnakeLvupAble(c) && (e = !0);
                        }
                        break;

                    case r.GuideType.MainFetter:
                        o.GData.getCurStage() > 20 && !o.GData.isGuided(r.GuideType.MainFetter) && (e = !0);
                        break;

                    case r.GuideType.MainShopRP:
                        o.GData.getShopGuide() < p.ConfigDataMgr.getGlobalDataInt(r.GlobalKey.ShopGuideCount, 3) && (e = !0);
                        break;

                    default:
                        o.GData.isGuided(t) || (e = !0);
                }
                return e;
            };
            e.prototype.addGuidePoint = function (t) {
                t && this.m_gudiePointArr.push(t);
            };
            e.prototype.addGuideArrow = function (t, e) {
                t && this.m_gudieArrowArr.push(t);
                e && this.m_gudieArrowShadowArr.push(e);
            };
            e.prototype.getCurGuideLineY = function () {
                return this.m_curGuideLineY;
            };
            e.prototype.checkNextGuidePoint = function (t) {
                if (!this.m_curGuidePoint && this.m_gudiePointArr.length > 0) {
                    this.m_curGuidePoint = this.m_gudiePointArr.shift();
                    this.m_curGuidePoint.active = !0;
                    this.m_curGuideLineY = this.m_curGuidePoint.getChildByName("line").y + this.m_curGuidePoint.y;
                    this.m_curGuideArrow = this.m_gudieArrowArr.shift();
                    this.m_curGuideArrowShaodw = this.m_gudieArrowShadowArr.shift();
                    this.m_curGuideArrow.active = !0;
                    this.m_curGuideArrowShaodw.active = !0;
                    if (t) {
                        this.m_curGuideArrow.opacity = 0;
                        cc.tween(this.m_curGuideArrow).to(1, {
                            opacity: 255
                        }).start();
                        this.m_curGuideArrowShaodw.opacity = 0;
                        cc.tween(this.m_curGuideArrowShaodw).to(1, {
                            opacity: 255
                        }).start();
                        this.m_curGuidePoint.opacity = 0;
                        cc.tween(this.m_curGuidePoint).to(1, {
                            opacity: 255
                        }).start();
                    }
                    this.udpateArrow();
                    f.BulletMgr.guidePause = !0;
                    return !0;
                }
                return !1;
            };
            e.prototype.checkArriveGuidePoint = function (t) {
                if (this.m_curGuidePoint) {
                    var e = u.SnakeMgr.getPlayerPos();
                    if (l.DYTools.isNumberDiffRange(e.x, this.m_curGuidePoint.x, 56) && l.DYTools.isNumberDiffRange(e.y, this.m_curGuidePoint.y, 56)) {
                        c.FrameMgr.audioMgr.playEffect("guide_arrival_pos");
                        this.m_curGuidePoint.destroy();
                        this.m_curGuidePoint = null;
                        this.m_curGuideLineY = null;
                        this.m_curGuideArrow.destroy();
                        this.m_curGuideArrowShaodw.destroy();
                        this.m_curGuideArrow = null;
                        this.m_curGuideArrowShaodw = null;
                        if (this.checkNextGuidePoint()); else {
                            f.BulletMgr.guidePause = !1;
                            c.FrameMgr.reportMgr.sendReportLoading(r.LoadingStep.Point2);
                            this._destOver = !0;
                            g.NormalWaveMgr.guidePause = !1;
                            this.m_guideProtect = !0;
                            this.m_guideProtectTime = 0;
                            var i = p.ConfigDataMgr.getGlobalDataNumArr(r.GlobalKey.GuideProtectParam1);
                            i && i.length > 1 && (this.m_guideProtectParam = i);
                        }
                    }
                } else if (this.m_guideProtect && g.NormalWaveMgr.getCurWaveId() >= this.m_guideProtectParam[0]) {
                    this.m_guideProtectTime += t;
                    this.m_guideProtectTime > this.m_guideProtectParam[1] && (this.m_guideProtect = !1);
                }
            };
            e.prototype.udpateArrow = function () {
                if (this.m_curGuideArrow) {
                    var t = u.SnakeMgr.getPlayerPos();
                    this.m_curGuideArrow.height = t.sub(this.m_curGuidePoint.position).mag() - 50;
                    this.m_curGuideArrow.position = t;
                    this.m_curGuideArrow.angle = cc.misc.radiansToDegrees(cc.v2(0, 1).signAngle(cc.v2(this.m_curGuidePoint.position.sub(t))));
                    this.m_curGuideArrowShaodw.height = this.m_curGuideArrow.height;
                    this.m_curGuideArrowShaodw.position = this.m_curGuideArrow.position;
                    this.m_curGuideArrowShaodw.angle = this.m_curGuideArrow.angle;
                }
            };
            e.prototype.showGuideProtect = function () { };
            e.prototype.checkGuideAttackCircle = function () {
                if (this.m_guideCircleAble && m.LootMgr.lootItems.length <= 0) {
                    c.FrameMgr.noticeMgr.emit(r.EventTypeEnum.GuideMapStart);
                    c.FrameMgr.noticeMgr.once(r.EventTypeEnum.SkillHurtEnemy, function () {
                        c.FrameMgr.noticeMgr.emit(r.EventTypeEnum.GuideMapOver);
                    });
                    this.m_guideCircleAble = !1;
                }
            };
            e.prototype.initPopupGuide = function () {
                this.guideAble(r.GuideType.PopupCircle) && (this.m_popupGuideCircle = _.MapMgr.mapData.guidePopupCircle);
                this.guideAble(r.GuideType.PopupSkill) && (this.m_popupGuideSkill = _.MapMgr.mapData.guidePopupSkill);
            };
            e.prototype.updatePopupGuide = function () {
                this.m_popupGuideCircle && this.m_popupGuideCircle.contains(u.SnakeMgr.getSnakePosition()) && c.FrameMgr.noticeMgr.emit(r.EventTypeEnum.PopupGuideBegin, r.GuideType.PopupCircle);
                this.m_popupGuideSkill && this.m_popupGuideSkill.contains(u.SnakeMgr.getSnakePosition()) && c.FrameMgr.noticeMgr.emit(r.EventTypeEnum.PopupGuideBegin, r.GuideType.PopupSkill);
            };
            e.instance = new e();
            return e;
        }(s.BattleFlowBase);
        i.GuideMgr = v.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../data/storage/GameData": "GameData",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../battle/BattleManager": "BattleManager",
        "../battle/BulletManager": "BulletManager",
        "../battle/LootManager": "LootManager",
        "../battle/MapManager": "MapManager",
        "../battle/SnakeManager": "SnakeManager",
        "../battle/wave/NormalWaveManager": "NormalWaveManager"
    }],
    Hawkeye: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "84784gPNSFIQrHuUhoZKT+9", "Hawkeye");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.HKReport = i.Hawkeye = void 0;
        var n = t("../config/GameConfig"), a = t("../data/manager/ConfigDataManager"), r = t("../data/storage/GameData"), o = t("../util/Tools"), s = function () {
            this.gameId = 90;
            this.userId = "";
            this.registerTime = 0;
            this.reportId = "";
            this.level = 0;
            this.cid = "";
        }, c = function () {
            function t() {
                this.Server_Report = "https://report.drwho.mobi/report";
                this.Server_Param = "https://report.drwho.mobi/manager/getConfig";
                this._paramDeal = !0;
                this._paramData = null;
                this.paramInitOver = !1;
                this._gameID = 0;
                this._appName = "";
                this._paramName = "";
                this._adPlaceDict = {
                    5040385450787307: "1",
                    2060180490587391: "2",
                    7000987461781697: "3",
                    3010486411382817: "4",
                    5030788491480815: "5",
                    7040783421782932: "6",
                    7090781491687809: "7",
                    2060483432883822: "8"
                };
            }
            t.prototype.init = function () {
                var t = n.GConfig.getHawkeyeConfig();
                this._gameID = parseInt(t[2]);
                this._appName = t[0];
                this._paramName = t[1];
            };
            t.prototype.initParam = function (t, e) {
                void 0 === t && (t = !0);
                void 0 === e && (e = null);
                this._paramDeal = t;
                var i = this, n = new XMLHttpRequest();
                n.open("POST", this.Server_Param, !0);
                n.timeout = 5e3;
                n.ontimeout = function () {
                    o.DYTools.error("hawkee timeout");
                }.bind(this);
                n.onerror = function () {
                    o.DYTools.error("hawkee onerror");
                }.bind(this);
                n.onreadystatechange = function () {
                    var t = n.readyState, a = n.status;
                    if (4 == t && 200 == a) {
                        var s = n.responseText, c = JSON.parse(s);
                        o.DYTools.log("report param = " + s);
                        c.hasOwnProperty("curServerTime") && (r.GData.timestamp = Number(c.curServerTime));
                        i._paramData = c;
                        i._paramDeal && i.dealParam();
                        e && e();
                    }
                };
                var a = {};
                a.app = this._appName;
                n.send(JSON.stringify(a));
            };
            t.prototype.dealParam = function () {
                var t = this._paramData;
                if (t) {
                    var e = this._paramName + n.GConfig.version;
                    if (t.hasOwnProperty(e)) {
                        var i = t[e];
                        if (i.hasOwnProperty("global")) for (var r = i.global, o = 0; o < r.length; o++) a.ConfigDataMgr.setGLobalData(parseInt(r[o].id), r[o].ver);
                    }
                    this.paramInitOver = !0;
                    return !0;
                }
                return !1;
            };
            t.prototype.getHKData = function () {
                var t = new s();
                t.gameId = this._gameID;
                t.userId = r.GData.getUserID();
                t.registerTime = r.GData.getRegisterTime();
                t.level = r.GData.getCurStage();
                return t;
            };
            t.prototype.sendReport = function (t) {
                if (t) {
                    var e = JSON.stringify(t);
                    o.DYTools.log("report:" + e);
                    this.sendMsg(e);
                } else o.DYTools.error("report data is null");
            };
            t.prototype.sendLogin = function () {
                var t = this.getHKData();
                t.reportId = "01";
                this.sendReport(t);
            };
            t.prototype.sendOnline = function () {
                var t = this.getHKData();
                t.reportId = "02";
                this.sendReport(t);
            };
            t.prototype.sendStageTime = function (t, e) {
                var i = this.getHKData();
                i.reportId = "03-" + t + "-" + e;
                this.sendReport(i);
            };
            t.prototype.sendLoading = function (t) {
                var e = this.getHKData();
                e.reportId = "04-00-" + t;
                this.sendReport(e);
            };
            t.prototype.sendGuide = function (t) {
                var e = this.getHKData();
                e.reportId = "04-01-" + t;
                this.sendReport(e);
            };
            t.prototype.sendShareOut = function (t, e) {
                var i = this.getHKData();
                i.reportId = "05-00-" + t + "-" + e;
                this.sendReport(i);
            };
            t.prototype.sendShareIn = function (t, e, i) {
                o.DYTools.warn("分享进--" + t, e, i);
                var n = this.getHKData();
                n.reportId = "05-01-" + t + "-" + e + "-" + i;
                this.sendReport(n);
            };
            t.prototype.sendVideoShow = function (t) {
                var e = this.getHKData();
                e.reportId = "06-00-" + t;
                this.sendReport(e);
            };
            t.prototype.sendVideoPlay = function (t) {
                var e = this.getHKData();
                e.reportId = "06-01-" + t;
                this.sendReport(e);
            };
            t.prototype.sendVideoFinish = function (t) {
                var e = this.getHKData();
                e.reportId = "06-02-" + t;
                this.sendReport(e);
            };
            t.prototype.sendBtnStart = function (t, e, i, n) {
                var a = this.getHKData();
                a.reportId = "20-" + t + "-" + e + "-" + i + "-" + n;
                this.sendReport(a);
            };
            t.prototype.sendPlayerHurt = function (t, e, i, n, a) {
                var r = this.getHKData();
                r.reportId = "21-" + t + "-" + e + "-" + i + "-" + n + "-" + a;
                this.sendReport(r);
            };
            t.prototype.sendPlayerDie = function (t, e, i, n, a) {
                var r = this.getHKData();
                r.reportId = "22-" + t + "-" + e + "-" + i + "-" + n + "-" + a;
                this.sendReport(r);
            };
            t.prototype.sendPlayerRevive = function (t, e, i, n, a) {
                var r = this.getHKData();
                r.reportId = "23-" + t + "-" + e + "-" + i + "-" + n + "-" + a;
                this.sendReport(r);
            };
            t.prototype.sendStageOver = function (t, e, i, n) {
                var a = this.getHKData();
                a.reportId = "24-" + t + "-" + e + "-" + i + "-" + n;
                this.sendReport(a);
            };
            t.prototype.sendSnakeCircle = function (t, e, i) {
                var n = this.getHKData();
                n.reportId = "25-" + t + "-" + e + "-" + i;
                this.sendReport(n);
            };
            t.prototype.sendBuyPower = function (t) {
                var e = this.getHKData();
                e.reportId = "26-" + t;
                this.sendReport(e);
            };
            t.prototype.sendPowerShow = function (t) {
                var e = this.getHKData();
                e.reportId = "27-" + t;
                this.sendReport(e);
            };
            t.prototype.sendSaveDataErr = function (t) {
                var e = this.getHKData();
                e.reportId = "9999-" + t;
                this.sendReport(e);
            };
            t.prototype.sendGameErr = function (t) {
                var e = this.getHKData();
                e.reportId = "9998-" + t;
                this.sendReport(e);
            };
            t.prototype.sendAdError = function (t, e) {
                var i = this._adPlaceDict[e];
                null != i && null != i || (i = e);
                var n = this.getHKData();
                n.reportId = "30-" + i + "-" + t;
                this.sendReport(n);
            };
            t.prototype.sendCheckIn = function (t) {
                var e = this.getHKData();
                e.reportId = "31-" + t;
                this.sendReport(e);
            };
            t.prototype.sendPushEnter = function () {
                var t = this.getHKData();
                t.reportId = "32-0";
                this.sendReport(t);
            };
            t.prototype.sendPushSwitch = function (t) {
                var e = this.getHKData();
                e.reportId = "32-1-" + (t ? 1 : 0);
                this.sendReport(e);
            };
            t.prototype.sendPushCancel = function (t) {
                var e = this.getHKData();
                e.reportId = "32-2-" + t;
                this.sendReport(e);
            };
            t.prototype.sendPushChange = function (t) {
                var e = this.getHKData();
                e.reportId = "32-3-" + (t ? 1 : 0);
                this.sendReport(e);
            };
            t.prototype.sendRevive = function (t) {
                var e = this.getHKData();
                e.reportId = "33-" + t;
                this.sendReport(e);
            };
            t.prototype.sendIDFA = function (t) {
                var e = this.getHKData();
                e.reportId = "99-" + t;
                this.sendReport(e);
            };
            t.prototype.sendMsg = function (t) {
                var e = new XMLHttpRequest();
                e.open("POST", this.Server_Report, !0);
                e.timeout = 5e3;
                e.ontimeout = function () { }.bind(this);
                e.onreadystatechange = function () {
                    var t = e.readyState, i = e.status;
                    if (4 == t && 200 == i) {
                        var n = e.responseText;
                        JSON.parse(n).msgId;
                        o.DYTools.log("report response = " + n);
                    }
                };
                e.send(t);
            };
            t.instance = new t();
            return t;
        }();
        i.Hawkeye = c;
        i.HKReport = c.instance;
        cc._RF.pop();
    }, {
        "../config/GameConfig": "GameConfig",
        "../data/manager/ConfigDataManager": "ConfigDataManager",
        "../data/storage/GameData": "GameData",
        "../util/Tools": "Tools"
    }],
    HomeUI: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "9b64b0BC21HnI+LneuYxA57", "HomeUI");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConst"), s = t("../../../../../config/GameEnum"), c = t("../../../../../data/storage/GameData"), l = t("../../../../../frame/manager/FrameManager"), h = t("../../../../../frame/ui/UINum"), u = t("../../../../../util/Tools"), p = t("../../../../../util/GameFunc"), d = t("../../../../../data/manager/ConfigDataManager"), f = t("../../../../battle/manager/battle/SnakeManager"), m = t("../../../../../frame/manager/PopupManager"), g = t("../popup/PopupPower"), _ = t("../../../../../config/GameConfig"), y = t("./ShopUI"), v = t("../../../../battle/manager/common/GuideManager"), b = t("../../../../../frame/ui/UIComponent"), M = t("../popup/PopupSetting"), S = cc._decorator, k = S.ccclass, C = S.property, w = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.topNode = null;
                e.topUI = null;
                e.diamondNode = null;
                e.goldNode = null;
                e.powerNode = null;
                e.powerTimeNode = null;
                e.powerTimeLab = null;
                e.setNode = null;
                e.cccNode = null;
                e.botNode = null;
                e.botUI = null;
                e.normalBtn = [];
                e.normalRP = [];
                e.selBtnNode = [];
                e.selRP = [];
                e.selNode = null;
                e.shieldLayer = null;
                e.atlas = null;
                e.m_diamondNum = null;
                e.m_goldNum = null;
                e.m_powerNum = null;
                e._guideType = s.GuideType.None;
                e._cheatTimes = 0;
                e._cheatOn = !1;
                return e;
            }
            e.prototype.init = function () {
                var t = this;
                this.refreshLanguage();
                this.initShow();
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.CoinRefresh, this.refreshCoin.bind(this), this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.DiamondRefresh, this.refreshDiamond.bind(this), this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.GoldRefresh, this.refreshGold.bind(this), this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.PowerRefresh, this.refreshPower.bind(this), this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.HomeShield, this.showShield.bind(this), this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.CoinRefresh, this.refreshRedPoint.bind(this), this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.GoldRefresh, this.refreshRedPoint.bind(this), this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.ItemRefresh, this.refreshRedPoint.bind(this), this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.RedPointRefresh, this.refreshRedPoint.bind(this), this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.FetterRefresh, this.refreshFetterRP.bind(this), this);
                p.GFunc.adjustTopUI(this.topNode);
                this._cheatOn = 1 == d.ConfigDataMgr.getGlobalDataNum(9999);
                this.cccNode.on(cc.Node.EventType.TOUCH_END, function () {
                    t.onBtnCheatClicked();
                }, this);
                this.schedule(function () {
                    t.refreshShopRP();
                }, 1, cc.macro.REPEAT_FOREVER, 0);
            };
            e.prototype.refreshLanguage = function () {
                for (var t = 0; t < this.selBtnNode.length; t++) {
                    var e = this.selBtnNode[t].getChildByName("icon").getComponent(cc.Sprite);
                    l.FrameMgr.languageMgr.setImage(e, this.atlas, "btn_icon_" + t);
                }
            };
            e.prototype.onLoad = function () { };
            e.prototype.onDestroy = function () {
                l.FrameMgr.noticeMgr.delete(s.EventTypeEnum.CoinRefresh);
                l.FrameMgr.noticeMgr.delete(s.EventTypeEnum.DiamondRefresh);
                l.FrameMgr.noticeMgr.delete(s.EventTypeEnum.GoldRefresh);
                l.FrameMgr.noticeMgr.delete(s.EventTypeEnum.PowerRefresh);
            };
            e.prototype.initShow = function () {
                this.initCoin();
                this.refreshCoin();
                this.refreshRedPoint();
            };
            e.prototype.onBtnSettingClicked = function () {
                u.DYTools.isBtnClickedAble() && m.PopupMgr.show({
                    cls: M.default
                });
            };
            e.prototype.onBtnDiamondClicked = function () {
                u.DYTools.isBtnClickedAble();
            };
            e.prototype.onBtnGoldClicked = function () {
                u.DYTools.isBtnClickedAble();
            };
            e.prototype.onBtnPowerClicked = function () {
                u.DYTools.isBtnClickedAble() && m.PopupMgr.show({
                    cls: g.default,
                    options: !0
                });
            };
            e.prototype.onBtnShopClicked = function () {
                var t = d.ConfigDataMgr.getGlobalDataInt(s.GlobalKey.ShopSysUnlock, 2);
                if (c.GData.getCurStage() > t) {
                    var e = this.botUI.getChildByName("finger0");
                    e && (e.active = !1);
                    this.onBtnTagClicked(s.MainSceneTag.Shop);
                } else {
                    l.FrameMgr.audioMgr.playEffect("a_mainUI_snakeLock");
                    p.GFunc.showFloatTip({
                        txt: l.FrameMgr.languageMgr.getTxt(1e3, t),
                        bgType: 2
                    });
                }
            };
            e.prototype.onBtnWeaponClicked = function () {
                var t = d.ConfigDataMgr.getGlobalDataInt(s.GlobalKey.WeaponSysUnlock, 10);
                if (c.GData.getCurStage() > t) this.onBtnTagClicked(s.MainSceneTag.Weapon); else {
                    l.FrameMgr.audioMgr.playEffect("a_mainUI_snakeLock");
                    p.GFunc.showFloatTip({
                        txt: l.FrameMgr.languageMgr.getTxt(1e3, t),
                        bgType: 2
                    });
                }
            };
            e.prototype.onBtnMainClicked = function () {
                this.onBtnTagClicked(s.MainSceneTag.Main);
                this.refreshRedPoint();
            };
            e.prototype.onBtnSnakeClicked = function () {
                var t = d.ConfigDataMgr.getGlobalDataInt(s.GlobalKey.SnakeLevelUp, 10);
                if (c.GData.getCurStage() > t) {
                    var e = this.botUI.getChildByName("finger3");
                    e && (e.active = !1);
                    this.onBtnTagClicked(s.MainSceneTag.Snake);
                } else {
                    l.FrameMgr.audioMgr.playEffect("a_mainUI_snakeLock");
                    p.GFunc.showFloatTip({
                        txt: l.FrameMgr.languageMgr.getTxt(1e3, t),
                        bgType: 2
                    });
                }
            };
            e.prototype.onBtnFetterClicked = function () {
                var t = d.ConfigDataMgr.getGlobalDataInt(s.GlobalKey.FetterUnlock, 50);
                if (c.GData.getCurStage() > t) {
                    var e = this.botUI.getChildByName("finger4");
                    e && (e.active = !1);
                    this.onBtnTagClicked(s.MainSceneTag.Fetter);
                } else {
                    l.FrameMgr.audioMgr.playEffect("a_mainUI_snakeLock");
                    p.GFunc.showFloatTip({
                        txt: l.FrameMgr.languageMgr.getTxt(1e3, t),
                        bgType: 2
                    });
                }
            };
            e.prototype.onBtnTagClicked = function (t) {
                if (u.DYTools.isBtnClickedAble(!1)) {
                    l.FrameMgr.noticeMgr.emit(s.EventTypeEnum.MainChange, t);
                    for (var e = 0, i = this.normalBtn; e < i.length; e++) {
                        var n = i[e];
                        n.interactable = !0;
                        n.node.width = 133;
                    }
                    this.normalBtn[t].node.width = 188;
                    this.normalBtn[t].interactable = !1;
                    for (var a = 0, r = this.selBtnNode; a < r.length; a++) {
                        var o = r[a];
                        o.opacity = 0;
                        o.width = 133;
                    }
                    this.selBtnNode[t].opacity = 255;
                    this.selBtnNode[t].width = 188;
                    this.selNode.x = 133 * t - 360 + 94;
                }
            };
            e.prototype.initCoin = function () {
                var t, e = this;
                (t = cc.instantiate(o.GValue.pfNum)).parent = this.diamondNode;
                t.scale = .5;
                this.m_diamondNum = t.getComponent(h.default);
                this.m_diamondNum.init();
                this.m_diamondNum.setAtlas(this.atlas);
                this.m_diamondNum.setType(s.NumType.MainStage);
                this.m_diamondNum.setDistance(4);
                this.m_diamondNum.setDiffY(".", -16);
                (t = cc.instantiate(o.GValue.pfNum)).parent = this.goldNode;
                t.scale = .5;
                this.m_goldNum = t.getComponent(h.default);
                this.m_goldNum.init();
                this.m_goldNum.setAtlas(this.atlas);
                this.m_goldNum.setType(s.NumType.MainStage);
                this.m_goldNum.setDistance(4);
                this.m_goldNum.setDiffY(".", -16);
                this.m_goldNum.setDiffY("m", -2);
                (t = cc.instantiate(o.GValue.pfNum)).parent = this.powerNode;
                t.scale = .5;
                this.m_powerNum = t.getComponent(h.default);
                this.m_powerNum.init();
                this.m_powerNum.setAtlas(this.atlas);
                this.m_powerNum.setType(s.NumType.MainStage);
                this.m_powerNum.setDistance(4);
                this.m_powerNum.setDiffY(".", -16);
                this.schedule(function () {
                    e.updatePowerTime();
                }, 1, cc.macro.REPEAT_FOREVER, 0);
            };
            e.prototype.refreshCoin = function () {
                this.refreshDiamond();
                this.refreshGold();
                this.refreshPower();
            };
            e.prototype.refreshDiamond = function () {
                this.m_diamondNum.setString(u.DYTools.numberToString(c.GData.getDiamond()));
            };
            e.prototype.refreshGold = function () {
                this.m_goldNum.setString(u.DYTools.numberToString(c.GData.getGold()));
            };
            e.prototype.refreshPower = function () {
                this.m_powerNum.setString(u.DYTools.numberToString(c.GData.getPower()));
            };
            e.prototype.updatePowerTime = function () {
                if (c.GData.getPower() < o.GValue.MaxPower) {
                    this.powerTimeNode.active || (this.powerTimeNode.active = !0);
                    this.powerTimeLab && (this.powerTimeLab.string = u.DYTools.getTimeStrForMS(p.GFunc.checkPowerRecover()));
                } else this.powerTimeNode.active && (this.powerTimeNode.active = !1);
            };
            e.prototype.showShield = function (t) {
                this.shieldLayer.active = t;
            };
            e.prototype.showSettingNode = function (t) {
                this.setNode.active = t;
            };
            e.prototype.refreshRedPoint = function () {
                this.refreshShopRP();
                this.refreshWeaponRP();
                this.refreshSnakeRP();
                this.refreshFetterRP();
            };
            e.prototype.refreshShopRP = function () {
                var t = !1;
                c.GData.getCurStage() > 10 && y.default.isShowRP() && (t = !0);
                this.normalRP[0].active = t;
                this.selRP[0].active = t;
                if (t && c.GData.isGuided(s.GuideType.MainShop) && o.GValue.MainSceneTag != s.MainSceneTag.Shop && v.GuideMgr.guideAble(s.GuideType.MainShopRP)) {
                    (e = this.botUI.getChildByName("finger0")) || (e = p.GFunc.createfinger(this.botUI, "finger0", 2));
                    if (e) {
                        e.active = !0;
                        e.setPosition(this.normalBtn[0].node.getPosition());
                    }
                } else {
                    var e;
                    (e = this.botUI.getChildByName("finger0")) && (e.active = !1);
                }
            };
            e.prototype.refreshWeaponRP = function () {
                var t = !1, e = c.GData.getSnakeTurretLv() + 1, i = d.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", e);
                i && p.GFunc.isGoldEnough(i.gold) && p.GFunc.isItemEnough(301, i.itemNum) && (t = !0);
                this.normalRP[1].active = t;
                this.selRP[1].active = t;
            };
            e.prototype.refreshSnakeRP = function () {
                var t = !1;
                if (c.GData.getCurStage() > d.ConfigDataMgr.getGlobalDataNum(s.GlobalKey.SnakeLevelUp)) for (var e = f.SnakeMgr.getAllSnake(), i = 0; i < e.length; i++) {
                    var n = f.SnakeMgr.getSnakeConfigDataForType(e[i]);
                    if (n && f.SnakeMgr.getSnakeConfigDataForId(n.id + 1) && p.GFunc.isGoldEnough(n.costGold) && p.GFunc.isItemEnough(n.costMaterial.itemId, n.costMaterial.itemNum)) {
                        t = !0;
                        break;
                    }
                }
                this.normalRP[2].active = t;
                this.selRP[2].active = t;
                if (t && v.GuideMgr.guideAble(s.GuideType.SnakeLvup) || v.GuideMgr.guideAble(s.GuideType.SnakeChange) && f.SnakeMgr.isSnakeUnlock(103) && 103 != f.SnakeMgr.getCurSnakeType()) {
                    (a = this.botUI.getChildByName("finger3")) || (a = p.GFunc.createfinger(this.botUI, "finger3", 3));
                    if (a) {
                        a.active = !0;
                        a.setPosition(this.normalBtn[3].node.getPosition());
                    }
                } else {
                    var a;
                    (a = this.botUI.getChildByName("finger3")) && (a.active = !1);
                }
            };
            e.prototype.refreshFetterRP = function () {
                var t = d.ConfigDataMgr.getGlobalDataInt(s.GlobalKey.FetterUnlock, 50), e = c.GData.getCurStage() > t && f.SnakeMgr.hasFetterLvupAble();
                this.normalRP[3].active = e;
                this.selRP[3].active = e;
                if (e && v.GuideMgr.guideAble(s.GuideType.MainFetter)) {
                    (i = this.botUI.getChildByName("finger4")) || (i = p.GFunc.createfinger(this.botUI, "finger4", 3));
                    if (i) {
                        i.active = !0;
                        i.setPosition(this.normalBtn[4].node.getPosition());
                    }
                } else {
                    var i;
                    (i = this.botUI.getChildByName("finger4")) && (i.active = !1);
                }
            };
            e.prototype.createrFinger = function (t, e) {
                void 0 === e && (e = "finger");
                if (o.GValue.MainSceneGuide > 0) return null;
                var i = new cc.Node(e);
                t.addChild(i);
                var n = _.GConfig.ActionInterval, a = new cc.Node("yellow");
                a.parent = i;
                a.addComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame("dian");
                a.opacity = 0;
                var r = new cc.Node("circle");
                r.parent = i;
                r.addComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame("quan");
                r.opacity = 0;
                var s = function () {
                    a.opacity = 255;
                    cc.tween(a).to(6 * n, {
                        opacity: 0
                    }).start();
                    r.opacity = 255;
                    r.scale = .8;
                    cc.tween(r).to(6 * n, {
                        opacity: 0,
                        scale: 1.05
                    }).start();
                }, c = new cc.Node("finger");
                c.parent = i;
                var l = new cc.Node("icon");
                l.parent = c;
                l.addComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame("guide_hand");
                var h = cc.v2(66, -74);
                c.scaleX = .9;
                c.scaleY = .9;
                c.anchorY = 20;
                c.opacity = 0;
                c.setPosition(-136, 410);
                cc.tween(c).delay(.2).to(8 * n, {
                    opacity: 255,
                    angle: 10,
                    x: h.x + 16,
                    y: h.y + 42,
                    scale: .85
                }).to(3 * n, {
                    x: h.x,
                    y: h.y,
                    angle: 0,
                    scale: .8
                }).call(function () {
                    s();
                }).to(2 * n, {
                    scale: .85
                }).delay(10 * n).to(3 * n, {
                    angle: 10,
                    x: h.x + 25,
                    y: h.y + 4
                }).call(function () {
                    cc.Tween.stopAllByTarget(c);
                    cc.tween(c).to(5 * n, {
                        angle: 0,
                        scale: .8,
                        x: h.x,
                        y: h.y
                    }).call(function () {
                        s();
                    }).to(3 * n, {
                        scale: .85
                    }).delay(10 * n).to(5 * n, {
                        angle: 10,
                        x: h.x + 25,
                        y: h.y + 4
                    }).union().repeatForever().start();
                }).start();
                return i;
            };
            e.prototype.onBtnCheatClicked = function () {
                var t = this;
                if (this._cheatOn) {
                    0 == this._cheatTimes && this.scheduleOnce(function () {
                        t._cheatTimes = 0;
                    }, 10);
                    this._cheatTimes++;
                    if (this._cheatTimes > 10) {
                        this._cheatTimes = 0;
                        l.FrameMgr.noticeMgr.emit("cheat");
                    }
                }
            };
            e.prototype.showTopBottomUI = function (t, e) {
                void 0 === e && (e = !0);
                var i = 6 * _.GConfig.ActionInterval;
                e || (i = 0);
                this.topUI.stopAllActions();
                if (t) {
                    var n = cc.moveTo(i, cc.v2(0, 0));
                    this.topUI.runAction(n);
                } else {
                    n = cc.moveTo(i, cc.v2(0, 300));
                    this.topUI.runAction(n);
                }
                var a = 6 * _.GConfig.ActionInterval;
                e || (a = 0);
                this.botUI.stopAllActions();
                if (t) {
                    n = cc.moveTo(a, cc.v2(0, 0));
                    this.botUI.runAction(n);
                } else {
                    n = cc.moveTo(a, cc.v2(0, -400));
                    this.botUI.runAction(n);
                }
            };
            r([C(cc.Node)], e.prototype, "topNode", void 0);
            r([C(cc.Node)], e.prototype, "topUI", void 0);
            r([C(cc.Node)], e.prototype, "diamondNode", void 0);
            r([C(cc.Node)], e.prototype, "goldNode", void 0);
            r([C(cc.Node)], e.prototype, "powerNode", void 0);
            r([C(cc.Node)], e.prototype, "powerTimeNode", void 0);
            r([C(cc.Label)], e.prototype, "powerTimeLab", void 0);
            r([C(cc.Node)], e.prototype, "setNode", void 0);
            r([C(cc.Node)], e.prototype, "cccNode", void 0);
            r([C(cc.Node)], e.prototype, "botNode", void 0);
            r([C(cc.Node)], e.prototype, "botUI", void 0);
            r([C(cc.Button)], e.prototype, "normalBtn", void 0);
            r([C(cc.Node)], e.prototype, "normalRP", void 0);
            r([C(cc.Node)], e.prototype, "selBtnNode", void 0);
            r([C(cc.Node)], e.prototype, "selRP", void 0);
            r([C(cc.Node)], e.prototype, "selNode", void 0);
            r([C(cc.Node)], e.prototype, "shieldLayer", void 0);
            r([C(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([k], e);
        }(b.default);
        i.default = w;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/manager/PopupManager": "PopupManager",
        "../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../frame/ui/UINum": "UINum",
        "../../../../../util/GameFunc": "GameFunc",
        "../../../../../util/Tools": "Tools",
        "../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "../../../../battle/manager/common/GuideManager": "GuideManager",
        "../popup/PopupPower": "PopupPower",
        "../popup/PopupSetting": "PopupSetting",
        "./ShopUI": "ShopUI"
    }],
    HurtAnim: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "358cfQIhhhPg4IWdryGXqIO", "HurtAnim");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../frame/manager/FrameManager"), c = t("../../../../frame/ui/FrameAnim"), l = t("../../common/EntityBase"), h = cc._decorator, u = h.ccclass, p = (h.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._animComp = null;
                    return e;
                }
                e.prototype.playLoop = function (t) {
                    null == this._animComp && (this._animComp = this.node.getComponent(c.default));
                    var e = s.FrameMgr.loadMgr.get("TP_hurtEffect", cc.SpriteAtlas);
                    if (e) {
                        this._animComp.init(e, t, 3, o.GConfig.ActionInterval);
                        this._animComp.play();
                    }
                };
                e.prototype.playOnce = function (t, e) {
                    null == this._animComp && (this._animComp = this.node.getComponent(c.default));
                    var i = s.FrameMgr.loadMgr.get("TP_hurtEffect", cc.SpriteAtlas);
                    if (i) {
                        this._animComp.init(i, t, 3, o.GConfig.ActionInterval, null, e);
                        this._animComp.play(1);
                    }
                };
                e.prototype.onRemove = function () {
                    this._animComp.stop();
                };
                return r([u], e);
            }(l.default));
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../common/EntityBase": "EntityBase"
    }],
    IosPlatform: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c2db6wso1tGnKqrViNIUdR2", "IosPlatform");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../config/GameEnum"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_type = r.PlatFormType.IOS;
                return e;
            }
            e.prototype.init = function () { };
            e.prototype.virbrate = function () { };
            e.prototype.playRewardAd = function () { };
            e.prototype.onRewardPlay = function () { };
            e.prototype.showBanner = function () { };
            e.prototype.hideBanner = function () { };
            e.prototype.playInterstitialAd = function () { };
            e.prototype.playSplashAd = function () { };
            e.prototype.hideAdLoadingForTimeOut = function () { };
            return e;
        }(t("./PlatformBase").default);
        i.default = o;
        cc._RF.pop();
    }, {
        "../config/GameEnum": "GameEnum",
        "./PlatformBase": "PlatformBase"
    }],
    LanguageManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1cb2a6dKGhH8qxIUy/uBglB", "LanguageManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.LanguageMgr = i.LanguageData = void 0;
        var n = t("../../data/storage/GameData"), a = t("../../util/Tools"), r = t("./FrameManager"), o = function () {
            function t() {
                this.m_language = 0;
                this.m_dataMap = new Map();
            }
            t.prototype.init = function () {
                this.m_language = n.GData.getLanguage();
            };
            t.prototype.initData = function () {
                var t = r.FrameMgr.loadMgr.get("language", cc.TextAsset);
                if (t) for (var e = t.text, i = a.DYTools.AESDecode(e), n = JSON.parse(i), o = 0; o < n.length; o++) {
                    var c = new s();
                    c.loadJson(n[o]);
                    this.m_dataMap.set(c.id, c);
                } else a.DYTools.warn("no json", name);
            };
            Object.defineProperty(t.prototype, "language", {
                get: function () {
                    return this.m_language;
                },
                set: function (t) {
                    this.m_language = t;
                },
                enumerable: !1,
                configurable: !0
            });
            t.prototype.getTxt = function (t) {
                for (var e = [], i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
                var n = this.m_dataMap.get(t);
                if (n) {
                    var a = n.txt[this.language] || "";
                    "" != a && (a = a.format(e));
                    return a;
                }
                return "";
            };
            t.prototype.getImage = function (t, e) {
                void 0 === e && (e = -1);
                return 0 == (e = -1 == e ? this.language : e) ? t : t + "_" + e;
            };
            t.prototype.setImage = function (t, e, i, n) {
                void 0 === n && (n = -1);
                t && e && i && (t.spriteFrame = e.getSpriteFrame(this.getImage(i, n)));
            };
            t.instance = new t();
            return t;
        }();
        i.default = o;
        var s = function () {
            function t() {
                this.id = 0;
                this.txt = [];
            }
            t.prototype.loadJson = function (t) {
                this.id = a.DYTools.setInt(t, "id");
                for (var e = 0, i = "l" + e, n = t[i]; n;) {
                    this.txt.push(n);
                    n = t[i = "l" + ++e];
                }
            };
            return t;
        }();
        i.LanguageData = s;
        i.LanguageMgr = o.instance;
        cc._RF.pop();
    }, {
        "../../data/storage/GameData": "GameData",
        "../../util/Tools": "Tools",
        "./FrameManager": "FrameManager"
    }],
    LaunchScene: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "0faedFHe6FGE6g4sbIUVRmk", "LaunchScene");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        }, o = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, s = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var c = t("../../../../config/GameConst"), l = t("../../../../frame/manager/FrameManager"), h = t("../../../../util/Tools"), u = t("../../../../data/manager/ConfigDataManager"), p = t("../../../../data/storage/GameData"), d = t("../../../battle/manager/battle/BattleManager"), f = t("../../../../config/GameEnum"), m = t("../../../battle/manager/common/GuideManager"), g = t("../../../../other/Hawkeye"), _ = t("../../../../platform/PlatformManager"), y = t("../../../../util/GameFunc"), v = t("../../../battle/manager/battle/SnakeManager"), b = cc._decorator, M = b.ccclass, S = b.property, k = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.loadProNode = null;
                e.loadProSpr = null;
                e.loadProLab = null;
                e.popupLayer = [];
                e.commonAtlas = null;
                e._loadTotal = 0;
                e._loadCount = 0;
                e._configOver = !1;
                e._hawkeyeOver = !1;
                e._mainScene = null;
                e._loadErr = !1;
                e.m_resArrs = [];
                e.m_typeArr = [];
                e.m_nameArr = [];
                e.m_callArr = [];
                e.m_isLoading = !1;
                e.m_curPercent = 0;
                return e;
            }
            e.prototype.onLoad = function () {
                var t = cc.view.getFrameSize(), e = cc.view.getVisibleSize();
                c.GValue.ScreenFit = cc.winSize.height / cc.winSize.width >= 1.7;
                var i = this.node.getComponent(cc.Canvas);
                if (c.GValue.ScreenFit) {
                    i.fitHeight = !1;
                    i.fitWidth = !0;
                } else {
                    i.fitHeight = !0;
                    i.fitWidth = !0;
                    var n = cc.winSize.height / t.height;
                    c.GValue.IPADWidth = n * t.width;
                    c.GValue.IPADHeight = cc.winSize.height;
                    h.DYTools.log("cccccccc111", c.GValue.IPADWidth, c.GValue.IPADHeight);
                }
                h.DYTools.log("cccccccc", t.width, t.height, e.width, e.height, cc.winSize.width, cc.winSize.height, cc.winSize.width / cc.winSize.height);
                g.HKReport.init();
            };
            e.prototype.start = function () {
                _.PlatformMgr.init();
                p.GData.init();
                l.FrameMgr.reportMgr.sendReportLoading(f.LoadingStep.DataInit);
                l.FrameMgr.reportMgr.sendReportLogin();
                l.FrameMgr.reportMgr.sendReportLoading(f.LoadingStep.LaunchShow);
                c.GValue.init();
                l.FrameMgr.reportMgr.sendReportLoading(f.LoadingStep.ScreenInit);
                l.FrameMgr.popupMgr.initContainers(this.popupLayer);
                l.FrameMgr.languageMgr.init();
                this.init();
                y.GFunc.initBackFront();
                this.schedule(function () {
                    y.GFunc.updateTimestamp();
                }, 1, cc.macro.REPEAT_FOREVER, 0);
            };
            e.prototype.init = function () {
                var t = this;
                l.FrameMgr.audioMgr.init(p.GData.getSound(), p.GData.getMusic());
                g.HKReport.initParam(!1, function () {
                    if (t._configOver) {
                        g.HKReport.dealParam();
                        t._hawkeyeOver = !0;
                    }
                });
                this.load();
                this.scheduleOnce(function () {
                    t.adjustScreen();
                }, .1);
            };
            e.prototype.adjustScreen = function () {
                try {
                    var t = cc.sys.getSafeAreaRect();
                    c.GValue.SafeOffsetY = Math.abs(t.height - c.GValue.ViewSize.height);
                    h.DYTools.warn("safe = ", t.x, t.y, t.width, t.height);
                    h.DYTools.warn("size = ", c.GValue.ViewSize.width, c.GValue.ViewSize.height, c.GValue.SafeOffsetY);
                    c.GValue.SafeOffsetY > 44 && (c.GValue.SafeOffsetY = 44);
                } catch (t) {
                    h.DYTools.error("adjustScreen failed");
                }
            };
            e.prototype.load = function () {
                return o(this, void 0, void 0, function () {
                    return s(this, function (t) {
                        switch (t.label) {
                            case 0:
                                l.FrameMgr.reportMgr.sendReportLoading(f.LoadingStep.LoadingResList);
                                return [4, l.FrameMgr.loadMgr.init()];

                            case 1:
                                t.sent();
                                this.loadCommon();
                                return [2];
                        }
                    });
                });
            };
            e.prototype.loadCommon = function () {
                return o(this, void 0, void 0, function () {
                    var t, e, i = this;
                    return s(this, function () {
                        l.FrameMgr.reportMgr.sendReportLoading(f.LoadingStep.LoadingStart);
                        t = ["gb", "language", "stageInfo", "stage", "snake", "fetter", "stageCoin", "snakeSkill", "cannonLevel", "bullet", "item", "shopBox"];
                        this._loadRes(t, cc.TextAsset, "common_json", function () {
                            u.ConfigDataMgr.init();
                            c.GValue.initData();
                            l.FrameMgr.languageMgr.initData();
                            i._configOver = !0;
                            i._hawkeyeOver || g.HKReport.dealParam() && (i._hawkeyeOver = !0);
                        });
                        t = ["tp_common", "TP_Item", "TP_PopupReward", "TP_Snake_" + v.SnakeMgr.getCurSnakeType(), "TP_Shadow"];
                        this._loadRes(t, cc.SpriteAtlas, "common_atlas", function () {
                            c.GValue.CommonAtlas = l.FrameMgr.loadMgr.get("tp_common", cc.SpriteAtlas);
                        });
                        e = ["FrameAnim", "UINum", "PopupReward"];
                        this._loadRes(e, cc.Prefab, "common_prefab", function () {
                            c.GValue.pfFrameAnim = l.FrameMgr.loadMgr.get("FrameAnim", cc.Prefab);
                            c.GValue.pfNum = l.FrameMgr.loadMgr.get("UINum", cc.Prefab);
                        });
                        return [2];
                    });
                });
            };
            e.prototype.preloadMainScene = function () {
                var t = this;
                l.FrameMgr.loadMgr.loadBundle("mainScene", function (e) {
                    e.loadScene("MainScene", function (e, i) {
                        t.refreshLoadProgressDisplay(20 + 40 * e / i);
                    }, function (e, i) {
                        if (i) {
                            t._mainScene = i;
                            c.GValue.MainScene = i;
                            t.preloadMainRes();
                        } else t._loadErr = !0;
                    });
                });
            };
            e.prototype.preloadMainRes = function () {
                this._loadTotal = 0;
                this._loadCount = 0;
                var t = [];
                if (u.ConfigDataMgr.getData("ConfigStageInfoData", p.GData.getCurStage())) {
                    var e = d.BattleMgr.mapId;
                    0 == e && (e = y.GFunc.getStageData(p.GData.getCurStage() - 1).mapType);
                    t.push("TP_MainBg_" + e);
                }
                this._loadRes(t, cc.SpriteAtlas, "home_atlas", null, !0);
                t = ["chirp", "bgm_main", "bird_fly", "aura_show"];
                this._loadRes(t, cc.AudioClip, "home_audio", null, !0);
            };
            e.prototype.preloadBattleScene = function () {
                var t = Math.round(u.ConfigDataMgr.getGlobalDataNum(f.GlobalKey.PowerCost, 5));
                y.GFunc.powerChange(-t);
                l.FrameMgr.reportMgr.sendReportLoading(f.LoadingStep.LoadingSceneStart);
                l.FrameMgr.loadMgr.loadBundleScene("loading", "/scene/loadingScene", function (t) {
                    cc.director.runScene(t);
                });
            };
            e.prototype._loadRes = function (t, e, i, n, a) {
                var r = this;
                void 0 === i && (i = "");
                this.m_resArrs.push(t);
                this.m_typeArr.push(e);
                this.m_nameArr.push(i);
                this.m_callArr.push(n);
                this._loadTotal += t.length;
                var o = function () {
                    if (r.m_resArrs.length > 0) {
                        if (!r.m_isLoading) {
                            var t = r.m_resArrs.shift(), e = r.m_typeArr.shift(), i = r.m_nameArr.shift(), n = r.m_callArr.shift();
                            r.m_isLoading = !0;
                            l.FrameMgr.loadMgr.load(t, e, function () {
                                switch (i) {
                                    case "common_json":
                                        l.FrameMgr.reportMgr.sendReportLoading(f.LoadingStep.LoadingCommonJson);
                                        break;

                                    case "common_atlas":
                                        l.FrameMgr.reportMgr.sendReportLoading(f.LoadingStep.LoadingCommonAtlas);
                                        break;

                                    case "common_prefab":
                                        l.FrameMgr.reportMgr.sendReportLoading(f.LoadingStep.LoadingCommonPrefab);
                                }
                                r.m_isLoading = !1;
                                n && n();
                                o();
                            }, function () {
                                h.DYTools.error("launch load err", i);
                                r._loadErr = !0;
                                r.m_isLoading = !1;
                            }, function () {
                                r._loadCount++;
                                a ? r.refreshLoadProgressDisplay(60 + 40 * r._loadCount / r._loadTotal) : r.refreshLoadProgressDisplay(20 * r._loadCount / r._loadTotal);
                            });
                        }
                    } else {
                        l.FrameMgr.reportMgr.sendReportLoading(f.LoadingStep.LoadingEnd);
                        d.BattleMgr.setBattleData(p.GData.getCurStage());
                        y.GFunc.checkIsNewPlayer();
                        m.GuideMgr.guideAble(f.GuideType.FirstBattle) ? r.preloadBattleScene() : a ? r.scheduleOnce(function () {
                            var t = [];
                            if (u.ConfigDataMgr.getData("ConfigStageInfoData", p.GData.getCurStage())) {
                                var e = d.BattleMgr.mapId;
                                0 == e && (e = y.GFunc.getStageData(p.GData.getCurStage() - 1).mapType);
                                t.push("TP_MainBg_" + e);
                            }
                            l.FrameMgr.loadMgr.loadAtlas(t);
                            cc.director.runScene(r._mainScene);
                        }, .5) : r.preloadMainScene();
                    }
                };
                o();
            };
            e.prototype.refreshLoadProgressDisplay = function (t) {
                if (!(this.m_curPercent > t)) {
                    this.m_curPercent = t;
                    this.loadProLab.string = Math.round(t) + "%";
                }
            };
            e.prototype.update = function (t) {
                y.GFunc.checkOnline(t);
            };
            r([S(cc.Node)], e.prototype, "loadProNode", void 0);
            r([S(cc.Sprite)], e.prototype, "loadProSpr", void 0);
            r([S(cc.Label)], e.prototype, "loadProLab", void 0);
            r([S(cc.Node)], e.prototype, "popupLayer", void 0);
            r([S(cc.SpriteAtlas)], e.prototype, "commonAtlas", void 0);
            return r([M], e);
        }(cc.Component);
        i.default = k;
        cc._RF.pop();
    }, {
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../data/storage/GameData": "GameData",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../other/Hawkeye": "Hawkeye",
        "../../../../platform/PlatformManager": "PlatformManager",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "../../../battle/manager/common/GuideManager": "GuideManager"
    }],
    LineColliderComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "7b0b1CklWtDeot4o+noRrEQ", "LineColliderComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../config/GameEnum"), o = t("../../../util/Tools"), s = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_type = r.ColliderType.Line;
                e.m_data = {
                    start: cc.Vec2.ZERO,
                    end: cc.Vec2.ZERO,
                    tag: 0
                };
                e.m_param = [];
                e.m_position = cc.Vec2.ZERO;
                e.m_dir = cc.Vec2.ZERO;
                e.m_normalVec = cc.Vec2.ZERO;
                e.m_angle = 0;
                e._isPlus = !1;
                e.m_verVec = cc.Vec2.ZERO;
                return e;
            }
            e.prototype.init = function (e, i, n) {
                this.initBase(i, n);
                t.prototype.init.call(this, e, i, n);
                this.m_param.splice(0);
                if (e.length > 2) {
                    this.m_data.tag = e[0];
                    this.m_data.start.x = e[1];
                    this.m_data.start.y = e[2];
                    this.m_data.end.x = e[3];
                    this.m_data.end.y = e[4];
                    var a = null, r = null;
                    e[3] != e[1] && (a = (e[4] - e[2]) / (e[3] - e[1]));
                    null != a && (r = e[4] - a * e[3]);
                    this.m_param.push(a);
                    this.m_param.push(r);
                    var s = this.m_data.end.sub(this.m_data.start);
                    this.m_dir = s.normalize();
                    this.m_position = s.mul(.5);
                    this._isPlus = a > 0;
                    var c = cc.Vec2.ZERO;
                    switch (this.m_data.tag) {
                        case 1:
                            this.m_normalVec.x = 0;
                            this.m_normalVec.y = -1;
                            c.x = 1;
                            break;

                        case 2:
                            this.m_normalVec.x = 0;
                            this.m_normalVec.y = 1;
                            c.x = 1;
                            break;

                        case 3:
                            this.m_normalVec.x = 1;
                            this.m_normalVec.y = 0;
                            c.y = 1;
                            break;

                        case 4:
                            this.m_normalVec.x = -1;
                            this.m_normalVec.y = 0;
                            c.y = 1;
                    }
                    this.m_angle = c.signAngle(this.dir);
                    this.m_verVec = this.normalVec.rotate(this.m_angle);
                } else o.DYTools.error("line colider data error", JSON.stringify(e));
            };
            Object.defineProperty(e.prototype, "data", {
                get: function () {
                    return this.m_data;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "position", {
                get: function () {
                    return this.m_position;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "param", {
                get: function () {
                    return this.m_param;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "dir", {
                get: function () {
                    return this.m_dir;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "tag", {
                get: function () {
                    return this.m_data.tag;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "normalVec", {
                get: function () {
                    return this.m_normalVec;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "angle", {
                get: function () {
                    return this.m_angle;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "verVec", {
                get: function () {
                    return this.m_verVec;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "isPlus", {
                get: function () {
                    return this._isPlus;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.onEnable = function () {
                t.prototype.onEnable.call(this);
                this.updateLogic(0);
            };
            return e;
        }(t("./ColliderComp").default);
        i.default = s;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../../../util/Tools": "Tools",
        "./ColliderComp": "ColliderComp"
    }],
    LoadManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "209571refNP5ox8G9rZlTvG", "LoadManager");
        var n = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, a = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.LoadMgr = void 0;
        var r = t("../../util/Tools"), o = function () {
            function t() { }
            t.prototype.init = function () {
                return n(this, void 0, void 0, function () {
                    var t;
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                cc.assetManager.downloader.maxRetryCount = 3;
                                cc.assetManager.downloader.retryInterval = 2e3;
                                return [4, this.loadResAsync("ResourceList", cc.JsonAsset)];

                            case 1:
                                t = e.sent();
                                this.resourceData = t.json;
                                return [2];
                        }
                    });
                });
            };
            t.prototype.get = function (t, e) {
                var i = this.getParam(t, e);
                if (i) return "" != i.bundle ? this.getBundleRes(i.bundle, i.path, e) : this.getRes(i.path, e);
                r.DYTools.error("error load", t);
                return null;
            };
            t.prototype.loadAtlas = function (t, e, i) {
                this.load(t, cc.SpriteAtlas, e, i);
            };
            t.prototype.loadAtlasAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadAsync(t, cc.SpriteAtlas)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.loadImage = function (t, e) {
                this.load(t, cc.SpriteFrame, e);
            };
            t.prototype.loadImageAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadAsync(t, cc.SpriteFrame)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.loadJson = function (t, e) {
                this.load(t, cc.JsonAsset, function (t) {
                    t ? e && e(t.json) : e && e(null);
                });
            };
            t.prototype.loadJsonAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    var e;
                    return a(this, function (i) {
                        switch (i.label) {
                            case 0:
                                return [4, this.loadAsync(t, cc.JsonAsset)];

                            case 1:
                                return [2, (e = i.sent()) ? e.json : null];
                        }
                    });
                });
            };
            t.prototype.loadAudio = function (t, e) {
                this.load(t, cc.AudioClip, e);
            };
            t.prototype.loadAudioAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadAsync(t, cc.AudioClip)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.loadPrefab = function (t, e, i) {
                this.load(t, cc.Prefab, e, i);
            };
            t.prototype.loadPrefabAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadAsync(t, cc.Prefab)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.loadParticle = function (t, e) {
                this.load(t, cc.ParticleAsset, e);
            };
            t.prototype.loadParticleAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadAsync(t, cc.ParticleAsset)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.loadSpine = function (t, e) {
                this.load(t, sp.SkeletonData, e);
            };
            t.prototype.loadSpineAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadAsync(t, sp.SkeletonData)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.load = function (t, e, i, n, a) {
                if (Array.isArray(t)) {
                    for (var o = [], s = 0, c = t; s < c.length; s++) {
                        var l = c[s];
                        (g = this.getParam(l, e)) && o.push(g);
                    }
                    var h = o.length, u = 0, p = [], d = function (t) {
                        u++;
                        p.push(t);
                        a && a(u, u / h, t);
                        u >= h && i && i(p);
                    };
                    if (o.length > 0) for (var f = 0, m = o; f < m.length; f++) "" != (g = m[f]).bundle ? this.loadBundleRes(g.bundle, g.path, e, d, n) : this.loadRes(g.path, e, d, n); else i && i(p);
                } else {
                    var g;
                    (g = this.getParam(t, e)) ? "" != g.bundle ? this.loadBundleRes(g.bundle, g.path, e, i, n) : this.loadRes(g.path, e, i, n) : r.DYTools.error("error load", t);
                }
            };
            t.prototype.loadAsync = function (t, e) {
                return n(this, void 0, Promise, function () {
                    var i, n, o, s, c, l, h, u, p;
                    return a(this, function (a) {
                        switch (a.label) {
                            case 0:
                                if (!Array.isArray(t)) return [3, 8];
                                i = [];
                                for (n = 0, o = t; n < o.length; n++) {
                                    s = o[n];
                                    (p = this.getParam(s, e)) && i.push(p);
                                }
                                c = [];
                                l = 0, h = i;
                                a.label = 1;

                            case 1:
                                if (!(l < h.length)) return [3, 7];
                                p = h[l];
                                u = null;
                                return "" == p.bundle ? [3, 3] : [4, this.loadBundleResAsync(p.bundle, p.path, e)];

                            case 2:
                                u = a.sent();
                                return [3, 5];

                            case 3:
                                return [4, this.loadResAsync(p.path, e)];

                            case 4:
                                u = a.sent();
                                a.label = 5;

                            case 5:
                                u && c.push(u);
                                a.label = 6;

                            case 6:
                                l++;
                                return [3, 1];

                            case 7:
                                return [2, c];

                            case 8:
                                return (p = this.getParam(t, e)) ? "" == p.bundle ? [3, 10] : [4, this.loadBundleResAsync(p.bundle, p.path, e)] : [3, 13];

                            case 9:
                                return [2, a.sent()];

                            case 10:
                                return [4, this.loadResAsync(p.path, e)];

                            case 11:
                                return [2, a.sent()];

                            case 12:
                                return [3, 14];

                            case 13:
                                r.DYTools.error("error load", t);
                                return [2, null];

                            case 14:
                                return [2];
                        }
                    });
                });
            };
            t.prototype.getParam = function (t, e) {
                var i = {
                    bundle: "",
                    path: ""
                }, n = this.getUrl(t, e), a = !1;
                if (n) {
                    n.path && "" != n.path ? i.path = n.path : a = !0;
                    a || n.bundle && "" != n.bundle && (i.bundle = n.bundle);
                }
                a && (i = null);
                return i;
            };
            t.prototype.getUrl = function (t, e) {
                var i = "";
                switch (e) {
                    case cc.Prefab:
                        i = "prefab";
                        break;

                    case cc.SpriteFrame:
                        i = "texture";
                        break;

                    case cc.AudioClip:
                        i = "audio";
                        break;

                    case sp.SkeletonData:
                        i = "spine";
                        break;

                    case cc.SpriteAtlas:
                        i = "texture";
                        break;

                    case cc.ParticleAsset:
                        i = "particle";
                        break;

                    case cc.JsonAsset:
                    case cc.TextAsset:
                        i = "config";
                }
                var n = null;
                this.resourceData[i] && (n = this.resourceData[i][t]);
                if (null == n) {
                    if (e == cc.SpriteAtlas) {
                        i = "texture";
                        this.resourceData[i] && (n = this.resourceData[i][t]);
                    }
                    n || cc.warn("not find res " + t);
                }
                return n;
            };
            t.prototype.releaseResArr = function (t, e) {
                for (var i = 0, n = t; i < n.length; i++) {
                    var a = n[i];
                    this.releaseRes(a, e);
                }
            };
            t.prototype.releaseRes = function (t, e) {
                var i = this.getRes(t, e);
                i && cc.assetManager.releaseAsset(i);
            };
            t.prototype.releaseAsset = function (t) {
                cc.assetManager.releaseAsset(t);
            };
            t.prototype.release = function (t, e) {
                var i = this.getParam(t, e);
                i ? "" != i.bundle && this.releaseBundleRes(i.bundle, i.path, e) || this.releaseRes(i.path, e) : r.DYTools.error("error release", t);
            };
            t.prototype.loadBundle = function (t, e, i) {
                cc.assetManager.loadBundle(t, function (t, n) {
                    t ? i && i(t) : e && e(n);
                });
            };
            t.prototype.loadBundleAsync = function (t) {
                return new Promise(function (e, i) {
                    cc.assetManager.loadBundle(t, function (t, n) {
                        t ? i(t) : e(n);
                    });
                });
            };
            t.prototype.getBundle = function (t) {
                return cc.assetManager.getBundle(t);
            };
            t.prototype.removeBundle = function (t, e) {
                void 0 === e && (e = !1);
                if (t) {
                    if (e) {
                        this.releaseBundleAllRes(t.name);
                        t.releaseAll();
                    }
                    cc.assetManager.removeBundle(t);
                }
            };
            t.prototype.getBundleRes = function (t, e, i) {
                var n = this.getBundle(t);
                return n ? function (t) {
                    return t.get(e, i);
                }(n) : null;
            };
            t.prototype.loadBundleRes = function (t, e, i, n, a) {
                var r = function (t) {
                    t.load(e, i, function (t, e) {
                        t ? a && a(t) : n && n(e);
                    });
                }, o = this.getBundle(t);
                o ? r(o) : this.loadBundle(t, r);
            };
            t.prototype.loadBundleResAsync = function (t, e, i) {
                var r = this;
                return new Promise(function (o, s) {
                    return n(r, void 0, void 0, function () {
                        var n;
                        return a(this, function (a) {
                            switch (a.label) {
                                case 0:
                                    return (n = this.getBundle(t)) ? [3, 2] : [4, this.loadBundleAsync(t).catch(function (t) {
                                        s(t);
                                    })];

                                case 1:
                                    n = a.sent();
                                    a.label = 2;

                                case 2:
                                    n && n.load(e, i, function (t, e) {
                                        t ? s(t) : o(e);
                                    });
                                    return [2];
                            }
                        });
                    });
                });
            };
            t.prototype.loadBundleDirRes = function (t, e, i, n, a) {
                var r = function (t) {
                    i ? t.loadDir(e, i, function (t, e) {
                        t ? a && a(t) : n && n(e);
                    }) : t.loadDir(e, function (t, e) {
                        t ? a && a(t) : n && n(e);
                    });
                }, o = this.getBundle(t);
                o ? r(o) : this.loadBundle(t, r);
            };
            t.prototype.loadBundleDirResAsync = function (t, e, i) {
                var r = this;
                return new Promise(function (o, s) {
                    return n(r, void 0, void 0, function () {
                        var n;
                        return a(this, function (a) {
                            switch (a.label) {
                                case 0:
                                    return (n = this.getBundle(t)) ? [3, 2] : [4, this.loadBundleAsync(t).catch(function (t) {
                                        s(t);
                                    })];

                                case 1:
                                    n = a.sent();
                                    a.label = 2;

                                case 2:
                                    n && (i ? n.loadDir(e, i, function (t, e) {
                                        t ? s(t) : o(e);
                                    }) : n.loadDir(e, function (t, e) {
                                        t ? s(t) : o(e);
                                    }));
                                    return [2];
                            }
                        });
                    });
                });
            };
            t.prototype.loadBundleScene = function (t, e, i, n) {
                var a = function (t) {
                    t.loadScene(e, function (t, e) {
                        t ? n && n(t) : i && i(e);
                    });
                }, r = this.getBundle(t);
                r ? a(r) : this.loadBundle(t, a);
            };
            t.prototype.loadBundleSceneAsync = function (t, e) {
                var i = this;
                return new Promise(function (r, o) {
                    return n(i, void 0, void 0, function () {
                        var i;
                        return a(this, function (n) {
                            switch (n.label) {
                                case 0:
                                    return (i = this.getBundle(t)) ? [3, 2] : [4, this.loadBundleAsync(t).catch(function (t) {
                                        o(t);
                                    })];

                                case 1:
                                    i = n.sent();
                                    n.label = 2;

                                case 2:
                                    i && i.loadScene(e, function (t, e) {
                                        t ? o(t) : r(e);
                                    });
                                    return [2];
                            }
                        });
                    });
                });
            };
            t.prototype.preloadBundleRes = function (t, e, i, n, a) {
                var r = function (t) {
                    t.preload(e, i, function (t, e) {
                        t ? a && a(t) : n && n(e);
                    });
                }, o = this.getBundle(t);
                o ? r(o) : this.loadBundle(t, r);
            };
            t.prototype.preloadBundleResAsync = function (t, e, i) {
                var r = this;
                return new Promise(function (o, s) {
                    return n(r, void 0, void 0, function () {
                        var n;
                        return a(this, function (a) {
                            switch (a.label) {
                                case 0:
                                    return (n = this.getBundle(t)) ? [3, 2] : [4, this.loadBundleAsync(t).catch(function (t) {
                                        s(t);
                                    })];

                                case 1:
                                    n = a.sent();
                                    a.label = 2;

                                case 2:
                                    n && n.preload(e, i, function (t, e) {
                                        t ? s(t) : o(e);
                                    });
                                    return [2];
                            }
                        });
                    });
                });
            };
            t.prototype.preloadBundleDirRes = function (t, e, i, n, a) {
                var r = function (t) {
                    t.preloadDir(e, i, function (t, e) {
                        t ? a && a(t) : n && n(e);
                    });
                }, o = this.getBundle(t);
                o ? r(o) : this.loadBundle(t, r);
            };
            t.prototype.preloadBundleDirResAsync = function (t, e, i) {
                var r = this;
                return new Promise(function (o, s) {
                    return n(r, void 0, void 0, function () {
                        var n;
                        return a(this, function (a) {
                            switch (a.label) {
                                case 0:
                                    return (n = this.getBundle(t)) ? [3, 2] : [4, this.loadBundleAsync(t).catch(function (t) {
                                        s(t);
                                    })];

                                case 1:
                                    n = a.sent();
                                    a.label = 2;

                                case 2:
                                    n && n.preloadDir(e, i, function (t, e) {
                                        t ? s(t) : o(e);
                                    });
                                    return [2];
                            }
                        });
                    });
                });
            };
            t.prototype.releaseBundleAllRes = function (t) {
                var e = this.getBundle(t);
                e && e.releaseAll();
            };
            t.prototype.releaseBundleRes = function (t, e, i) {
                var n = this.getBundle(t);
                if (n) {
                    n.release(e, i);
                    return !0;
                }
                return !1;
            };
            t.prototype.releaseBundleDirRes = function (t, e, i) {
                var n = this.getBundle(t);
                n && n.release(e, i);
            };
            t.prototype.getRes = function (t, e) {
                return cc.resources.get(t, e);
            };
            t.prototype.loadResPrefab = function (t, e) {
                this.loadRes(t, cc.Prefab, e);
            };
            t.prototype.loadResPrefabAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    var e;
                    return a(this, function (i) {
                        switch (i.label) {
                            case 0:
                                return (e = this.getRes(t, cc.Prefab)) ? [3, 2] : [4, this.loadResAsync(t, cc.Prefab)];

                            case 1:
                                e = i.sent();
                                i.label = 2;

                            case 2:
                                return [2, e];
                        }
                    });
                });
            };
            t.prototype.loadResImage = function (t, e) {
                this.loadRes(t, cc.SpriteFrame, e);
            };
            t.prototype.loadResImageAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadResAsync(t, cc.SpriteFrame)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.loadResAtlas = function (t, e) {
                this.loadRes(t, cc.SpriteAtlas, e);
            };
            t.prototype.loadResAtlasAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadResAsync(t, cc.SpriteAtlas)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.loadResJson = function (t, e) {
                this.loadRes(t, cc.JsonAsset, e);
            };
            t.prototype.loadResJsonAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadResAsync(t, cc.JsonAsset)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.loadResAudio = function (t, e) {
                this.loadRes(t, cc.AudioClip, e);
            };
            t.prototype.loadResAudioAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadResAsync(t, cc.AudioClip)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.loadResParticle = function (t, e) {
                this.loadRes(t, cc.ParticleAsset, e);
            };
            t.prototype.loadResParticleAsync = function (t) {
                return n(this, void 0, Promise, function () {
                    return a(this, function (e) {
                        switch (e.label) {
                            case 0:
                                return [4, this.loadResAsync(t, cc.ParticleAsset)];

                            case 1:
                                return [2, e.sent()];
                        }
                    });
                });
            };
            t.prototype.loadRes = function (t, e, i, n) {
                cc.resources.load(t, e, function (e, a) {
                    if (e) {
                        r.DYTools.error("loadRes error", t, e);
                        n && n();
                    } else i && i(a);
                });
            };
            t.prototype.loadResAsync = function (t, e) {
                return "" == t ? null : new Promise(function (i, n) {
                    cc.resources.load(t, e, function (t, e) {
                        t ? n(t) : i(e);
                    });
                });
            };
            t.prototype.loadResDir = function (t, e, i) {
                cc.resources.loadDir(t, function (t, i) {
                    e && e(t, i);
                }, function (e, n) {
                    e ? r.DYTools.error("loadResDir error", t, e) : i && i(n);
                });
            };
            t.prototype.loadResDirAsync = function (t, e) {
                return new Promise(function (i, n) {
                    cc.resources.loadDir(t, function (t, i) {
                        e && e(t, i);
                    }, function (t, e) {
                        null == t ? i(e) : n(t);
                    });
                });
            };
            t.prototype.loadResDirForType = function (t, e, i) {
                cc.resources.loadDir(t, e, function (e, n) {
                    e ? r.DYTools.error("loadResDirForType error", t, e) : i && i(n);
                });
            };
            t.prototype.loadResDirForTypeAsync = function (t, e) {
                return new Promise(function (i, n) {
                    cc.resources.loadDir(t, e, function (t, e) {
                        null == t ? i(e) : n(e);
                    });
                });
            };
            t.instance = new t();
            return t;
        }();
        i.default = o;
        i.LoadMgr = o.instance;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools"
    }],
    LoadingScene: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2ad6ejr/ANNM6GRZPRwO2wb", "LoadingScene");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        }, o = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, s = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var c = t("../../../../frame/manager/FrameManager"), l = t("../../../battle/manager/battle/EnemyManager"), h = t("../../../../config/GameEnum"), u = t("../../../../frame/manager/BattleFlowManager"), p = t("../../../battle/manager/battle/BattleManager"), d = t("../../../battle/manager/battle/MapManager"), f = t("../../../battle/manager/battle/EntityManager"), m = t("../../../battle/manager/battle/BulletManager"), g = t("../../../battle/manager/battle/SnakeManager"), _ = t("../../../battle/manager/battle/ShadowManager"), y = t("../../../battle/manager/battle/LootManager"), v = t("../../../battle/manager/battle/BossManager"), b = t("../../../battle/manager/battle/PropManager"), M = t("../../../battle/manager/battle/VeinManager"), S = t("../../../battle/manager/common/GuideManager"), k = t("../../../../util/GameFunc"), C = t("../../../../config/GameConst"), w = t("../../../battle/manager/battle/EffectManager"), A = t("../../../battle/manager/battle/wave/CoinWaveManager"), T = t("../../../battle/manager/battle/wave/NormalWaveManager"), D = t("../../../../frame/ui/UINum"), P = t("../../../../util/Tools"), E = cc._decorator, B = E.ccclass, F = E.property, N = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.proNumNode = null;
                e.tipSpr = null;
                e.atlas = null;
                e.m_proNum = null;
                return e;
            }
            e.prototype.onLoad = function () {
                C.GValue.ScreenFit = cc.winSize.height / cc.winSize.width >= 1.7;
                var t = this.node.getComponent(cc.Canvas);
                if (C.GValue.ScreenFit) {
                    t.fitHeight = !1;
                    t.fitWidth = !0;
                } else {
                    t.fitHeight = !0;
                    t.fitWidth = !0;
                }
            };
            e.prototype.start = function () {
                c.FrameMgr.audioMgr.stopAll(!0);
                c.FrameMgr.audioMgr.stopbg();
                var t = cc.instantiate(C.GValue.pfNum);
                t.parent = this.proNumNode;
                this.m_proNum = t.getComponent(D.default);
                this.m_proNum.setAtlas(this.atlas);
                this.m_proNum.setType(h.NumType.Loading);
                this.m_proNum.setDistance(2);
                this.m_proNum.setString("0%");
                p.BattleMgr.stage <= 5 ? c.FrameMgr.languageMgr.setImage(this.tipSpr, this.atlas, "txt1") : c.FrameMgr.languageMgr.setImage(this.tipSpr, this.atlas, "txt4");
                switch (p.BattleMgr.stage) {
                    case 1:
                        c.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.LoadingSceneShow);
                        break;

                    case 2:
                        c.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.Loading2);
                        break;

                    case 3:
                        c.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.Loading3);
                }
                c.FrameMgr.noticeMgr.reset();
                this.loadingBattleRes();
                C.GValue.LowerMemory && c.FrameMgr.loadMgr.releaseBundleAllRes("mainScene");
                cc.sys.garbageCollect();
                this.schedule(function () {
                    k.GFunc.updateTimestamp();
                }, 1, cc.macro.REPEAT_FOREVER, 0);
                var e = [f.EntityMgr, d.MapMgr, m.BulletMgr, g.SnakeMgr];
                p.BattleMgr.isGameType(h.GameType.Coin) ? e.push(A.CoinWaveMgr) : e.push(T.NormalWaveMgr);
                e = e.concat([_.ShadowMgr, l.EnemyMgr, y.LootMgr, M.VeinMgr, b.PropMgr, v.BossMgr, w.EffectMgr, S.GuideMgr]);
                for (var i = 0; i < e.length; i++) e[i].priority = i + 1;
            };
            e.prototype.update = function (t) {
                k.GFunc.checkOnline(t);
            };
            e.prototype.loadingBattleRes = function () {
                return o(this, void 0, void 0, function () {
                    var t, e, i, n, a = this;
                    return s(this, function () {
                        c.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.LoadBattleStart);
                        console.time("loadingTime");
                        c.FrameMgr.audioMgr.playEffect("eDie", !1, 0);
                        c.FrameMgr.audioMgr.playEffect("aura_bird", !1, 0);
                        if (C.GValue.ResFinished) this.loadSnakeBoss(); else {
                            t = g.SnakeMgr.snakeAtlas && g.SnakeMgr.skillPfLoaded;
                            e = !p.BattleMgr.isGameType(h.GameType.Boss) || C.GValue.BossResStage > 0;
                            n = (i = t && e) ? 1 : .9;
                            u.BattleFlowMgr.loadingRes(p.BattleMgr.gameType, function () {
                                console.timeEnd("loadingTime");
                                if (i) {
                                    c.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.LoadBattleEnd);
                                    u.BattleFlowMgr.initData(function () {
                                        return o(a, void 0, void 0, function () {
                                            return s(this, function () {
                                                c.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.BattleInit);
                                                this.onLoadFinish();
                                                return [2];
                                            });
                                        });
                                    });
                                } else a.loadSnakeBoss(90, .1);
                            }, function (t) {
                                a.m_proNum.setString(Math.round(100 * t * n) + "%");
                            });
                        }
                        return [2];
                    });
                });
            };
            e.prototype.loadSnakeBoss = function (t, e) {
                var i = this;
                void 0 === t && (t = 0);
                void 0 === e && (e = 1);
                var n = g.SnakeMgr.snakeAtlas && g.SnakeMgr.skillPfLoaded, a = !p.BattleMgr.isGameType(h.GameType.Boss) || C.GValue.BossResStage > 0;
                if (!n || !a) {
                    var r = function () {
                        if (a && n) {
                            i.m_proNum.setString("100%");
                            c.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.LoadBattleEnd);
                            u.BattleFlowMgr.initData(function () {
                                return o(i, void 0, void 0, function () {
                                    return s(this, function () {
                                        c.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.BattleInit);
                                        this.onLoadFinish();
                                        return [2];
                                    });
                                });
                            });
                        }
                    }, l = 0, d = 0;
                    g.SnakeMgr.loadSnakeRes(function (n) {
                        l = Math.round(50 * n * e);
                        i.m_proNum.setString(t + d + l + "%");
                    }, function (t) {
                        if (t) {
                            n = t;
                            r();
                        } else {
                            P.DYTools.error("加载失败");
                            k.GFunc.showFloatTip({
                                txt: "资源加载失败",
                                bgType: 2
                            });
                        }
                    });
                    v.BossMgr.loadBossRes(function (t) {
                        if (t) {
                            a = !0;
                            r();
                        } else {
                            P.DYTools.error("加载失败");
                            k.GFunc.showFloatTip({
                                txt: "资源加载失败",
                                bgType: 2
                            });
                        }
                    }, function (n) {
                        d = Math.round(50 * n * e);
                        i.m_proNum.setString(t + d + l + "%");
                    });
                }
            };
            e.prototype.onLoadFinish = function () {
                C.GValue.CurResId = p.BattleMgr.resId;
                C.GValue.ResFinished = !0;
                c.FrameMgr.loadMgr.loadBundleScene("battle", "/scene/BattleScene", function (t) {
                    cc.director.runScene(t);
                });
            };
            r([F(cc.Node)], e.prototype, "proNumNode", void 0);
            r([F(cc.Sprite)], e.prototype, "tipSpr", void 0);
            r([F(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([B], e);
        }(cc.Component);
        i.default = N;
        cc._RF.pop();
    }, {
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/UINum": "UINum",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../battle/manager/battle/BossManager": "BossManager",
        "../../../battle/manager/battle/BulletManager": "BulletManager",
        "../../../battle/manager/battle/EffectManager": "EffectManager",
        "../../../battle/manager/battle/EnemyManager": "EnemyManager",
        "../../../battle/manager/battle/EntityManager": "EntityManager",
        "../../../battle/manager/battle/LootManager": "LootManager",
        "../../../battle/manager/battle/MapManager": "MapManager",
        "../../../battle/manager/battle/PropManager": "PropManager",
        "../../../battle/manager/battle/ShadowManager": "ShadowManager",
        "../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "../../../battle/manager/battle/VeinManager": "VeinManager",
        "../../../battle/manager/battle/wave/CoinWaveManager": "CoinWaveManager",
        "../../../battle/manager/battle/wave/NormalWaveManager": "NormalWaveManager",
        "../../../battle/manager/common/GuideManager": "GuideManager"
    }],
    Log: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "41d84zKehhHAbUmWE0Q+MfT", "Log");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = cc._decorator, s = o.ccclass, c = o.property, l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_txtContent = null;
                e.m_txt = null;
                e.txtNode = null;
                e.m_string = "";
                return e;
            }
            e.prototype.addLog = function (t) {
                this.m_string += t;
                this.m_string += "\n";
                this.m_txt.string = this.m_string;
                this.m_txtContent.height = this.m_txt.node.height;
                this.m_txtContent.y = Math.max(0, this.m_txtContent.height - 300);
            };
            e.prototype.onBtnClicked = function () {
                this.txtNode.active = !this.txtNode.active;
            };
            r([c(cc.Node)], e.prototype, "m_txtContent", void 0);
            r([c(cc.Label)], e.prototype, "m_txt", void 0);
            r([c(cc.Node)], e.prototype, "txtNode", void 0);
            return r([s], e);
        }(cc.Component);
        i.default = l;
        cc._RF.pop();
    }, {}],
    LootBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "dc5684BITtLKbLaEqPbhD73", "LootBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameEnum"), s = t("../common/EntityBase"), c = cc._decorator, l = c.ccclass, h = (c.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_group = o.ColliderGroup.Loot;
                    e.m_type = o.LootType.None;
                    return e;
                }
                Object.defineProperty(e.prototype, "type", {
                    get: function () {
                        return this.m_type;
                    },
                    set: function (t) {
                        this.m_type = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                return r([l], e);
            }(s.default));
        i.default = h;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../common/EntityBase": "EntityBase"
    }],
    LootCrazy: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "3ac5bfEVSdHC5hW1hwtbzDH", "LootCrazy");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./LootBase"), s = cc._decorator, c = s.ccclass, l = (s.property, function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_time = 0;
                e.m_aliveTime = 0;
                e.m_blink = !1;
                return e;
            }
            return r([c], e);
        }(o.default));
        i.default = l;
        cc._RF.pop();
    }, {
        "./LootBase": "LootBase"
    }],
    LootItem: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "992c0FijwpFY6oERy9q2U0Y", "LootItem");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameEnum"), s = t("../collide/CircleColliderComp"), c = t("../manager/battle/LootManager"), l = t("../../../config/GameConst"), h = t("../../../frame/manager/FrameManager"), u = t("../collide/RectColliderComp"), p = t("../manager/battle/SnakeManager"), d = t("../collide/LineColliderComp"), f = t("../../../data/manager/ConfigDataManager"), m = t("../../../util/GameFunc"), g = t("../../../config/GameConfig"), _ = t("../manager/battle/ShadowManager"), y = t("./LootBase"), v = t("./comp/LootMoveFixComp"), b = t("../../../util/Tools"), M = cc._decorator, S = M.ccclass, k = M.property, C = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.botNode = null;
                e.uiNode = null;
                e.sp_loot = null;
                e.sp_light = null;
                e.radius = 0;
                e._isPicked = !1;
                e._col = null;
                e._initVelocity = 0;
                e._velocity = 0;
                e.m_dir = cc.Vec2.ZERO;
                e._isDropOver = !1;
                e._stopWave = 0;
                e.m_snakeAnim = null;
                e.m_shadowComp = null;
                e.m_time = 0;
                e.m_aliveTime = 0;
                e.m_blink = !1;
                e.m_moveFixComp = null;
                return e;
            }
            e.prototype.init = function (t, e, i, n, a) {
                var r = this;
                void 0 === i && (i = !0);
                void 0 === n && (n = 0);
                void 0 === a && (a = 350);
                this.reset();
                this.type = t;
                this.m_dir = e;
                this._initVelocity = a;
                this._velocity = a;
                this._stopWave = n;
                this.initData();
                this._initUI();
                this.initComp();
                if (!i) {
                    this._isDropOver = !0;
                    this._velocity = 0;
                }
                this.node.opacity = 0;
                this.scheduleOnce(function () {
                    r.node.opacity = 255;
                });
                this.initAnim();
                this.initShadow();
            };
            e.prototype.initData = function () {
                switch (this.type) {
                    case o.LootType.Snake:
                        this.radius = 40;
                        break;

                    case o.LootType.Crazy:
                        this.radius = 35;
                        var t = f.ConfigDataMgr.getGlobalDataNumArr(o.GlobalKey.LootCrazyParam);
                        this.m_aliveTime = t[0];
                        this._velocity = 120;
                }
                this.node.on(o.EventTypeEnum.ContactWall, this.onDirChange.bind(this), this);
            };
            e.prototype.initComp = function () {
                this._col || (this._col = new s.default());
                this._col.init([0, 0, this.radius], this, this.node);
                this._col.enabled = !0;
                this.m_moveFixComp || (this.m_moveFixComp = new v.default());
                this.m_moveFixComp.init(!0, this);
                this.m_moveFixComp.enabled = !0;
                this.noticeDirChange();
            };
            e.prototype.initShadow = function () {
                switch (this.type) {
                    case o.LootType.Snake:
                        var t = _.ShadowMgr.atlas.getSpriteFrame("loot_1_shadow");
                        this.m_shadowComp = _.ShadowMgr.addShadow(t, this.node, 1, cc.v2(0, -34));
                        break;

                    case o.LootType.Crazy:
                }
            };
            e.prototype.removeShadow = function () {
                this.m_shadowComp && _.ShadowMgr.removeShadow(this.m_shadowComp);
            };
            e.prototype._initUI = function () {
                switch (this.type) {
                    case o.LootType.Snake:
                        this.sp_loot.spriteFrame = c.LootMgr.atlas.getSpriteFrame("loot_1_" + p.SnakeMgr.getCurSnakeType());
                        break;

                    case o.LootType.Crazy:
                        this.sp_loot.spriteFrame = c.LootMgr.atlas.getSpriteFrame("loot_2");
                        var t = new cc.Node("bai");
                        t.addComponent(cc.Sprite).spriteFrame = c.LootMgr.atlas.getSpriteFrame("bai");
                        t.parent = this.uiNode;
                        t.scale = .65;
                        t.x = 4;
                        t.setSiblingIndex(0);
                        cc.tween(t).by(1, {
                            angle: 144
                        }).repeatForever().start();
                }
            };
            e.prototype.initAnim = function () {
                switch (this.type) {
                    case o.LootType.Snake:
                        if (!this.m_snakeAnim) {
                            this.m_snakeAnim = m.GFunc.getFrameAnim(this.botNode);
                            this.m_snakeAnim.node.scale = 2;
                            this.m_snakeAnim.init(c.LootMgr.atlas, "anim_snake_body_", 16, 2 * g.GConfig.ActionInterval);
                        }
                        this.m_snakeAnim.play();
                        var t = g.GConfig.ActionInterval;
                        cc.tween(this.uiNode).to(14 * t, {
                            y: 3
                        }).to(14 * t, {
                            y: 0
                        }).union().repeatForever().start();
                        cc.tween(this.sp_light.node).to(4 * t, {
                            scale: 1.15
                        }).to(10 * t, {
                            scale: 1
                        }).to(5 * t, {
                            scale: 1.15
                        }).to(11 * t, {
                            scale: 1
                        }).union().repeatForever().start();
                }
            };
            e.prototype.updateLogic = function (t) {
                if (!this.isPicked) {
                    this.m_time += t;
                    if (this._velocity > 0) {
                        var e = this._velocity * t, i = this.m_dir.mul(e);
                        this.node.x += i.x;
                        this.node.y += i.y;
                    }
                    this._col.updateLogic(t);
                    this._velocity > 0 && this.m_moveFixComp.updateLogic(t);
                    switch (this.type) {
                        case o.LootType.Snake:
                            if (this._velocity <= 0) break;
                            if (this._velocity > .6 * this._initVelocity) this.node.scale = 2 - (this._velocity - .6 * this._initVelocity) / this._initVelocity; else {
                                this._isDropOver = !0;
                                this.node.scale = 1 + this._velocity / this._initVelocity * .6;
                            }
                            this._velocity -= 10;
                            this._velocity < 0 && (this._velocity = 0);
                            break;

                        case o.LootType.Crazy:
                            if (this.m_time >= this.m_aliveTime) {
                                this._col.enabled = !1;
                                this.isPicked = !0;
                                this.node.stopAllActions();
                                this.node.opacity = 255;
                                this.node.active = !1;
                                this.removeShadow();
                            } else if (!this.m_blink && this.m_aliveTime - this.m_time < 3) {
                                this.m_blink = !0;
                                cc.tween(this.node).to(6 * g.GConfig.ActionInterval, {
                                    opacity: 80
                                }).to(6 * g.GConfig.ActionInterval, {
                                    opacity: 255
                                }).union().repeatForever().start();
                            }
                    }
                }
            };
            e.prototype.onCollide = function (t, e) {
                switch (t) {
                    case o.ContactType.Enter:
                        if (e && e.entity) switch (e.entity.group) {
                            case o.ColliderGroup.Player:
                                if (e.entity) {
                                    this.isPicked = !0;
                                    this._col.enabled = !1;
                                    c.LootMgr.playLootRemoveAnim(this.node.position);
                                    switch (this.type) {
                                        case o.LootType.Snake:
                                            p.SnakeMgr.getSnake().addSnakeBody(this.node.convertToWorldSpaceAR(cc.Vec3.ZERO));
                                            break;

                                        case o.LootType.Crazy:
                                            var i = f.ConfigDataMgr.getGlobalDataNumArr(o.GlobalKey.LootCrazyParam);
                                            h.FrameMgr.noticeMgr.emit(o.EventTypeEnum.SnakeBuffStart, {
                                                type: o.SnakeBuffType.Crazy,
                                                data: i
                                            });
                                            b.DYTools.removeChildByName(this.uiNode, "bai");
                                    }
                                    h.FrameMgr.audioMgr.playEffect("eat");
                                    this.m_snakeAnim && this.m_snakeAnim.stop();
                                    this.uiNode.stopAllActions();
                                    this.sp_light.node.stopAllActions();
                                    this.node.active = !1;
                                    this.m_moveFixComp.enabled = !1;
                                    this.removeShadow();
                                }
                        }
                }
            };
            e.prototype.onCollideWall = function (t, e) {
                this.m_moveFixComp.onCollideWall(t, e);
            };
            e.prototype.onCollideBlock = function (t, e) {
                this.m_moveFixComp.onCollideBlock(t, e);
            };
            e.prototype.fixPosByCamera = function (t) {
                if (t instanceof u.default) {
                    var e = cc.v2(l.GValue.BattleCameraNode.position).sub(t.center), i = Math.abs(e.x) > t.widthHalf, n = Math.abs(e.y) > t.heightHalf, a = i;
                    if (i && n) {
                        var r = t.heightHalf / t.widthHalf, o = cc.v2(this.node.position).sub(t.center), s = o.y / o.x;
                        Math.abs(s) > r && (a = !1);
                    }
                    if (a) {
                        var c = e.x > 0 ? 1 : -1;
                        this.m_dir.x = Math.abs(this.m_dir.x) * c;
                    } else {
                        var h = e.y > 0 ? 1 : -1;
                        this.m_dir.y = Math.abs(this.m_dir.y) * h;
                    }
                } else if (t instanceof d.default) switch (t.tag) {
                    case 1:
                        this.m_dir.y = -Math.abs(this.m_dir.y);
                        var p = t.isPlus ? 1 : -1;
                        this.m_dir.x = Math.abs(this.m_dir.x) * p;
                        break;

                    case 2:
                        this.m_dir.y = Math.abs(this.m_dir.y);
                        p = t.isPlus ? -1 : 1;
                        this.m_dir.x = Math.abs(this.m_dir.x) * p;
                        break;

                    case 3:
                        this.m_dir.x = Math.abs(this.m_dir.x);
                        h = t.isPlus ? -1 : 1;
                        this.m_dir.y = Math.abs(this.m_dir.y) * h;
                        break;

                    case 4:
                        this.m_dir.x = -Math.abs(this.m_dir.x);
                        h = t.isPlus ? 1 : -1;
                        this.m_dir.y = Math.abs(this.m_dir.y) * h;
                }
            };
            e.prototype.fixPosByDir = function (t) {
                var e = 1, i = cc.Vec2.ZERO;
                if (t instanceof u.default) {
                    e = t.heightHalf / t.widthHalf;
                    i = cc.v2(this.node.position).sub(t.center);
                } else t instanceof s.default && (i = cc.v2(this.node.position).sub(t.position));
                var n = i.y / i.x;
                if (Math.abs(n) > e) {
                    var a = this.m_dir.y < 0 ? 1 : -1;
                    this.m_dir.y = Math.abs(this.m_dir.y) * a;
                } else {
                    var r = i.x > 0 ? 1 : -1;
                    this.m_dir.x = Math.abs(this.m_dir.x) * r;
                }
            };
            e.prototype.onDirChange = function (t) {
                t.dx && this.reverseX();
                t.dy && this.reverseY();
                t.dir && (this.m_dir = t.dir.normalize());
                this.noticeDirChange();
            };
            e.prototype.reverseX = function () {
                this.m_dir.x = -this.m_dir.x;
            };
            e.prototype.reverseY = function () {
                this.m_dir.y = -this.m_dir.y;
            };
            e.prototype.noticeDirChange = function () {
                this.node.emit(o.EventTypeEnum.EnemyDirChange, this.m_dir);
            };
            Object.defineProperty(e.prototype, "isPicked", {
                get: function () {
                    return this._isPicked;
                },
                set: function (t) {
                    this._isPicked = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "stopWave", {
                get: function () {
                    return this._stopWave;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.reset = function () {
                this._col = null;
                this.isPicked = !1;
                this.node.angle = 0;
                this.node.scale = 1;
                this.node.active = !0;
                this._initVelocity = 0;
                this._velocity = 0;
                this.m_dir = cc.Vec2.ZERO;
                this._isDropOver = !1;
                this._stopWave = 0;
                this.m_time = 0;
                this.m_aliveTime = 0;
                this.m_blink = !1;
                this.node.targetOff(this);
                this.node.stopAllActions();
            };
            e.prototype.getColliders = function () {
                return this._col;
            };
            r([k(cc.Node)], e.prototype, "botNode", void 0);
            r([k(cc.Node)], e.prototype, "uiNode", void 0);
            r([k(cc.Sprite)], e.prototype, "sp_loot", void 0);
            r([k(cc.Sprite)], e.prototype, "sp_light", void 0);
            return r([S], e);
        }(y.default);
        i.default = C;
        cc._RF.pop();
    }, {
        "../../../config/GameConfig": "GameConfig",
        "../../../config/GameConst": "GameConst",
        "../../../config/GameEnum": "GameEnum",
        "../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../frame/manager/FrameManager": "FrameManager",
        "../../../util/GameFunc": "GameFunc",
        "../../../util/Tools": "Tools",
        "../collide/CircleColliderComp": "CircleColliderComp",
        "../collide/LineColliderComp": "LineColliderComp",
        "../collide/RectColliderComp": "RectColliderComp",
        "../manager/battle/LootManager": "LootManager",
        "../manager/battle/ShadowManager": "ShadowManager",
        "../manager/battle/SnakeManager": "SnakeManager",
        "./LootBase": "LootBase",
        "./comp/LootMoveFixComp": "LootMoveFixComp"
    }],
    LootLight: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6d57d6hTKdGw4IuEbEFjMNf", "LootLight");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameConfig"), s = t("../../../frame/manager/FrameManager"), c = t("../../../frame/manager/PoolManager"), l = t("../../../frame/ui/FrameAnim"), h = t("../common/EntityBase"), u = cc._decorator, p = u.ccclass, d = u.property, f = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.anim = null;
                e.isInit = !1;
                return e;
            }
            e.prototype.init = function () {
                var t = this, e = s.FrameMgr.loadMgr.get("TP_hurtEffect", cc.SpriteAtlas);
                this.anim.init(e, "anim_hero_acquisition_", 4, o.GConfig.ActionInterval, null, function () {
                    c.PoolMgr.put("lootlight", t);
                });
                this.isInit = !0;
            };
            e.prototype.play = function () {
                this.isInit || this.init();
                this.anim.play(1);
            };
            r([d(l.default)], e.prototype, "anim", void 0);
            return r([p], e);
        }(h.default);
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../config/GameConfig": "GameConfig",
        "../../../frame/manager/FrameManager": "FrameManager",
        "../../../frame/manager/PoolManager": "PoolManager",
        "../../../frame/ui/FrameAnim": "FrameAnim",
        "../common/EntityBase": "EntityBase"
    }],
    LootManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "00ffcBFUElHpJ2d9Crhj/qt", "LootManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.LootMgr = void 0;
        var o = t("../../loot/LootItem"), s = t("../../../../frame/manager/FrameManager"), c = t("../../../../frame/manager/PoolManager"), l = t("./EntityManager"), h = t("../../../../config/GameEnum"), u = t("../../loot/LootLight"), p = t("../../../../frame/manager/BattleFlowManager"), d = t("../../../../data/manager/ConfigDataManager"), f = t("./BattleManager"), m = t("../../../../util/GameFunc"), g = t("./BossManager"), _ = t("./SnakeManager"), y = t("./wave/NormalWaveManager"), v = t("../../../../util/Tools"), b = cc._decorator, M = b.ccclass, S = (b.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.priority = 1;
                    e.m_lootArrs = [];
                    e.m_atlas = null;
                    e._stopWaveLootMap = new Map();
                    e.m_snakeBodys = 0;
                    e._totalGoldWeight = 0;
                    e._perPicGoldNum = 0;
                    e._totalGoldPicNum = 0;
                    e._perPicIWNum = 0;
                    e._totalIWPicNum = 0;
                    e.m_goldNum = 0;
                    e.m_diamondNum = 0;
                    e.m_weaponItemNum = 0;
                    e.bossTotalHp = 0;
                    return e;
                }
                i = e;
                e.prototype.addLoadingRes = function () {
                    return [{
                        itemType: cc.Prefab,
                        itemNames: ["loot", "lootlight"],
                        loadType: h.LoadType.All
                    }, {
                        itemType: cc.SpriteAtlas,
                        itemNames: ["TP_Loot"],
                        loadType: h.LoadType.All
                    }, {
                        itemType: cc.AudioClip,
                        itemNames: ["eat"],
                        loadType: h.LoadType.All
                    }];
                };
                e.prototype.initData = function () {
                    this.m_atlas || (this.m_atlas = s.FrameMgr.loadMgr.get("TP_Loot", cc.SpriteAtlas));
                    c.PoolMgr.initPoolWithLoaded("loot");
                    c.PoolMgr.initPoolWithLoaded("lootlight", "lootlight", 5, u.default, l.EntityMgr.getEffectLayer());
                };
                e.prototype.init = function () {
                    var t = d.ConfigDataMgr.getData("ConfigStageInfoData", f.BattleMgr.stage);
                    this._totalGoldPicNum = t.gold;
                    this._perPicGoldNum = t.goldRatio;
                    this._totalIWPicNum = t.weaponItem;
                    this._perPicIWNum = t.weaponItemRatio;
                    t.gameType == h.GameType.Normal && (this._totalGoldWeight = y.NormalWaveMgr.getEnemyGoldTotalWeight());
                };
                e.prototype.clear = function () {
                    this._totalGoldWeight = 0;
                    this._totalGoldPicNum = 0;
                    this._perPicGoldNum = 0;
                    this._totalIWPicNum = 0;
                    this._perPicIWNum = 0;
                    v.DYTools.clearArrayForComp(this.m_lootArrs);
                    this.m_atlas = null;
                    this.m_goldNum = 0;
                    this.m_diamondNum = 0;
                    this.m_weaponItemNum = 0;
                    this.m_snakeBodys = 0;
                    this.bossTotalHp = 0;
                    this._stopWaveLootMap.clear();
                    c.PoolMgr.clearPool("loot");
                    c.PoolMgr.clearPool("lootlight");
                };
                e.prototype.addLootGold = function (t, e) {
                    var i = 0, n = 0;
                    switch (f.BattleMgr.gameType) {
                        case h.GameType.Normal:
                            var a = this._totalGoldPicNum * (e[0] / this._totalGoldWeight);
                            i = 0 == (i = Math.round(a)) ? 1 : i;
                            n = this._perPicGoldNum * a;
                            break;

                        case h.GameType.Boss:
                            0 == this.bossTotalHp && (this.bossTotalHp = g.BossMgr.getBossTotalHp());
                            var r = e[1] / this.bossTotalHp;
                            a = this._totalGoldPicNum * r * e[0];
                            i = 0 == (i = Math.round(a)) ? 1 : i;
                            n = this._perPicGoldNum * a;
                            break;

                        case h.GameType.Coin:
                            i = 1;
                            n = e[0];
                    }
                    this.m_goldNum += n;
                    m.GFunc.battleGoldChange(i, n, t);
                };
                e.prototype.addLootItem = function (t, e) {
                    var i = 0, n = 0;
                    switch (f.BattleMgr.gameType) {
                        case h.GameType.Normal:
                            var a = this._totalIWPicNum * (e[0] / this._totalGoldWeight);
                            i = 0 == (i = Math.round(a)) ? 1 : i;
                            n = this._perPicIWNum * a;
                            break;

                        case h.GameType.Boss:
                            0 == this.bossTotalHp && (this.bossTotalHp = g.BossMgr.getBossTotalHp());
                            var r = e[1] / this.bossTotalHp;
                            a = this._totalIWPicNum * r * e[0];
                            i = 0 == (i = Math.round(a)) ? 1 : i;
                            n = this._perPicIWNum * a;
                            break;

                        case h.GameType.Coin:
                    }
                    this.m_weaponItemNum += n;
                    m.GFunc.battleItemChange(301, i, n, t);
                };
                e.prototype.addLootCoinGold = function (t, e, i) {
                    this.m_goldNum += e;
                    m.GFunc.battleGoldChange(i, e, t);
                };
                e.prototype.addLootCoinDiamond = function (t, e, i) {
                    this.m_diamondNum += e;
                    m.GFunc.battleDiamondChange(i, e, t);
                };
                e.prototype.addLoot = function (t, e, i, n, a) {
                    void 0 === i && (i = 1);
                    void 0 === n && (n = !0);
                    void 0 === a && (a = 0);
                    for (var r = 0; r < i; r++) {
                        var s = null, u = -1, p = cc.v2(0, -1);
                        switch (t) {
                            case h.LootType.Snake:
                                if (!this.isLootSnakeAble()) continue;
                                this.m_snakeBodys += 1;
                                u = 0;
                                s = l.EntityMgr.getLootLayer();
                                p = cc.v2(Math.random() - .5, Math.random() - .5).normalize();
                                break;

                            case h.LootType.Crazy:
                                s = l.EntityMgr.getItemLayer();
                                var d = _.SnakeMgr.getSnakePosition(), f = cc.v2(d.x - e.x, d.y - e.y), m = v.DYTools.random_int(-30, 30);
                                p = f.rotate(cc.misc.degreesToRadians(m)).normalize();
                        }
                        var g = c.PoolMgr.get("loot", o.default);
                        g.init(t, p, n, a);
                        if (a > 0) {
                            var y = this._stopWaveLootMap.get(a) || 0;
                            y += 1;
                            this._stopWaveLootMap.set(a, y);
                        }
                        g.node.position = e;
                        g.updateLogic(0);
                        g.node.parent = s;
                        u >= 0 && g.node.setSiblingIndex(u);
                        this.m_lootArrs.push(g);
                    }
                };
                e.prototype.playLootRemoveAnim = function (t) {
                    var e = l.EntityMgr.getEffectLayer(), i = c.PoolMgr.get("lootlight", u.default, e);
                    i.node.position = t;
                    i.play();
                };
                e.prototype.updateLogic = function (t) {
                    for (var e = 0, i = this.m_lootArrs.length; e < i; e++) {
                        var n = this.m_lootArrs[e];
                        n.updateLogic(t);
                        if (n.isPicked) {
                            n.type == h.LootType.Snake && (this.m_snakeBodys -= 1);
                            if (n.stopWave > 0) {
                                var a = this._stopWaveLootMap.get(n.stopWave) || 0;
                                a -= 1;
                                this._stopWaveLootMap.set(n.stopWave, a);
                            }
                            c.PoolMgr.put("loot", n);
                            this.m_lootArrs.splice(e, 1);
                            e--;
                            i--;
                        }
                    }
                };
                e.prototype.isLootSnakeAble = function () {
                    return _.SnakeMgr.getSnakeMaxLength() > _.SnakeMgr.getSnakeCurrentLength() + this.snakeBody;
                };
                Object.defineProperty(e.prototype, "snakeBody", {
                    get: function () {
                        return this.m_snakeBodys;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "goldNum", {
                    get: function () {
                        return this.m_goldNum;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "diamondNum", {
                    get: function () {
                        return this.m_diamondNum;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "weaponItemNum", {
                    get: function () {
                        return this.m_weaponItemNum;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "lootItems", {
                    get: function () {
                        return this.m_lootArrs;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "atlas", {
                    get: function () {
                        return this.m_atlas;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.hasStopWaveLoot = function (t) {
                    return (this._stopWaveLootMap.get(t) || 0) > 0;
                };
                var i;
                e.instance = new i();
                return r([M], e);
            }(p.BattleFlowBase));
        i.default = S;
        i.LootMgr = S.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/manager/PoolManager": "PoolManager",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../../loot/LootItem": "LootItem",
        "../../loot/LootLight": "LootLight",
        "./BattleManager": "BattleManager",
        "./BossManager": "BossManager",
        "./EntityManager": "EntityManager",
        "./SnakeManager": "SnakeManager",
        "./wave/NormalWaveManager": "NormalWaveManager"
    }],
    LootMoveFixComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "75136xVXaFFZJR9te2ntSN7", "LootMoveFixComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConst"), s = t("../../../../config/GameEnum"), c = t("../../../../util/Tools"), l = t("../../common/CompBase"), h = cc._decorator, u = h.ccclass, p = (h.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_elastic = !1;
                    e.m_colWalls = [];
                    e.m_colingWalls = [];
                    e.m_colBlocks = [];
                    e.m_lastPos = cc.Vec3.ZERO;
                    e.m_dir = cc.Vec2.ZERO;
                    return e;
                }
                e.prototype.init = function (t, e, i) {
                    this.reset();
                    this.m_elastic = t;
                    this.initBase(e, i);
                    this.entity.node.targetOff(this);
                    this.entity.node.on(s.EventTypeEnum.EnemyDirChange, this.onDirChange.bind(this), this);
                };
                e.prototype.reset = function () {
                    this.m_colWalls.splice(0);
                    this.m_colingWalls.splice(0);
                    this.m_colBlocks.splice(0);
                    this.m_elastic = !1;
                };
                e.prototype.onDirChange = function (t) {
                    this.m_dir.x = t.x;
                    this.m_dir.y = t.y;
                };
                e.prototype.updateLogic = function () {
                    if (this.enabled) {
                        this.checkCollideWall();
                        this.m_lastPos = this.entity.node.position;
                    }
                };
                e.prototype.checkCollideWall = function () {
                    if (this.m_elastic) {
                        var t = cc.v2(this.node.x, this.node.y), e = this._checkWallCollide(t), i = e.dx, n = e.dy, a = e.rectArr, r = e.lineArr;
                        this.m_colingWalls = this.m_colingWalls.concat(a);
                        var o = this._checkBlockCollide(t);
                        i || (i = o.dx);
                        n || (n = o.dy);
                        var l = o.blockDir, h = this._fixCamera();
                        i || (i = h.dx);
                        n || (n = h.dy);
                        var u = null;
                        if (r) if (1 == r.length) {
                            var p = this.m_dir, d = r[0];
                            u = this._calculateLineDir(d, p);
                            this.m_colingWalls.push(d);
                        } else if (r.length > 1) {
                            u = cc.Vec2.ZERO;
                            for (var f = 0; f < r.length; f++) {
                                var m = r[f], g = m.verVec;
                                u.addSelf(g);
                                this.m_colingWalls.push(m);
                            }
                        } else c.DYTools.error("llllllllllllll");
                        if (u) {
                            i && this.m_dir.x * u.x > 0 && (u.x = 0);
                            n && this.m_dir.y * u.y > 0 && (u.y = 0);
                            this.node && this.node.emit(s.EventTypeEnum.ContactWall, {
                                dir: u
                            });
                        } else i || n ? this.node && this.node.emit(s.EventTypeEnum.ContactWall, {
                            dx: i,
                            dy: n
                        }) : l && this.node && this.node.emit(s.EventTypeEnum.ContactWall, {
                            dir: l
                        });
                    }
                };
                e.prototype._checkWallCollide = function (t) {
                    for (var e = !1, i = !1, n = null, a = [], r = 0; r < this.m_colWalls.length; r++) {
                        var o = this.m_colWalls[r];
                        if (!c.DYTools.arrContain(this.m_colingWalls, o)) {
                            var l = o.data;
                            switch (o.type) {
                                case s.ColliderType.Circle:
                                    a.push(o);
                                    (p = Math.abs(this.m_lastPos.x - l.position.x)) > (d = Math.abs(this.m_lastPos.y - l.position.y)) ? e = !0 : i = !0;
                                    break;

                                case s.ColliderType.Rectangle:
                                    a.push(o);
                                    switch (o.tag) {
                                        case 1:
                                            this.m_dir.y > 0 && (i = !0);
                                            break;

                                        case 2:
                                            this.m_dir.y < 0 && (i = !0);
                                            break;

                                        case 3:
                                            this.m_dir.x < 0 && (e = !0);
                                            break;

                                        case 4:
                                            this.m_dir.x > 0 && (e = !0);
                                            break;

                                        default:
                                            var h = l.center, u = cc.Vec2.ZERO;
                                            u.x = t.x - h.x;
                                            u.y = t.y - h.y;
                                            var p = Math.abs(this.m_lastPos.x - h.x), d = Math.abs(this.m_lastPos.y - h.y);
                                            p <= l.width / 2 && (e = !0);
                                            d <= l.height / 2 && (i = !0);
                                    }
                                    break;

                                case s.ColliderType.Line:
                                    n || (n = []);
                                    n.push(o);
                            }
                        }
                    }
                    return {
                        dx: e,
                        dy: i,
                        rectArr: a,
                        lineArr: n
                    };
                };
                e.prototype._checkBlockCollide = function (t) {
                    for (var e = this, i = !1, n = !1, a = null, r = function (r) {
                        var l = o.m_colBlocks[r];
                        if (c.DYTools.arrContain(o.m_colingWalls, l)) return "break";
                        o.m_colingWalls.push(l);
                        switch (l.type) {
                            case s.ColliderType.Circle:
                                var h = l.position.sub(t).signAngle(o.m_dir), u = Math.abs(h);
                                a = u < Math.PI / 2 ? 0 == h ? o.m_dir.mul(-1) : h < 0 ? o.m_dir.rotate(-(Math.PI - 2 * u)) : o.m_dir.rotate(Math.PI - 2 * u) : o.m_dir.mul(-1);
                                break;

                            case s.ColliderType.Rectangle:
                                var p = l, d = p.size.width, f = p.size.height, m = p.center, g = function () {
                                    if (c.DYTools.isNumberDiffRange(e.node.y, m.y, f / 2)) {
                                        e.m_dir.x > 0 ? e.node.x < m.x && (i = !0) : e.node.x > m.x && (i = !0);
                                        return !0;
                                    }
                                    return !1;
                                }, _ = function () {
                                    if (c.DYTools.isNumberDiffRange(e.node.x, m.x, d / 2)) {
                                        e.m_dir.y > 0 ? e.node.y < m.y && (n = !0) : e.node.y > m.y && (n = !0);
                                        return !0;
                                    }
                                    return !1;
                                };
                                if (!(d > f ? _() || g() : g() || _())) if (o.node.x > m.x && o.node.y > m.y) if (o.m_dir.x < 0 && o.m_dir.y < 0) {
                                    n = !0;
                                    i = !0;
                                } else o.m_dir.x < 0 ? i = !0 : o.m_dir.y < 0 && (n = !0); else if (o.node.x > m.x && o.node.y < m.y) if (o.m_dir.x < 0 && o.m_dir.y > 0) {
                                    n = !0;
                                    i = !0;
                                } else o.m_dir.x < 0 ? i = !0 : o.m_dir.y > 0 && (n = !0); else if (o.node.x < m.x && o.node.y < m.y) if (o.m_dir.x > 0 && o.m_dir.y > 0) {
                                    n = !0;
                                    i = !0;
                                } else o.m_dir.x > 0 ? i = !0 : o.m_dir.y > 0 && (n = !0); else if (o.m_dir.x > 0 && o.m_dir.y < 0) {
                                    n = !0;
                                    i = !0;
                                } else o.m_dir.x > 0 ? i = !0 : o.m_dir.y < 0 && (n = !0);
                        }
                    }, o = this, l = 0; l < this.m_colBlocks.length && "break" !== r(l); l++);
                    return {
                        dx: i,
                        dy: n,
                        blockDir: a
                    };
                };
                e.prototype._calculateLineDir = function (t, e) {
                    var i = null, n = t.tag, a = t.angle, r = t.data;
                    switch (n) {
                        case 1:
                            if (0 == a) i = cc.v2(e.x, e.y > 0 ? -e.y : e.y); else if (a > 0) {
                                (d = cc.v2(1, 0).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                                i = cc.v2(e.x, e.y > 0 ? -e.y : e.y).rotate(2 * a);
                                var o = a, s = Math.PI + a;
                                if (o < d && s > d) i = cc.v2(e.x, e.y > 0 ? -e.y : e.y).rotate(2 * a); else {
                                    var c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                    null != l && (u = l * c.x + h);
                                    this.node.y > u && (this.node.y = u);
                                }
                            } else {
                                (d = cc.v2(1, 0).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                                i = cc.v2(e.x, e.y > 0 ? -e.y : e.y).rotate(2 * a);
                                s = 2 * Math.PI + a, o = Math.PI + a;
                                if (r.start.y > r.end.y) if (o < d && s > d) i = cc.v2(e.x, e.y > 0 ? -e.y : e.y).rotate(2 * a); else {
                                    c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                    null != l && (u = l * c.x + h);
                                    this.node.y > u && (this.node.y = u);
                                } else if (o > d || s < d) i = cc.v2(e.x, e.y > 0 ? -e.y : e.y).rotate(2 * a); else {
                                    c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                    null != l && (u = l * c.x + h);
                                    this.node.y > u && (this.node.y = u);
                                }
                            }
                            break;

                        case 2:
                            if (0 == a) i = cc.v2(e.x, e.y < 0 ? -e.y : e.y); else if (a > 0) {
                                o = a, s = Math.PI + a;
                                (d = cc.v2(1, 0).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                                if (r.start.y > r.end.y) if (o < d && s > d) i = cc.v2(e.x, e.y < 0 ? -e.y : e.y).rotate(2 * a); else {
                                    c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                    null != l && (u = l * c.x + h);
                                    this.node.y < u && (this.node.y = u);
                                } else if (o > d || s < d) i = cc.v2(e.x, e.y < 0 ? -e.y : e.y).rotate(2 * a); else {
                                    c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                    null != l && (u = l * c.x + h);
                                    this.node.y < u && (this.node.y = u);
                                }
                            } else {
                                s = 2 * Math.PI + a, o = Math.PI + a;
                                (d = cc.v2(1, 0).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                                if (o < d && s > d) i = cc.v2(e.x, -e.y).rotate(2 * a); else {
                                    c = this.entity.node.position, l = (f = t.param)[0], h = f[1], u = r.start.y;
                                    null != l && (u = l * c.x + h);
                                    this.node.y < u && (this.node.y = u);
                                }
                            }
                            break;

                        case 3:
                            if (0 == a) i = cc.v2(e.x < 0 ? -e.x : e.x, e.y); else if (a > 0) {
                                o = a, s = Math.PI + a;
                                (d = cc.v2(0, 1).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                                if (o < d && s > d) i = cc.v2(e.x < 0 ? -e.x : e.x, e.y).rotate(2 * a); else {
                                    c = this.entity.node.position, l = (f = t.param)[0], h = f[1];
                                    var p = r.start.x;
                                    null != l && (p = (c.y - h) / l);
                                    this.node.x < p && (this.node.x = p);
                                }
                            } else {
                                s = 2 * Math.PI + a, o = Math.PI + a;
                                (d = cc.v2(0, 1).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                                if (o > d || s < d) i = cc.v2(e.x < 0 ? -e.x : e.x, e.y).rotate(2 * a); else {
                                    c = this.entity.node.position, l = (f = t.param)[0], h = f[1], p = r.start.x;
                                    null != l && (p = (c.y - h) / l);
                                    this.node.x < p && (this.node.x = p);
                                }
                            }
                            break;

                        case 4:
                            if (0 == a) i = cc.v2(e.x > 0 ? -e.x : e.x, e.y); else if (a > 0) {
                                o = a, s = Math.PI + a;
                                (d = cc.v2(0, 1).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                                if (o > d || s < d) i = cc.v2(e.x > 0 ? -e.x : e.x, e.y).rotate(2 * a); else {
                                    c = this.entity.node.position, l = (f = t.param)[0], h = f[1], p = r.start.x;
                                    null != l && (p = (c.y - h) / l);
                                    this.node.x > p && (this.node.x = p);
                                }
                            } else {
                                var d;
                                s = 2 * Math.PI + a, o = Math.PI + a;
                                (d = cc.v2(0, 1).signAngle(this.m_dir)) < 0 && (d = 2 * Math.PI + d);
                                if (o < d && s > d) i = cc.v2(e.x > 0 ? -e.x : e.x, e.y).rotate(2 * a); else {
                                    var f;
                                    c = this.entity.node.position, l = (f = t.param)[0], h = f[1], p = r.start.x;
                                    null != l && (p = (c.y - h) / l);
                                    this.node.x > p && (this.node.x = p);
                                }
                            }
                    }
                    return i;
                };
                e.prototype._fixCamera = function () {
                    var t = !1, e = !1, i = this.node.getPosition().sub(o.GValue.BattleCameraNode.getPosition());
                    i.x < 0 ? i.x < 40 - o.GValue.ViewCenter.x && this.m_dir.x < 0 && (t = !0) : i.x > o.GValue.ViewCenter.x - 40 && this.m_dir.x > 0 && (t = !0);
                    i.y < 0 ? i.y < 40 - o.GValue.ViewCenter.y && this.m_dir.y < 0 && (e = !0) : i.y > o.GValue.ViewCenter.y - 40 && this.m_dir.y > 0 && (e = !0);
                    return {
                        dx: t,
                        dy: e
                    };
                };
                e.prototype.onCollideWall = function (t, e) {
                    if (this.m_elastic) switch (t) {
                        case s.ContactType.Enter:
                            this.m_colWalls.push(e);
                            break;

                        case s.ContactType.Stay:
                            break;

                        case s.ContactType.Exit:
                            c.DYTools.arrRemove(this.m_colWalls, e);
                            c.DYTools.arrRemove(this.m_colingWalls, e);
                    }
                };
                e.prototype.onCollideBlock = function (t, e) {
                    switch (t) {
                        case s.ContactType.Enter:
                            this.m_colBlocks.push(e);
                            break;

                        case s.ContactType.Stay:
                            break;

                        case s.ContactType.Exit:
                            c.DYTools.arrRemove(this.m_colBlocks, e);
                            c.DYTools.arrRemove(this.m_colingWalls, e);
                    }
                };
                return r([u], e);
            }(l.default));
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../util/Tools": "Tools",
        "../../common/CompBase": "CompBase"
    }],
    MainScene: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "85430VMyFdLIK6Yc8vAXzOj", "MainScene");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        }, o = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, s = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var c = t("../../../../config/GameConfig"), l = t("../../../../config/GameConst"), h = t("../../../../config/GameEnum"), u = t("../../../../data/manager/ConfigDataManager"), p = t("../../../../data/storage/GameData"), d = t("../../../../frame/manager/FrameManager"), f = t("../../../../frame/ui/FrameAnim"), m = t("../../../../other/Hawkeye"), g = t("../../../../util/GameFunc"), _ = t("../../../../util/Tools"), y = t("../../../battle/manager/battle/BattleManager"), v = t("../../../battle/manager/common/GuideManager"), b = t("./ui/fetter/FetterUI"), M = t("./ui/HomeUI"), S = t("./ui/MainUI"), k = t("./ui/ShopUI"), C = t("./ui/snake/PopupSnakeInfo"), w = t("./ui/SnakeUI"), A = t("./ui/stage/StageUI"), T = t("./ui/WeaponUI"), D = cc._decorator, P = D.ccclass, E = D.property, B = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.popupLayer = [];
                e.pfHomeUI = null;
                e.pfMainUI = null;
                e.pfSnakeLevelUI = null;
                e.pfFetter = null;
                e.pfStageUI = null;
                e.pfSnakeTurretUI = null;
                e.pfShoptUI = null;
                e.uiNode = null;
                e.birdNode = null;
                e.auraNode = null;
                e.atlas = null;
                e.m_mainNode = null;
                e.m_weaponNode = null;
                e._levelNode = null;
                e.m_shopNode = null;
                e.m_homeUI = null;
                e.m_stageUI = null;
                e.m_mainUI = null;
                e.m_snakeUI = null;
                e.weaponUI = null;
                e.m_shopUI = null;
                e.m_fetterUI = null;
                e.m_curTag = h.MainSceneTag.Main;
                e.m_chirpAudioId = -1;
                e.m_themeId = 0;
                e.m_birdTime = 0;
                e.m_birdAnim1 = null;
                e.m_birdAnim2 = null;
                e.guideNode = null;
                e.guideMask = null;
                e.guideBtn = null;
                e.m_gudeType = 0;
                e.m_guideStep = 0;
                return e;
            }
            e.prototype.onLoad = function () {
                var t = this;
                l.GValue.ScreenFit = cc.winSize.height / cc.winSize.width >= 1.7;
                var e = this.node.getComponent(cc.Canvas);
                if (l.GValue.ScreenFit) {
                    e.fitHeight = !1;
                    e.fitWidth = !0;
                } else {
                    e.fitHeight = !0;
                    e.fitWidth = !0;
                }
                _.DYTools.log("aaaaaaaaa", cc.view.getVisibleSize().width, cc.view.getVisibleSize().height);
                g.GFunc.checkPowerRecover();
                d.FrameMgr.popupMgr.initContainers(this.popupLayer);
                var i = cc.instantiate(this.pfHomeUI);
                this.uiNode.addChild(i, 1);
                this.m_homeUI = i.getComponent(M.default);
                this.m_homeUI && this.m_homeUI.init();
                this.m_mainNode = cc.instantiate(this.pfMainUI);
                this.m_mainNode.parent = this.uiNode;
                this.m_mainUI = this.m_mainNode.getComponent(S.default);
                this.m_weaponNode = cc.instantiate(this.pfSnakeTurretUI);
                this.m_weaponNode.parent = this.uiNode;
                this.weaponUI = this.m_weaponNode.getComponent(T.default);
                this.m_weaponNode.active = !1;
                this._levelNode = cc.instantiate(this.pfSnakeLevelUI);
                this._levelNode.parent = this.uiNode;
                this._levelNode.active = !1;
                this.m_snakeUI = this._levelNode.getComponent(w.default);
                this.m_snakeUI.create();
                i = cc.instantiate(this.pfFetter);
                this.m_fetterUI = i.getComponent(b.default);
                this.m_fetterUI.create();
                i.active = !1;
                i.parent = this.uiNode;
                this.m_shopNode = cc.instantiate(this.pfShoptUI);
                this.m_shopNode.parent = this.uiNode;
                this.m_shopNode.active = !1;
                this.m_shopUI = this.m_shopNode.getComponent(k.default);
                this.m_shopUI.create(this);
                i = cc.instantiate(this.pfStageUI);
                this.m_stageUI = i.getComponent(A.default);
                this.m_stageUI.create();
                this.m_stageUI.node.opacity = 0;
                this.m_stageUI.shield.active = !0;
                this.scheduleOnce(function () {
                    t.m_stageUI.node.opacity = 255;
                    t.m_stageUI.node.active = !1;
                    t.m_stageUI.shield.active = !1;
                }, .1);
                this.m_stageUI.node.parent = this.popupLayer[0];
                this.m_homeUI.showSettingNode(!0);
                d.FrameMgr.noticeMgr.on(h.EventTypeEnum.LanguageRefresh, this.refreshLanguage.bind(this), this, !0);
                d.FrameMgr.noticeMgr.on(h.EventTypeEnum.MainChange, this.onMainChange.bind(this), this, !0);
                d.FrameMgr.noticeMgr.on(h.EventTypeEnum.MainGuide, this.checkGuide.bind(this), this, !0);
                var n = y.BattleMgr.mapId;
                0 == n && (n = g.GFunc.getStageData(p.GData.getCurStage() - 1).mapType);
                this.m_themeId = n;
                this.initGuide();
                if (!this.checkGuide()) {
                    this.initBird();
                    if (l.GValue.FirstMain) {
                        l.GValue.BattleToMain || this.initAura();
                        l.GValue.FirstMain = !1;
                    }
                }
            };
            e.prototype.start = function () {
                var t = this;
                if (l.GValue.ResFinished && y.BattleMgr.resId != l.GValue.CurResId) {
                    d.FrameMgr.loadMgr.releaseBundleAllRes("battle");
                    l.GValue.ResFinished = !1;
                    l.GValue.CurResId = 0;
                }
                m.HKReport.initParam(!0);
                this.schedule(function () {
                    g.GFunc.updateTimestamp();
                }, 1, cc.macro.REPEAT_FOREVER, 0);
                0 == this.m_gudeType && this.checkPopup();
                l.GValue.BattleToMain = !0;
                l.GValue.BattleFinish = !1;
                if (this.auraNode.active) {
                    this.scheduleOnce(function () {
                        t.playAuraAnim();
                    }, .1);
                    this.scheduleOnce(function () {
                        d.FrameMgr.audioMgr.playbg("bgm_main", !0);
                    }, 9.7);
                } else d.FrameMgr.audioMgr.playbg("bgm_main", !0);
                this.playChirpEffect();
            };
            e.prototype.onDestroy = function () {
                if (this.m_chirpAudioId >= 0) {
                    d.FrameMgr.audioMgr.stopEffect(this.m_chirpAudioId);
                    this.m_chirpAudioId = -1;
                }
            };
            e.prototype.update = function (t) {
                g.GFunc.checkOnline(t);
                this.updateBird(t);
            };
            e.prototype.getHomeUI = function () {
                return this.m_homeUI;
            };
            e.prototype.onMainChange = function (t) {
                this.m_curTag != h.MainSceneTag.Stage && t != h.MainSceneTag.Stage && d.FrameMgr.audioMgr.playEffect("enter_sys");
                this.m_curTag = t;
                l.GValue.MainSceneTag = t;
                switch (t) {
                    case h.MainSceneTag.Main:
                        this.m_weaponNode.active && d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.TurretBackMain);
                        this.m_stageUI.node.active && d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.StageReward6Back);
                        this.m_weaponNode.active = !1;
                        this._levelNode.active = !1;
                        this.m_mainNode.active = !0;
                        this.m_stageUI.node.active = !1;
                        this.m_fetterUI.node.active = !1;
                        this.m_shopNode.active = !1;
                        this.birdNode.opacity = 255;
                        this.m_homeUI.showSettingNode(!0);
                        break;

                    case h.MainSceneTag.Weapon:
                        d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.TurretUI);
                        this.m_weaponNode.active = !0;
                        this._levelNode.active = !1;
                        this.m_mainNode.active = !1;
                        this.m_stageUI.node.active = !1;
                        this.m_fetterUI.node.active = !1;
                        this.m_shopNode.active = !1;
                        this.birdNode.opacity = 0;
                        this.m_homeUI.showSettingNode(!1);
                        this.weaponUI.refresh();
                        break;

                    case h.MainSceneTag.Snake:
                        this._levelNode.active = !0;
                        this.m_weaponNode.active = !1;
                        this.m_mainNode.active = !1;
                        this.m_stageUI.node.active = !1;
                        this.m_fetterUI.node.active = !1;
                        this.m_shopNode.active = !1;
                        this.birdNode.opacity = 0;
                        this.m_homeUI.showSettingNode(!1);
                        this.m_snakeUI.refresh();
                        break;

                    case h.MainSceneTag.Fetter:
                        this.m_fetterUI.node.active = !0;
                        this._levelNode.active = !1;
                        this.m_weaponNode.active = !1;
                        this.m_mainNode.active = !1;
                        this.m_stageUI.node.active = !1;
                        this.m_shopNode.active = !1;
                        this.birdNode.opacity = 0;
                        this.m_homeUI.showSettingNode(!1);
                        break;

                    case h.MainSceneTag.Shop:
                        this.m_shopNode.active = !0;
                        this.m_fetterUI.node.active = !1;
                        this._levelNode.active = !1;
                        this.m_weaponNode.active = !1;
                        this.m_mainNode.active = !1;
                        this.m_stageUI.node.active = !1;
                        this.birdNode.opacity = 0;
                        this.m_homeUI.showSettingNode(!1);
                        this.m_shopUI.open();
                        break;

                    case h.MainSceneTag.Stage:
                        this._levelNode.active = !1;
                        this.m_weaponNode.active = !1;
                        this.m_fetterUI.node.active = !1;
                        this.m_shopNode.active = !1;
                        this.m_stageUI.node.active = !0;
                        this.m_stageUI.refresh();
                        this.birdNode.opacity = 0;
                        this.m_homeUI.showSettingNode(!1);
                }
            };
            e.prototype.initAura = function () {
                this.auraNode.active = !0;
                var t = d.FrameMgr.loadMgr.get("TP_MainBg_" + this.m_themeId, cc.SpriteAtlas), e = this;
                (function () {
                    var i = new cc.Node("aura2");
                    e.auraNode.addChild(i);
                    var n = i.addComponent(cc.Sprite);
                    n.spriteFrame = t ? t.getSpriteFrame("aura_2") : null;
                    i.anchorX = 1;
                    i.anchorY = 0;
                    i.scale = 2;
                    i.x = 360;
                    i.y = -300;
                    var a = new cc.Node("aura3");
                    e.auraNode.addChild(a);
                    var r = a.addComponent(cc.Sprite);
                    r.spriteFrame = t ? t.getSpriteFrame("aura_3") : null;
                    a.anchorY = 0;
                    a.scale = 2;
                    a.y = l.GValue.ViewCenter.y > 780 ? -l.GValue.ViewCenter.y : -780;
                    var o = new cc.Node("aura1");
                    e.auraNode.addChild(o);
                    var s = o.addComponent(cc.Sprite);
                    s.spriteFrame = t ? t.getSpriteFrame("aura_1") : null;
                    o.anchorY = 1;
                    o.scale = 2;
                    o.y = l.GValue.ViewCenter.y > 780 ? l.GValue.ViewCenter.y : 780;
                    t || d.FrameMgr.loadMgr.loadAtlas("TP_MainBg_" + e.m_themeId, function (t) {
                        s.spriteFrame = t ? t.getSpriteFrame("aura_1") : null;
                        r.spriteFrame = t ? t.getSpriteFrame("aura_3") : null;
                        n.spriteFrame = t ? t.getSpriteFrame("aura_2") : null;
                    });
                })();
            };
            e.prototype.playAuraAnim = function () {
                var t = this;
                if (3 == this.m_themeId) {
                    (e = this.auraNode.getChildByName("aura2")) && cc.tween(e).to(1, {
                        y: e.y + 2 * e.height
                    }).start();
                    (i = this.auraNode.getChildByName("aura1")) && cc.tween(i).to(1, {
                        y: i.y + 2 * i.height
                    }).start();
                    (n = this.auraNode.getChildByName("aura3")) && cc.tween(n).to(1, {
                        y: n.y - 2 * n.height
                    }).call(function () {
                        t.auraNode.active = !1;
                    }).start();
                } else {
                    d.FrameMgr.audioMgr.playEffect("aura_show");
                    var e, i, n;
                    (e = this.auraNode.getChildByName("aura2")) && cc.tween(e).to(1, {
                        x: 600,
                        angle: -30
                    }).start();
                    (i = this.auraNode.getChildByName("aura1")) && cc.tween(i).to(1, {
                        y: i.y + 2 * i.height
                    }).start();
                    (n = this.auraNode.getChildByName("aura3")) && cc.tween(n).to(1, {
                        y: n.y - 2 * n.height
                    }).call(function () {
                        t.auraNode.active = !1;
                    }).start();
                }
            };
            e.prototype.playChirpEffect = function () {
                return o(this, void 0, void 0, function () {
                    var t, e;
                    return s(this, function (i) {
                        switch (i.label) {
                            case 0:
                                if (3 != this.m_themeId) return [3, 2];
                                t = this;
                                return [4, d.FrameMgr.audioMgr.playEffect("aura_3_water", !0)];

                            case 1:
                                t.m_chirpAudioId = i.sent();
                                return [3, 4];

                            case 2:
                                e = this;
                                return [4, d.FrameMgr.audioMgr.playEffect("chirp", !0)];

                            case 3:
                                e.m_chirpAudioId = i.sent();
                                i.label = 4;

                            case 4:
                                return [2];
                        }
                    });
                });
            };
            e.prototype.initBird = function () {
                var t = d.FrameMgr.loadMgr.get("TP_HomeUI", cc.SpriteAtlas), e = cc.instantiate(l.GValue.pfFrameAnim);
                e.parent = this.birdNode;
                e.zIndex = 2;
                e.scale = 3 == this.m_themeId ? 2 : 4;
                this.m_birdAnim1 = e.getComponent(f.default);
                this.m_birdAnim1.init(t, "anim_bird_1_", 6, c.GConfig.ActionInterval / 2);
                this.m_birdAnim1.slowAble = !1;
                var i = cc.instantiate(l.GValue.pfFrameAnim);
                i.parent = this.birdNode;
                i.zIndex = 2;
                i.scale = 3 == this.m_themeId ? 2 : 4;
                this.m_birdAnim2 = i.getComponent(f.default);
                this.m_birdAnim2.init(t, "anim_bird_2_", 5, c.GConfig.ActionInterval / 2);
                this.m_birdAnim2.slowAble = !1;
                this.m_birdTime = 3 == this.m_themeId ? 1 : 12;
            };
            e.prototype.updateBird = function (t) {
                var e = this;
                if (this.m_birdAnim1) {
                    this.m_birdTime -= t;
                    if (this.m_birdTime < 1e-6) {
                        this.m_birdTime = _.DYTools.random_int(20, 30);
                        d.FrameMgr.audioMgr.playEffect("bird_fly");
                        this.m_birdAnim1.play();
                        this.m_birdAnim1.node.x = -_.DYTools.random_int(600, 800);
                        this.m_birdAnim1.node.y = -l.GValue.ViewCenter.y * _.DYTools.random_int(5, 7) / 10;
                        cc.tween(this.m_birdAnim1.node).to(.2, {
                            x: _.DYTools.random_int(540, 600),
                            y: l.GValue.ViewCenter.y * _.DYTools.random_int(9, 11) / 10
                        }).call(function () {
                            e.m_birdAnim1.stop();
                        }).start();
                        cc.tween(this.m_birdAnim2.node).delay(.15).call(function () {
                            e.m_birdAnim2.play();
                            e.m_birdAnim2.node.x = -_.DYTools.random_int(450, 550);
                            e.m_birdAnim2.node.y = -l.GValue.ViewCenter.y * _.DYTools.random_int(12, 15) / 10;
                        }).to(.2, {
                            x: _.DYTools.random_int(550, 650),
                            y: -_.DYTools.random_int(50, 150)
                        }).call(function () {
                            e.m_birdAnim2.stop();
                        }).start();
                    }
                }
            };
            e.prototype.checkPopup = function () {
                return o(this, void 0, void 0, function () {
                    var t, e, i;
                    return s(this, function () {
                        if (l.GValue.BattleToMain) {
                            d.FrameMgr.noticeMgr.emit(h.EventTypeEnum.HomeShield, !0);
                            if (l.GValue.BattleFinish && p.GData.getExportCount() < 3) d.FrameMgr.noticeMgr.emit(h.EventTypeEnum.HomeShield, !1); else {
                                if (y.BattleMgr.result) {
                                    t = [];
                                    u.ConfigDataMgr.getAllData("ConfigStageInfoData").forEach(function (e) {
                                        e.extraReward.length > 0 && t.push(e);
                                    });
                                    t.sort(function (t, e) {
                                        return t.id > e.id ? 1 : -1;
                                    });
                                    e = p.GData.getCurStage() - 1;
                                    for (i = 0; i < t.length; i++) if (t[i].id == e) {
                                        l.GValue.NewStageReward = !0;
                                        d.FrameMgr.noticeMgr.emit(h.EventTypeEnum.MainChange, h.MainSceneTag.Stage);
                                        break;
                                    }
                                }
                                d.FrameMgr.noticeMgr.emit(h.EventTypeEnum.HomeShield, !1);
                            }
                        }
                        return [2];
                    });
                });
            };
            e.prototype.initGuide = function () {
                var t = this;
                this.guideBtn.on(cc.Node.EventType.TOUCH_END, function () {
                    return o(t, void 0, void 0, function () {
                        var t, e, i, n, a, r, o, c, u = this;
                        return s(this, function (s) {
                            switch (s.label) {
                                case 0:
                                    if (this.guideNode.opacity < 240) return [2];
                                    switch (this.m_gudeType) {
                                        case h.GuideType.MainStartBattle1:
                                            return [3, 1];

                                        case h.GuideType.MainTurret:
                                            return [3, 2];

                                        case h.GuideType.StageReward5:
                                            return [3, 3];

                                        case h.GuideType.MainShop:
                                            return [3, 4];

                                        case h.GuideType.SnakeUse:
                                            return [3, 5];
                                    }
                                    return [3, 12];

                                case 1:
                                    this.m_gudeType = 0;
                                    d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.BtnStart1);
                                    this.m_homeUI.showShield(!0);
                                    this.m_mainUI.onBtnBattleClicked();
                                    return [3, 12];

                                case 2:
                                    if (0 == this.m_guideStep) {
                                        this.m_guideStep = 1;
                                        this.m_homeUI.onBtnTagClicked(h.MainSceneTag.Weapon);
                                        t = this.weaponUI.lvUpNode.parent;
                                        e = t.getComponent(cc.Widget);
                                        i = this.weaponUI.lvUpNode.getPosition();
                                        this.guideNode.opacity = 0;
                                        this.scheduleOnce(function () {
                                            u.guideNode.opacity = 255;
                                            u.showGuide({
                                                type: h.GuideType.MainTurret,
                                                pos: cc.v2(i.x, i.y + e.bottom + t.height / 2 - l.GValue.ViewCenter.y)
                                            });
                                        }, 1);
                                    } else {
                                        this.m_gudeType = 0;
                                        d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.TurretLvup);
                                        this.weaponUI.onBtnLvUpClick();
                                        p.GData.setGuided(h.GuideType.MainTurret);
                                    }
                                    return [3, 12];

                                case 3:
                                    if (0 == this.m_guideStep) {
                                        this.m_guideStep = 1;
                                        d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.StageReward6Btn);
                                        this.onMainChange(h.MainSceneTag.Stage);
                                        n = this.m_stageUI.m_itemArr[0].node.getPosition().add(this.m_stageUI.listNode.getPosition()).add(this.m_stageUI.scrollView.node.getPosition());
                                        this.showGuide({
                                            type: h.GuideType.StageReward5,
                                            pos: cc.v2(n.x + 360, n.y + 30)
                                        });
                                    } else {
                                        this.m_gudeType = 0;
                                        p.GData.setGuided(h.GuideType.StageReward5);
                                        d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.StageReward6Get);
                                        this.m_stageUI.m_itemArr[0].onBtnGetClicked();
                                    }
                                    return [3, 12];

                                case 4:
                                    if (0 == this.m_guideStep) {
                                        this.m_guideStep = 1;
                                        d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.ShopGuideEnter);
                                        this.m_homeUI.onBtnTagClicked(h.MainSceneTag.Shop);
                                        n = this.m_shopUI.boxFree_btns.getPosition();
                                        this.showGuide({
                                            type: h.GuideType.MainShop,
                                            pos: cc.v2(n.x, n.y)
                                        });
                                    } else {
                                        d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.ShopGuideBox);
                                        this.m_shopUI.OnClickBoxFreeBtnFree();
                                        p.GData.setGuided(h.GuideType.MainShop);
                                        this.m_gudeType = 0;
                                    }
                                    return [3, 12];

                                case 5:
                                    if (0 != this.m_guideStep) return [3, 6];
                                    d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.SnakeGuideEnter);
                                    this.m_homeUI.onBtnTagClicked(h.MainSceneTag.Snake);
                                    if (a = this.m_snakeUI.getSnakeItemForType(102)) {
                                        this.guideNode.opacity = 0;
                                        this.guideMask.opacity = 0;
                                        this.scheduleOnce(function () {
                                            u.m_guideStep = 1;
                                            u.guideNode.opacity = 255;
                                            var t = a.node.getPosition().add(a.node.parent.getPosition()).add(u.m_snakeUI.scrollView.node.parent.getPosition());
                                            u.showGuide({
                                                type: h.GuideType.SnakeUse,
                                                pos: cc.v2(t.x, t.y)
                                            });
                                        }, .6);
                                    } else this.m_gudeType = 0;
                                    return [3, 11];

                                case 6:
                                    if (1 != this.m_guideStep) return [3, 10];
                                    d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.SnakeGuideSelect);
                                    return (r = this.m_snakeUI.getSnakeItemForType(102)) ? [4, r.onBtnClicked()] : [3, 8];

                                case 7:
                                    s.sent();
                                    if (c = this.popupLayer[1].getChildByName("PopupSnakeInfo")) {
                                        this.guideNode.opacity = 0;
                                        this.guideMask.opacity = 0;
                                        o = c.getComponent(C.default);
                                        this.scheduleOnce(function () {
                                            u.m_guideStep = 2;
                                            u.guideNode.opacity = 255;
                                            var t = o.useBtnNode.getPosition().add(o.useBtnNode.parent.getPosition());
                                            u.showGuide({
                                                type: h.GuideType.SnakeUse,
                                                pos: cc.v2(t.x, t.y)
                                            });
                                        }, .2);
                                    } else this.m_gudeType = 0;
                                    return [3, 9];

                                case 8:
                                    this.m_gudeType = 0;
                                    s.label = 9;

                                case 9:
                                    return [3, 11];

                                case 10:
                                    if (2 == this.m_guideStep) {
                                        d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.SnakeGuideUse);
                                        (c = this.popupLayer[1].getChildByName("PopupSnakeInfo")) && c.getComponent(C.default).onBtnUseClicked();
                                        p.GData.setGuided(h.GuideType.SnakeUse);
                                        this.m_gudeType = 0;
                                    }
                                    s.label = 11;

                                case 11:
                                    return [3, 12];

                                case 12:
                                    if (0 == this.m_gudeType) {
                                        this.guideNode.active = !1;
                                        this.guideMask.opacity = 0;
                                    }
                                    l.GValue.MainSceneGuide = this.m_gudeType;
                                    return [2];
                            }
                        });
                    });
                });
            };
            e.prototype.checkGuide = function () {
                this.m_guideStep = 0;
                this.m_homeUI.showShield(!0);
                if (v.GuideMgr.guideAble(h.GuideType.MainStartBattle1)) {
                    d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.GuideBtnStart1);
                    var t = this.m_mainUI.battleBtnNode.getPosition();
                    this.showGuide({
                        type: h.GuideType.MainStartBattle1,
                        pos: cc.v2(t.x, t.y - l.GValue.ViewCenter.y)
                    });
                    return !0;
                }
                if (v.GuideMgr.guideAble(h.GuideType.MainTurret)) {
                    d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.TurretBtn);
                    t = this.m_homeUI.normalBtn[1].node.getPosition();
                    this.showGuide({
                        type: h.GuideType.MainTurret,
                        pos: cc.v2(t.x, t.y - l.GValue.ViewCenter.y)
                    });
                    return !0;
                }
                if (v.GuideMgr.guideAble(h.GuideType.StageReward5)) {
                    d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.StageReward6);
                    t = this.m_mainUI.stageBtnNode.getPosition().add(this.m_mainUI.stageBtnNode.parent.getPosition());
                    this.showGuide({
                        delay: 1,
                        type: h.GuideType.StageReward5,
                        pos: t
                    });
                    return !0;
                }
                if (v.GuideMgr.guideAble(h.GuideType.MainShop)) {
                    d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.ShopGuide);
                    t = this.m_homeUI.normalBtn[0].node.getPosition();
                    this.showGuide({
                        type: h.GuideType.MainShop,
                        pos: cc.v2(t.x, t.y - l.GValue.ViewCenter.y)
                    });
                    return !0;
                }
                if (v.GuideMgr.guideAble(h.GuideType.SnakeUse)) {
                    d.FrameMgr.reportMgr.sendReportLoading(h.LoadingStep.SnakeGuide);
                    t = this.m_homeUI.normalBtn[3].node.getPosition();
                    this.showGuide({
                        type: h.GuideType.SnakeUse,
                        pos: cc.v2(t.x, t.y - l.GValue.ViewCenter.y)
                    });
                    return !0;
                }
                this.m_homeUI.showShield(!1);
                return !1;
            };
            e.prototype.showGuide = function (t) {
                var e = this;
                if (t.type > 0) {
                    this.m_gudeType = t.type;
                    this.guideNode.active = !0;
                    this.guideMask.opacity = 0;
                    this.scheduleOnce(function () {
                        e.guideMask.opacity = 255;
                    });
                    this.guideNode.setPosition(t.pos);
                    this.playGuideShowAnim(this.getGuideTag(t.type));
                    if (t.delay) {
                        this.guideNode.opacity = 0;
                        this.scheduleOnce(function () {
                            e.guideNode.opacity = 255;
                        }, t.delay);
                    }
                } else {
                    this.m_gudeType = 0;
                    this.guideNode.active = !1;
                }
                l.GValue.MainSceneGuide = this.m_gudeType;
                this.m_homeUI.showShield(!1);
            };
            e.prototype.getGuideTag = function (t) {
                switch (t) {
                    case h.GuideType.MainStartBattle1:
                        return 0;

                    case h.GuideType.MainTurret:
                        return 1 == this.m_guideStep ? 0 : 2;

                    case h.GuideType.StageReward5:
                        return 0;

                    case h.GuideType.MainShop:
                        return 1 == this.m_guideStep ? 0 : 2;

                    case h.GuideType.SnakeUse:
                        return 1 == this.m_guideStep ? 0 : 2 == this.m_guideStep ? 1 : 3;
                }
                return 0;
            };
            e.prototype.playGuideShowAnim = function (t) {
                var e = this, i = this.guideMask.getChildByName("hand"), n = i.getChildByName("icon"), a = this.guideMask.getChildByName("c1"), r = this.guideMask.getChildByName("c2"), o = this.guideMask.getChildByName("c3");
                cc.Tween.stopAllByTarget(n);
                cc.Tween.stopAllByTarget(a);
                cc.Tween.stopAllByTarget(r);
                cc.Tween.stopAllByTarget(o);
                a.opacity = 0;
                r.opacity = 0;
                o.opacity = 0;
                n.opacity = 0;
                var s = c.GConfig.ActionInterval, l = 0, h = 0, u = 0, p = 0, d = 0, f = 0, m = 0, g = 0;
                switch (t) {
                    case 0:
                        i.setPosition(86, -64);
                        n.scaleX = 1;
                        n.scaleY = 1;
                        a.x = 20;
                        r.x = a.x;
                        o.x = a.x;
                        l = 746;
                        h = -614;
                        p = (u = 0) - 360;
                        d = 36;
                        f = -2;
                        m = -3;
                        g = 0;
                        break;

                    case 1:
                        i.setPosition(-86, -64);
                        n.scaleX = -1;
                        n.scaleY = 1;
                        a.x = -20;
                        r.x = a.x;
                        o.x = a.x;
                        l = -746;
                        h = -614;
                        p = (u = 0) - 360;
                        d = -36;
                        f = -2;
                        m = 3;
                        g = 0;
                        break;

                    case 2:
                        i.setPosition(86, 66);
                        n.scaleX = 1;
                        n.scaleY = 1;
                        a.x = 20;
                        r.x = a.x;
                        o.x = a.x;
                        l = 414;
                        h = 839;
                        p = 360 + (u = 90);
                        d = 36;
                        f = 2;
                        m = -3;
                        g = 0;
                        break;

                    case 3:
                        i.setPosition(-86, 66);
                        n.scaleY = -1;
                        n.scaleX = 1;
                        a.x = -20;
                        r.x = a.x;
                        o.x = a.x;
                        l = -414;
                        h = 839;
                        p = 360 + (u = 90);
                        d = -36;
                        f = 2;
                        m = 3;
                        g = 0;
                }
                var _ = n.scaleX, y = n.scaleY;
                n.scaleX = 1.6 * _;
                n.scaleY = 1.6 * y;
                n.opacity = 0;
                n.x = l;
                n.y = h;
                n.angle = u;
                cc.tween(n).delay(3 * s).to(16 * s, {
                    scaleX: _,
                    scaleY: 1 * y,
                    x: 0,
                    y: 0,
                    angle: p,
                    opacity: 255
                }).to(3 * s, {
                    scaleY: .9 * y,
                    scaleX: .9 * _
                }).to(5 * s, {
                    scaleY: 1 * y,
                    scaleX: _
                }).call(function () {
                    cc.tween(n).delay(7 * s).to(9 * s, {
                        scaleY: 1.03 * y,
                        scaleX: 1.03 * _,
                        x: d,
                        y: f
                    }).to(4 * s, {
                        scaleY: 1 * y,
                        scaleX: _,
                        x: m,
                        y: g
                    }).call(function () {
                        e.playGuideCircleAnim();
                    }).to(5 * s, {
                        x: 0,
                        y: 0
                    }).union().repeatForever().start();
                }).start();
            };
            e.prototype.playGuideCircleAnim = function () {
                var t = c.GConfig.ActionInterval, e = this.guideMask.getChildByName("c2");
                e.scale = .87;
                e.opacity = 255;
                cc.tween(e).to(9 * t, {
                    scale: 3.14,
                    opacity: 204
                }).to(4 * t, {
                    scale: 3.8,
                    opacity: 0
                }).start();
                var i = this.guideMask.getChildByName("c3");
                cc.tween(i).delay(4 * t).call(function () {
                    i.scale = .91;
                    i.opacity = 255;
                }).to(7 * t, {
                    scale: 3.05,
                    opacity: 180
                }).to(5 * t, {
                    scale: 4.8,
                    opacity: 0
                }).start();
                var n = this.guideMask.getChildByName("c1");
                n.scale = 1.3;
                n.opacity = 255;
                cc.tween(n).to(2 * t, {
                    scale: .77
                }).to(3 * t, {
                    scale: 1.79,
                    opacity: 0
                }).start();
            };
            e.prototype.refreshLanguage = function () {
                this.m_homeUI.refreshLanguage();
                this.m_mainUI.refreshLanguage();
                this.weaponUI.refreshLanguage();
                this.m_shopUI.refreshLanguage();
                this.m_snakeUI.refreshLanguage();
                this.m_stageUI.refreshLanguage();
                this.m_fetterUI.refreshLanguage();
            };
            r([E(cc.Node)], e.prototype, "popupLayer", void 0);
            r([E(cc.Prefab)], e.prototype, "pfHomeUI", void 0);
            r([E(cc.Prefab)], e.prototype, "pfMainUI", void 0);
            r([E(cc.Prefab)], e.prototype, "pfSnakeLevelUI", void 0);
            r([E(cc.Prefab)], e.prototype, "pfFetter", void 0);
            r([E(cc.Prefab)], e.prototype, "pfStageUI", void 0);
            r([E(cc.Prefab)], e.prototype, "pfSnakeTurretUI", void 0);
            r([E(cc.Prefab)], e.prototype, "pfShoptUI", void 0);
            r([E(cc.Node)], e.prototype, "uiNode", void 0);
            r([E(cc.Node)], e.prototype, "birdNode", void 0);
            r([E(cc.Node)], e.prototype, "auraNode", void 0);
            r([E(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            r([E(cc.Node)], e.prototype, "guideNode", void 0);
            r([E(cc.Node)], e.prototype, "guideMask", void 0);
            r([E(cc.Node)], e.prototype, "guideBtn", void 0);
            return r([P], e);
        }(cc.Component);
        i.default = B;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../data/storage/GameData": "GameData",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../other/Hawkeye": "Hawkeye",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../battle/manager/common/GuideManager": "GuideManager",
        "./ui/HomeUI": "HomeUI",
        "./ui/MainUI": "MainUI",
        "./ui/ShopUI": "ShopUI",
        "./ui/SnakeUI": "SnakeUI",
        "./ui/WeaponUI": "WeaponUI",
        "./ui/fetter/FetterUI": "FetterUI",
        "./ui/snake/PopupSnakeInfo": "PopupSnakeInfo",
        "./ui/stage/StageUI": "StageUI"
    }],
    MainUI: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "591dcX4UvBNFKRZlHiqiTLh", "MainUI");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        }, o = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, s = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var c = t("../../../../../config/GameConst"), l = t("../../../../../config/GameEnum"), h = t("../../../../../data/manager/ConfigDataManager"), u = t("../../../../../data/storage/GameData"), p = t("../../../../../frame/manager/FrameManager"), d = t("../../../../../frame/ui/UINum"), f = t("../../../../../util/Tools"), m = t("../../../../battle/manager/battle/BattleManager"), g = t("../../../../../config/GameConfig"), _ = t("../../../../../util/GameFunc"), y = t("../../../../battle/manager/common/GuideManager"), v = t("../../../../../platform/PlatformManager"), b = t("../../../../battle/manager/battle/EntityManager"), M = t("../../../../battle/manager/battle/MapManager"), S = t("../../../../battle/manager/battle/BulletManager"), k = t("../../../../battle/manager/battle/SnakeManager"), C = t("../../../../battle/manager/battle/ShadowManager"), w = t("../../../../battle/manager/battle/EnemyManager"), A = t("../../../../battle/manager/battle/LootManager"), T = t("../../../../battle/manager/battle/VeinManager"), D = t("../../../../battle/manager/battle/PropManager"), P = t("../../../../battle/manager/battle/BossManager"), E = t("../../../../../frame/manager/BattleFlowManager"), B = t("../../../../battle/manager/battle/wave/CoinWaveManager"), F = t("../../../../battle/manager/battle/wave/NormalWaveManager"), N = t("../../../../battle/manager/battle/EffectManager"), x = t("./snake/SnakeShowUI"), R = t("./SnakeUI"), I = t("../../../../../frame/manager/PopupManager"), G = t("../popup/PopupPower"), O = t("../../../../../frame/ui/UIComponent"), L = cc._decorator, j = L.ccclass, U = L.property, Y = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.stageNode = null;
                e.stageBtnNode = null;
                e.snakeShowUI = null;
                e.anim_mainUI = null;
                e.stageArr = [];
                e.battleBtnNode = null;
                e.atlas = null;
                e.bgBotNode = null;
                e.bgLightNode = null;
                e.bgTopNode = null;
                e.stageRewardNum = null;
                e.stageRewardRP = null;
                e.stageBoxAnim = null;
                e.logoSpr = null;
                e._stageNumArr = [];
                e.m_stageRewardNum = null;
                e._bgBotSpeed = 100;
                e._bgBotCurIndex = 0;
                e._bgTopSpeed = 150;
                e._bgTopCurIndex = 0;
                e.m_stageAction = !1;
                e.cheatNode = null;
                return e;
            }
            e.prototype.onLoad = function () {
                var t = this;
                this.stageBoxAnim.node.active = !1;
                this.initShow();
                this.refreshShow();
                p.FrameMgr.noticeMgr.on(l.EventTypeEnum.StageRefresh, this.refreshStage.bind(this), this);
                p.FrameMgr.noticeMgr.on(l.EventTypeEnum.MainChange, this.onMainChange.bind(this), this);
                p.FrameMgr.noticeMgr.on("cheat", this.showCheat.bind(this), this);
                this.stageBoxAnim.on("finished", function (e, i) {
                    if (i && ("play" == i.name || "birth" == i.name)) {
                        t.stageBoxAnim.play("play");
                        c.GValue.MainSceneTag == l.MainSceneTag.Main && p.FrameMgr.audioMgr.playEffect("stage_box");
                    }
                });
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                p.FrameMgr.languageMgr.setImage(this.logoSpr, this.atlas, "logo");
                p.FrameMgr.languageMgr.setImage(this.battleBtnNode.children[0].getComponent(cc.Sprite), this.atlas, "start");
                var t = this.stageRewardNum.parent;
                2 == p.FrameMgr.languageMgr.language ? t.children[2].active = !1 : t.children[2].active = !0;
                p.FrameMgr.languageMgr.setImage(t.children[0].getComponent(cc.Sprite), this.atlas, "mapbz1");
            };
            e.prototype.update = function (t) {
                t > 1 && (t = 1 / 60);
                this.updateBgScroll(t);
            };
            e.prototype.onDestroy = function () {
                p.FrameMgr.noticeMgr.delete(l.EventTypeEnum.StageRefresh);
            };
            e.prototype.onMainChange = function (t) {
                t == l.MainSceneTag.Main && this.refreshShow();
            };
            e.prototype.playSnakeAnim = function () {
                var t = this;
                this.snakeShowUI.setIsRanpage(!1);
                this.snakeShowUI.setIsFire(!1);
                this.snakeShowUI.setAnimEndCallback(function () {
                    t.playSnakeAnim();
                }, this);
                this.snakeShowUI.playSnakeAnim(R.SnakeAnimName.Normal);
            };
            e.prototype.refreshShow = function () {
                var t = k.SnakeMgr.getSnakeId(k.SnakeMgr.getCurSnakeType()), e = k.SnakeMgr.getSnakeConfigDataForId(t);
                this.snakeShowUI.initSnake(k.SnakeMgr.getCurSnakeType(), e.mark.evolutionNum, null, !0);
                this.snakeShowUI.node.opacity = 255;
                this.snakeShowUI.stopSnakeAnim();
                this.playSnakeAnim();
                this.refresStageReward();
            };
            e.prototype.refresStageReward = function () {
                var t = this, e = u.GData.getFinishStage(), i = [], n = h.ConfigDataMgr.getAllData("ConfigStageInfoData");
                n.forEach(function (t) {
                    t.extraReward.length > 0 && t.id <= e && i.push(t);
                });
                i.sort(function (t, e) {
                    return t.id > e.id ? 1 : -1;
                });
                for (var a = 0, r = 0, o = i; r < o.length; r++) {
                    var s = o[r];
                    if (!u.GData.stageRewardGeted(s.id)) {
                        a = s.id;
                        break;
                    }
                }
                if (!this.m_stageRewardNum) {
                    this.m_stageRewardNum = _.GFunc.createUINum({
                        atlas: this.atlas,
                        type: l.NumType.MainStage,
                        distance: 2,
                        parent: this.stageRewardNum
                    });
                    this.m_stageRewardNum.node.scale = .55;
                }
                if (a > 0) this.m_stageRewardNum.string = a.toString(); else {
                    for (var c = e + 1; (s = n.get(c)) && !(s.extraReward.length > 0);) c++;
                    this.m_stageRewardNum.string = c.toString();
                }
                this.stageRewardNum.width = this.m_stageRewardNum.node.width;
                this.stageRewardRP.active = a > 0;
                if (this.stageRewardRP.active) this.stageBoxAnim.node.active || this.scheduleOnce(function () {
                    t.stageBoxAnim.node.active = !0;
                    t.stageBoxAnim.play("birth");
                    p.FrameMgr.audioMgr.playEffect("stage_box_show");
                }); else {
                    this.stageBoxAnim.node.active = !0;
                    this.stageBoxAnim.play("idle");
                }
            };
            e.prototype.initBg = function () {
                return o(this, void 0, void 0, function () {
                    var t, e, i, n, a, r, o, l, h;
                    return s(this, function (s) {
                        switch (s.label) {
                            case 0:
                                if (0 == (t = m.BattleMgr.mapId)) {
                                    e = _.GFunc.getStageData(u.GData.getCurStage() - 1);
                                    t = e.mapType;
                                }
                                return [4, p.FrameMgr.loadMgr.loadAsync("TP_MainBg_" + t, cc.SpriteAtlas)];

                            case 1:
                                i = s.sent();
                                n = 0;
                                for (a = 0; a < this.bgBotNode.childrenCount; a++) {
                                    r = this.bgBotNode.children[a];
                                    (o = r.getComponent(cc.Sprite)) && (o.spriteFrame = i.getSpriteFrame("bg1"));
                                    if (c.GValue.IPADWidth > 0) {
                                        r.width *= c.GValue.IPADWidth / 360;
                                        r.height *= c.GValue.IPADWidth / 360;
                                    } else {
                                        r.width *= 2;
                                        r.height *= 2;
                                    }
                                    r.y = n;
                                    n += r.height;
                                }
                                n = 0;
                                for (a = 0; a < this.bgTopNode.childrenCount; a++) {
                                    r = this.bgTopNode.children[a];
                                    (o = r.getComponent(cc.Sprite)) && (o.spriteFrame = i.getSpriteFrame("top1"));
                                    if (c.GValue.IPADWidth > 0) {
                                        r.width *= c.GValue.IPADWidth / 360;
                                        r.height *= c.GValue.IPADWidth / 360;
                                    } else {
                                        r.width *= 2;
                                        r.height *= 2;
                                    }
                                    r.y = n;
                                    n += r.height;
                                }
                                if (l = this.bgLightNode.getChildByName("1")) {
                                    h = function () {
                                        switch (m.BattleMgr.mapId) {
                                            case 1:
                                            case 2:
                                                return cc.color(255, 255, 255);

                                            case 3:
                                                return cc.color(255, 204, 0);
                                        }
                                        return cc.color(255, 255, 255);
                                    };
                                    l.color = h();
                                }
                                return [2];
                        }
                    });
                });
            };
            e.prototype.updateBgScroll = function (t) {
                this.bgBotNode.y -= this._bgBotSpeed * t;
                var e = this.bgBotNode.children[this._bgBotCurIndex];
                if (e.y + this.bgBotNode.y < -c.GValue.ViewHeight) {
                    n = (n = this._bgBotCurIndex - 1) < 0 ? this.bgBotNode.childrenCount - 1 : n;
                    e.y = this.bgBotNode.children[n].y + e.height;
                    this._bgBotCurIndex += 1;
                    this._bgBotCurIndex = this._bgBotCurIndex >= this.bgBotNode.childrenCount ? 0 : this._bgBotCurIndex;
                }
                this.bgTopNode.y -= this._bgTopSpeed * t;
                var i = this.bgTopNode.children[this._bgTopCurIndex];
                if (i.y + this.bgTopNode.y < -c.GValue.ViewHeight) {
                    var n;
                    n = (n = this._bgTopCurIndex - 1) < 0 ? this.bgTopNode.childrenCount - 1 : n;
                    i.y = this.bgTopNode.children[n].y + i.height;
                    this._bgTopCurIndex += 1;
                    this._bgTopCurIndex = this._bgTopCurIndex >= this.bgTopNode.childrenCount ? 0 : this._bgTopCurIndex;
                }
                this.bgLightNode.y -= this._bgBotSpeed * t;
                this.bgLightNode.y <= -cc.winSize.height - 300 && (this.bgLightNode.y = 0);
            };
            e.prototype.onBtnAgeClicked = function () {
                f.DYTools.isBtnClickedAble() && p.FrameMgr.noticeMgr.emit(l.EventTypeEnum.AgeShow);
            };
            e.prototype.onBtnStageClicked = function () {
                f.DYTools.isBtnClickedAble() && p.FrameMgr.noticeMgr.emit(l.EventTypeEnum.MainChange, l.MainSceneTag.Stage);
            };
            e.prototype.onBtnTurretClicked = function () {
                f.DYTools.isBtnClickedAble() && p.FrameMgr.noticeMgr.emit(l.EventTypeEnum.MainChange, l.MainSceneTag.Weapon);
            };
            e.prototype.onBtnTurretAnimEnd = function () {
                p.FrameMgr.noticeMgr.emit(l.EventTypeEnum.MainChange, l.MainSceneTag.Weapon);
            };
            e.prototype.onBtnBattleClicked = function () {
                return o(this, void 0, void 0, function () {
                    var t;
                    return s(this, function () {
                        if (!f.DYTools.isBtnClickedAble(!0, 1e3)) return [2];
                        t = Math.round(h.ConfigDataMgr.getGlobalDataNum(l.GlobalKey.PowerCost, 5));
                        if (!_.GFunc.isPowerEnough(t, !0)) {
                            I.PopupMgr.show({
                                cls: G.default
                            });
                            p.FrameMgr.reportMgr.sendReportPowerShow(u.GData.getPower());
                            return [2];
                        }
                        2 == m.BattleMgr.stage && u.GData.setGuided(l.GuideType.MainStartBattle1);
                        k.SnakeMgr.refreshSnakeData();
                        p.FrameMgr.noticeMgr.emit(l.EventTypeEnum.HomeShield, !0);
                        v.PlatformMgr.sendReport("startBattle", "stage-" + m.BattleMgr.stage + "*turretLv-" + u.GData.getSnakeTurretLv());
                        v.PlatformMgr.sendReportTest();
                        this.playBattleAnim();
                        p.FrameMgr.audioMgr.playEffect("a_mainUI_startGame");
                        p.FrameMgr.reportMgr.sendReportBtnStart(m.BattleMgr.stage, u.GData.getCurSnakeId(), u.GData.getCurSnakeLv(), u.GData.getSnakeTurretLv());
                        return [2];
                    });
                });
            };
            e.prototype.playBattleAnim = function () {
                this.anim_mainUI.play("anim_main_enterGame");
                this.snakeShowUI.playBattleAnim();
            };
            e.prototype.onBattleAnimEnd = function () {
                var t = this;
                m.BattleMgr.slowAble = !0;
                m.BattleMgr.setBattleData(u.GData.getCurStage());
                p.FrameMgr.noticeMgr.reset();
                if (c.GValue.ResFinished && m.BattleMgr.resId != c.GValue.CurResId) {
                    E.BattleFlowMgr.clear();
                    p.FrameMgr.loadMgr.releaseBundleAllRes("battle");
                    c.GValue.ResFinished = !1;
                    c.GValue.CurResId = 0;
                    c.GValue.BossResStage > 0 && c.GValue.BossResStage != m.BattleMgr.stage && P.BossMgr.releaseBossRes();
                }
                if (c.GValue.ResFinished) {
                    var e = k.SnakeMgr.snakeAtlas && k.SnakeMgr.skillPfLoaded;
                    c.GValue.BossResStage > 0 && c.GValue.BossResStage != m.BattleMgr.stage && P.BossMgr.releaseBossRes();
                    var i = !m.BattleMgr.isGameType(l.GameType.Boss) || c.GValue.BossResStage > 0;
                    if (e && i) {
                        var n = [b.EntityMgr, M.MapMgr, S.BulletMgr, k.SnakeMgr];
                        m.BattleMgr.isGameType(l.GameType.Coin) ? n.push(B.CoinWaveMgr) : n.push(F.NormalWaveMgr);
                        n = n.concat([C.ShadowMgr, w.EnemyMgr, A.LootMgr, T.VeinMgr, D.PropMgr, P.BossMgr, N.EffectMgr, y.GuideMgr]);
                        for (var a = 0; a < n.length; a++) n[a].priority = a + 1;
                        E.BattleFlowMgr.initData(function () {
                            return o(t, void 0, void 0, function () {
                                return s(this, function () {
                                    p.FrameMgr.reportMgr.sendReportLoading(l.LoadingStep.BattleInit);
                                    p.FrameMgr.loadMgr.loadBundleScene("battle", "/scene/BattleScene", function (t) {
                                        cc.director.runScene(t);
                                    });
                                    return [2];
                                });
                            });
                        });
                    } else p.FrameMgr.loadMgr.loadBundleScene("loading", "/scene/loadingScene", function (t) {
                        cc.director.runScene(t);
                    });
                } else p.FrameMgr.loadMgr.loadBundleScene("loading", "/scene/loadingScene", function (t) {
                    cc.director.runScene(t);
                });
            };
            e.prototype.initShow = function () {
                this.initBg();
                this.initStage();
                this.initNum();
            };
            e.prototype.initNum = function () { };
            e.prototype.initStage = function () {
                for (var t = u.GData.getCurStage(), e = t - 2, i = 0; i < this.stageArr.length; i++) {
                    var n = cc.instantiate(c.GValue.pfNum);
                    n.parent = this.stageArr[i];
                    n.scale = 2 == i ? .8 : .5;
                    var a = n.getComponent(d.default);
                    a.init();
                    a.setAtlas(this.atlas);
                    a.setType(l.NumType.MainStage);
                    a.setDistance(4);
                    this._stageNumArr.push(a);
                    var r = e + i;
                    a.setString(r.toString());
                    var o = 2 === i ? new cc.Color(245, 218, 135) : i < 2 ? new cc.Color(255, 255, 255) : new cc.Color(101, 101, 101);
                    a.setColor(o);
                    r >= 10 && r <= 99 ? n.scale *= .8 : r >= 100 && (n.scale *= .6);
                }
                1 == t && (this.stageArr[1].active = !1);
                c.GValue.BattleNewStage = !1;
            };
            e.prototype.refreshStage = function (t) {
                void 0 === t && (t = !0);
            };
            e.prototype.onBtnCheat = function () {
                g.GConfig.cheatAble && this.showCheat();
            };
            e.prototype.showCheat = function () {
                this.cheatNode.active = !this.cheatNode.active;
                this.cheatNode.zIndex = 111;
            };
            r([U(cc.Node)], e.prototype, "stageNode", void 0);
            r([U(cc.Node)], e.prototype, "stageBtnNode", void 0);
            r([U(x.default)], e.prototype, "snakeShowUI", void 0);
            r([U(cc.Animation)], e.prototype, "anim_mainUI", void 0);
            r([U(cc.Node)], e.prototype, "stageArr", void 0);
            r([U(cc.Node)], e.prototype, "battleBtnNode", void 0);
            r([U(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            r([U(cc.Node)], e.prototype, "bgBotNode", void 0);
            r([U(cc.Node)], e.prototype, "bgLightNode", void 0);
            r([U(cc.Node)], e.prototype, "bgTopNode", void 0);
            r([U(cc.Node)], e.prototype, "stageRewardNum", void 0);
            r([U(cc.Node)], e.prototype, "stageRewardRP", void 0);
            r([U(cc.Animation)], e.prototype, "stageBoxAnim", void 0);
            r([U(cc.Sprite)], e.prototype, "logoSpr", void 0);
            r([U(cc.Node)], e.prototype, "cheatNode", void 0);
            return r([j], e);
        }(O.default);
        i.default = Y;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/manager/PopupManager": "PopupManager",
        "../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../frame/ui/UINum": "UINum",
        "../../../../../platform/PlatformManager": "PlatformManager",
        "../../../../../util/GameFunc": "GameFunc",
        "../../../../../util/Tools": "Tools",
        "../../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../../battle/manager/battle/BossManager": "BossManager",
        "../../../../battle/manager/battle/BulletManager": "BulletManager",
        "../../../../battle/manager/battle/EffectManager": "EffectManager",
        "../../../../battle/manager/battle/EnemyManager": "EnemyManager",
        "../../../../battle/manager/battle/EntityManager": "EntityManager",
        "../../../../battle/manager/battle/LootManager": "LootManager",
        "../../../../battle/manager/battle/MapManager": "MapManager",
        "../../../../battle/manager/battle/PropManager": "PropManager",
        "../../../../battle/manager/battle/ShadowManager": "ShadowManager",
        "../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "../../../../battle/manager/battle/VeinManager": "VeinManager",
        "../../../../battle/manager/battle/wave/CoinWaveManager": "CoinWaveManager",
        "../../../../battle/manager/battle/wave/NormalWaveManager": "NormalWaveManager",
        "../../../../battle/manager/common/GuideManager": "GuideManager",
        "../popup/PopupPower": "PopupPower",
        "./SnakeUI": "SnakeUI",
        "./snake/SnakeShowUI": "SnakeShowUI"
    }],
    MapData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "81707XmdCdOw5zbdjbEUwLu", "MapData");
        var n = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.MapGuideCircleData = i.MapGuidePointData = i.MapBossData = i.MapBossWaveData = i.MapAllBossData = i.MapPauseFenceData = i.MapPauseEnemyData = i.MapConEnemyData = i.MapWalLineData = i.MapBaseData = i.MapCollideData = i.MapTrapData = i.MapPropPosData = i.MapVeinData = i.MapBlockData = i.MapDecorationData = i.MapEdgeData = i.MapOutEnemyData = i.MapLiftEnemyData = i.MapEnemyPointData = i.MapAreaData = i.MapPlayerData = void 0;
        var a = t("../../util/Tools"), r = cc._decorator, o = r.ccclass, s = (r.property,
            function () {
                function t() {
                    this.bg = null;
                    this.floor = [];
                    this.path = [];
                    this.ground = [];
                    this.block = [];
                    this.cliff = [];
                    this.door = [];
                    this.aura = [];
                    this.light = [];
                    this.top = [];
                    this.wall = [];
                    this.lineArr = [];
                    this.player = null;
                    this.pointArr = [];
                    this.liftArr = [];
                    this.outArr = [];
                    this.area = [];
                    this.boss = null;
                    this.propArr = [];
                    this.trapArr = [];
                    this.guide = [];
                    this.guidePopupCircle = null;
                    this.guidePopupSkill = null;
                    this.vL = [];
                }
                t.prototype.loadJson = function (t) {
                    this.id = a.DYTools.setNum(t, "id");
                    this.bg = a.DYTools.setJsonData(t, "bg", b);
                    this.floor = a.DYTools.setJsonDataArr(t, "floor", f);
                    this.path = a.DYTools.setJsonDataArr(t, "path", b);
                    this.ground = a.DYTools.setJsonDataArr(t, "ground", f);
                    this.block = a.DYTools.setJsonDataArr(t, "block", m);
                    this.cliff = a.DYTools.setJsonDataArr(t, "cliff", m);
                    this.door = a.DYTools.setJsonDataArr(t, "door", f);
                    this.aura = a.DYTools.setJsonDataArr(t, "aura", f);
                    this.light = a.DYTools.setJsonDataArr(t, "light", f);
                    this.top = a.DYTools.setJsonDataArr(t, "top", f);
                    this.wall = a.DYTools.setJsonDataArr(t, "wall", v);
                    this.lineArr = a.DYTools.setJsonDataArr(t, "lL", M);
                    this.player = a.DYTools.setJsonData(t, "pr", c);
                    this.pointArr = a.DYTools.setJsonDataArr(t, "pointArr", h);
                    this.liftArr = a.DYTools.setJsonDataArr(t, "liftArr", u);
                    this.outArr = a.DYTools.setJsonDataArr(t, "outArr", p);
                    this.area = a.DYTools.setJsonDataArr(t, "area", l);
                    this.boss = a.DYTools.setJsonData(t, "boss", w);
                    this.propArr = a.DYTools.setJsonDataArr(t, "pL", _);
                    this.trapArr = a.DYTools.setJsonDataArr(t, "tL", y);
                    this.guide = a.DYTools.setJsonDataArr(t, "guide", D);
                    var e = a.DYTools.setNumArr(t, "guidePopupCircle", null, null);
                    e.length > 3 && (this.guidePopupCircle = cc.rect(e[0], e[1], e[2], e[3]));
                    (e = a.DYTools.setNumArr(t, "guidePopupSkill", null, null)).length > 3 && (this.guidePopupSkill = cc.rect(e[0], e[1], e[2], e[3]));
                    if (t.hasOwnProperty("vL")) for (var i = t.vL, n = 0; n < i.length; n++) {
                        var r = new g();
                        r.loadJson(i[n], n);
                        this.vL.push(r);
                    }
                };
                return n([o], t);
            }());
        i.default = s;
        var c = function () {
            function t() {
                this.x = 0;
                this.y = 0;
                this.angle = 0;
            }
            t.prototype.loadJson = function (t) {
                t.hasOwnProperty("x") && (this.x = Number(t.x));
                t.hasOwnProperty("y") && (this.y = Number(t.y));
                t.hasOwnProperty("ag") && (this.angle = Number(t.ag));
            };
            return t;
        }();
        i.MapPlayerData = c;
        var l = function () {
            function t() {
                this.id = 0;
                this.x = 0;
                this.y = 0;
                this.width = 0;
                this.height = 0;
                this.rect = null;
                this.fenceBack = null;
                this.fenceFront = null;
                this.waveId = 0;
            }
            t.prototype.loadJson = function (t) {
                this.id = a.DYTools.setInt(t, "id");
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                this.width = a.DYTools.setNum(t, "wt");
                this.height = a.DYTools.setNum(t, "ht");
                this.waveId = a.DYTools.setInt(t, "waveId");
                var e = a.DYTools.setNumArr(t, "rect", null, null);
                e.length > 3 ? this.rect = cc.rect(Number(e[0]), Number(e[1]), Number(e[2]), Number(e[3])) : a.DYTools.error("area rect error");
                this.fenceBack = a.DYTools.setJsonData(t, "fb", C);
                this.fenceFront = a.DYTools.setJsonData(t, "ff", C);
            };
            return t;
        }();
        i.MapAreaData = l;
        var h = function () {
            function t() {
                this.id = 0;
                this.x = 0;
                this.y = 0;
                this.width = 0;
                this.height = 0;
                this.out = 0;
                this.angle = 0;
                this.angleRandom = 0;
            }
            t.prototype.loadJson = function (t) {
                this.id = a.DYTools.setInt(t, "id");
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                this.width = a.DYTools.setNum(t, "wt");
                this.height = a.DYTools.setNum(t, "ht");
                this.out = a.DYTools.setInt(t, "out");
                this.angle = a.DYTools.setNum(t, "ag");
                this.angleRandom = a.DYTools.setNum(t, "aran");
            };
            return t;
        }();
        i.MapEnemyPointData = h;
        var u = function () {
            function t() {
                this.id = 0;
                this.x = 0;
                this.y = 0;
                this.scaleX = 1;
                this.static = 1;
                this.res = "";
            }
            t.prototype.loadJson = function (t) {
                this.id = a.DYTools.setInt(t, "id");
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                this.scaleX = a.DYTools.setNum(t, "scaleX");
                this.static = a.DYTools.setInt(t, "static");
                this.res = a.DYTools.setString(t, "res");
            };
            return t;
        }();
        i.MapLiftEnemyData = u;
        var p = function () {
            function t() {
                this.id = 0;
                this.x = 0;
                this.y = 0;
                this.res = "";
                this.ac = 0;
                this.dst = 0;
            }
            t.prototype.loadJson = function (t) {
                this.id = a.DYTools.setInt(t, "id");
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                this.res = a.DYTools.setString(t, "res");
                this.ac = a.DYTools.setNum(t, "ac");
                this.dst = a.DYTools.setNum(t, "dst");
            };
            return t;
        }();
        i.MapOutEnemyData = p;
        var d = function () {
            function t() { }
            t.prototype.loadJson = function (t) {
                t.hasOwnProperty("l") && (this.l = Number(t.l));
                t.hasOwnProperty("r") && (this.r = Number(t.r));
                t.hasOwnProperty("t") && (this.t = Number(t.t));
                t.hasOwnProperty("b") && (this.b = Number(t.b));
            };
            return t;
        }();
        i.MapEdgeData = d;
        var f = function () {
            function t() {
                this.ty = -1;
                this.res = "";
                this.ac = 0;
                this.dst = 0;
                this.act = null;
                this.mode = 0;
                this.trim = !0;
                this.ax = .5;
                this.ay = .5;
                this.x = 0;
                this.y = 0;
                this.wt = 0;
                this.ht = 0;
                this.sx = 0;
                this.sy = 0;
                this.ag = 0;
            }
            t.prototype.loadJson = function (t) {
                this.ty = a.DYTools.setNum(t, "ty");
                this.ac = a.DYTools.setNum(t, "ac");
                this.dst = a.DYTools.setNum(t, "dst");
                this.res = a.DYTools.setString(t, "res");
                this.act = a.DYTools.setString(t, "act");
                this.mode = a.DYTools.setNum(t, "mode");
                this.trim = 1 == a.DYTools.setNum(t, "trim");
                this.ax = a.DYTools.setNum(t, "ax", .5);
                this.ay = a.DYTools.setNum(t, "ay", .5);
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                this.wt = a.DYTools.setNum(t, "wt");
                this.ht = a.DYTools.setNum(t, "ht");
                this.sx = a.DYTools.setNum(t, "sx", 1);
                this.sy = a.DYTools.setNum(t, "sy", 1);
                this.ag = a.DYTools.setNum(t, "ag");
            };
            return t;
        }();
        i.MapDecorationData = f;
        var m = function () {
            function t() {
                this.uiData = [];
                this.colData = null;
            }
            t.prototype.loadJson = function (t) {
                this.uiData = a.DYTools.setJsonDataArr(t, "ui", f);
                this.colData = a.DYTools.setJsonData(t, "col", v);
            };
            return t;
        }();
        i.MapBlockData = m;
        var g = function () {
            function t() {
                this.x = 0;
                this.y = 0;
                this.veins = [];
            }
            t.prototype.loadJson = function (t, e) {
                this.id = e;
                t.hasOwnProperty("id") && (this.type = Number(t.id));
                t.hasOwnProperty("x") && (this.x = Number(t.x));
                t.hasOwnProperty("y") && (this.y = Number(t.y));
                if (t.hasOwnProperty("veins")) for (var i = t.veins, n = 0, a = i.length; n < a; n++) {
                    var r = new b();
                    r.loadJson(i[n]);
                    this.veins.push(r);
                }
            };
            return t;
        }();
        i.MapVeinData = g;
        var _ = function () {
            function t() { }
            t.prototype.loadJson = function (t) {
                t.hasOwnProperty("id") && (this.id = Number(t.id));
                t.hasOwnProperty("x") && (this.x = Number(t.x));
                t.hasOwnProperty("y") && (this.y = Number(t.y));
            };
            return t;
        }();
        i.MapPropPosData = _;
        var y = function () {
            function t() {
                this.id = 0;
                this.ui = 0;
                this.rect = null;
                this.x = 0;
                this.y = 0;
            }
            t.prototype.loadJson = function (t) {
                this.id = a.DYTools.setInt(t, "id");
                this.ui = a.DYTools.setInt(t, "ui");
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                var e = a.DYTools.setNumArr(t, "rect", null, null);
                e.length > 3 && (this.rect = cc.rect(e[0], e[1], e[2], e[3]));
            };
            return t;
        }();
        i.MapTrapData = y;
        var v = function () {
            function t() {
                this.tag = 0;
                this.x = 0;
                this.y = 0;
                this.width = 0;
                this.height = 0;
                this.type = 0;
            }
            t.prototype.loadJson = function (t) {
                this.tag = a.DYTools.setInt(t, "tag");
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                this.width = a.DYTools.setNum(t, "wt");
                this.height = a.DYTools.setNum(t, "ht");
                this.type = a.DYTools.setInt(t, "ty");
            };
            return t;
        }();
        i.MapCollideData = v;
        var b = function () {
            function t() {
                this.ax = .5;
                this.ay = .5;
                this.collide = null;
            }
            t.prototype.loadJson = function (t) {
                this.res = a.DYTools.setString(t, "res");
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                this.sx = a.DYTools.setNum(t, "sx", 1);
                this.sy = a.DYTools.setNum(t, "sy", 1);
                this.wt = a.DYTools.setNum(t, "wt");
                this.ht = a.DYTools.setNum(t, "ht");
                this.ag = a.DYTools.setNum(t, "ag");
                this.ax = a.DYTools.setNum(t, "ax", .5);
                this.ay = a.DYTools.setNum(t, "ay", .5);
                this.ty = a.DYTools.setNum(t, "ty");
                this.dr = a.DYTools.setNum(t, "dr", null);
                this.collide = a.DYTools.setJsonData(t, "col", v);
            };
            return t;
        }();
        i.MapBaseData = b;
        var M = function () {
            function t() {
                this.x0 = 0;
                this.y0 = 0;
                this.x1 = 0;
                this.y1 = 0;
                this.tag = 0;
            }
            t.prototype.loadJson = function (t) {
                t.hasOwnProperty("tag") && (this.tag = parseInt(t.tag));
                t.hasOwnProperty("x0") && (this.x0 = Number(t.x0));
                t.hasOwnProperty("y0") && (this.y0 = Number(t.y0));
                t.hasOwnProperty("x1") && (this.x1 = Number(t.x1));
                t.hasOwnProperty("y0") && (this.y1 = Number(t.y1));
            };
            return t;
        }();
        i.MapWalLineData = M;
        var S = function () {
            function t() {
                this.id = 0;
                this.x = 0;
                this.y = 0;
                this.width = 0;
                this.height = 0;
                this.out = 0;
            }
            t.prototype.loadJson = function (t) {
                t.hasOwnProperty("id") && (this.id = parseInt(t.id));
                t.hasOwnProperty("x") && (this.x = Number(t.x));
                t.hasOwnProperty("y") && (this.y = Number(t.y));
                t.hasOwnProperty("width") && (this.width = Number(t.width));
                t.hasOwnProperty("height") && (this.height = Number(t.height));
                t.hasOwnProperty("ag") && (this.ag = Number(t.ag));
                t.hasOwnProperty("aran") && (this.aran = Number(t.aran));
                t.hasOwnProperty("out") && (this.out = parseInt(t.out));
            };
            return t;
        }();
        i.MapConEnemyData = S;
        var k = function () {
            function t() {
                this.id = 0;
                this.x = 0;
                this.y = 0;
                this.width = 0;
                this.height = 0;
                this.rect = null;
                this.fenceBack = null;
                this.fenceFront = null;
                this.waveArr = [];
            }
            t.prototype.loadJson = function (t) {
                t.hasOwnProperty("id") && (this.id = parseInt(t.id));
                t.hasOwnProperty("x") && (this.x = Number(t.x));
                t.hasOwnProperty("y") && (this.y = Number(t.y));
                t.hasOwnProperty("wt") && (this.width = Number(t.wt));
                t.hasOwnProperty("ht") && (this.height = Number(t.ht));
                t.hasOwnProperty("rect") && (i = t.rect).length > 3 && (this.rect = cc.rect(Number(i[0]), Number(i[1]), Number(i[2]), Number(i[3])));
                if (t.hasOwnProperty("fb")) {
                    (e = new C()).loadJson(t.fb);
                    this.fenceBack = e;
                }
                if (t.hasOwnProperty("ff")) {
                    var e;
                    (e = new C()).loadJson(t.ff);
                    this.fenceFront = e;
                }
                if (t.hasOwnProperty("waveArr")) for (var i = t.waveArr, n = 0; n < i.length; n++) this.waveArr.push(parseInt(i[n]));
            };
            return t;
        }();
        i.MapPauseEnemyData = k;
        var C = function () {
            function t() {
                this.id = 0;
                this.x = 0;
                this.y = 0;
                this.width = 0;
                this.height = 0;
                this.tag = 0;
                this.tx = 0;
                this.ty = 0;
                this.ex = 0;
                this.ey = 0;
                this.la = 0;
                this.image = 1;
                this.ix = 0;
                this.iy = 0;
                this.iwt = 0;
                this.iht = 0;
                this.sx = 1;
                this.sy = 1;
                this.ag = 0;
            }
            t.prototype.loadJson = function (t) {
                this.id = a.DYTools.setInt(t, "id");
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                this.width = a.DYTools.setNum(t, "wt");
                this.height = a.DYTools.setNum(t, "ht");
                this.tag = a.DYTools.setInt(t, "tag");
                this.tx = a.DYTools.setNum(t, "tx");
                this.ty = a.DYTools.setNum(t, "ty");
                this.ex = a.DYTools.setNum(t, "ex");
                this.ey = a.DYTools.setNum(t, "ey");
                this.la = a.DYTools.setNum(t, "la");
                this.image = a.DYTools.setInt(t, "image");
                this.ix = a.DYTools.setNum(t, "ix");
                this.iy = a.DYTools.setNum(t, "iy");
                this.iwt = a.DYTools.setNum(t, "iwt");
                this.iht = a.DYTools.setNum(t, "iht");
                this.sx = a.DYTools.setNum(t, "sx", 1);
                this.sy = a.DYTools.setNum(t, "sy", 1);
                this.ag = a.DYTools.setNum(t, "ag");
            };
            return t;
        }();
        i.MapPauseFenceData = C;
        var w = function () {
            function t() {
                this.pos = cc.Vec2.ZERO;
                this.camera = cc.Vec2.ZERO;
                this.arr = [];
            }
            t.prototype.loadJson = function (t) {
                t.hasOwnProperty("posX") && (this.pos.x = Number(t.posX));
                t.hasOwnProperty("posY") && (this.pos.y = Number(t.posY));
                t.hasOwnProperty("cameraX") && (this.camera.x = Number(t.cameraX));
                t.hasOwnProperty("cameraY") && (this.camera.y = Number(t.cameraY));
                if (t.hasOwnProperty("arr")) for (var e = t.arr, i = 0; i < e.length; i++) {
                    var n = new A();
                    n.loadJson(e[i]);
                    this.arr.push(n);
                }
            };
            return t;
        }();
        i.MapAllBossData = w;
        var A = function () {
            function t() {
                this.id = 0;
                this.arr = [];
            }
            t.prototype.loadJson = function (t) {
                t.hasOwnProperty("id") && (this.id = parseInt(t.id));
                if (t.hasOwnProperty("arr")) for (var e = t.arr, i = 0; i < e.length; i++) {
                    var n = new T();
                    n.loadJson(e[i]);
                    this.arr.push(n);
                }
            };
            return t;
        }();
        i.MapBossWaveData = A;
        var T = function () {
            function t() {
                this.id = 0;
                this.start = cc.Vec2.ZERO;
                this.end = cc.Vec2.ZERO;
            }
            t.prototype.loadJson = function (t) {
                t.hasOwnProperty("id") && (this.id = parseInt(t.id));
                t.hasOwnProperty("startX") && (this.start.x = Number(t.startX));
                t.hasOwnProperty("startY") && (this.start.y = Number(t.startY));
                t.hasOwnProperty("endX") && (this.end.x = Number(t.endX));
                t.hasOwnProperty("endY") && (this.end.y = Number(t.endY));
            };
            return t;
        }();
        i.MapBossData = T;
        var D = function () {
            function t() {
                this.x = 0;
                this.y = 0;
                this.ix = 0;
                this.iy = 0;
                this.iwt = 0;
            }
            t.prototype.loadJson = function (t) {
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                this.ix = a.DYTools.setNum(t, "ix");
                this.iy = a.DYTools.setNum(t, "iy");
                this.iwt = a.DYTools.setNum(t, "iwt");
            };
            return t;
        }();
        i.MapGuidePointData = D;
        var P = function () {
            function t() {
                this.x = 0;
                this.y = 0;
                this.eId = 0;
            }
            t.prototype.loadJson = function (t) {
                this.x = a.DYTools.setNum(t, "x");
                this.y = a.DYTools.setNum(t, "y");
                this.eId = a.DYTools.setInt(t, "eId");
            };
            return t;
        }();
        i.MapGuideCircleData = P;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools"
    }],
    MapEntityBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2c52bu9rBxM5byFo+GG1t5E", "MapEntityBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../common/EntityBase"), s = cc._decorator, c = s.ccclass, l = (s.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_isActive = !1;
                    return e;
                }
                Object.defineProperty(e.prototype, "isActive", {
                    get: function () {
                        return this.m_isActive;
                    },
                    set: function (t) {
                        this.m_isActive = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                return r([c], e);
            }(o.default));
        i.default = l;
        cc._RF.pop();
    }, {
        "../common/EntityBase": "EntityBase"
    }],
    MapEntityFence: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "d6064gxS/FOB734FQUPHjjl", "MapEntityFence");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameEnum"), s = t("../common/EntityBase"), c = t("../manager/battle/EntityManager"), l = t("../manager/battle/MapManager"), h = cc._decorator, u = h.ccclass, p = (h.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_group = o.ColliderGroup.Fence;
                    e.m_type = 0;
                    e.m_length = 0;
                    e.m_count = 0;
                    e.m_posX = 0;
                    e.m_posY = 0;
                    return e;
                }
                e.prototype.create = function (t, e) {
                    this.m_type = t;
                    this.m_length = e;
                    this.createBg();
                    this.createFence();
                    this.createRail();
                    this.createShadow();
                };
                e.prototype.createShadow = function () {
                    new cc.Node("fence_shadow").parent = c.EntityMgr.getShadowLayer();
                };
                e.prototype.createBg = function () {
                    var t = new cc.Node("bg");
                    this.node.addChild(t);
                    if (0 == this.m_type) {
                        var e = this.m_length - 88, i = Math.floor(e / 60);
                        e % 60 > 10 && i++;
                        this.m_count = i + 2;
                        var n = 0;
                        this._createNode(t, "wl_h2", "bg_l", n).scaleX = -1;
                        n += 52;
                        for (var a = 0; a < i; a++) {
                            this._createNode(t, "wl_h1", "bg_" + a, n);
                            n += 60;
                        }
                        n -= 22;
                        this._createNode(t, "wl_h2", "bg_r", n);
                        t.x = -n / 2;
                        this.m_posX = t.x;
                    } else {
                        e = this.m_length - 88, i = Math.floor(e / 55);
                        e % 55 > 10 && i++;
                        this.m_count = i + 2;
                        var r = 0;
                        this._createNode(t, "wl_s2", "bg_t", r).scaleX = -1;
                        r -= 49.5;
                        for (a = 0; a < i; a++) {
                            this._createNode(t, "wl_s1", "bg_" + a, 0, r);
                            r -= 55;
                        }
                        r += 22;
                        this._createNode(t, "wl_s2", "bg_b", 0, r);
                        t.y = -r / 2;
                        this.m_posY = t.y;
                    }
                };
                e.prototype.createFence = function () {
                    var t = new cc.Node("fence");
                    this.node.addChild(t);
                    t.x = this.m_posX;
                    t.y = this.m_posY;
                    if (0 == this.m_type) for (var e = -6, i = 0; i < this.m_count; i++) {
                        this._createNode(t, "wl_1", "fence_" + i, e).anchorY = .14;
                        e += 60;
                    } else {
                        var n = 6;
                        for (i = 0; i < this.m_count; i++) {
                            this._createNode(t, "wl_1", "fence_" + i, 0, n).anchorY = .14;
                            n -= 55;
                        }
                    }
                };
                e.prototype.createRail = function () {
                    var t = new cc.Node("rail");
                    this.node.addChild(t);
                    t.x = this.m_posX;
                    t.y = this.m_posY;
                    if (0 == this.m_type) for (var e = 22, i = 0; i < this.m_count - 1; i++) {
                        this._createNode(t, "wl_2", "rail_" + i, e, 24);
                        e += 60;
                    }
                };
                e.prototype._createNode = function (t, e, i, n, a) {
                    void 0 === n && (n = 0);
                    void 0 === a && (a = 0);
                    var r = new cc.Node(i);
                    r.parent = t;
                    r.x = n;
                    r.y = a;
                    r.addComponent(cc.Sprite).spriteFrame = l.MapMgr.pathAtlas.getSpriteFrame(e);
                    return r;
                };
                e.prototype.show = function () {
                    this.node.opacity = 0;
                    cc.tween(this.node).to(.5, {
                        opacity: 255
                    }).start();
                };
                e.prototype.hide = function () {
                    var t = this;
                    cc.tween(this.node).to(.5, {
                        opacity: 0
                    }).call(function () {
                        t.node.stopAllActions();
                        t.node.active = !1;
                    }).start();
                };
                return r([u], e);
            }(s.default));
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../common/EntityBase": "EntityBase",
        "../manager/battle/EntityManager": "EntityManager",
        "../manager/battle/MapManager": "MapManager"
    }],
    MapLift: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "962aeeNpAJMBrvsvT1AT7ig", "MapLift");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../config/GameEnum"), l = t("../../../../frame/manager/FrameManager"), h = t("../../../../frame/ui/FrameAnim"), u = t("../../manager/battle/BattleManager"), p = t("../../manager/battle/MapManager"), d = t("../MapEntityBase"), f = cc._decorator, m = f.ccclass, g = f.property, _ = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.backLight = null;
                e.blackSpr = null;
                e.fenceSpr = null;
                e.bodySpr = null;
                e.lightSpr = null;
                e.doorLightSpr = null;
                e.light1Spr = null;
                e.light2Spr = null;
                e.fireSpr = null;
                e.fireLightSpr = null;
                e.anim = null;
                e.fireNode = null;
                e.backAnim = null;
                e.frontAnim = null;
                e.m_data = null;
                e.m_state = c.LiftState.None;
                e.m_waveId = 0;
                e.m_pointCount = 0;
                e.m_static = !1;
                return e;
            }
            e.prototype.create = function (t) {
                this.m_data = t;
                this.node.x = this.m_data.x;
                this.node.y = this.m_data.y;
                this.node.scaleX = this.m_data.scaleX;
                this.initUI();
                if (1 == this.m_data.static) {
                    this.m_static = !0;
                    this.m_state = c.LiftState.Close;
                }
                this.backAnim.on("finished", this.onBackAnimFinished.bind(this), this);
                this.frontAnim.on("finished", this.onFrontAnimFinished.bind(this), this);
            };
            e.prototype.initUI = function () {
                this.backLight.spriteFrame = p.MapMgr.floorAtlas.getSpriteFrame("light_2");
                this.blackSpr.spriteFrame = p.MapMgr.floorAtlas.getSpriteFrame("cg_3");
                this.fenceSpr.spriteFrame = p.MapMgr.floorAtlas.getSpriteFrame("cg_2");
                this.bodySpr.spriteFrame = p.MapMgr.floorAtlas.getSpriteFrame(this.m_data.res);
                this.lightSpr.spriteFrame = p.MapMgr.floorAtlas.getSpriteFrame("cg_4");
                this.doorLightSpr.spriteFrame = p.MapMgr.floorAtlas.getSpriteFrame("cg_4");
                this.light1Spr.spriteFrame = p.MapMgr.floorAtlas.getSpriteFrame("light_1");
                this.light2Spr.spriteFrame = p.MapMgr.floorAtlas.getSpriteFrame("light_1");
                this.fireSpr.spriteFrame = p.MapMgr.floorAtlas.getSpriteFrame("pan_1");
                this.fireLightSpr.spriteFrame = p.MapMgr.floorAtlas.getSpriteFrame("lift_light");
                this.fireLightSpr.node.color = this._getLightColor();
                if ("lift_2" == this.m_data.res) {
                    this.bodySpr.node.y = 17;
                    this.node.y -= 17;
                }
                this.initFireAnim();
            };
            e.prototype.initFireAnim = function () {
                var t = cc.instantiate(s.GValue.pfFrameAnim);
                this.fireNode.addChild(t, -1);
                t.x = 4;
                t.y = 38;
                var e = t.getComponent(h.default);
                e.init(p.MapMgr.floorAtlas, "anim_lift_fire_", 8, 2 * o.GConfig.ActionInterval);
                e.play();
            };
            e.prototype.setState = function (t, e) {
                void 0 === e && (e = !0);
                if (this.m_state == t) return !1;
                var i = this.m_state;
                switch (t) {
                    case c.LiftState.Enter:
                        if (!this.m_static && i == c.LiftState.None) {
                            this.m_state = t;
                            this.anim.play("show");
                        }
                        break;

                    case c.LiftState.Hide:
                        if (!this.m_static) {
                            this.m_state = t;
                            this.anim.play("hide");
                        }
                        break;

                    case c.LiftState.Open:
                        this.m_state = t;
                        this.playAnim("open", e);
                        l.FrameMgr.audioMgr.playEffect("lift_warn");
                        break;

                    case c.LiftState.Close:
                        this.m_state = t;
                        this.playAnim("close", e);
                }
                return !0;
            };
            e.prototype.getState = function () {
                return this.m_state;
            };
            e.prototype.getId = function () {
                return this.m_data.id;
            };
            e.prototype.setWaveId = function (t) {
                this.m_waveId = t;
            };
            e.prototype.getWaveId = function () {
                return this.m_waveId;
            };
            e.prototype.pointChange = function (t) {
                this.m_pointCount += t;
            };
            e.prototype.getPointCount = function () {
                return this.m_pointCount;
            };
            e.prototype.getIsStatic = function () {
                return this.m_static;
            };
            e.prototype.playAnim = function (t, e) {
                void 0 === e && (e = !0);
                e ? this.frontAnim.play(t) : this.backAnim.play(t);
            };
            e.prototype.stopAnim = function () {
                this.frontAnim.stop();
                this.backAnim.stop();
                this.anim.stop();
            };
            e.prototype.onFrontAnimFinished = function (t, e) {
                e && "open" == e.name && this.playAnim("idle", !0);
            };
            e.prototype.onBackAnimFinished = function (t, e) {
                e && "open" == e.name && this.playAnim("idle", !1);
            };
            e.prototype._getLightColor = function () {
                switch (u.BattleMgr.mapId) {
                    case 1:
                    case 2:
                        return cc.color(27, 247, 13);

                    case 3:
                    case 4:
                        return cc.color(240, 255, 0);

                    case 5:
                        return cc.color(251, 183, 73);
                }
                return cc.color(27, 247, 13);
            };
            r([g(cc.Sprite)], e.prototype, "backLight", void 0);
            r([g(cc.Sprite)], e.prototype, "blackSpr", void 0);
            r([g(cc.Sprite)], e.prototype, "fenceSpr", void 0);
            r([g(cc.Sprite)], e.prototype, "bodySpr", void 0);
            r([g(cc.Sprite)], e.prototype, "lightSpr", void 0);
            r([g(cc.Sprite)], e.prototype, "doorLightSpr", void 0);
            r([g(cc.Sprite)], e.prototype, "light1Spr", void 0);
            r([g(cc.Sprite)], e.prototype, "light2Spr", void 0);
            r([g(cc.Sprite)], e.prototype, "fireSpr", void 0);
            r([g(cc.Sprite)], e.prototype, "fireLightSpr", void 0);
            r([g(cc.Animation)], e.prototype, "anim", void 0);
            r([g(cc.Node)], e.prototype, "fireNode", void 0);
            r([g(cc.Animation)], e.prototype, "backAnim", void 0);
            r([g(cc.Animation)], e.prototype, "frontAnim", void 0);
            return r([m], e);
        }(d.default);
        i.default = _;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../manager/battle/BattleManager": "BattleManager",
        "../../manager/battle/MapManager": "MapManager",
        "../MapEntityBase": "MapEntityBase"
    }],
    MapManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6d88fpp4I5FApPgKU1E3Usj", "MapManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.MapMgr = void 0;
        var r = t("../../../../frame/manager/FrameManager"), o = t("../../../../data/map/MapData"), s = t("../../collide/RectColliderComp"), c = t("../../../../config/GameConfig"), l = t("./BattleManager"), h = t("../../../../config/GameEnum"), u = t("../../../../util/Tools"), p = t("../../../../frame/manager/BattleFlowManager"), d = t("../../../../data/manager/ConfigDataManager"), f = t("../../../../config/GameConst"), m = t("./SnakeManager"), g = t("../../collide/LineColliderComp"), _ = t("../common/GuideManager"), y = t("../../../../frame/ui/FrameAnim"), v = t("../../collide/CircleColliderComp"), b = t("./PropManager"), M = t("../../../../data/config/ConfigTrapData"), S = t("../../map/trap/Sunkens/TrapSunkensEntity"), k = t("../../map/MapEntityFence"), C = t("./GameRuleManager"), w = t("../../map/trap/Quicksand/TrapQuicksandEntity"), A = t("../../map/trap/Thorns/TrapThorns"), T = t("../../map/trap/SnowBall/TrapSnowBall"), D = t("./wave/CoinWaveManager"), P = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._mapData = null;
                e._floorAtlas = null;
                e._pathAtlas = null;
                e._mapBotLayer = null;
                e._mapTopLayer = null;
                e._mapSnakeLayer = null;
                e._floorLayer = null;
                e._auraLayer = null;
                e._skyLayer = null;
                e._topLayer = null;
                e._wallLayer = null;
                e._blockLayer = null;
                e._veinLayer = null;
                e._propLayer = null;
                e._maskNode = null;
                e.m_endDoorArr = [];
                e.m_endDoor = null;
                e.m_endDoorSpine = null;
                e.m_doorLight = null;
                e.m_startLight = null;
                e.m_wallColArr = [];
                e.m_blockColArr = [];
                e.m_cliffColArr = [];
                e.m_lineArr = [];
                e.m_allBlocks = [];
                e.m_dicPathPoints = {};
                e.m_dicPathPointsTest = {};
                e.m_pathPointsX = 50;
                e.m_pathPointsY = 50;
                e.m_pathSearchX = 5;
                e.m_pathSearchY = 5;
                e.m_trapArr = [];
                e.m_trapBallArr = [];
                e.m_doorBlastCall = null;
                e.m_fenceFrontMap = new Map();
                e.m_fenceBackMap = new Map();
                e.m_vectexs = [];
                e.m_vectexLink = new Map();
                e.m_blockVectexIndex = new Map();
                e.m_vectexIndexLink = new Map();
                e.m_vectexLength = new Map();
                e.m_enemyRadius = 30;
                e._frameArr1 = ["anim_lava_1_", "anim_lava_2_"];
                e._frameArr2 = ["anim_lava_1_", "anim_lava_2_"];
                return e;
            }
            e.prototype.addLoadingRes = function () {
                for (var t = [], e = l.BattleMgr.stageRange, i = e.x; i <= e.y; i++) t.push("map_" + i);
                var n = ["TP_Map_Floor_0", "TP_Map_Path_0", "TP_Map_Aura", "TP_Map_Floor_" + l.BattleMgr.mapId, "TP_Map_Path_" + l.BattleMgr.mapId], a = ["MapGoldParticle"], r = ["spine_door", "spine_map_water", "spine_enviroment_lava", "spine_environment_sunshine"], o = [];
                if (4 == l.BattleMgr.mapId) {
                    a.push("TrapQuicksand", "TrapThorns");
                    r.push("spine_enviroment_sand");
                } else if (5 == l.BattleMgr.mapId) {
                    a.push("TrapSnowBallDevice", "SnowBall", "TrapSnowBallSmoke");
                    r.push("spine_environment_cold");
                    o.push("trap_snow_ball_move", "trap_snow_ball_show", "trap_snow_ball_blast");
                }
                return [{
                    itemType: cc.TextAsset,
                    itemNames: ["trap"],
                    loadType: h.LoadType.All
                }, {
                    itemType: cc.JsonAsset,
                    itemNames: t,
                    loadType: h.LoadType.All
                }, {
                    itemType: cc.SpriteAtlas,
                    itemNames: n,
                    loadType: h.LoadType.All
                }, {
                    itemType: sp.SkeletonData,
                    itemNames: r,
                    loadType: h.LoadType.All
                }, {
                    itemType: cc.Prefab,
                    itemNames: a,
                    loadType: h.LoadType.All
                }, {
                    itemType: cc.AudioClip,
                    itemNames: o,
                    loadType: h.LoadType.All
                }];
            };
            e.prototype.initData = function () {
                var t = r.FrameMgr.loadMgr.get("map_" + l.BattleMgr.stage, cc.JsonAsset);
                if (t) {
                    var e = t.json;
                    this._mapData = new o.default();
                    this._mapData.loadJson(e);
                }
                d.ConfigDataMgr.initJsonMapWithLoaded("ConfigTrapData", "trap", M.ConfigTrapData);
                var i = l.BattleMgr.mapId;
                l.BattleMgr.isGameType(h.GameType.Coin) && (i = 0);
                this._pathAtlas = r.FrameMgr.loadMgr.get("TP_Map_Path_" + i, cc.SpriteAtlas);
                this._floorAtlas = r.FrameMgr.loadMgr.get("TP_Map_Floor_" + i, cc.SpriteAtlas);
            };
            e.prototype.init = function (t, e) {
                void 0 === t && (t = l.BattleMgr.mapNode);
                void 0 === e && (e = l.BattleMgr.stage);
                this._mapTopLayer = t.getChildByName("mapTop");
                this._mapSnakeLayer = this._mapTopLayer.getChildByName("snake");
                this._mapBotLayer = t.getChildByName("mapBot");
                this._skyLayer = t.getChildByName("sky");
                this._topLayer = t.getChildByName("top");
                this._floorLayer = this._mapBotLayer.getChildByName("floor");
                this._wallLayer = this._mapBotLayer.getChildByName("wall");
                this._auraLayer = this._mapBotLayer.getChildByName("aura");
                this._blockLayer = this._mapBotLayer.getChildByName("block");
                this._veinLayer = this._mapBotLayer.getChildByName("vein");
                this._propLayer = this._mapBotLayer.getChildByName("prop");
                this._maskNode = this._mapBotLayer.getChildByName("mask");
                this.createMap();
                this.createFences();
                this.createGuide();
                this.createPathPoints();
            };
            e.prototype.clear = function () {
                this._mapData = null;
                this._pathAtlas = null;
                this._floorAtlas = null;
                this.m_wallColArr.splice(0);
                this.m_blockColArr.splice(0);
                this.m_cliffColArr.splice(0);
                this.m_lineArr.splice(0);
                this.m_endDoorArr.splice(0);
                this._mapTopLayer = null;
                this._mapBotLayer = null;
                this._skyLayer && this._skyLayer.destroyAllChildren();
                this._skyLayer = null;
                this._topLayer && this._topLayer.destroyAllChildren();
                this._topLayer = null;
                this._floorLayer && this._floorLayer.destroyAllChildren();
                this._floorLayer = null;
                this._auraLayer && this._auraLayer.destroyAllChildren();
                this._auraLayer = null;
                this._wallLayer && this._wallLayer.destroyAllChildren();
                this._wallLayer = null;
                this._blockLayer && this._blockLayer.destroyAllChildren();
                this._blockLayer = null;
                this._maskNode = null;
                this.m_allBlocks.splice(0);
                this.m_fenceFrontMap.clear();
                this.m_fenceBackMap.clear();
                this.m_trapArr.splice(0);
                this.m_trapBallArr.splice(0);
            };
            e.prototype.startBattle = function () {
                for (var t = 0, e = this.m_trapArr; t < e.length; t++) e[t].isActive = !0;
            };
            e.prototype.updateLogic = function (t) {
                if (!C.GameRuleMgr.getGameResult()) for (var e = 0, i = this.m_trapArr; e < i.length; e++) {
                    var n = i[e];
                    n.isActive && n.updateLogic(t);
                }
            };
            e.prototype.createPathPoints = function () {
                var t = i.MapMgr.lineArr;
                if (0 != t.length) {
                    for (var e = Number.MAX_VALUE, n = -Number.MAX_VALUE, a = Number.MAX_VALUE, r = -Number.MAX_VALUE, o = 0; o < t.length; o++) {
                        var s = t[o].data.start, c = t[o].data.end;
                        e = Math.min(e, s.x, c.x);
                        n = Math.max(n, s.x, c.x);
                        a = Math.min(a, s.y, c.y);
                        r = Math.max(r, s.y, c.y);
                    }
                    var l = this.getPathPointsNum(e, a), h = this.getPathPointsNum(n, r);
                    this.m_dicPathPoints = {};
                    this.m_dicPathPointsTest = {};
                    for (o = l.x; o <= h.x; o++) for (var u = l.y; u <= h.y; u++) {
                        var p = this.getPathPointsPos(o, u);
                        this.isInMap(p) && this.setPathPointsValue(o, u, !0);
                    }
                }
            };
            e.prototype.refreshPathPoints = function (t, e, i, n) {
                for (var a = this.getPathPointsNum(t, i), r = this.getPathPointsNum(e, n), o = a.x; o <= r.x; o++) for (var s = a.y; s <= r.y; s++) {
                    var c = this.getPathPointsPos(o, s);
                    this.isInMap(c) ? this.setPathPointsValue(o, s, !0) : this.setPathPointsValue(o, s, !1);
                }
            };
            e.prototype.setPathPointsForCircle = function (t, e, i) {
                for (var n = this.getPathPointsNum(t.x, t.y), a = Math.ceil(e / this.m_pathPointsX), r = Math.ceil(e / this.m_pathPointsY), o = n.x - a - 1, s = n.x + a + 1, c = n.y - r - 1, l = n.y + r + 1, h = o; h <= s; h++) for (var u = c; u <= l; u++) {
                    var p = this.getPathPointsPos(h, u);
                    t.sub(p).mag() < e && this.setPathPointsValue(h, u, i);
                }
            };
            e.prototype.isCrossObstruct = function (t, e) {
                var n = i.MapMgr.wallCols;
                n = (n = (n = n.concat(i.MapMgr.blockCols)).concat(i.MapMgr.cliffCols)).concat(D.CoinWaveMgr.blockEnemys);
                for (var a = 0; a < n.length; a++) {
                    var r = n[a], o = 0, c = 0, l = 0, h = 0;
                    if (r instanceof s.default) {
                        o = r.center.x;
                        c = r.center.y;
                        l = r.widthHalf;
                        h = r.heightHalf;
                    } else {
                        if (!(r instanceof v.default)) continue;
                        o = r.position.x;
                        c = r.position.y;
                        l = r.radius;
                        h = r.radius;
                    }
                    var p = cc.v2(o - l, c + h), d = cc.v2(o + l, c + h), f = cc.v2(o + l, c - h), m = cc.v2(o - l, c - h);
                    if (null != u.DYTools.getLineCrossPoint(t, e, p, d)) return !0;
                    if (null != u.DYTools.getLineCrossPoint(t, e, d, f)) return !0;
                    if (null != u.DYTools.getLineCrossPoint(t, e, f, m)) return !0;
                    if (null != u.DYTools.getLineCrossPoint(t, e, m, p)) return !0;
                }
                var g = i.MapMgr.lineArr;
                for (a = 0; a < g.length; a++) if (null != u.DYTools.getLineCrossPoint(t, e, g[a].data.start, g[a].data.end)) return !0;
                return !1;
            };
            e.prototype.isInMap = function (t) {
                var e = !1, n = i.MapMgr.wallCols;
                n = (n = n.concat(i.MapMgr.blockCols)).concat(i.MapMgr.cliffCols);
                for (var a = 0; a < n.length; a++) {
                    var r = n[a], o = 0, c = 0, l = 0, h = 0;
                    if (r instanceof s.default) {
                        o = r.center.x;
                        c = r.center.y;
                        l = r.widthHalf;
                        h = r.heightHalf;
                    } else {
                        if (!(r instanceof v.default)) continue;
                        o = r.position.x;
                        c = r.position.y;
                        l = r.radius;
                        h = r.radius;
                    }
                    var u = o - l, p = o + l, d = c - h, f = c + h;
                    if (t.x >= u && t.x <= p && t.y >= d && t.y <= f) return !1;
                }
                var m = 0, g = i.MapMgr.lineArr;
                for (a = 0; a < g.length; a++) {
                    var _ = g[a].data.start, y = g[a].data.end;
                    this.isDotCrossToRight(cc.v2(t.x, t.y), _, y) && m++;
                }
                m % 2 == 1 && (e = !0);
                return e;
            };
            e.prototype.isDotCrossToRight = function (t, e, i) {
                if (e.y == i.y) return t.y == e.y && (t.x <= e.x || t.x <= i.x);
                var n = Math.min(e.y, i.y), a = Math.max(e.y, i.y);
                return !(t.y > a || t.y < n || e.y > t.y != i.y > t.y && t.x > (t.y - e.y) * (e.x - i.x) / (e.y - i.y) + e.x);
            };
            e.prototype.setPathPointsValue = function (t, e, i) {
                var n = this.m_dicPathPoints[t];
                if (!n) {
                    n = {};
                    this.m_dicPathPoints[t] = n;
                }
                n[e] = i;
            };
            e.prototype.getPathPointsValue = function (t, e, i, n) {
                if (t == i && e == n) return !0;
                var a = this.m_dicPathPoints[t];
                return !!a && !!a[e];
            };
            e.prototype.getNextPathPointsValue = function (t, e) {
                var i = this.m_dicPathPoints[t];
                return !!i && !!i[e];
            };
            e.prototype.getPathPointsNum = function (t, e) {
                t = Math.floor(t + .5 * this.m_pathPointsX);
                e = Math.floor(e + .5 * this.m_pathPointsY);
                var i = Math.floor(t / this.m_pathPointsX), n = Math.floor(e / this.m_pathPointsY);
                return cc.v2(i, n);
            };
            e.prototype.getPathPointsPos = function (t, e) {
                var i = t * this.m_pathPointsX, n = e * this.m_pathPointsY;
                return cc.v2(i, n);
            };
            e.prototype.getPathPoints = function (t, e) {
                var i = [], n = this.getPathPointsNum(t.x, t.y), a = this.getPathPointsNum(e.x, e.y);
                if (n.x == a.x && n.y == a.y) i.push(e); else for (var r = this.searchRoad(n.x, n.y, a.x, a.y), o = 0; o < r.length; o++) o == r.length - 1 ? i.push(e) : i.push(this.getPathPointsPos(r[o].x, r[o].y));
                return i;
            };
            e.prototype.searchRoad = function (t, e, i, n) {
                var a = Math.min(t, i) - this.m_pathSearchX, r = Math.max(t, i) + this.m_pathSearchX, o = Math.min(e, n) - this.m_pathSearchY, s = Math.max(e, n) + this.m_pathSearchY, c = [], l = [], h = [], u = -1;
                c.push({
                    x: t,
                    y: e,
                    G: 0
                });
                do {
                    var p = c.pop();
                    l.push(p);
                    for (var d = this.SurroundPoint(p), f = 0; f < d.length; f++) {
                        var m = d[f];
                        if (this.getPathPointsValue(m.x, m.y, i, n) && m.x >= a && m.x <= r && m.y >= o && m.y <= s && -1 == this.existList(m, l)) {
                            var g = p.G + ((p.x - m.x) * (p.y - m.y) == 0 ? 10 : 14);
                            if (-1 == this.existList(m, c)) {
                                m.H = 10 * Math.abs(i - m.x) + 10 * Math.abs(n - m.y);
                                m.G = g;
                                m.F = m.H + m.G;
                                m.parent = p;
                                c.push(m);
                            } else {
                                var _ = this.existList(m, c);
                                if (_ >= 0 && g < c[_].G) {
                                    c[_].parent = p;
                                    c[_].G = g;
                                    c[_].F = g + c[_].H;
                                }
                            }
                        }
                    }
                    if (0 == c.length) break;
                    c.sort(this.sortF);
                    u = this.existList({
                        x: i,
                        y: n
                    }, c);
                } while (-1 == u);
                if (-1 == u) {
                    h = [];
                    console.log("找不到寻路目标");
                } else {
                    var y = c[u];
                    do {
                        h.unshift({
                            x: y.x,
                            y: y.y
                        });
                        y = y.parent;
                    } while (y.x != t || y.y != e);
                }
                return h;
            };
            e.prototype.sortF = function (t, e) {
                return e.F - t.F;
            };
            e.prototype.SurroundPoint = function (t) {
                var e = t.x, i = t.y;
                return [{
                    x: e - 1,
                    y: i - 1
                }, {
                    x: e,
                    y: i - 1
                }, {
                    x: e + 1,
                    y: i - 1
                }, {
                    x: e + 1,
                    y: i
                }, {
                    x: e + 1,
                    y: i + 1
                }, {
                    x: e,
                    y: i + 1
                }, {
                    x: e - 1,
                    y: i + 1
                }, {
                    x: e - 1,
                    y: i
                }];
            };
            e.prototype.existList = function (t, e) {
                for (var i in e) if (t.x == e[i].x && t.y == e[i].y) return parseInt(i);
                return -1;
            };
            e.prototype.getEndPos = function (t, e) {
                if (!this.isInMap(t) && this.isInMap(e)) return e;
                var n = e, a = e.sub(t).mag(), r = [], o = i.MapMgr.wallCols;
                o = (o = o.concat(i.MapMgr.blockCols)).concat(i.MapMgr.cliffCols);
                for (var c = b.PropMgr.props, l = 0; l < c.length; l++) {
                    var h = c[l];
                    o.push(h.getColliders());
                }
                for (l = 0; l < o.length; l++) {
                    var p = o[l], d = 0, f = 0, m = 0, g = 0;
                    if (p instanceof s.default) {
                        d = p.center.x;
                        f = p.center.y;
                        m = p.widthHalf;
                        g = p.heightHalf;
                    } else {
                        if (!(p instanceof v.default)) continue;
                        d = p.position.x;
                        f = p.position.y;
                        m = p.radius;
                        g = p.radius;
                    }
                    var _ = cc.v2(d - m, f + g), y = cc.v2(d + m, f + g), M = cc.v2(d + m, f - g), S = cc.v2(d - m, f - g), k = u.DYTools.getLineCrossPoint(t, e, _, y), C = u.DYTools.getLineCrossPoint(t, e, y, M), w = u.DYTools.getLineCrossPoint(t, e, M, S), A = u.DYTools.getLineCrossPoint(t, e, S, _);
                    null != k && r.push(k);
                    null != C && r.push(C);
                    null != w && r.push(w);
                    null != A && r.push(A);
                }
                var T = i.MapMgr.lineArr;
                for (l = 0; l < T.length; l++) {
                    var D = u.DYTools.getLineCrossPoint(t, e, T[l].data.start, T[l].data.end);
                    null != D && r.push(D);
                }
                for (l = 0; l < r.length; l++) {
                    var P = r[l].sub(t).mag();
                    if (P < a) {
                        a = P;
                        n = r[l];
                    }
                }
                n.x >= t.x ? n.x -= 20 : n.x += 20;
                n.y >= t.y ? n.y -= 20 : n.y += 20;
                return n;
            };
            e.prototype.createMap = function () {
                if (this._mapData) {
                    this._createFloor();
                    this._createPath();
                    this._createTraps();
                    this._createBlock();
                    this._createCliff();
                    this._createDoor();
                    this._createAura();
                    this._createLight();
                    this._createTop();
                    this.createStartEnd();
                    this._createLines();
                    if (5 == l.BattleMgr.mapId) {
                        var t = this._mapTopLayer.parent.parent.getChildByName("upEnv"), e = new cc.Node("aura");
                        e.parent = t;
                        e.addComponent(cc.Sprite).spriteFrame = this.floorAtlas.getSpriteFrame("aura_ui");
                        e.height = f.GValue.ViewHeight + 400;
                        f.GValue.IPADWidth > 0 ? e.x = -f.GValue.IPADWidth / 2 + 40 : e.x = -320;
                        var i = new cc.Node("aura");
                        i.parent = t;
                        i.scaleX = -1;
                        i.addComponent(cc.Sprite).spriteFrame = this.floorAtlas.getSpriteFrame("aura_ui");
                        i.height = e.height;
                        i.x = -e.x;
                    }
                    this._maskNode.setContentSize(cc.view.getVisibleSize());
                }
            };
            e.prototype._createFloor = function () {
                var t = this._mapData.bg;
                if (t) {
                    var e = this._floorLayer.getChildByName("bg");
                    if (e) {
                        e.getComponent(cc.Sprite).spriteFrame = this._floorAtlas.getSpriteFrame(t.res);
                        e.width = t.wt;
                        e.height = t.ht;
                        e.x = t.x;
                        e.y = t.y;
                    }
                }
                for (var i = this._mapData.floor, n = 0, a = i.length; n < a; n++) {
                    var r = i[n], o = this._createDecorate(r, this._floorAtlas, this._getFrameDuration(!0));
                    o && (o.parent = this._floorLayer);
                }
            };
            e.prototype._createPath = function () {
                for (var t = this._mapData.path, e = 0, i = t.length; e < i; e++) {
                    var n = t[e];
                    (o = new cc.Node(n.res)).parent = this._wallLayer;
                    var a = o.addComponent(cc.Sprite);
                    a.spriteFrame = this._pathAtlas.getSpriteFrame(n.res);
                    a.type = n.ty;
                    o.x = n.x;
                    o.y = n.y;
                    o.anchorX = n.ax;
                    o.anchorY = n.ay;
                    o.width = n.wt;
                    o.height = n.ht;
                    o.angle = n.ag;
                    o.scaleX = n.sx;
                    o.scaleY = n.sy;
                }
                var r = this._mapData.ground;
                for (e = 0, i = r.length; e < i; e++) {
                    var o;
                    n = r[e];
                    (o = this._createDecorate(n, this._pathAtlas, this._getFrameDuration(!1))) && (o.parent = this._wallLayer);
                }
            };
            e.prototype._createDoor = function () {
                for (var t = this, e = this._mapData.door, i = null, n = 0; n < e.length; n++) {
                    var a = e[n], o = this._createDecorate(a, this._floorAtlas);
                    this.m_endDoor = o;
                    this.m_endDoorArr.push(o);
                    if ("door_2" == a.res) {
                        i = o;
                        this._blockLayer.addChild(o, 1);
                        var s = new cc.Node("door");
                        this._mapTopLayer.addChild(s, 11);
                        s.position = o.position;
                        this._mapSnakeLayer.height = 2 * s.y + 450;
                        this.m_endDoorSpine = s.addComponent(sp.Skeleton);
                        this.m_endDoorSpine.skeletonData = r.FrameMgr.loadMgr.get("spine_door", sp.SkeletonData);
                        this.m_endDoorSpine.premultipliedAlpha = !1;
                        this.m_endDoorSpine.node.color = this._getDoorColor();
                        s.active = !1;
                        this.m_endDoorSpine.setCompleteListener(function (e) {
                            if ("play" == (e.animation ? e.animation.name : "")) {
                                t.m_endDoorSpine.setAnimation(0, "idle", !0);
                                r.FrameMgr.audioMgr.playEffect("pass_openDoor");
                                t.m_endDoorSpine.scheduleOnce(function () {
                                    t.m_doorBlastCall && t.m_doorBlastCall();
                                }, 1);
                            }
                        });
                        this.m_doorLight = new cc.Node("light");
                        this._mapTopLayer.addChild(this.m_doorLight, 2);
                        this.m_doorLight.position = o.position;
                        this.m_doorLight.addComponent(cc.Sprite).spriteFrame = this._pathAtlas.getSpriteFrame("door_light");
                        this.m_doorLight.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                        this.m_doorLight.active = !1;
                    } else this._blockLayer.addChild(o, 2);
                }
                i && (this.m_endDoor = i);
            };
            e.prototype._createBlock = function () {
                for (var t = this._mapData.block, e = 0; e < t.length; e++) {
                    var i = t[e], n = new cc.Node("block" + e);
                    n.parent = this.blockLayer;
                    n.x = i.colData.x;
                    n.y = i.colData.y;
                    n.width = i.colData.width;
                    n.height = i.colData.height;
                    if (i.colData) {
                        var a = null;
                        switch (i.colData.type) {
                            case h.ColliderType.Circle:
                                (a = new v.default()).init([0, 0, i.colData.width / 2], null, n);
                                break;

                            case h.ColliderType.Rectangle:
                                (a = new s.default()).init([0, 0, i.colData.width, i.colData.height], null, n);
                        }
                        if (a) {
                            a.enabled = !0;
                            this.m_blockColArr.push(a);
                        }
                    }
                    for (var r = 0; r < i.uiData.length; r++) {
                        var o = i.uiData[r];
                        this._createDecorate(o, this._pathAtlas).parent = n;
                    }
                }
            };
            e.prototype._createCliff = function () {
                for (var t = this._mapData.cliff, e = 0; e < t.length; e++) {
                    var i = t[e], n = new cc.Node("cliff" + e);
                    n.parent = this.blockLayer;
                    n.x = i.colData.x;
                    n.y = i.colData.y;
                    n.width = i.colData.width;
                    n.height = i.colData.height;
                    if (i.colData) {
                        var a = null;
                        switch (i.colData.type) {
                            case h.ColliderType.Circle:
                                (a = new v.default()).init([0, 0, i.colData.width / 2], null, n);
                                break;

                            case h.ColliderType.Rectangle:
                                (a = new s.default()).init([0, 0, i.colData.width, i.colData.height], null, n);
                        }
                        if (a) {
                            a.enabled = !0;
                            this.m_cliffColArr.push(a);
                        }
                    }
                    for (var r = 0; r < i.uiData.length; r++) {
                        var o = i.uiData[r];
                        this._createDecorate(o, this._pathAtlas).parent = n;
                    }
                }
            };
            e.prototype._createAura = function () {
                for (var t = this._mapData.aura, e = 0, i = t.length; e < i; e++) {
                    var n = t[e], a = this._createDecorate(n, this._floorAtlas, this._getFrameDuration(!0));
                    a && (a.parent = this._auraLayer);
                }
                if (l.BattleMgr.isGameType(h.GameType.Coin)) {
                    var o = r.FrameMgr.loadMgr.get("MapGoldParticle", cc.Prefab);
                    if (o) {
                        var s = cc.instantiate(o);
                        s.parent = this._auraLayer;
                        s.setPosition(-600, 140);
                        var c = cc.instantiate(o);
                        c.parent = this._auraLayer;
                        c.setPosition(600, 140);
                    }
                }
            };
            e.prototype._createLight = function () {
                for (var t = this._mapData.light, e = 0, i = t.length; e < i; e++) {
                    var n = t[e], a = this._createDecorate(n, this._pathAtlas);
                    if (a) {
                        a.color = this._getSunshineColor();
                        a.parent = this._skyLayer;
                    }
                }
            };
            e.prototype._createTop = function () {
                for (var t = this._mapData.top, e = 0, i = t.length; e < i; e++) {
                    var n = t[e], a = this._createDecorate(n, this._floorAtlas, this._getFrameDuration(!1));
                    a && (a.parent = this._topLayer);
                }
            };
            e.prototype.createStartEnd = function () {
                for (var t = 0; t < this.mapData.wall.length; t++) {
                    var e = this.mapData.wall[t], i = new s.default();
                    if (c.GConfig.ColliderDraw) {
                        var n = new cc.Node();
                        this._wallLayer.addChild(n);
                        i.node = n;
                        n.position = cc.v3(e.x, e.y);
                        i.init([0, 0, e.width, e.height], null, n);
                    } else i.init([e.x, e.y, e.width, e.height]);
                    0 == e.tag ? i.tag = 0 == t ? 2 : 1 : i.tag = e.tag;
                    i.enabled = !0;
                    this.m_wallColArr.push(i);
                }
            };
            e.prototype._createLines = function () {
                for (var t = 0; t < this._mapData.lineArr.length; t++) {
                    var e = this._mapData.lineArr[t], i = new g.default();
                    if (c.GConfig.ColliderDraw) {
                        var n = new cc.Node();
                        this._wallLayer.addChild(n);
                        i.node = n;
                        i.init([e.tag, e.x0, e.y0, e.x1, e.y1], null, n);
                        var a = n.addComponent(cc.Graphics);
                        a.lineWidth = 2;
                        a.strokeColor = cc.Color.RED;
                        a.moveTo(e.x0, e.y0);
                        a.lineTo(e.x1, e.y1);
                        a.stroke();
                        a.fill();
                    } else i.init([e.tag, e.x0, e.y0, e.x1, e.y1]);
                    i.enabled = !0;
                    this.m_wallColArr.push(i);
                    this.m_lineArr.push(i);
                }
            };
            e.prototype._createTraps = function () {
                for (var t = this.mapData.trapArr, e = 0; e < t.length; e++) {
                    var i = t[e], n = d.ConfigDataMgr.getData("ConfigTrapData", i.id);
                    switch (n.type) {
                        case h.TrapType.Sunkens:
                            (o = new cc.Node("trap" + e)).parent = this.blockLayer;
                            (s = o.addComponent(S.default)).init(i, n);
                            this.m_trapArr.push(s);
                            break;

                        case h.TrapType.Quicksand:
                            if (a = r.FrameMgr.loadMgr.get("TrapQuicksand", cc.Prefab)) {
                                (o = cc.instantiate(a)).parent = this.blockLayer;
                                (s = o.getComponent(w.default)).init(i, n);
                                this.m_trapArr.push(s);
                            } else u.DYTools.error("no pf quicksand");
                            break;

                        case h.TrapType.Thorns:
                            if (a = r.FrameMgr.loadMgr.get("TrapThorns", cc.Prefab)) {
                                (o = cc.instantiate(a)).parent = this.blockLayer;
                                (s = o.getComponent(A.default)).init(i, n);
                                this.m_trapArr.push(s);
                            } else u.DYTools.error("no pf thorns");
                            break;

                        case h.TrapType.SnowBall:
                            var a;
                            if (a = r.FrameMgr.loadMgr.get("TrapSnowBallDevice", cc.Prefab)) {
                                var o, s;
                                (o = cc.instantiate(a)).parent = this.blockLayer;
                                (s = o.getComponent(T.default)).init(i, n);
                                this.m_trapArr.push(s);
                                var c = null;
                                (c = new v.default()).init([0, 0, 95], null, o);
                                c.enabled = !0;
                                this.m_cliffColArr.push(c);
                            } else u.DYTools.error("no pf thorns");
                    }
                }
            };
            e.prototype.removeTrap = function (t) {
                u.DYTools.arrRemove(this.m_trapArr, t);
            };
            Object.defineProperty(e.prototype, "floorLayer", {
                get: function () {
                    return this._floorLayer;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "wallLayer", {
                get: function () {
                    return this._wallLayer;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "blockLayer", {
                get: function () {
                    return this._blockLayer;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "topLayer", {
                get: function () {
                    return this._topLayer;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "pathAtlas", {
                get: function () {
                    return this._pathAtlas;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "floorAtlas", {
                get: function () {
                    return this._floorAtlas;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.getPlayerData = function () {
                return this._mapData.player;
            };
            e.prototype.getCameraWidthArea = function () {
                var t = this.mapData.bg.wt, e = this.mapData.bg.ht, i = this.mapData.bg.x - t / 2, n = this.mapData.bg.y - e / 2;
                return cc.rect(i, n, t, e);
            };
            e.prototype.getFollowCameraNodes = function () {
                var t = [];
                t.push(this._maskNode);
                return t;
            };
            e.prototype.getWavePointDatas = function () {
                return this.mapData.pointArr;
            };
            e.prototype.getLiftPointDatas = function () {
                return this.mapData.liftArr;
            };
            e.prototype.getVeinData = function () {
                return this._mapData.vL;
            };
            e.prototype.getPropPosData = function () {
                return this._mapData.propArr;
            };
            e.prototype.hideEnterDoorLight = function () {
                this.m_startLight && (this.m_startLight.active = !1);
            };
            e.prototype.doorLight = function () { };
            e.prototype.doorBlast = function (t) {
                for (var e = 0, i = this.m_endDoorArr; e < i.length; e++) i[e].parent = this._mapTopLayer;
                this.m_doorBlastCall = t;
                this.m_doorLight.active = !0;
                if (this.m_endDoorSpine) {
                    this.m_endDoorSpine.node.active = !0;
                    this.m_endDoorSpine.setAnimation(0, "play", !1);
                } else t && t();
                r.FrameMgr.noticeMgr.emit(h.EventTypeEnum.ScreenShake, {
                    level: 0,
                    time: 4
                });
                if (this.m_endDoor) {
                    var n = c.GConfig.ActionInterval;
                    cc.tween(this.m_endDoor).by(6 * n, {
                        y: 41
                    }).by(6 * n, {
                        y: 83
                    }).start();
                }
            };
            Object.defineProperty(e.prototype, "endDoor", {
                get: function () {
                    return this.m_endDoor;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.getDoorFace = function () {
                var t = this.endDoor;
                if (!t) return 0;
                switch ((t.angle + 360) % 360) {
                    case 0:
                        return 0;

                    case 90:
                        return 1;

                    case 180:
                        return 2;

                    case 270:
                        return 3;
                }
            };
            e.prototype.getEndPosByDoor = function () {
                var t = this.endDoor, e = 0, i = 0;
                switch (this.getDoorFace()) {
                    case 0:
                        e = t.x;
                        i = t.y - 334;
                        break;

                    case 1:
                        e = t.x + 334;
                        i = t.y;
                        break;

                    case 2:
                        e = t.x;
                        i = t.y + 334;
                        break;

                    case 3:
                        e = t.x - 334;
                        i = t.y;
                }
                return cc.v2(e, i);
            };
            e.prototype.getSnakeOutPosByDoor = function () {
                var t = this.endDoor, e = this.getDoorFace(), i = 0, n = 0, a = m.SnakeMgr.getSnakeLong();
                switch (e) {
                    case 0:
                        i = t.x;
                        n = t.y + a + 100;
                        break;

                    case 1:
                        i = t.x - a - 100;
                        n = t.y;
                        break;

                    case 2:
                        i = t.x;
                        n = t.y - a - 100;
                        break;

                    case 3:
                        i = t.x + a + 100;
                        n = t.y;
                }
                return cc.v2(i, n);
            };
            Object.defineProperty(e.prototype, "mapData", {
                get: function () {
                    return this._mapData;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "wallCols", {
                get: function () {
                    return this.m_wallColArr;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "blockCols", {
                get: function () {
                    return this.m_blockColArr;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "cliffCols", {
                get: function () {
                    return this.m_cliffColArr;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "lineArr", {
                get: function () {
                    return this.m_lineArr;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "allBlockRects", {
                get: function () {
                    return this.m_allBlocks;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.getVeinLayer = function () {
                return this._veinLayer;
            };
            e.prototype.getPropLayer = function () {
                return this._propLayer;
            };
            e.prototype.getMapSnakeLayer = function () {
                return this._mapSnakeLayer;
            };
            e.prototype.getRegionEffectLayer = function () {
                return this._blockLayer;
            };
            e.prototype.createFences = function () {
                for (var t = this.mapData.area, e = 0; e < t.length; e++) {
                    if ((n = t[e]).fenceBack) {
                        var i = this.createFence(n.fenceBack, !1);
                        this.m_fenceBackMap.set(n.id, i);
                    }
                    if (n.fenceFront) {
                        i = this.createFence(n.fenceFront);
                        this.m_fenceFrontMap.set(n.id, i);
                    }
                }
                if (c.GConfig.ColliderDraw) for (e = 0; e < t.length; e++) {
                    var n = t[e], a = new cc.Node();
                    this._wallLayer.addChild(a);
                    a.addComponent(cc.Sprite).spriteFrame = this._pathAtlas.getSpriteFrame("edge");
                    a.position = cc.v3(n.x, n.y);
                    a.width = n.width;
                    a.height = n.height;
                }
            };
            e.prototype.createFence = function (t, e) {
                void 0 === e && (e = !0);
                var i = t, n = new cc.Node();
                n.name = "fence";
                n.parent = e ? this._blockLayer : this._mapTopLayer;
                n.x = t.x;
                n.y = t.y;
                var a = new cc.Node("image");
                n.addChild(a);
                a.x = i.ix;
                a.y = i.iy;
                a.addComponent(k.default).create(i.width > i.height ? 0 : 1, Math.max(t.iht, t.iwt));
                if (t.tag > 0) {
                    var r;
                    (r = new g.default()).init([t.tag, t.tx, t.ty, t.ex, t.ey], null, n);
                    if (c.GConfig.ColliderDraw) {
                        var o = n.addComponent(cc.Graphics);
                        o.lineWidth = 2;
                        o.strokeColor = cc.Color.RED;
                        o.moveTo(t.tx - n.x, t.ty - n.y);
                        o.lineTo(t.ex - n.x, t.ey - n.y);
                        o.stroke();
                        o.fill();
                    }
                    if (t.id > 0) {
                        r.enabled = !0;
                        this.m_wallColArr.push(r);
                        this.m_lineArr.push(r);
                    } else n.active = !1;
                    return r;
                }
                (r = new s.default()).init([0, 0, i.width, i.height], null, n);
                if (t.id > 0) {
                    r.enabled = !0;
                    this.m_wallColArr.push(r);
                } else n.active = !1;
                r.tag = e ? i.width > i.height ? 1 : 4 : i.width > i.height ? 2 : 3;
                return r;
            };
            e.prototype.setFenceShow = function (t) {
                var e = this.m_fenceBackMap.get(t);
                if (e) {
                    e.enabled = !0;
                    e.node.active = !0;
                    e.node.opacity = 0;
                    cc.tween(e.node).to(.5, {
                        opacity: 255
                    }).start();
                    this.m_wallColArr.push(e);
                    if (e.type == h.ColliderType.Line) {
                        var i = e;
                        i && this.m_lineArr.push(i);
                    }
                }
            };
            e.prototype.setFenceHide = function (t) {
                var e = this.m_fenceFrontMap.get(t);
                if (e) {
                    e.enabled = !1;
                    cc.tween(e.node).to(.5, {
                        opacity: 0
                    }).call(function () {
                        e.node.active = !1;
                    }).start();
                    u.DYTools.arrRemove(this.m_wallColArr, e);
                    u.DYTools.arrRemove(this.m_lineArr, e);
                }
            };
            e.prototype.createGuide = function () {
                if (_.GuideMgr.guideAble(h.GuideType.FirstBattle) && this._mapData.guide.length > 0) for (var t = c.GConfig.ActionInterval, e = _.GuideMgr.getGuideAtlas(), i = 0; i < this._mapData.guide.length; i++) {
                    var n = this._mapData.guide[i], a = new cc.Node("g_p");
                    a.setPosition(n.x, n.y);
                    this._wallLayer.addChild(a, 100);
                    var o = new cc.Node("line");
                    a.addChild(o);
                    o.x = n.ix;
                    o.y = n.iy;
                    o.anchorY = .3;
                    o.opacity = 0;
                    o.width = n.iwt;
                    var s = new cc.Node();
                    a.addChild(s);
                    s.scaleY = .6;
                    var l = new cc.Node("circle");
                    s.addChild(l);
                    l.addComponent(cc.Sprite).spriteFrame = e.getSpriteFrame("yuan");
                    cc.tween(l).to(3 * t, {
                        scale: 1.15
                    }).to(9 * t, {
                        scale: 1
                    }).delay(11 * t).union().repeatForever().start();
                    var u = cc.instantiate(l);
                    u.parent = s;
                    cc.tween(u).delay(3 * t).to(0, {
                        scale: 1,
                        opacity: 100
                    }).to(9 * t, {
                        scale: .5,
                        opacity: 0
                    }).delay(11 * t).union().repeatForever().start();
                    var p = new cc.Node("yellow");
                    s.addChild(p);
                    p.addComponent(cc.Sprite).spriteFrame = e.getSpriteFrame("huandian");
                    cc.tween(p).delay(9 * t).to(0, {
                        scale: 1,
                        opacity: 100
                    }).to(10 * t, {
                        scale: 1.3,
                        opacity: 0
                    }).delay(4 * t).union().repeatForever().start();
                    var d = new cc.Node();
                    d.parent = a;
                    var f = new cc.Node("arrow");
                    d.addChild(f);
                    f.addComponent(cc.Sprite).spriteFrame = e.getSpriteFrame("arrow");
                    f.setPosition(0, 45);
                    cc.tween(f).to(7 * t, {
                        y: f.y
                    }).delay(t).to(12 * t, {
                        y: 60
                    }).to(3 * t, {
                        y: 45
                    }).union().repeatForever().start();
                    for (var m = 0; m < 3; m++) {
                        var g = new cc.Node();
                        g.parent = s;
                        var y = new cc.Node("circle");
                        g.addChild(y);
                        y.addComponent(cc.Sprite).spriteFrame = e.getSpriteFrame("jt2");
                        y.setPosition(0, 55);
                        y.opacity = 128;
                        0 == m ? g.angle = 90 : 1 == m ? g.angle = 180 : 2 == m && (g.angle = 270);
                        cc.tween(y).to(7 * t, {
                            y: y.y
                        }).delay(t).to(12 * t, {
                            y: 60
                        }).to(3 * t, {
                            y: 55
                        }).union().repeatForever().start();
                    }
                    f = new cc.Node();
                    a.parent.addChild(f);
                    f.anchorY = 0;
                    var v = f.addComponent(cc.Sprite);
                    v.type = cc.Sprite.Type.TILED;
                    v.spriteFrame = e.getSpriteFrame("jt");
                    cc.tween(f).to(4 * t, {
                        scale: 1.1
                    }).to(7 * t, {
                        scale: 1
                    }).delay(12 * t).union().repeatForever().start();
                    var b = cc.instantiate(f);
                    b.anchorY = 0;
                    b.parent = f.parent;
                    b.position = f.position;
                    cc.tween(b).to(4 * t, {
                        scale: 1.1,
                        opacity: 0
                    }).to(7 * t, {
                        scale: 1
                    }).delay(12 * t).union().repeatForever().start();
                    f.active = !1;
                    b.active = !1;
                    _.GuideMgr.addGuideArrow(f, b);
                    a.active = !1;
                    _.GuideMgr.addGuidePoint(a);
                }
                if (_.GuideMgr.guideAble(h.GuideType.MapCircle)) {
                    var M = new cc.Node("guide_circle");
                    M.parent = this.blockLayer;
                    M.setSiblingIndex(0);
                    M.opacity = 0;
                    M.position = cc.v3(10, 210);
                    var S = M.addComponent(sp.Skeleton);
                    S.skeletonData = r.FrameMgr.loadMgr.get("spine_guide_circle", sp.SkeletonData);
                    S.premultipliedAlpha = !1;
                    r.FrameMgr.noticeMgr.once(h.EventTypeEnum.GuideMapStart, function () {
                        S.node.opacity = 140;
                        S.timeScale = .6;
                        S.setAnimation(0, "play", !0);
                    });
                    r.FrameMgr.noticeMgr.once(h.EventTypeEnum.GuideMapOver, function () {
                        M.destroy();
                    });
                }
            };
            Object.defineProperty(e.prototype, "trapBalls", {
                get: function () {
                    return this.m_trapBallArr;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.addTrapBall = function (t) {
                this.m_trapBallArr.push(t);
            };
            e.prototype.removeTrapBall = function (t) {
                u.DYTools.arrRemove(this.m_trapBallArr, t);
            };
            e.prototype.initVectexs = function () {
                for (var t = this, e = this.m_enemyRadius, i = [], n = 0; n < this.m_allBlocks.length; n++) {
                    var a = this.m_allBlocks[n], r = cc.rect(a.x - e, a.y - e, a.width + 2 * e, a.height + 2 * e);
                    i.push(r);
                }
                var o = 0, s = function (e, i) {
                    var n = new cc.Node();
                    t._blockLayer.addChild(n);
                    n.addComponent(cc.Label).string = e.toString();
                    n.getComponent(cc.Label).fontSize = 20;
                    n.x = i.x;
                    n.y = i.y;
                };
                e = this.m_enemyRadius + 1;
                for (n = 0; n < this.m_allBlocks.length; n++) {
                    a = this.m_allBlocks[n];
                    var c = cc.v2(a.x - e, a.y - e), l = cc.v2(a.x - e, a.yMax + e), h = cc.v2(a.xMax + e, a.yMax + e), u = cc.v2(a.xMax + e, a.y - e);
                    if (!this.isBlockContains(c, i)) {
                        this.m_blockVectexIndex.set(c, o);
                        this.m_vectexs.push(c);
                        s(o++, c);
                    }
                    if (!this.isBlockContains(l, i)) {
                        this.m_blockVectexIndex.set(l, o);
                        this.m_vectexs.push(l);
                        s(o++, l);
                    }
                    if (!this.isBlockContains(h, i)) {
                        this.m_blockVectexIndex.set(h, o);
                        this.m_vectexs.push(h);
                        s(o++, h);
                    }
                    if (!this.isBlockContains(u, i)) {
                        this.m_blockVectexIndex.set(u, o);
                        this.m_vectexs.push(u);
                        s(o++, u);
                    }
                }
                this.checkAllThroughVectex();
            };
            e.prototype.checkAllThroughVectex = function () {
                for (var t = [], e = this.m_vectexs.length, i = 0; i < e; i++) {
                    t.push([]);
                    for (var n = 0; n < e; n++) t[i].push(!1);
                }
                for (i = 0; i < this.m_vectexs.length; i++) {
                    var a = this.m_vectexs[i];
                    for (n = 0; n <= i; n++) if (i != n) {
                        var r = this.m_vectexs[n];
                        this.hasBlocks(a, r) || (t[i][n] = !0);
                    }
                }
                for (n = 0; n < this.m_vectexs.length; n++) {
                    var o = this.m_vectexs[n];
                    for (i = 0; i < n; i++) {
                        t[i][n] = t[n][i];
                        if (t[i][n]) {
                            r = this.m_vectexs[i];
                            var s = this.m_vectexIndexLink.get(n);
                            if (!s) {
                                s = [];
                                this.m_vectexIndexLink.set(n, s);
                            }
                            if (s.indexOf(i) < 0) {
                                s.push(i);
                                var c = o.sub(r).mag();
                                this.m_vectexLength.set(1e3 * n + i, c);
                                this.m_vectexLength.set(1e3 * i + n, c);
                            }
                            if (!(s = this.m_vectexIndexLink.get(i))) {
                                s = [];
                                this.m_vectexIndexLink.set(i, s);
                            }
                            s.indexOf(n) < 0 && s.push(n);
                            var l = this.m_vectexLink.get(o);
                            if (!l) {
                                l = [];
                                this.m_vectexLink.set(o, l);
                            }
                            if (!u.DYTools.arrContainPos(l, r)) {
                                l.push(r);
                                c = o.sub(r).mag();
                                this.m_vectexLength.set(1e3 * n + i, c);
                                this.m_vectexLength.set(1e3 * i + n, c);
                            }
                            if (!(l = this.m_vectexLink.get(r))) {
                                l = [];
                                this.m_vectexLink.set(r, l);
                            }
                            u.DYTools.arrContainPos(l, o) || l.push(o);
                        }
                    }
                }
                u.DYTools.warn("aaa", t);
            };
            e.prototype.isBlockContains = function (t, e) {
                for (var i = 0, n = e; i < n.length; i++) if (n[i].contains(t)) return !0;
                return !1;
            };
            e.prototype.hasBlocks = function (t, e) {
                for (var i = e, n = this.m_enemyRadius, a = t.y + n, r = t.y - n, o = t.x - n, s = t.x + n, c = i.y + 5 - 6, l = i.y - 5 + 6, h = i.x - 5 + 6, u = i.x + 5 - 6, p = this.m_allBlocks, d = !1, f = 0; f < p.length; f++) {
                    var m = p[f], g = m.yMax, _ = m.yMin, y = m.xMin, v = m.xMax;
                    if (a <= _ && c <= _); else if (r >= g && l >= g); else if (o >= v && h >= v); else if (s <= y && u <= y); else {
                        var b = m.x - n, M = m.y - n, S = m.width + 2 * n, k = m.height + 2 * n, C = cc.rect(b, M, S, k);
                        if (cc.Intersection.lineRect(t, i, C)) {
                            d = !0;
                            break;
                        }
                    }
                }
                return d;
            };
            e.prototype.getWayDir = function (t, e) {
                var i = cc.Vec2.ZERO, n = null;
                if (this.hasBlocks(t, e)) {
                    var a = this.checkAllWayPos(t, e);
                    if (a.length < 1) {
                        u.DYTools.error("222222222");
                        i = e.sub(t);
                        n = e;
                    } else i = (n = a[0]).sub(t);
                } else {
                    i = e.sub(t);
                    n = e;
                }
                return [i.normalize(), n];
            };
            e.prototype.checkAllWayPos = function (t, e) {
                for (var i = this, n = (this.m_vectexs.length, []), a = 0; a < this.m_vectexs.length; a++) {
                    var r = this.m_vectexs[a];
                    this.hasBlocks(r, e) || n.push(a);
                }
                var o = {};
                o.pos = t;
                var s = [];
                for (a = 0; a < this.m_vectexs.length; a++) {
                    r = this.m_vectexs[a];
                    if (!this.hasBlocks(r, t)) {
                        var c = {
                            index: a,
                            pos: r,
                            pre: o
                        };
                        s.push(c);
                    }
                }
                o.next = s;
                if (0 == o.next.length) {
                    var l = null;
                    for (a = 0; a < this.m_vectexs.length; a++) {
                        r = this.m_vectexs[a];
                        t.sub(r).magSqr() < 999999 && (l = a);
                    }
                    if (null != l) {
                        var h = {
                            index: l,
                            pos: this.m_vectexs[l],
                            pre: o
                        };
                        s.push(h);
                    }
                }
                var p = function (t, e) {
                    for (var a = t; a && f.index != a.index;) a = a.pre;
                    var r = t.index, o = i.m_vectexIndexLink.get(r);
                    if (o) {
                        for (var s = [], c = 0; c < o.length; c++) {
                            for (var l = o[c], h = !0, m = t; m;) {
                                if (m.index == l) {
                                    h = !1;
                                    break;
                                }
                                m = m.pre;
                            }
                            if (h) {
                                var g = {
                                    index: l,
                                    pre: t,
                                    pos: i.m_vectexs[l]
                                };
                                n.indexOf(l) >= 0 ? g.isEnd = !0 : g = p(g, e);
                                s.push(g);
                            }
                        }
                        if (s.length > 0) {
                            t.next = s;
                            d(t.next);
                        }
                    } else u.DYTools.error("eeeeeeeee");
                    return t;
                }, d = function (t) {
                    for (var e = 0; e < t.length; e++) for (var n = t[e].index, a = i.m_vectexIndexLink.get(n), r = e + 1; r < t.length; r++) {
                        var o = t[r].index;
                        if (a.indexOf(o) >= 0) {
                            t.splice(r, 1);
                            r--;
                        }
                    }
                }, f = o;
                for (a = 0; a < o.next.length; a++) {
                    f = o.next[a];
                    d(o.next);
                    p(o.next[a], 0);
                }
                var m = 9999999, g = [], _ = function (t, e, n) {
                    if (t.isEnd) {
                        if (m > e) {
                            m = e;
                            g = n;
                        }
                        return !0;
                    }
                    var a = t.next;
                    if (!(a && a.length > 0)) return !1;
                    for (var r = 0; r < a.length; r++) {
                        var o = a[r];
                        if (!t.pos.equals(o.pos)) {
                            for (var s = [], c = 0, l = n; c < l.length; c++) {
                                var h = l[c];
                                s.push(h);
                            }
                            s.push(o.index);
                            var p;
                            (p = null != t.index ? i.m_vectexLength.get(1e3 * t.index + o.index) : t.pos.sub(o.pos).mag()) || u.DYTools.error("111111111");
                            _(o, p + e, s);
                        }
                    }
                };
                _(o, 0, []);
                var y = [];
                if (g.length > 1) {
                    var v = this.m_vectexs[g[1]];
                    this.hasBlocks(t, v) || g.shift();
                }
                for (var b = 0, M = g; b < M.length; b++) {
                    var S = M[b];
                    y.push(this.m_vectexs[S]);
                }
                return y;
            };
            e.prototype._createDecorate = function (t, e, i) {
                void 0 === i && (i = 2 * c.GConfig.ActionInterval);
                var n = null, a = !1;
                switch (t.ty) {
                    case 0:
                        var o = (n = new cc.Node(t.res)).addComponent(cc.Sprite);
                        o.sizeMode = t.mode;
                        o.trim = t.trim;
                        a = o.sizeMode == cc.Sprite.SizeMode.CUSTOM;
                        e && (o.spriteFrame = e.getSpriteFrame(t.res));
                        1 == t.dst && (o.dstBlendFactor = cc.macro.BlendFactor.ONE);
                        break;

                    case 1:
                        var s = (n = cc.instantiate(f.GValue.pfFrameAnim)).getComponent(y.default);
                        s.init(e, t.res, t.ac, i);
                        s.slowAble = !1;
                        1 == t.dst && s.setDstBlendFactorMode1();
                        for (var l = 0, h = this._frameArr1; l < h.length; l++) {
                            var p = h[l];
                            if (t.res == p) {
                                s.setDuration(u.DYTools.random_int(500, 1500) / 100);
                                break;
                            }
                        }
                        for (var d = !1, m = 0, g = this._frameArr2; m < g.length; m++) {
                            p = g[m];
                            if (t.res == p) {
                                var _ = u.DYTools.random_int(0, 1e3) / 100;
                                s.scheduleOnce(function () {
                                    s.play();
                                }, _);
                                d = !0;
                                break;
                            }
                        }
                        d || s.play();
                        break;

                    case 2:
                        var v = (n = new cc.Node(t.res)).addComponent(sp.Skeleton);
                        v.skeletonData = r.FrameMgr.loadMgr.get(t.res, sp.SkeletonData);
                        v.premultipliedAlpha = !1;
                        v.setAnimationCacheMode(sp.Skeleton.AnimationCacheMode.SHARED_CACHE);
                        v.enableBatch = !0;
                        "" != t.act ? v.scheduleOnce(function () {
                            v.setAnimation(0, t.act, !0);
                        }) : u.DYTools.error("error spine act", t.res);
                }
                if (n) {
                    n.anchorX = t.ax;
                    n.anchorY = t.ay;
                    n.scaleX = t.sx;
                    n.scaleY = t.sy;
                    n.angle = t.ag;
                    if (a) {
                        n.width = t.wt;
                        n.height = t.ht;
                    }
                    n.x = t.x;
                    n.y = t.y;
                }
                return n;
            };
            e.prototype._getFrameDuration = function (t) {
                var e = c.GConfig.ActionInterval;
                switch (l.BattleMgr.mapId) {
                    case 1:
                    case 2:
                        return t ? 4 * e : 2 * e;
                }
                return 2 * e;
            };
            e.prototype._getSunshineColor = function () {
                switch (l.BattleMgr.mapId) {
                    case 1:
                        return cc.color(166, 224, 146);

                    case 2:
                        return cc.color(198, 183, 92);

                    case 3:
                        return cc.color(255, 204, 0);

                    case 4:
                        return cc.color(196, 160, 30);

                    case 5:
                        return cc.color(146, 224, 219);
                }
                return cc.color(255, 255, 255);
            };
            e.prototype._getDoorColor = function () {
                if (l.BattleMgr.isGameType(h.GameType.Coin)) return cc.color(255, 189, 0);
                switch (l.BattleMgr.mapId) {
                    case 0:
                        return cc.color(255, 189, 0);

                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        return cc.color(0, 168, 255);
                }
                return cc.color(0, 168, 255);
            };
            e.instance = new e();
            return e;
        }(p.BattleFlowBase);
        i.default = P;
        i.MapMgr = P.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/config/ConfigTrapData": "ConfigTrapData",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../data/map/MapData": "MapData",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../util/Tools": "Tools",
        "../../collide/CircleColliderComp": "CircleColliderComp",
        "../../collide/LineColliderComp": "LineColliderComp",
        "../../collide/RectColliderComp": "RectColliderComp",
        "../../map/MapEntityFence": "MapEntityFence",
        "../../map/trap/Quicksand/TrapQuicksandEntity": "TrapQuicksandEntity",
        "../../map/trap/SnowBall/TrapSnowBall": "TrapSnowBall",
        "../../map/trap/Sunkens/TrapSunkensEntity": "TrapSunkensEntity",
        "../../map/trap/Thorns/TrapThorns": "TrapThorns",
        "../common/GuideManager": "GuideManager",
        "./BattleManager": "BattleManager",
        "./GameRuleManager": "GameRuleManager",
        "./PropManager": "PropManager",
        "./SnakeManager": "SnakeManager",
        "./wave/CoinWaveManager": "CoinWaveManager"
    }],
    NetData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c3a8dmUgn5Ef6EdeuNCd8ui", "NetData");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        cc._RF.pop();
    }, {}],
    NetManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2a45bzHyRRHD4moIFytM+/q", "NetManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.NetMgr = void 0;
        var n = t("../util/GameFunc"), a = (t("crypto-js"), t("enc-base64"), function () {
            function t() {
                this.m_dizhi = "";
                this.NetUrl_Publish = "";
                this.NetUrl_Develop = "";
                this.NetUrl_QA = "";
            }
            t.prototype.sendData = function (t, e, i) {
                var a = this;
                return new Promise(function (r, o) {
                    e && n.GFunc.showNetLoading();
                    var s = new XMLHttpRequest();
                    i || (i = a.m_dizhi);
                    if (null == i || "" == i) {
                        e && n.GFunc.hideNetLoading();
                        o("dizhi is null");
                    }
                    s.open("POST", i, !0);
                    s.setRequestHeader("Content-Type", "application/json");
                    s.timeout = 5e3;
                    s.ontimeout = function () {
                        e && n.GFunc.hideNetLoading();
                        o("request timeout");
                    };
                    s.onerror = function () {
                        e && n.GFunc.hideNetLoading();
                        o("request onerror");
                    };
                    s.onreadystatechange = function () {
                        var t = s.readyState, i = s.status;
                        if (4 == t) if (200 == i) {
                            n.GFunc.hideNetLoading();
                            r(s.responseText);
                        } else {
                            e && n.GFunc.hideNetLoading();
                            o("request error status code is " + i + ", " + JSON.stringify(s));
                        }
                    };
                    s.send(t);
                });
            };
            t.prototype.sendGetData = function (t, e, i) {
                var a = this;
                return new Promise(function (r, o) {
                    e && n.GFunc.showNetLoading();
                    var s = new XMLHttpRequest();
                    i || (i = a.m_dizhi);
                    if (null == i || "" == i) {
                        e && n.GFunc.hideNetLoading();
                        o("dizhi is null");
                    }
                    var c = "";
                    for (var l in t) {
                        "" != c && (c += "&");
                        c = c + l + "=" + t[l];
                    }
                    i = i + "?" + c;
                    s.open("GET", i, !0);
                    s.setRequestHeader("Content-Type", "x-www-form-urlencoded");
                    s.timeout = 5e3;
                    s.ontimeout = function () {
                        e && n.GFunc.hideNetLoading();
                        o("request timeout");
                    };
                    s.onerror = function () {
                        e && n.GFunc.hideNetLoading();
                        o("request onerror");
                    };
                    s.onreadystatechange = function () {
                        var t = s.readyState, i = s.status;
                        if (4 == t) if (200 == i) {
                            n.GFunc.hideNetLoading();
                            r(s.responseText);
                        } else {
                            e && n.GFunc.hideNetLoading();
                            o("request error status code is " + i + ", " + JSON.stringify(s));
                        }
                    };
                    s.send();
                });
            };
            t.instance = new t();
            return t;
        }());
        i.default = a;
        i.NetMgr = a.instance;
        cc._RF.pop();
    }, {
        "../util/GameFunc": "GameFunc",
        "crypto-js": "crypto-js",
        "enc-base64": "enc-base64"
    }],
    NormalWaveManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "d6ec4MrqcJLabTjcHZXvm+f", "NormalWaveManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.NormalWaveMgr = i.WaveInfo = i.BatchInfo = void 0;
        var r = t("../../../../../data/config/ConfigStageWaveData"), o = t("../../../../../data/manager/ConfigDataManager"), s = t("../EnemyManager"), c = t("../../../../../data/manager/StageDataContainer"), l = t("../BattleManager"), h = t("../../../../../frame/manager/FrameManager"), u = t("../EntityManager"), p = t("../../../../../config/GameEnum"), d = t("../PropManager"), f = t("../LootManager"), m = t("../../../../../frame/manager/BattleFlowManager"), g = t("../../../../../data/map/MapData"), _ = t("../MapManager"), y = t("../../../../../util/Tools"), v = t("../../../../../config/GameConst"), b = t("../SnakeManager"), M = t("../../../../../frame/manager/CameraManager"), S = t("../BossManager"), k = t("../GameRuleManager"), C = t("../../../../../util/GameFunc"), w = t("../../../map/enemy/MapLift"), A = function () {
            this.owner = -1;
            this.type = 1;
            this.typeParam = [];
            this.waveId = 0;
            this.typeId = 0;
            this.pointId = 0;
            this.batchId = 0;
            this.time = 0;
            this.index = 0;
            this.lootNum = [];
            this.lootArr = {};
            this.shakeRatio = 0;
        };
        i.BatchInfo = A;
        var T = function () {
            this.owner = -1;
            this.batchIndex = [];
            this.batchCount = 0;
        };
        i.WaveInfo = T;
        var D = function () {
            function t() {
                this.hasData = !1;
                this.delay = 0;
                this.stop = !1;
                this.create = !1;
                this.para = "";
                this.waveId = 0;
            }
            t.prototype.init = function (t) {
                if (t && t.prop && "" != t.prop) {
                    var e = t.prop.toString().split("&");
                    if (e.length > 2) {
                        this.hasData = !0;
                        this.waveId = t.waveId;
                        this.delay = t.delayTime;
                        this.stop = 1 == parseInt(e[0]);
                        this.create = 1 == parseInt(e[1]);
                        this.para = e[2];
                    } else {
                        this.hasData = !1;
                        y.DYTools.error("propdata error");
                    }
                } else this.hasData = !1;
            };
            return t;
        }(), P = function () {
            this.waveId = 0;
            this.liftFrontDict = {};
            this.liftBackDict = {};
        }, E = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._enabled = !1;
                e.m_stage = 1;
                e._pfLift = null;
                e.m_allData = null;
                e.m_curWaveDatas = [];
                e.m_waveInfos = [];
                e.m_batchInfos = [];
                e.m_curBatchDatas = [];
                e.m_waveCount = 0;
                e.m_isWaveFinish = !1;
                e.m_liftDataMap = new Map();
                e.m_liftMap = new Map();
                e.m_outDataMap = new Map();
                e.m_outAnimMap = new Map();
                e._isBossStage = !1;
                e._guidePause = !1;
                e.m_warnMap = new Map();
                e.m_warnTimeMap = new Map();
                e.m_warnPool = [];
                e.m_warnCount = 0;
                e.m_curPropWaveData = null;
                e.m_areaArr = [];
                e.m_areaFighting = !1;
                e.m_nextArea = null;
                e.m_curAreaId = -1;
                e.m_curArea = null;
                e.m_areaWaveId = -1;
                e.m_areaNextWaveData = null;
                e.m_waveLiftNumMap = new Map();
                e.m_areaTime = 0;
                e.m_bossData = null;
                e.m_curBoss = null;
                e.m_bossWaveIndex = 0;
                e.m_bossTime = 0;
                e.m_bossing = !1;
                e.m_totalEnemy = 0;
                return e;
            }
            e.prototype.addLoadingRes = function () {
                var t = l.BattleMgr.stageRange, e = ["stage_" + t.x + "-" + t.y];
                return [{
                    itemType: cc.TextAsset,
                    itemNames: e,
                    loadType: p.LoadType.All
                }, {
                    itemType: cc.Prefab,
                    itemNames: ["MapLift"],
                    loadType: p.LoadType.All
                }, {
                    itemType: sp.SkeletonData,
                    itemNames: ["spine_enemy_warning"],
                    loadType: p.LoadType.All
                }];
            };
            e.prototype.getInitTime = function () {
                return 50;
            };
            e.prototype.initData = function () {
                this._pfLift = h.FrameMgr.loadMgr.get("MapLift", cc.Prefab);
                var t = l.BattleMgr.stageRange, e = "stage_" + t.x + "-" + t.y;
                o.ConfigDataMgr.initJsonMapGenericWithLoaded("ConfigAllStageWaveData", e, r.ConfigAllStageWaveData, c.default);
                this.m_allData = o.ConfigDataMgr.getData("ConfigAllStageWaveData", l.BattleMgr.stage);
            };
            e.prototype.init = function (t) {
                void 0 === t && (t = l.BattleMgr.stage);
                this.m_stage = t;
                this.initPropData();
                this.initPointData();
                this.initAreaData();
                this.initBoss();
                this.initPointPool();
            };
            e.prototype.startBattleReady = function () {
                do {
                    if (!this.m_allData) break;
                    for (var t = [], e = 0; e < this.m_areaArr.length; e++) if (_ = this.m_areaArr[e]) for (var i = _.waveId; c = this.m_allData.waves[i++];) {
                        (n = new D()).init(c);
                        n.hasData && n.create && "" != n.para && t.push(n);
                    }
                    for (e = 0; e < t.length; e++) {
                        var n, a = (n = t[e]).stop ? n.waveId : 0;
                        d.PropMgr.addProp(n.para, a);
                    }
                } while (0);
                do {
                    if (!this.m_allData) break;
                    var r = [];
                    for (e = 0; e < this.m_areaArr.length; e++) {
                        if (_ = this.m_areaArr[e]) for (i = _.waveId; ;) {
                            var c;
                            if (!(c = this.m_allData.waves[i++])) break;
                            for (var l = 0; l < c.pointData.length; l++) {
                                var h = c.pointData[l];
                                0 == h.type && h.batches.length > 0 && r.push(h);
                            }
                        }
                        for (var p = 0; p < r.length; p++) {
                            var f = r[p], m = new A();
                            m.waveId = f.waveId;
                            m.type = f.type;
                            m.typeParam = f.typeParam;
                            m.typeId = f.typeId;
                            m.pointId = f.pointId;
                            m.shakeRatio = f.shake;
                            for (l = 0; l < f.batches.length; l++) {
                                var g = f.batches[l];
                                s.EnemyMgr.createWaveEnemy({
                                    enemyId: g.enemyId,
                                    hpRan: g.hpRan,
                                    speedRan: g.speedRan,
                                    scaleRan: g.scaleRan,
                                    info: m
                                }).setLootArr(f.lootArr);
                            }
                        }
                    }
                } while (0);
                this.m_liftMap.forEach(function (t) {
                    t.node.parent = u.EntityMgr.getEnemyLayer();
                    t.getIsStatic() || (t.node.active = !1);
                });
                if (this.m_curBoss && this.m_curBoss.arr) for (e = 0; e < this.m_curBoss.arr.length; e++) {
                    var _, y = (_ = this.m_curBoss.arr[e]).id, v = _.start, b = _.end;
                    if (o.ConfigDataMgr.getData("ConfigBossData", y).preCreate) {
                        var M = S.BossMgr.addBoss(y, v, b);
                        C.GFunc.addLog("boss pre : " + y + ", " + (M ? "true" : "null"));
                    }
                }
            };
            e.prototype.startBattle = function () {
                this.enabled = !0;
            };
            e.prototype.updateLogic = function (t) {
                if (this._enabled && !this._guidePause) {
                    var e = t / l.BattleMgr.timeScale;
                    this.updateArea(e);
                    this.updateWave(t);
                    this.updateBatch(t);
                    this.updateBoss(t);
                    this.updateWarn(e);
                }
            };
            e.prototype.initPointData = function () {
                var t = this;
                _.MapMgr.getLiftPointDatas().forEach(function (e) {
                    t.m_liftDataMap.set(e.id, e);
                });
                _.MapMgr.mapData.outArr.forEach(function (e) {
                    t.m_outDataMap.set(e.id, e);
                });
            };
            e.prototype.initPointPool = function () {
                var t = this;
                this.m_liftDataMap.forEach(function (e, i) {
                    var n = cc.instantiate(t._pfLift).getComponent(w.default);
                    n.create(e);
                    t.m_liftMap.set(i, n);
                    s.EnemyMgr.addSiblingEntity(n);
                });
            };
            e.prototype.initPropData = function () {
                this.m_curPropWaveData = new D();
            };
            e.prototype.isPropStopWave = function () {
                return d.PropMgr.hasStopWaveProp(this.m_areaWaveId) || f.LootMgr.hasStopWaveLoot(this.m_areaWaveId);
            };
            e.prototype.updateProp = function () {
                if (this.m_curPropWaveData.hasData && !this.m_curPropWaveData.create && this.m_areaTime >= this.m_curPropWaveData.delay) {
                    if ("" != this.m_curPropWaveData.para) {
                        var t = this.m_curPropWaveData.stop ? this.m_curPropWaveData.waveId : 0;
                        d.PropMgr.addProp(this.m_curPropWaveData.para, t);
                    }
                    this.m_curPropWaveData.hasData = !1;
                }
            };
            e.prototype.initAreaData = function () {
                for (var t = 0, e = _.MapMgr.mapData.area; t < e.length; t++) {
                    var i = e[t];
                    this.m_areaArr.push(i);
                }
                this.initFirstArea();
            };
            e.prototype.initFirstArea = function () {
                if (0 == this.m_areaArr.length) {
                    this.m_curArea = new g.MapAreaData();
                    this.m_curArea.id = 1;
                    this.m_curArea.waveId = 1;
                }
            };
            e.prototype.updateArea = function (t) {
                this.updateAreaState();
                this.updateProp();
                this.isPropStopWave() || this.updateAreaWave(t);
            };
            e.prototype.updateAreaState = function () {
                this.m_curArea || this.checkArriveNextArea();
                if (this.m_curArea) {
                    this.m_waveLiftNumMap.clear();
                    this.m_areaTime = 0;
                    this.m_curAreaId = this.m_curArea.id;
                    this.m_areaWaveId = this.m_curArea.waveId - 1;
                    this.m_areaFighting = !0;
                    s.EnemyMgr.letEnemysDie(this.m_curArea.rect);
                    _.MapMgr.setFenceShow(this.m_curAreaId);
                    this.m_curArea = null;
                    this.checkNextAreaWaveData();
                } else if (this.m_areaFighting && !this.m_areaNextWaveData && !this.m_curPropWaveData.hasData && 0 == this.m_curWaveDatas.length && 0 == this.m_curBatchDatas.length && s.EnemyMgr.isEnemyOver()) {
                    this.m_areaFighting = !1;
                    h.FrameMgr.noticeMgr.emit(p.EventTypeEnum.CameraMove, !0);
                    _.MapMgr.setFenceHide(this.m_curAreaId);
                    this.m_curAreaId = -1;
                }
            };
            e.prototype.updateAreaWave = function (t) {
                this.m_areaTime += t;
                var e = !1;
                if (this.m_areaNextWaveData) {
                    0 != this.m_curWaveDatas.length || 0 != this.m_curBatchDatas.length || s.EnemyMgr.hasEnemyAlive() || this.m_areaTime < this.m_areaNextWaveData.delayTime && (this.m_areaTime = this.m_areaNextWaveData.delayTime);
                    if (this.m_areaTime > this.m_areaNextWaveData.delayTime) {
                        var i = new T();
                        i.owner = this.m_areaNextWaveData.id;
                        for (var n = 0, a = this.m_areaNextWaveData.pointData.length; n < a; n++) {
                            var r = this.m_areaNextWaveData.pointData[n];
                            r.type > 0 && r.batches.length > 0 && i.batchIndex.push(0);
                        }
                        if (i.batchIndex.length > 0) {
                            this.m_curWaveDatas.push(this.m_areaNextWaveData);
                            this.m_waveInfos.push(i);
                            for (var o = this.m_areaNextWaveData, c = 0; c < o.pointData.length; c++) {
                                var l = o.pointData[c], h = i.batchIndex[c], u = l.batches;
                                if (2 == l.type && u[h]) {
                                    var p = this.m_waveLiftNumMap.get(o.waveId);
                                    p || ((p = new P()).waveId = o.waveId);
                                    if ((s.EnemyMgr.getPointData(l.pointId).y - this.m_liftDataMap.get(l.typeId).y > 0 ? 1 : -1) <= 0) {
                                        var d = p.liftFrontDict[l.typeId];
                                        d || (d = 0);
                                        p.liftFrontDict[l.typeId] = d + 1;
                                    } else {
                                        var f = p.liftBackDict[l.typeId];
                                        f || (f = 0);
                                        p.liftBackDict[l.typeId] = f + 1;
                                    }
                                    this.m_waveLiftNumMap.set(o.waveId, p);
                                }
                            }
                        } else y.DYTools.warn("no enemy", this.m_curAreaId, this.m_areaWaveId);
                        e = !0;
                    }
                    e && (this.m_curPropWaveData.hasData || this.checkNextAreaWaveData());
                }
            };
            e.prototype.checkArriveNextArea = function () {
                if (this.m_areaFighting || 0 == this.m_areaArr.length) return !1;
                this.m_nextArea || this.checkNextArea();
                if (this.m_nextArea) {
                    var t = Math.abs(this.m_nextArea.x - v.GValue.BattleCameraNode.x), e = Math.abs(this.m_nextArea.y - v.GValue.BattleCameraNode.y);
                    if (t <= this.m_nextArea.width / 2 && e <= this.m_nextArea.height / 2) {
                        this.m_curArea = this.m_nextArea;
                        this.m_nextArea = null;
                        this.m_areaArr.splice(0, 1);
                        return !0;
                    }
                }
                return !1;
            };
            e.prototype.checkNextArea = function () {
                if (0 == this.m_areaArr.length) {
                    this.m_nextArea = null;
                    this.m_areaWaveId = 0;
                    return !1;
                }
                this.m_nextArea = this.m_areaArr[0];
                return !0;
            };
            e.prototype.checkNextAreaWaveData = function () {
                this.m_areaWaveId++;
                var t = null;
                this.m_allData && (t = this.m_allData.waves[this.m_areaWaveId]);
                if (t) {
                    this.m_areaNextWaveData = t;
                    this.m_curPropWaveData.init(t);
                    this.m_curPropWaveData.create && (this.m_curPropWaveData.hasData = !1);
                    this.m_waveCount++;
                } else {
                    this.m_areaNextWaveData = null;
                    this.checkWaveFinish();
                }
            };
            e.prototype.updateWave = function () {
                for (var t = 0; t < this.m_curWaveDatas.length; t++) {
                    for (var e = this.m_curWaveDatas[t], i = this.m_waveInfos[t], n = this.m_areaTime - e.delayTime, a = !0, r = 0; r < e.pointData.length; r++) {
                        for (var o = e.pointData[r], s = i.batchIndex[r], c = o.batches; c[s] && n >= c[s].delay;) {
                            var l = c[s], h = this.m_warnCount++, u = new A();
                            u.owner = i.owner;
                            u.waveId = e.waveId;
                            u.type = o.type;
                            u.typeParam = o.typeParam;
                            u.typeId = o.typeId;
                            u.pointId = o.pointId;
                            u.batchId = s;
                            u.onlyId = [h];
                            u.shakeRatio = o.shake;
                            for (var p = 0; p < o.lootArr.length; p++) for (var d = o.lootArr[p], f = 0; f < d.y; f++) {
                                var m = y.DYTools.random_int(0, l.num - 1), g = u.lootArr[m];
                                if (!g) {
                                    g = [];
                                    u.lootArr[m] = g;
                                }
                                for (var _ = !1, v = 0; v < g.length; v++) {
                                    var b = g[v];
                                    if (b.x == d.x) {
                                        b.y += 1;
                                        _ = !0;
                                    }
                                }
                                _ || g.push(cc.v2(d.x, 1));
                            }
                            this.addBatch(o, l, u);
                            s++;
                        }
                        i.batchIndex[r] = s;
                        s < c.length && (a = !1);
                    }
                    if (a) {
                        this.m_curWaveDatas.splice(t, 1);
                        this.m_waveInfos.splice(t, 1);
                        t--;
                    }
                }
            };
            e.prototype.addBatch = function (t, e, i) {
                switch (i.type) {
                    case 1:
                        var n = s.EnemyMgr.getPointData(t.pointId), a = cc.v3(n.x, n.y, 0);
                        this.addAutoEnemyWarning(a, e.warnTime);
                        break;

                    case 2:
                        var r = this.m_liftDataMap.get(t.typeId), o = this.m_liftMap.get(r.id);
                        if (!o) {
                            var c = cc.instantiate(this._pfLift);
                            c.parent = u.EntityMgr.getEnemyLayer();
                            o = c.getComponent(w.default);
                            c.position = cc.v3(r.x, r.y);
                            c.scaleX = r.scaleX;
                            this.m_liftMap.set(r.id, o);
                            s.EnemyMgr.addSiblingEntity(o);
                        }
                        o.node.active = !0;
                        o.pointChange(1);
                        i.owner = t.pointId;
                        o.setState(p.LiftState.Enter);
                }
                this.m_batchInfos.push(i);
                this.m_curBatchDatas.push(e);
            };
            e.prototype.updateBatch = function (t) {
                for (var e = 0; e < this.m_curBatchDatas.length; e++) {
                    var i = this.m_curBatchDatas[e], n = this.m_batchInfos[e];
                    n.time += t;
                    for (var a = function () {
                        var t = null;
                        switch (n.type) {
                            case 1:
                                r._createNormalEnemy(n, i);
                                break;

                            case 2:
                                t = r._createLiftEnemy(n, i);
                                break;

                            case 3:
                                r._createOutEnemy(n, i);
                                break;

                            case 4:
                                r._createAnimEnemy(n, i);
                        }
                        n.index++;
                        if (r._checkBatchEnd(n, i)) {
                            r.m_curBatchDatas.splice(e, 1);
                            r.m_batchInfos.splice(e, 1);
                            r.checkWaveFinish();
                            var a = r.m_waveLiftNumMap.get(n.waveId);
                            if (a && t) {
                                var o = t[0];
                                if (t[2]) {
                                    var s = a.liftFrontDict[o.getId()];
                                    s--;
                                    a.liftFrontDict[o.getId()] = s;
                                    0 == s && o.scheduleOnce(function () {
                                        o.setState(p.LiftState.Close, !0);
                                    }, t[1] + .5);
                                } else {
                                    s = a.liftBackDict[o.getId()];
                                    s--;
                                    a.liftBackDict[o.getId()] = s;
                                    0 == s && o.scheduleOnce(function () {
                                        o.setState(p.LiftState.Close, !1);
                                    }, t[1] + .5);
                                }
                            }
                            e--;
                            return "break";
                        }
                    }, r = this; n.index < i.num && n.time >= i.perDelay * n.index && "break" !== a(););
                }
            };
            e.prototype._createNormalEnemy = function (t, e) {
                s.EnemyMgr.createWaveEnemy({
                    enemyId: e.enemyId,
                    hpRan: e.hpRan,
                    speedRan: e.speedRan,
                    scaleRan: e.scaleRan,
                    info: t
                }).startBattle();
            };
            e.prototype._createLiftEnemy = function (t, e) {
                var i = 0, n = this.m_liftMap.get(t.typeId), a = s.EnemyMgr.createWaveEnemy({
                    enemyId: e.enemyId,
                    hpRan: e.hpRan,
                    speedRan: e.speedRan,
                    scaleRan: e.scaleRan,
                    info: t
                });
                a.moveController.enabled = !1;
                a.node.opacity = 0;
                a.isActive = !1;
                var r = s.EnemyMgr.getPointData(t.pointId), o = this.getEnemyTargetPos(r), c = n.node, l = c.scaleX > 0 ? 1 : -1, h = o.y - c.y > 0 ? 1 : -1;
                n.setState(p.LiftState.Open, r.y <= c.y) && (i = .7);
                n.scheduleOnce(function () {
                    a.node.opacity = 255;
                    var t = c.position.add(cc.v3(-47 * l, 12 * h));
                    a.node.position = t;
                    a.addEnterComp(2, null, o, null);
                }, i);
                return [n, i, r.y <= c.y];
            };
            e.prototype._createOutEnemy = function (t, e) {
                var i = s.EnemyMgr.createWaveEnemy({
                    enemyId: e.enemyId,
                    hpRan: e.hpRan,
                    speedRan: e.speedRan,
                    scaleRan: e.scaleRan,
                    info: t
                }), n = this.m_outDataMap.get(t.typeId), a = i.node.position;
                if (n) {
                    a.x = n.x;
                    a.y = n.y;
                } else y.DYTools.error("no out data", t.typeId, t.waveId, this.m_stage);
                i.node.position = a;
                var r = this.getEnemyTargetPos(s.EnemyMgr.getPointData(t.pointId)), o = t.typeParam[0] ? t.typeParam[0] : .8, c = cc.misc.lerp(a.x, r.x, y.DYTools.random_int(5, 7) / 10), l = r.y - a.y > 300 ? r.y + y.DYTools.random_int(100, 200) : a.y + y.DYTools.random_int(200, 350), h = i.addEnterComp(3, n, [o, c, l, a.x, a.y, r.x, r.y, i.uiData.enterScale, i.uiData.enterLandImage, i.uiData.enterLandCount], function () {
                    h.enabled = !1;
                    i.startBattle();
                });
                this.addAutoEnemyWarning(r, o);
            };
            e.prototype._createAnimEnemy = function (t, e) {
                s.EnemyMgr.createWaveEnemy({
                    enemyId: e.enemyId,
                    hpRan: e.hpRan,
                    speedRan: e.speedRan,
                    scaleRan: e.scaleRan,
                    info: t
                }).addEnterComp(4, s.EnemyMgr.getPointData(t.pointId), t.typeParam, function () { });
            };
            e.prototype._checkBatchEnd = function (t, e) {
                if (t.index >= e.num) {
                    if (2 == t.type) {
                        var i = this.m_liftMap.get(t.typeId);
                        if (i) {
                            i.pointChange(-1);
                            i.getPointCount() <= 0 && (i.getIsStatic() || cc.tween(i.node).delay(1).call(function () {
                                i.setState(p.LiftState.Hide);
                            }).delay(.6).call(function () {
                                i.stopAnim();
                                i.node.active = !1;
                            }).start());
                        }
                    }
                    return !0;
                }
                return !1;
            };
            e.prototype.checkWaveFinish = function () {
                0 != this.m_areaArr.length || this.m_areaNextWaveData || 0 != this.m_curWaveDatas.length || 0 != this.m_curBatchDatas.length || this.m_curPropWaveData.hasData || (this.m_isWaveFinish = !0);
            };
            e.prototype.getEnemyTargetPos = function (t) {
                var e = cc.Vec3.ZERO;
                t ? e = t.width || t.height ? cc.v3(t.x + (Math.random() - .5) * t.width, t.y + (Math.random() - .5) * t.height, 0) : cc.v3(t.x, t.y, 0) : cc.error("没有升降机怪物创建点的数据");
                return e;
            };
            e.prototype.initBoss = function () {
                this._isBossStage = l.BattleMgr.gameType == p.GameType.Boss;
                if (this._isBossStage) {
                    this.m_bossWaveIndex = 0;
                    this.m_bossData = _.MapMgr.mapData.boss;
                    this.m_curBoss = this.m_bossData.arr[this.m_bossWaveIndex];
                }
            };
            e.prototype.updateBoss = function (t) {
                var e = this;
                if (this._isBossStage && this.m_bossData) if (this.m_curBoss && !this.m_bossing) {
                    b.SnakeMgr.getPlayerPos().y > this.m_bossData.pos.y && (this.m_bossTime = 10);
                    this.m_bossTime += t;
                    if (this.m_bossTime > 5) {
                        this.m_bossing = !0;
                        M.CameraMgr.enabled = !1;
                        k.GameRuleMgr.gameBreak();
                        var i = [], n = [], a = !1;
                        h.FrameMgr.noticeMgr.emit(p.EventTypeEnum.BossEnter, function () {
                            if (i.length > 0) for (var t = 0; t < i.length; t++) i[t].startEnter(t == i.length - 1, n[t]); else a = !0;
                        });
                        C.GFunc.addLog("boss camera focus:" + this.m_curBoss.id);
                        M.CameraMgr.cameraFocus(this.m_bossData.camera, function () {
                            for (var t = 0; t < e.m_curBoss.arr.length; t++) {
                                var r = e.m_curBoss.arr[t], s = r.id, c = r.start, l = r.end;
                                if (o.ConfigDataMgr.getData("ConfigBossData", s).type == p.BossType.Normal); else {
                                    var u = S.BossMgr.addBoss(s, c, l);
                                    C.GFunc.addLog("boss create : " + s + ", " + (u ? "true" : "null"));
                                    if (a) {
                                        u.startEnter();
                                        C.GFunc.addLog("boss startEnter");
                                    }
                                    i.push(u);
                                }
                                n.push(s);
                            }
                            h.FrameMgr.noticeMgr.emit(p.EventTypeEnum.BossCutHp);
                            e.m_curBoss = null;
                            e.m_bossing = !1;
                            e.m_bossWaveIndex++;
                        });
                    }
                } else !this.m_bossing && S.BossMgr.isBossOver() && s.EnemyMgr.isEnemyOver() && (this.m_bossWaveIndex < this.m_bossData.arr.length ? this.m_curBoss = this.m_bossData.arr[this.m_bossWaveIndex] : this.m_bossData = null);
            };
            e.prototype.getBossId = function () {
                return this.m_curBoss ? this.m_curBoss.id : -1;
            };
            e.prototype.addAutoEnemyWarning = function (t, e) {
                var i = this.m_warnCount++;
                this.addEnemyWarning(i, t, !0, e);
            };
            e.prototype.addEnemyWarning = function (t, e, i, n) {
                void 0 === i && (i = !1);
                void 0 === n && (n = 1);
                if (!(n < .3)) {
                    var a = this.m_warnPool.pop();
                    if (!a) {
                        a = new cc.Node("enemy_warn");
                        u.EntityMgr.addShadow(a);
                        var r = a.addComponent(sp.Skeleton);
                        r.skeletonData = h.FrameMgr.loadMgr.get("spine_enemy_warning", sp.SkeletonData);
                        r.premultipliedAlpha = !1;
                        r.setCompleteListener(function (t) {
                            var e = t.animation ? t.animation.name : "";
                            "idle" == e ? r.setAnimation(0, "play", !0) : "idle2" == e && r.setAnimation(0, "play2", !0);
                        });
                    }
                    a.active = !0;
                    a.opacity = 255;
                    a.position = e;
                    this.m_warnMap.set(t, a);
                    a.getComponent(sp.Skeleton).setAnimation(0, "idle", !1);
                    i && this.m_warnTimeMap.set(t, n);
                }
            };
            e.prototype.removeEnemyWarning = function (t) {
                var e = this, i = this.m_warnMap.get(t);
                if (i) {
                    i.stopAllActions();
                    cc.tween(i).to(.3, {
                        opacity: 0
                    }).call(function () {
                        i.active = !1;
                        e.m_warnPool.push(i);
                    }).start();
                    this.m_warnMap.delete(t);
                }
            };
            e.prototype.updateWarn = function (t) {
                var e = this;
                this.m_warnTimeMap.forEach(function (i, n) {
                    i -= t;
                    e.m_warnTimeMap.set(n, i);
                    if (i <= 0) {
                        e.removeEnemyWarning(n);
                        e.m_warnTimeMap.delete(n);
                    }
                });
            };
            Object.defineProperty(e.prototype, "enabled", {
                get: function () {
                    return this._enabled;
                },
                set: function (t) {
                    this._enabled = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "guidePause", {
                set: function (t) {
                    this._guidePause = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "allData", {
                get: function () {
                    return this.m_allData;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "waveFinish", {
                get: function () {
                    return this.m_isWaveFinish && !this.m_bossData;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "haveCurWave", {
                get: function () {
                    return 0 != this.m_curWaveDatas.length;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.clear = function () {
                this.priority = -1;
                o.ConfigDataMgr.clearData("ConfigAllStageWaveData", !1);
                this.enabled = !1;
                this.m_stage = 0;
                this._enabled = !1;
                this.m_isWaveFinish = !1;
                y.DYTools.clearArrayForNode(this.m_warnPool);
                y.DYTools.clearMapForNode(this.m_warnMap);
                this.m_warnTimeMap.clear();
                this.m_waveCount = 0;
                this.m_waveInfos = [];
                this.m_curWaveDatas = [];
                this.m_batchInfos = [];
                this.m_curBatchDatas = [];
                this.m_liftDataMap.clear();
                y.DYTools.clearMapForComp(this.m_liftMap);
                this.m_areaArr.splice(0);
                this.m_areaFighting = !1;
                this.m_nextArea = null;
                this.m_curAreaId = -1;
                this.m_curArea = null;
                this.m_areaWaveId = -1;
                this.m_areaNextWaveData = null;
                this.m_areaTime = 0;
                this.m_curPropWaveData = null;
                this.m_waveLiftNumMap.clear();
                this._isBossStage = !1;
                this.m_bossTime = 0;
                this.m_bossing = !1;
                this.m_curBoss = null;
                this.m_bossData = null;
                this.m_bossWaveIndex = 0;
                this._guidePause = !1;
                this.m_totalEnemy = 0;
            };
            e.prototype.getCurWaveId = function () {
                return this.m_waveCount;
            };
            e.prototype.getTotalWaveEnemy = function () {
                if (this.m_totalEnemy > 0) return this.m_totalEnemy;
                var t = 0;
                if (this.m_allData) {
                    var e = this.m_allData.waves;
                    if (e) for (var i in e) for (var n = 0, a = e[i].pointData; n < a.length; n++) for (var r = 0, o = a[n].batches; r < o.length; r++) t += o[r].num;
                }
                this.m_totalEnemy = t;
                return t;
            };
            e.prototype.getEnemyGoldTotalWeight = function () {
                var t = 0;
                if (this.m_allData) {
                    var e = this.m_allData.waves;
                    if (e) for (var i in e) for (var n = 0, a = e[i].pointData; n < a.length; n++) for (var r = 0, s = a[n].batches; r < s.length; r++) {
                        var c = s[r], l = o.ConfigDataMgr.getData("ConfigEnemyData", c.enemyId);
                        t += c.num * l.gold;
                    }
                }
                return t;
            };
            e.instance = new e();
            return e;
        }(m.BattleFlowBase);
        i.default = E;
        i.NormalWaveMgr = E.instance;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/config/ConfigStageWaveData": "ConfigStageWaveData",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../data/manager/StageDataContainer": "StageDataContainer",
        "../../../../../data/map/MapData": "MapData",
        "../../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../../frame/manager/CameraManager": "CameraManager",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../util/GameFunc": "GameFunc",
        "../../../../../util/Tools": "Tools",
        "../../../map/enemy/MapLift": "MapLift",
        "../BattleManager": "BattleManager",
        "../BossManager": "BossManager",
        "../EnemyManager": "EnemyManager",
        "../EntityManager": "EntityManager",
        "../GameRuleManager": "GameRuleManager",
        "../LootManager": "LootManager",
        "../MapManager": "MapManager",
        "../PropManager": "PropManager",
        "../SnakeManager": "SnakeManager"
    }],
    NoticeManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1ad2agVGAFHp6bpPsnZMTxq", "NoticeManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.NoticeMgr = void 0;
        var n = t("../../util/Tools"), a = function () {
            function t() {
                this.listeners = new Map();
                this.onces = [];
            }
            t.prototype.reset = function () {
                this.listeners.clear();
                this.onces.splice(0);
            };
            t.prototype.on = function (t, e, i, n) {
                this.listeners.get(t) || this.listeners.set(t, []);
                n && this._checkOnly(t, i);
                this.listeners.get(t).push({
                    callback: e,
                    target: i
                });
            };
            t.prototype.once = function (t, e, i, n) {
                var a = this;
                this.listeners.get(t) || this.listeners.set(t, []);
                n && this._checkOnly(t, i);
                var r = function (t) {
                    i ? e.call(i, t) : e(t);
                    a.onces.push({
                        callback: r,
                        target: null
                    });
                };
                this.listeners.get(t).push({
                    callback: r,
                    target: null
                });
            };
            t.prototype.off = function (t, e, i) {
                var n = this.listeners.get(t);
                if (n && n.length > 0) {
                    for (var a = -1, r = 0; r < n.length; r++) if (n[r].callback == e && n[r].target == i) {
                        a = r;
                        break;
                    }
                    a >= 0 && n.splice(a, 1);
                }
            };
            t.prototype.deleteForTarget = function (t) {
                var e = this;
                this.listeners.forEach(function (i, n) {
                    if (i && i.length > 0) {
                        for (var a = 0; a < i.length; a++) if (i[a].target != t); else {
                            i.splice(a, 1);
                            a--;
                        }
                        0 == i.length && e.listeners.delete(n);
                    }
                });
            };
            t.prototype.emit = function (t, e) {
                var i = this.listeners.get(t);
                i && i.length > 0 && i.forEach(function (i) {
                    try {
                        i.target ? i.callback.call(i.target, e) : i.callback(e);
                    } catch (e) {
                        n.DYTools.error("notice emit err", t);
                    }
                });
                for (; this.onces.length > 0;) {
                    var a = this.onces.pop();
                    this.off(t, a.callback, a.target);
                }
            };
            t.prototype.delete = function (t) {
                this.listeners.delete(t);
            };
            t.prototype._checkOnly = function (t, e) {
                for (var i = this.listeners.get(t), n = 0; n < i.length; n++) {
                    var a = i[n];
                    if (a.target && a.target == e) {
                        i.splice(n, 1);
                        n--;
                    }
                }
            };
            t.instance = new t();
            return t;
        }();
        i.default = a;
        i.NoticeMgr = a.instance;
        cc._RF.pop();
    }, {
        "../../util/Tools": "Tools"
    }],
    PauseNode: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "8189dE80w5ETrh9vTRDNi6v", "PauseNode");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../frame/manager/FrameManager"), s = t("../../../../../frame/ui/UIComponent"), c = t("../../../../battle/manager/battle/BattleManager"), l = t("../../../../battle/manager/battle/GameRuleManager"), h = cc._decorator, u = h.ccclass, p = h.property, d = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.atlas = null;
                e.btn1Spr = null;
                e.btn2Spr = null;
                e.m_backing = !1;
                return e;
            }
            e.prototype.start = function () {
                o.FrameMgr.languageMgr.setImage(this.btn1Spr, this.atlas, "pause_btn1");
                o.FrameMgr.languageMgr.setImage(this.btn2Spr, this.atlas, "pause_btn2");
            };
            e.prototype.onBattleReturnClick = function () {
                c.BattleMgr.pauseUI.node.active = !1;
                l.GameRuleMgr.gameResume();
            };
            e.prototype.onBattleHomeClick = function () {
                if (!this.m_backing) {
                    this.m_backing = !0;
                    c.BattleMgr.quitBattle();
                }
            };
            r([p(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            r([p(cc.Sprite)], e.prototype, "btn1Spr", void 0);
            r([p(cc.Sprite)], e.prototype, "btn2Spr", void 0);
            return r([u], e);
        }(s.default);
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../../battle/manager/battle/GameRuleManager": "GameRuleManager"
    }],
    PlatformBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b5b83nUK6VPsYm9eb0bdiyX", "PlatformBase");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var n = t("../config/GameEnum"), a = function () {
            function t() {
                this.m_type = n.PlatFormType.Local;
            }
            t.prototype.init = function () { };
            t.prototype.copyToClipboard = function () {
                return 0;
            };
            t.prototype.virbrate = function () { };
            t.prototype.getRefreshRate = function () {
                return 60;
            };
            t.prototype.playRewardAd = function () { };
            t.prototype.showBanner = function () { };
            t.prototype.hideBanner = function () { };
            t.prototype.playInterstitialAd = function () { };
            t.prototype.playSplashAd = function () { };
            t.prototype.hideAdLoadingForTimeOut = function () { };
            t.prototype.sendReport = function () { };
            t.prototype.sendReportTest = function () { };
            t.prototype.sendReportRegister = function () { };
            return t;
        }();
        i.default = a;
        cc._RF.pop();
    }, {
        "../config/GameEnum": "GameEnum"
    }],
    PlatformManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c1f05tFOrNLE65Z61MSeayo", "PlatformManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.PlatformMgr = void 0;
        var n = t("../data/storage/GameData"), a = t("./IosPlatform"), r = function () {
            function t() {
                this.m_platform = null;
                this.rewardAdId = 0;
                this.rewardAdSucCall = null;
                this.rewardAdFailCall = null;
            }
            t.prototype.init = function () {
                cc.sys.os == cc.sys.OS_ANDROID && cc.sys.isNative || cc.sys.os == cc.sys.OS_IOS && cc.sys.isNative && (this.m_platform = new a.default());
            };
            t.prototype.copy = function (t) {
                return !!this.m_platform && 0 == this.m_platform.copyToClipboard(t);
            };
            t.prototype.virbrate = function (t) {
                this.m_platform && this.m_platform.virbrate(t);
            };
            t.prototype.getRefreshRate = function () {
                return this.m_platform ? this.m_platform.getRefreshRate() : 60;
            };
            t.prototype.onExitGame = function (t) {
                t && cc.game.end();
            };
            t.prototype.playRewardAd = function (t, e, i) {
                this.rewardAdId = t;
                this.rewardAdSucCall = e;
                this.rewardAdFailCall = i;
                this.m_platform && this.m_platform.playRewardAd(t);
            };
            t.prototype.onRewardAdOver = function (t) {
                if (t) {
                    if (this.rewardAdSucCall) {
                        this.rewardAdSucCall();
                        this.rewardAdSucCall = null;
                    }
                } else if (this.rewardAdFailCall) {
                    this.rewardAdFailCall();
                    this.rewardAdFailCall = null;
                }
            };
            t.prototype.onRewardPlay = function () { };
            t.prototype.showBanner = function () {
                this.m_platform && this.m_platform.showBanner();
            };
            t.prototype.hideBanner = function () {
                this.m_platform && this.m_platform.hideBanner();
            };
            t.prototype.playInterstitialAd = function () {
                this.m_platform && this.m_platform.playInterstitialAd();
            };
            t.prototype.playSplashAd = function () {
                this.m_platform && this.m_platform.playSplashAd();
            };
            t.prototype.hideAdLoadingForTimeOut = function () {
                this.m_platform && this.m_platform.hideAdLoadingForTimeOut();
            };
            t.prototype.sendReport = function (t, e) {
                this.m_platform && this.m_platform.sendReport(t, e);
            };
            t.prototype.sendReportTest = function () {
                this.m_platform && this.m_platform.sendReportTest();
            };
            t.prototype.sendReportRegister = function (t, e) {
                void 0 === e && (e = !0);
            };
            t.prototype.checkIsNewPlayer = function () {
                n.GData.getIsNewPlayer() && n.GData.setIsNewPlayer(!1);
            };
            t.instance = new t();
            return t;
        }();
        i.default = r;
        i.PlatformMgr = r.instance;
        window.PlatformMgr = i.PlatformMgr;
        cc._RF.pop();
    }, {
        "../data/storage/GameData": "GameData",
        "./IosPlatform": "IosPlatform"
    }],
    PlayerData: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "8b203dhTlREV5AvRt9T/k4v", "PlayerData");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.SkillData = i.PlayerData = void 0;
        i.PlayerData = function () {
            this.maxBodyLength = 0;
            this.initBodyLength = 0;
            this.initHp = 0;
            this.colliderAtk = 0;
            this.attack = 0;
            this.nowHp = 0;
            this.reviveNoHurt = 3;
            this.hurtNoHurt = 1;
            this.curAttack = 0;
            this.fireSpeddRatio = 1;
            this.critProb = 0;
            this.critAtkRatio = 0;
            this.critAttack = 0;
            this.circleAtk = 0;
            this.circleCD = 0;
            this.circleNum = 100;
            this.skillAtk = 0;
            this.skillCD = 0;
            this.skillParam = [];
            this.skillCritProb = 0;
            this.skillCritAtkRatio = 0;
            this.skillAddNormalAtk = 0;
            this.bodyGold = 0;
        };
        i.SkillData = function () { };
        cc._RF.pop();
    }, {}],
    PolyColliderComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e61d7sv5g5G2rZGg3Qif1XU", "PolyColliderComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../config/GameEnum"), o = t("../../../util/Tools"), s = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_type = r.ColliderType.Polygon;
                e.m_points = [];
                e.m_rect = new cc.Rect();
                return e;
            }
            e.prototype.init = function (e, i, n) {
                this.initBase(i, n);
                t.prototype.init.call(this, e, i, n);
                if (e.length > 3) {
                    this.m_offset.x = e[0];
                    this.m_offset.y = e[1];
                    this.m_rect.x = this.m_offset.x - e[2] / 2;
                    this.m_rect.y = this.m_offset.y - e[3] / 2;
                    this.m_rect.width = e[2];
                    this.m_rect.height = e[3];
                    this.m_points.splice(0);
                    this.m_points.push(cc.Vec2.ZERO);
                    this.m_points.push(cc.Vec2.ZERO);
                    this.m_points.push(cc.Vec2.ZERO);
                    this.m_points.push(cc.Vec2.ZERO);
                } else o.DYTools.error("rect colider data error", JSON.stringify(e));
            };
            e.prototype.onEnable = function () {
                this.draw();
                this.updateLogic(0);
            };
            e.prototype.changeData = function (t) {
                if (t.length > 3) {
                    this.m_offset.x = t[0];
                    this.m_offset.y = t[1];
                    this.m_rect.x = this.m_offset.x - t[2] / 2;
                    this.m_rect.y = this.m_offset.y - t[3] / 2;
                    this.m_rect.width = t[2];
                    this.m_rect.height = t[3];
                }
            };
            Object.defineProperty(e.prototype, "data", {
                get: function () {
                    return this.m_rect;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "points", {
                get: function () {
                    return this.m_points;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.updateLogic = function () {
                if (this.node) {
                    var t = this.node.x + this.m_offset.x, e = this.node.y + this.m_offset.y;
                    this.m_rect.x = t - .5 * this.m_rect.width;
                    this.m_rect.y = e - .5 * this.m_rect.height;
                    var i = cc.misc.degreesToRadians(this.node.angle), n = this.getPositionByAngle(cc.v2(this.m_rect.width / 2, this.m_rect.height / 2), i), a = this.getPositionByAngle(cc.v2(-this.m_rect.width / 2, this.m_rect.height / 2), i), r = this.getPositionByAngle(cc.v2(-this.m_rect.width / 2, -this.m_rect.height / 2), i), o = this.getPositionByAngle(cc.v2(this.m_rect.width / 2, -this.m_rect.height / 2), i);
                    this.m_points[0].x = n.x + t;
                    this.m_points[0].y = n.y + e;
                    this.m_points[1].x = a.x + t;
                    this.m_points[1].y = a.y + e;
                    this.m_points[2].x = r.x + t;
                    this.m_points[2].y = r.y + e;
                    this.m_points[3].x = o.x + t;
                    this.m_points[3].y = o.y + e;
                }
            };
            e.prototype.getPositionByAngle = function (t, e) {
                return t.rotate(e);
            };
            e.prototype.draw = function () {
                var t = this.node.addComponent(cc.BoxCollider);
                t.size.width = this.m_rect.width / this.node.scaleX;
                t.size.height = this.m_rect.height / this.node.scaleY;
                t.offset.x = this.m_offset.x / this.node.scaleX;
                t.offset.y = this.m_offset.y / this.node.scaleY;
            };
            return e;
        }(t("./ColliderComp").default);
        i.default = s;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../../../util/Tools": "Tools",
        "./ColliderComp": "ColliderComp"
    }],
    PoolBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b9302tR+DpJyY4OzLMEfu8m", "PoolBase");
        var n = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, a = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../frame/manager/FrameManager"), o = t("../../../util/Tools"), s = function () {
            function t(t) {
                this.poolTemp = [];
                this._assetName = "";
                this._assetName = t;
                this.poolTemp = [];
            }
            t.prototype.loadAssets = function () {
                return n(this, void 0, Promise, function () {
                    return a(this, function (t) {
                        switch (t.label) {
                            case 0:
                                if (!this._assetName) {
                                    o.DYTools.error("assetName", this._assetName);
                                    return [2];
                                }
                                return [4, r.FrameMgr.loadMgr.loadAsync(this._assetName, cc.Prefab)];

                            case 1:
                                t.sent();
                                return [2];
                        }
                    });
                });
            };
            t.prototype._createNew = function (t, e) {
                if (!this._assetName) {
                    o.DYTools.error("assetName", this._assetName);
                    return null;
                }
                var i = r.FrameMgr.loadMgr.get(this._assetName, cc.Prefab);
                if (!i) {
                    o.DYTools.error("prefab", i, this._assetName, "未加载");
                    return null;
                }
                var n = cc.instantiate(i), a = n.getComponent(t);
                a || (a = n.addComponent(t));
                n.parent = e;
                a.preLoad && a.preLoad();
                return a;
            };
            t.prototype.preCreate = function (t, e, i) {
                for (var n = 0; n < t; n++) {
                    var a = this._createNew(e, i);
                    this.delete(a);
                }
            };
            t.prototype.get = function (t, e) {
                if (this.poolTemp.length > 0) {
                    var i = this.poolTemp.pop();
                    i.node.active = !0;
                    return i;
                }
                return this._createNew(t, e);
            };
            t.prototype.delete = function (t) {
                t.node.active = !1;
                this.poolTemp.push(t);
            };
            t.prototype.getAll = function () {
                return this.poolTemp;
            };
            t.prototype.getCount = function () {
                return this.poolTemp ? this.poolTemp.length : 0;
            };
            t.prototype.clear = function (t) {
                void 0 === t && (t = !1);
                this.poolTemp.forEach(function (t) {
                    cc.isValid(t.node) && t.node.destroy();
                });
                this.poolTemp = [];
                t && r.FrameMgr.loadMgr.release(this._assetName, cc.Prefab);
            };
            return t;
        }();
        i.default = s;
        cc._RF.pop();
    }, {
        "../../../frame/manager/FrameManager": "FrameManager",
        "../../../util/Tools": "Tools"
    }],
    PoolManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "4bac6tqsR9KOruI5x7Un481", "PoolManager");
        var n = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, a = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.PoolMgr = void 0;
        var r = t("../../logic/battle/pool/PoolBase"), o = function () {
            function t() {
                this.m_poolMap = new Map();
            }
            t.prototype.clear = function () {
                this.m_poolMap.forEach(function (t) {
                    t.clear();
                });
                this.m_poolMap.clear();
            };
            t.prototype.clearPool = function (t, e) {
                void 0 === e && (e = !1);
                var i = this.m_poolMap.get(t);
                if (i) {
                    i.clear(e);
                    this.m_poolMap.delete(t);
                }
            };
            t.prototype.initPool = function (t, e) {
                void 0 === e && (e = t);
                return n(this, void 0, void 0, function () {
                    var i;
                    return a(this, function (n) {
                        switch (n.label) {
                            case 0:
                                i = new r.default(t);
                                this.m_poolMap.set(e, i);
                                return [4, i.loadAssets()];

                            case 1:
                                n.sent();
                                return [2];
                        }
                    });
                });
            };
            t.prototype.initPoolWithLoaded = function (t, e, i, n, a) {
                void 0 === e && (e = t);
                var o = this.getPool(e);
                if (!o) {
                    o = new r.default(t);
                    this.m_poolMap.set(e, o);
                }
                n && i && (i = o.getCount() - i) > 0 && o.preCreate(i, n, a);
            };
            t.prototype.getPool = function (t) {
                return this.m_poolMap.get(t);
            };
            t.prototype.get = function (t, e, i) {
                return this.m_poolMap.get(t).get(e, i);
            };
            t.prototype.put = function (t, e) {
                var i = this.m_poolMap.get(t);
                i && i.delete(e);
            };
            t.instance = new t();
            return t;
        }();
        i.default = o;
        i.PoolMgr = o.instance;
        cc._RF.pop();
    }, {
        "../../logic/battle/pool/PoolBase": "PoolBase"
    }],
    PopupBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "65042RDlZpMeajS1RFBtKHs", "PopupBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./UIComponent"), s = cc._decorator, c = s.ccclass, l = s.property, h = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.background = null;
                e.main = null;
                e.blocker = null;
                e.animTime = .3;
                e.options = null;
                e.finishCallback = null;
                return e;
            }
            e.prototype.onShow = function () { };
            e.prototype.onHide = function (t) {
                void 0 === t && (t = !1);
                this.onDestroy();
            };
            e.prototype.init = function () { };
            e.prototype.updateDisplay = function () { };
            e.prototype.setFinishCallback = function (t) {
                this.finishCallback = t;
            };
            e.prototype.show = function (t) {
                this.node.active = !0;
                this.background && (this.background.active = !0);
                this.main && (this.main.active = !0);
                this.init(t);
                this.updateDisplay(t);
                this.playShowAnim();
            };
            e.prototype.hide = function (t) {
                void 0 === t && (t = !0);
                if (t) this.playHideAnim(); else {
                    this.node.active = !1;
                    this.onHide && this.onHide();
                    this.finishCallback && this.finishCallback();
                }
            };
            e.prototype.playShowAnim = function () {
                var t = this;
                if (this.background) {
                    this.background.opacity = 0;
                    cc.tween(this.background).to(.8 * this.animTime, {
                        opacity: 255
                    }).start();
                }
                if (this.main) {
                    this.main.scale = .5;
                    this.main.opacity = 0;
                    cc.tween(this.main).to(this.animTime, {
                        scale: 1,
                        opacity: 255
                    }, {
                        easing: "backOut"
                    }).call(function () {
                        t.onShow();
                    }).start();
                }
            };
            e.prototype.playHideAnim = function () {
                var t = this, e = this.blocker;
                if (!e) {
                    (e = this.blocker = new cc.Node("blocker")).addComponent(cc.BlockInputEvents);
                    e.setParent(this.node);
                    e.setContentSize(this.node.getContentSize());
                }
                e.active = !0;
                if (this.background) {
                    this.background.opacity = 0;
                    cc.tween(this.background).delay(.2 * this.animTime).to(.8 * this.animTime, {
                        opacity: 0
                    }).start();
                }
                if (this.main) {
                    this.main.scale = .5;
                    this.main.opacity = 0;
                    cc.tween(this.main).to(this.animTime, {
                        scale: .5,
                        opacity: 0
                    }, {
                        easing: "backIn"
                    }).call(function () {
                        e.active = !1;
                        t.node.active = !1;
                        t.onHide && t.onHide();
                        t.finishCallback && t.finishCallback();
                    }).start();
                }
            };
            e.attr = {
                layer: 0,
                name: "PopupBase"
            };
            r([l({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "background", void 0);
            r([l({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "main", void 0);
            return r([c], e);
        }(o.default);
        i.default = h;
        cc._RF.pop();
    }, {
        "./UIComponent": "UIComponent"
    }],
    PopupCheat: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e9239lP7E9PhowBRyCfpWku", "PopupCheat");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../config/GameEnum"), l = t("../../../../data/manager/ConfigDataManager"), h = t("../../../../data/storage/GameData"), u = t("../../../../frame/manager/FrameManager"), p = t("../../../../util/GameFunc"), d = t("../../../battle/manager/battle/BattleManager"), f = t("../../../battle/manager/battle/SnakeManager"), m = cc._decorator, g = m.ccclass, _ = m.property, y = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.layer = null;
                e.level_editBox = null;
                e.hand_toggle = null;
                e.draw_toggle = null;
                e.searchArea_toggle = null;
                e.guide = null;
                e.cheatNode = null;
                e.logToggle = null;
                e.switchJoyContainer = null;
                e.speed = null;
                e.speedMax = null;
                e.touchRat = null;
                e.touchSize = null;
                e.turretLvBox = null;
                e.atkLab20 = null;
                e.atkLab21 = null;
                e.atkLab30 = null;
                e.atkLab31 = null;
                e.goldCost = null;
                e.snakeIdBox = null;
                e.snakeLvBox = null;
                e.goldLab = null;
                e.diamondLab = null;
                e.powerLab = null;
                e.tipLab = null;
                e.itemId = null;
                e.itemNum = null;
                e.snakeType = null;
                e.touchType = null;
                e.uiNode = null;
                e.codeNode = null;
                e.codeBox = null;
                return e;
            }
            e.prototype.onLoad = function () {
                var t = this;
                this.cheatNode.active = !0;
                this.layer.on(cc.Node.EventType.TOUCH_START, function () {
                    t.node.active = !1;
                });
                this.uiNode.active = o.GConfig.cheatShow;
            };
            e.prototype.start = function () {
                this.level_editBox.string = h.GData.getCurStage().toString();
                this.hand_toggle.isChecked = 1 == (cc.sys.localStorage.getItem("hasHand") || 0);
                this.draw_toggle.isChecked = o.GConfig.ColliderDraw;
                this.guide.isChecked = s.GValue.guideAble;
                this.logToggle.isChecked = o.GConfig.logAble;
                this.touchRat.string = (f.SnakeMgr.touchRat || "").toString();
                this.touchSize.string = (f.SnakeMgr.touchSize || "").toString();
                this.speed.string = (f.SnakeMgr.targetSpeed || "").toString();
                this.speedMax.string = (f.SnakeMgr.targetSpeed || "").toString();
                this.turretLvBox.string = h.GData.getSnakeTurretLv().toString();
                this.snakeIdBox.string = h.GData.getCurSnakeId().toString();
                this.snakeLvBox.string = h.GData.getCurSnakeLv().toString();
                this.goldLab.string = h.GData.getGold().toString();
                this.diamondLab.string = h.GData.getDiamond().toString();
                this.powerLab.string = h.GData.getPower().toString();
                this.touchType.string = h.GData.getTouchType().toString();
                var t = h.GData.getSnakeTurretLv(), e = t + 1, i = l.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", t), n = l.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", e);
                if (i) {
                    this.atkLab20.string = i.normalAtk.toString();
                    this.atkLab21.string = i.specialAtk.toString();
                }
                if (n) {
                    this.atkLab30.string = n.normalAtk.toString();
                    this.atkLab31.string = n.specialAtk.toString();
                    this.goldCost.string = n.gold.toString();
                }
            };
            e.prototype.onBTNCheatClick = function () {
                this.cheatNode.active = !this.cheatNode.active;
            };
            e.prototype.onBtnClearClicked = function () {
                h.GData.clearData();
                cc.director.loadScene("Launch");
            };
            e.prototype.onBTNLvupClick = function () {
                var t = h.GData.getSnakeTurretLv(), e = t + 1, i = l.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", e);
                if (i) if (p.GFunc.isGoldEnough(i.gold, !0)) {
                    this.tipLab.string = "";
                    h.GData.setSnakeTurretLv(e);
                    this.turretLvBox.string = e.toString();
                    this.goldLab.string = h.GData.getGold().toString();
                    e = (t = h.GData.getSnakeTurretLv()) + 1;
                    var n = l.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", t), a = l.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", e);
                    if (n) {
                        this.atkLab20.string = n.normalAtk.toString();
                        this.atkLab21.string = n.specialAtk.toString();
                    }
                    if (a) {
                        this.atkLab30.string = a.normalAtk.toString();
                        this.atkLab31.string = a.specialAtk.toString();
                        this.goldCost.string = i.gold.toString();
                    } else {
                        this.atkLab30.string = "满级";
                        this.atkLab31.string = "满级";
                        this.goldCost.string = "满级";
                    }
                } else this.tipLab.string = "金币不足"; else this.tipLab.string = "满级";
            };
            e.prototype.onTurretLvChange = function (t) {
                var e = Number(t);
                e && e == e && h.GData.setSnakeTurretLv(e);
            };
            e.prototype.onSnakeIdChange = function (t) {
                var e = Number(t.string);
                e && e == e && f.SnakeMgr.setCurSnakeId(e);
            };
            e.prototype.onSnakeLvChange = function (t) {
                var e = Number(t);
                e && e == e && f.SnakeMgr.setSnakeLv(f.SnakeMgr.getCurSnakeType(), e);
            };
            e.prototype.onGoldChange = function (t) {
                var e = Number(t);
                if (e && e == e) {
                    h.GData.setGold(e);
                    u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.CoinRefresh);
                }
            };
            e.prototype.onDiamondChange = function (t) {
                var e = Number(t);
                if (e && e == e) {
                    h.GData.setDiamond(e);
                    u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.CoinRefresh);
                }
            };
            e.prototype.onPowerChange = function (t) {
                var e = Number(t.string);
                if (e && e == e) {
                    var i = h.GData.getPower() >= s.GValue.MaxPower;
                    h.GData.setPower(e);
                    e >= s.GValue.MaxPower && p.GFunc.resetPowerRecoverTimestamp();
                    i && h.GData.getPower() < s.GValue.MaxPower && p.GFunc.resetPowerRecoverTimestamp();
                    u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.PowerRefresh);
                }
            };
            e.prototype.onTouchTypeChange = function (t) {
                var e = parseInt(t);
                if (e && e == e) {
                    e = e > 2 ? 0 : e;
                    h.GData.setTouchType(e);
                }
            };
            e.prototype.onBTNStartClick = function () {
                var t = Number(this.level_editBox.string);
                if (t && t == t) {
                    d.BattleMgr.setBattleData(t);
                    u.FrameMgr.loadMgr.loadBundleScene("loading", "/scene/loadingScene", function (t) {
                        cc.director.runScene(t);
                    });
                }
            };
            e.prototype.onInputLevelChange = function (t) {
                var e = Number(t);
                if (e && e == e) {
                    d.BattleMgr.setBattleData(e);
                    h.GData.setCurStage(e);
                    h.GData.setFinishStage(e - 1);
                    u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.StageRefresh);
                }
            };
            e.prototype.onInputSpeedChange = function (t) {
                var e = Number(t);
                e && e == e && (f.SnakeMgr.targetSpeed = e);
            };
            e.prototype.onInputTouchRatChange = function (t) {
                var e = Number(t);
                e && e == e && (f.SnakeMgr.touchRat = e);
            };
            e.prototype.onInputTouchSizeChange = function (t) {
                var e = Number(t);
                e && e == e && (f.SnakeMgr.touchSize = e);
            };
            e.prototype.onToggleHandCheck = function (t) {
                t.isChecked;
            };
            e.prototype.onToggleSearchAreaCheck = function () { };
            e.prototype.onToggleFollowHandCheck = function (t) {
                t.isChecked;
            };
            e.prototype.onToggleJoyFollowHandCheck = function (t) {
                t.isChecked;
            };
            e.prototype.onToggleGuideCheck = function (t) {
                var e = t.isChecked;
                s.GValue.guideAble = e;
            };
            e.prototype.onToggleLogCheck = function (t) {
                var e = t.isChecked;
                o.GConfig.logAble = e;
            };
            e.prototype.onCollideDrawHandCheck = function (t) {
                var e = t.isChecked;
                o.GConfig.ColliderDraw = e;
            };
            e.prototype.onSwitchJoyCheck = function (t) {
                this.switchJoyContainer.toggleItems.indexOf(t);
                this.touchRat.string = (f.SnakeMgr.touchRat || "").toString();
                this.touchSize.string = (f.SnakeMgr.touchSize || "").toString();
                this.speed.string = (f.SnakeMgr.targetSpeed || "").toString();
                this.speedMax.string = (f.SnakeMgr.targetSpeed || "").toString();
            };
            e.prototype.onItemNumChange = function (t) {
                var e = Number(t), i = Number(this.itemId.string);
                e && e == e && i && i == i && h.GData.setItemNum(i, e);
            };
            e.prototype.onSnakeTypeUnlock = function () {
                var t = Number(this.snakeType.string);
                t && t == t && f.SnakeMgr.setSnakeUnlockId(t);
            };
            e.prototype.onBtnCodeClicked = function () {
                var t = this;
                this.codeBox.string.split(";").forEach(function (e) {
                    t.onSend(e);
                });
            };
            e.prototype.onSend = function (t) {
                var e = t.split(" ");
                switch (e[0]) {
                    case "log":
                        var i = parseInt(e[1]);
                        o.GConfig.logAble = 1 == i;
                        break;

                    case "col":
                        i = parseInt(e[1]);
                        o.GConfig.ColliderDraw = 1 == i;
                        break;

                    case "gold":
                        i = parseInt(e[1]);
                        h.GData.setGold(i);
                        u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.GoldRefresh);
                        break;

                    case "addGold":
                        i = parseInt(e[1]);
                        p.GFunc.goldChange(i);
                        break;

                    case "diamond":
                        i = parseInt(e[1]);
                        h.GData.setDiamond(i);
                        u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.DiamondRefresh);
                        break;

                    case "addDiamond":
                        i = parseInt(e[1]);
                        p.GFunc.diamondChange(i);
                        break;

                    case "power":
                        i = parseInt(e[1]);
                        h.GData.setPower(i);
                        u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.PowerRefresh);
                        break;

                    case "addPower":
                        i = parseInt(e[1]);
                        p.GFunc.powerChange(i);
                        break;

                    case "item":
                        var n = parseInt(e[1]);
                        i = parseInt(e[2]);
                        h.GData.setItemNum(n, i);
                        u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.ItemRefresh);
                        break;

                    case "addItem":
                        n = parseInt(e[1]), i = parseInt(e[2]);
                        p.GFunc.itemChange(n, i);
                        break;

                    case "weapon":
                        var a = parseInt(e[1]);
                        h.GData.setSnakeTurretLv(a);
                        break;

                    case "snake":
                        n = parseInt(e[1]), a = parseInt(e[2]);
                        f.SnakeMgr.setSnakeLv(n, a);
                        f.SnakeMgr.setSnakeUnlockId(n);
                        break;

                    case "fetter":
                        n = parseInt(e[1]), a = parseInt(e[2]);
                        h.GData.setFetterLevel(n, a);
                }
            };
            e.prototype.onEnable = function () {
                this.codeBox.string = "";
            };
            r([_(cc.Node)], e.prototype, "layer", void 0);
            r([_(cc.EditBox)], e.prototype, "level_editBox", void 0);
            r([_(cc.Toggle)], e.prototype, "hand_toggle", void 0);
            r([_(cc.Toggle)], e.prototype, "draw_toggle", void 0);
            r([_(cc.Toggle)], e.prototype, "searchArea_toggle", void 0);
            r([_(cc.Toggle)], e.prototype, "guide", void 0);
            r([_(cc.Node)], e.prototype, "cheatNode", void 0);
            r([_(cc.Toggle)], e.prototype, "logToggle", void 0);
            r([_(cc.ToggleContainer)], e.prototype, "switchJoyContainer", void 0);
            r([_(cc.EditBox)], e.prototype, "speed", void 0);
            r([_(cc.EditBox)], e.prototype, "speedMax", void 0);
            r([_(cc.EditBox)], e.prototype, "touchRat", void 0);
            r([_(cc.EditBox)], e.prototype, "touchSize", void 0);
            r([_(cc.EditBox)], e.prototype, "turretLvBox", void 0);
            r([_(cc.Label)], e.prototype, "atkLab20", void 0);
            r([_(cc.Label)], e.prototype, "atkLab21", void 0);
            r([_(cc.Label)], e.prototype, "atkLab30", void 0);
            r([_(cc.Label)], e.prototype, "atkLab31", void 0);
            r([_(cc.Label)], e.prototype, "goldCost", void 0);
            r([_(cc.EditBox)], e.prototype, "snakeIdBox", void 0);
            r([_(cc.EditBox)], e.prototype, "snakeLvBox", void 0);
            r([_(cc.EditBox)], e.prototype, "goldLab", void 0);
            r([_(cc.EditBox)], e.prototype, "diamondLab", void 0);
            r([_(cc.EditBox)], e.prototype, "powerLab", void 0);
            r([_(cc.Label)], e.prototype, "tipLab", void 0);
            r([_(cc.EditBox)], e.prototype, "itemId", void 0);
            r([_(cc.EditBox)], e.prototype, "itemNum", void 0);
            r([_(cc.EditBox)], e.prototype, "snakeType", void 0);
            r([_(cc.EditBox)], e.prototype, "touchType", void 0);
            r([_(cc.Node)], e.prototype, "uiNode", void 0);
            r([_(cc.Node)], e.prototype, "codeNode", void 0);
            r([_(cc.EditBox)], e.prototype, "codeBox", void 0);
            return r([g], e);
        }(cc.Component);
        i.default = y;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../data/storage/GameData": "GameData",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/GameFunc": "GameFunc",
        "../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../battle/manager/battle/SnakeManager": "SnakeManager"
    }],
    PopupFetterInfo: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "7d992pg8LhFar3dHpA6dy2I", "PopupFetterInfo");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../../config/GameConfig"), s = t("../../../../../../config/GameConst"), c = t("../../../../../../config/GameEnum"), l = t("../../../../../../data/storage/GameData"), h = t("../../../../../../frame/manager/FrameManager"), u = t("../../../../../../frame/ui/FrameAnim"), p = t("../../../../../../frame/ui/PopupBase"), d = t("../../../../../../util/GameFunc"), f = t("../../../../../../util/Tools"), m = t("../../../../../battle/manager/battle/SnakeManager"), g = t("./FetterSnakeItem"), _ = cc._decorator, y = _.ccclass, v = _.property, b = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.uiNode = null;
                e.nameSpr = null;
                e.cardList = null;
                e.cardNode = null;
                e.curLabel = null;
                e.nextLabel = null;
                e.arrowNode = null;
                e.upgradeBtn = null;
                e.fullNode = null;
                e.duigouNode = null;
                e.shield = null;
                e.atlas = null;
                e.m_data = null;
                e.m_item = null;
                e.m_level = 0;
                e.m_itemArr = [];
                return e;
            }
            e.prototype.init = function (t) {
                this.m_data = t.data;
                this.m_item = t.item;
                this.m_level = l.GData.getFetterLevel(this.m_data.id);
                this.initUI();
                this.refresh();
                this.playEnterAnim();
                this.on(c.EventTypeEnum.SnakeLvup, this.refresh.bind(this));
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                h.FrameMgr.languageMgr.setImage(this.nameSpr, this.atlas, "name" + this.m_data.id);
                h.FrameMgr.languageMgr.setImage(this.fullNode.getComponent(cc.Sprite), this.atlas, "max");
                h.FrameMgr.languageMgr.setImage(this.upgradeBtn.node.children[0].getComponent(cc.Sprite), this.atlas, this.upgradeBtn.interactable ? "btn3" : "btn3b");
            };
            e.prototype.initUI = function () {
                this.createCards();
            };
            e.prototype.createCards = function () {
                var t = this.m_level + 1;
                t > this.m_data.maxLv && (t = this.m_data.maxLv);
                var e = this.m_data.levelDatas[t];
                if (e) {
                    for (var i = 0, n = e.condition.length; i < n; i++) {
                        var a = e.condition[i], r = null;
                        (r = cc.instantiate(this.cardNode)).active = !0;
                        r.parent = this.cardList;
                        var o = r.getComponent(g.default);
                        o.create(a.x, a.y, this.atlas);
                        this.m_itemArr.push(o);
                    }
                    this.cardNode.active = !1;
                }
            };
            e.prototype.refresh = function (t) {
                void 0 === t && (t = !1);
                this.m_level = l.GData.getFetterLevel(this.m_data.id);
                if (t) {
                    this.cardNode.parent = this.node;
                    this.cardList.destroyAllChildren();
                    this.m_itemArr.splice(0);
                    this.createCards();
                } else this.refreshCard();
                this.refreshInfo();
                this.refreshBtn();
            };
            e.prototype.refreshCard = function () {
                for (var t = 0, e = this.m_itemArr; t < e.length; t++) e[t].refresh();
            };
            e.prototype.refreshInfo = function () {
                var t = Math.max(this.m_level, 1), e = this.m_data.levelDatas[t], i = this.m_data.levelDatas[t + 1], n = "lv." + t + " " + h.FrameMgr.languageMgr.getTxt(e.desc);
                12 == e.param[0].x || 3 == e.param[0].x ? n += e.param[0].y : n += Math.round(100 * e.param[0].y) + "%";
                this.curLabel.string = n;
                if (i) {
                    n = "lv." + (t + 1) + " " + h.FrameMgr.languageMgr.getTxt(e.desc);
                    12 == i.param[0].x || 3 == i.param[0].x ? n += i.param[0].y : n += Math.round(100 * i.param[0].y) + "%";
                    this.nextLabel.string = n;
                } else this.nextLabel.node.active = !1;
                d.GFunc.refreshLabel(this.curLabel);
                this.duigouNode.x = -this.curLabel.node.width / 2 - 30;
            };
            e.prototype.refreshBtn = function () {
                var t = this.m_level + 1, e = this.m_data.levelDatas[t];
                if (e) {
                    this.fullNode.active = !1;
                    this.upgradeBtn.node.active = !0;
                    for (var i = !0, n = 0; n < e.condition.length; n++) {
                        var a = e.condition[n], r = a.x, c = a.y, l = m.SnakeMgr.getSnakeLv(r);
                        if (!m.SnakeMgr.isSnakeUnlock(r) || c > l) {
                            i = !1;
                            break;
                        }
                    }
                    this.upgradeBtn.interactable = i;
                    this.duigouNode.active = i;
                    if (i) {
                        var h = this.upgradeBtn.node.getChildByName("anim");
                        if (!h) {
                            (h = cc.instantiate(s.GValue.pfFrameAnim)).name = "anim";
                            h.parent = this.upgradeBtn.node;
                            h.y = 4;
                            h.scaleX = 2.06;
                            h.scaleY = 1.3;
                            var p = h.getComponent(u.default);
                            p.init(this.atlas, "anzou", 9, 2 * o.GConfig.ActionInterval);
                            p.slowAble = !1;
                        }
                        var d = h.getComponent(u.default);
                        d.setDuration(2);
                        d.play();
                    } else f.DYTools.removeChildByName(this.upgradeBtn.node, "anim");
                } else {
                    this.fullNode.active = !0;
                    this.upgradeBtn.node.active = !1;
                    f.DYTools.removeChildByName(this.upgradeBtn.node, "anim");
                }
            };
            e.prototype.onBtnCloseClicked = function () {
                f.DYTools.isBtnClickedAble() && this.hide(!1);
            };
            e.prototype.onBtnUpgradeClicked = function () {
                if (f.DYTools.isBtnClickedAble()) {
                    var t = this.m_level + 1, e = this.m_data.levelDatas[t];
                    if (e) {
                        for (var i = !0, n = 0; n < e.condition.length; n++) {
                            var a = e.condition[n], r = a.x, o = a.y, s = m.SnakeMgr.getSnakeLv(r);
                            if (!m.SnakeMgr.isSnakeUnlock(r) || o > s) {
                                i = !1;
                                break;
                            }
                        }
                        if (i) {
                            var u = l.GData.getFetterLevel(this.m_data.id);
                            l.GData.setFetterLevel(this.m_data.id, u + 1);
                            this.duigouNode.active = !1;
                            this.playLvupAnim();
                            this.m_item && this.m_item.refresh(!0) && this.hide(!1);
                            h.FrameMgr.noticeMgr.emit(c.EventTypeEnum.FetterRefresh);
                        } else f.DYTools.error("err fetter info 22");
                    } else f.DYTools.error("err fetter info 11");
                }
            };
            e.prototype.playEnterAnim = function () {
                var t = this, e = o.GConfig.ActionInterval;
                this.shield.active = !0;
                this.uiNode.scale = .8;
                this.uiNode.opacity = 0;
                cc.tween(this.uiNode).to(4 * e, {
                    scale: 1.1,
                    opacity: 255
                }).to(3 * e, {
                    scale: .98
                }).to(4 * e, {
                    scale: 1
                }).call(function () {
                    t.shield.active = !1;
                }).start();
            };
            e.prototype.playLvupAnim = function () {
                var t = this;
                this.shield.active = !0;
                for (var e = 0, i = this.m_itemArr; e < i.length; e++) {
                    var n = i[e].node.getChildByName("spine");
                    n.opacity = 255;
                    n.getComponent(sp.Skeleton).setAnimation(0, "play1", !1);
                }
                var a = o.GConfig.ActionInterval;
                this.scheduleOnce(function () {
                    t.refresh(!0);
                    t.arrowNode.active = !1;
                    var e = t.curLabel.node.parent, i = t.nextLabel.node.parent;
                    e.y = -24;
                    i.y = 24;
                    var n = e.getChildByName("white");
                    n.active = !0;
                    n.opacity = 235;
                    n.color = cc.color(103, 201, 217);
                    cc.tween(n).to(3 * a, {
                        opacity: 220,
                        color: cc.Color.WHITE
                    }).to(4 * a, {
                        opacity: 0
                    }).start();
                    var r = e.y;
                    cc.tween(e).to(3 * a, {
                        scale: 1.05,
                        y: r + 8
                    }).to(4 * a, {
                        y: r + 50
                    }).to(5 * a, {
                        scale: 1,
                        y: r + 48
                    }).call(function () {
                        t.arrowNode.active = !0;
                        t.shield.active = !1;
                    }).start();
                    cc.tween(i).to(a, {
                        y: 12
                    }).to(7 * a, {
                        y: -24
                    }).start();
                }, 10 * a);
            };
            e.attr = {
                layer: 1,
                name: "PopupFetterInfo",
                cache: c.PopupCacheMode.Normal
            };
            r([v(cc.Node)], e.prototype, "uiNode", void 0);
            r([v(cc.Sprite)], e.prototype, "nameSpr", void 0);
            r([v(cc.Node)], e.prototype, "cardList", void 0);
            r([v(cc.Node)], e.prototype, "cardNode", void 0);
            r([v(cc.Label)], e.prototype, "curLabel", void 0);
            r([v(cc.Label)], e.prototype, "nextLabel", void 0);
            r([v(cc.Node)], e.prototype, "arrowNode", void 0);
            r([v(cc.Button)], e.prototype, "upgradeBtn", void 0);
            r([v(cc.Node)], e.prototype, "fullNode", void 0);
            r([v(cc.Node)], e.prototype, "duigouNode", void 0);
            r([v(cc.Node)], e.prototype, "shield", void 0);
            r([v(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([y], e);
        }(p.default);
        i.default = b;
        cc._RF.pop();
    }, {
        "../../../../../../config/GameConfig": "GameConfig",
        "../../../../../../config/GameConst": "GameConst",
        "../../../../../../config/GameEnum": "GameEnum",
        "../../../../../../data/storage/GameData": "GameData",
        "../../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../../frame/ui/PopupBase": "PopupBase",
        "../../../../../../util/GameFunc": "GameFunc",
        "../../../../../../util/Tools": "Tools",
        "../../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "./FetterSnakeItem": "FetterSnakeItem"
    }],
    PopupGuide: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "dc6aa2D0A9PHZU+DnlpJs1t", "PopupGuide");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../data/storage/GameData"), c = t("../../../../../frame/manager/FrameManager"), l = t("../../../../../frame/ui/PopupBase"), h = cc._decorator, u = h.ccclass, p = h.property, d = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.layer = null;
                e.spine = null;
                e.btnNode = null;
                e.atlas = null;
                e.m_type = o.GuideType.None;
                e.m_endCall = null;
                return e;
            }
            e.prototype.onBtnContinueClicked = function () {
                if (this.btnNode.active) {
                    c.FrameMgr.audioMgr.playEffect("guide_btn_ok");
                    c.FrameMgr.noticeMgr.emit(o.EventTypeEnum.PopupGuideOver);
                    s.GData.setGuided(this.m_type);
                    switch (this.m_type) {
                        case o.GuideType.PopupCircle:
                            c.FrameMgr.reportMgr.sendReportLoading(o.LoadingStep.GuideCircleEnd);
                            break;

                        case o.GuideType.PopupSkill:
                            c.FrameMgr.reportMgr.sendReportLoading(o.LoadingStep.GuideSkillEnd);
                    }
                    if (this.m_endCall) {
                        this.m_endCall();
                        this.m_endCall = null;
                    }
                }
            };
            e.prototype.create = function (t, e) {
                var i = this;
                this.m_type = t;
                this.m_endCall = e;
                switch (t) {
                    case o.GuideType.PopupCircle:
                        this.spine.skeletonData = c.FrameMgr.loadMgr.get("spine_guide_attack", sp.SkeletonData);
                        c.FrameMgr.reportMgr.sendReportLoading(o.LoadingStep.GuideCircleStart);
                        break;

                    case o.GuideType.PopupSkill:
                        this.spine.skeletonData = c.FrameMgr.loadMgr.get("spine_guide_snake_skill_102", sp.SkeletonData);
                        c.FrameMgr.reportMgr.sendReportLoading(o.LoadingStep.GuideSkillStart);
                }
                this.spine.node.opacity = 0;
                this.btnNode.active = !1;
                this.scheduleOnce(function () {
                    i.spine.node.opacity = 255;
                    i.spine.setCompleteListener(function () {
                        i.btnNode.active = !0;
                        i.spine.setCompleteListener(null);
                    });
                    i.spine.setAnimation(0, "play_" + s.GData.getLanguage(), !0);
                });
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                c.FrameMgr.languageMgr.setImage(this.btnNode.getComponent(cc.Sprite), this.atlas, "txt5");
            };
            e.attr = {
                layer: 0,
                name: "PopupGuide",
                cache: o.PopupCacheMode.Once
            };
            r([p(cc.Node)], e.prototype, "layer", void 0);
            r([p(sp.Skeleton)], e.prototype, "spine", void 0);
            r([p(cc.Node)], e.prototype, "btnNode", void 0);
            r([p(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([u], e);
        }(l.default);
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/PopupBase": "PopupBase"
    }],
    PopupManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "104671mCWFLVo9ZlNgVyjnV", "PopupManager");
        var n = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, a = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.PopupMgr = i.PopupShowResult = void 0;
        var r, o = t("../../config/GameEnum"), s = t("../../util/GameFunc"), c = t("../../util/Tools"), l = t("../ui/PopupBase"), h = t("./FrameManager");
        (function (t) {
            t[t.Done = 1] = "Done";
            t[t.Fail = 2] = "Fail";
            t[t.Wait = 3] = "Wait";
            t[t.Dirty = 4] = "Dirty";
        })(r = i.PopupShowResult || (i.PopupShowResult = {}));
        var u = function () {
            function t() {
                this._containers = [];
                this._nodeMap = new Map();
                this._queue = new Map();
                this._lockedForNext = new Map();
            }
            t.prototype.initContainers = function (t) {
                this._containers = t;
            };
            t.prototype.getContainer = function (t) {
                return this._containers[t];
            };
            t.prototype.clear = function (t) {
                if (t) {
                    for (var e = 0; e < this._containers.length; e++) {
                        var i = this._containers[e];
                        cc.isValid(i) && i.destroyAllChildren();
                    }
                    this._nodeMap.forEach(function (t) {
                        cc.isValid(t) && t.destroy();
                    });
                }
                this._containers.splice(0);
                this._nodeMap.clear();
                this._queue.clear();
                this._lockedForNext.clear();
            };
            t.prototype.show = function (t) {
                var e = this;
                return new Promise(function (i) {
                    return n(e, void 0, void 0, function () {
                        var e, o, h, u, p, d, f, m, g, _ = this;
                        return a(this, function (y) {
                            switch (y.label) {
                                case 0:
                                    if (!t) {
                                        i(r.Fail);
                                        return [2];
                                    }
                                    e = t.cls;
                                    o = t.options;
                                    h = t.queue;
                                    u = t.priority;
                                    if (!e || !e.attr) return [3, 2];
                                    p = e.attr;
                                    d = p.layer;
                                    !(f = this._containers[d]) && (f = this._containers[this._containers.length - 1]);
                                    if (h && f && (f.childrenCount > 0 || this._lockedForNext.get(d))) {
                                        this.push({
                                            cls: e,
                                            options: o,
                                            priority: u
                                        });
                                        i(r.Wait);
                                        return [2];
                                    }
                                    s.GFunc.showUILoading();
                                    return [4, this.getNodeFromCache(p)];

                                case 1:
                                    if (!(m = y.sent())) {
                                        c.DYTools.error("弹窗失败", p);
                                        i(r.Fail);
                                        s.GFunc.hideUILoading();
                                        return [2];
                                    }
                                    s.GFunc.hideUILoading();
                                    m.parent = f || cc.Canvas.instance.node;
                                    if (g = m.getComponent(l.default)) {
                                        g.setFinishCallback(function () {
                                            return n(_, void 0, void 0, function () {
                                                var t, e;
                                                return a(this, function () {
                                                    t = this._queue.get(d);
                                                    e = t ? t.length : 0;
                                                    this._lockedForNext.set(d, !!h && e > 0);
                                                    this.recyclePopup(p, m);
                                                    this.checkNextPopup(d);
                                                    return [2];
                                                });
                                            });
                                        });
                                        g.show(o);
                                        i(r.Done);
                                    } else {
                                        m.active = !0;
                                        i(r.Dirty);
                                    }
                                    y.label = 2;

                                case 2:
                                    return [2];
                            }
                        });
                    });
                });
            };
            t.prototype.getNodeFromCache = function (t) {
                return n(this, void 0, void 0, function () {
                    var e, i, n;
                    return a(this, function (a) {
                        switch (a.label) {
                            case 0:
                                e = "";
                                t.name && (e = t.name);
                                if (this._nodeMap.has(e)) {
                                    i = this._nodeMap.get(e);
                                    if (cc.isValid(i)) return [2, i];
                                    this._nodeMap.delete(e);
                                }
                                n = null;
                                return t.name ? (n = h.FrameMgr.loadMgr.get(t.name, cc.Prefab)) ? [3, 2] : [4, h.FrameMgr.loadMgr.loadPrefabAsync(t.name)] : [3, 2];

                            case 1:
                                n = a.sent();
                                a.label = 2;

                            case 2:
                                return n ? [2, cc.instantiate(n)] : [2, null];
                        }
                    });
                });
            };
            t.prototype.push = function (t) {
                var e = t.cls.attr.layer, i = this._containers[e];
                !i && (i = this._containers[this._containers.length - 1]);
                if (0 != i.childrenCount || this._lockedForNext.get(e)) {
                    var n = this._queue.get(t.cls.attr.layer);
                    if (!n) {
                        n = [];
                        this._queue.set(t.cls.attr.layer, n);
                    }
                    t.priority ? n.unshift({
                        cls: t.cls,
                        options: t.options
                    }) : n.push({
                        cls: t.cls,
                        options: t.options
                    });
                } else this.show(t);
            };
            t.prototype.checkNextPopup = function (t) {
                var e = this._containers[t];
                !e && (e = this._containers[this._containers.length - 1]);
                var i = this._queue.get(t), n = i ? i.length : 0;
                if (e && !(e.childrenCount > 0) && 0 !== n) {
                    var a = i.shift();
                    this._lockedForNext.set(t, !1);
                    this.show(a);
                }
            };
            t.prototype.recyclePopup = function (t, e) {
                if (t.cache) {
                    var i = t.name;
                    switch (t.cache) {
                        case o.PopupCacheMode.Once:
                            e.destroy();
                            this._nodeMap.has(i) && this._nodeMap.delete(i);
                            this.release(t);
                            break;

                        case o.PopupCacheMode.Normal:
                            e.destroy();
                            this._nodeMap.has(i) && this._nodeMap.delete(i);
                            break;

                        case o.PopupCacheMode.Frequent:
                            e.removeFromParent(!1);
                            this._nodeMap.has(i) || this._nodeMap.set(i, e);
                    }
                } else {
                    e.destroy();
                    this._nodeMap.has(t.name) && this._nodeMap.delete(t.name);
                }
            };
            t.prototype.release = function (t) {
                var e = "";
                t.name && (e = t.name);
                var i = this._nodeMap.get(e);
                if (i) {
                    this._nodeMap.delete(e);
                    cc.isValid(i) && i.destroy();
                    i = null;
                }
                t.name && h.FrameMgr.loadMgr.release(t.name, cc.Prefab);
            };
            t.instance = new t();
            return t;
        }();
        i.default = u;
        i.PopupMgr = u.instance;
        cc._RF.pop();
    }, {
        "../../config/GameEnum": "GameEnum",
        "../../util/GameFunc": "GameFunc",
        "../../util/Tools": "Tools",
        "../ui/PopupBase": "PopupBase",
        "./FrameManager": "FrameManager"
    }],
    PopupNewEnemy: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "d7f60HiTVhMVpjFmbgwgrSZ", "PopupNewEnemy");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConfig"), s = t("../../../../../config/GameEnum"), c = t("../../../../../data/manager/ConfigDataManager"), l = t("../../../../../data/storage/GameData"), h = t("../../../../../frame/manager/CameraManager"), u = t("../../../../../frame/manager/FrameManager"), p = t("../../../../../frame/ui/PopupBase"), d = t("../../../../battle/manager/battle/GameRuleManager"), f = t("../../../../battle/manager/battle/SnakeManager"), m = cc._decorator, g = m.ccclass, _ = m.property, y = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.layer = null;
                e.bgNode = null;
                e.continue = null;
                e.titleNode = null;
                e.lightNode = null;
                e.nameSpr = null;
                e.roleSpr = null;
                e.infoSpr = null;
                e.roleWhiteSpr = null;
                e.atlas = null;
                e.m_enemyId = 0;
                return e;
            }
            e.prototype.init = function (t) {
                this.m_enemyId = t.enemyId;
                this.nameSpr.spriteFrame = this.atlas.getSpriteFrame("enemy_name_" + t.enemyId);
                this.roleSpr.spriteFrame = this.atlas.getSpriteFrame("enemy_role_" + t.enemyId);
                this.infoSpr.spriteFrame = this.atlas.getSpriteFrame("enemy_info_" + t.enemyId);
                this.roleWhiteSpr.spriteFrame = this.roleSpr.spriteFrame;
                var e = c.ConfigDataMgr.getData("ConfigEnemyUIData", t.enemyId);
                this.lightNode.color = e.effectColor;
                this.roleSpr.node.scaleX *= t.scaleX > 0 ? 1 : -1;
                this.refreshLanguage();
                this.playEnterAnim(t.worldPos);
                l.GData.setEnemyInfo(t.enemyId);
            };
            e.prototype.refreshLanguage = function () {
                u.FrameMgr.languageMgr.setImage(this.titleNode.children[0].getComponent(cc.Sprite), this.atlas, "bt");
                u.FrameMgr.languageMgr.setImage(this.titleNode.children[1].getComponent(cc.Sprite), this.atlas, "bt");
                u.FrameMgr.languageMgr.setImage(this.nameSpr, this.atlas, "enemy_name_" + this.m_enemyId);
                u.FrameMgr.languageMgr.setImage(this.infoSpr, this.atlas, "enemy_info_" + this.m_enemyId);
                u.FrameMgr.languageMgr.setImage(this.continue.getComponent(cc.Sprite), this.atlas, "txt");
            };
            e.prototype.playEnterAnim = function (t) {
                var e = this, i = o.GConfig.ActionInterval, n = this.roleSpr.node.getPosition();
                this.roleSpr.node.setPosition(this.roleSpr.node.parent.convertToNodeSpaceAR(t));
                var a = this.roleSpr.node.scaleX, r = this.roleSpr.node.scaleY, s = n.sub(this.roleSpr.node.getPosition()).mag();
                cc.tween(this.roleSpr.node).to(s / 1e3, {
                    x: n.x,
                    y: n.y,
                    scaleX: 1.1 * a,
                    scaleY: 1.1 * r
                }).to(5 * i, {
                    scaleX: 1 * a,
                    scaleY: 1 * r
                }).start();
                cc.tween(this.roleWhiteSpr.node).delay(8 * i).call(function () {
                    e.roleWhiteSpr.node.opacity = 255;
                }).to(4 * i, {
                    opacity: 0
                }).start();
                this.bgNode.opacity = 0;
                this.bgNode.scale = .88;
                cc.tween(this.bgNode).delay(7 * i).to(3 * i, {
                    opacity: 255,
                    scale: 1
                }).start();
                var c = this.titleNode.getChildByName("icon");
                c.opacity = 0;
                this.scheduleOnce(function () {
                    var t = e.titleNode.getChildByName("white1"), n = e.titleNode.getChildByName("white2");
                    t.x = -380;
                    n.x = 380;
                    t.opacity = 255;
                    n.opacity = 255;
                    cc.tween(t).to(4 * i, {
                        x: 10
                    }).to(4 * i, {
                        opacity: 0
                    }).start();
                    cc.tween(n).to(4 * i, {
                        x: -10
                    }).call(function () {
                        var t = e.titleNode.getChildByName("white");
                        c.opacity = 255;
                        t.opacity = 255;
                        u.FrameMgr.audioMgr.playEffect("newEnemyShow");
                        cc.tween(c).to(4 * i, {
                            scale: 1.05
                        }).to(3 * i, {
                            scale: 1
                        }).start();
                        cc.tween(t).to(4 * i, {
                            scale: 1.05
                        }).to(7 * i, {
                            scale: 1.65,
                            opacity: 0
                        }).start();
                    }).to(4 * i, {
                        opacity: 0
                    }).start();
                }, 4 * i);
                this.nameSpr.node.opacity = 0;
                this.infoSpr.node.opacity = 0;
                this.scheduleOnce(function () {
                    e.nameSpr.node.opacity = 255;
                    cc.tween(e.infoSpr.node).delay(3 * i).to(6 * i, {
                        opacity: 255
                    }).start();
                    e.lightNode.opacity = 255;
                    cc.tween(e.lightNode).by(1, {
                        angle: 120
                    }).repeatForever().start();
                }, 11 * i);
                this.continue.opacity = 0;
                cc.tween(this.continue).delay(25 * i).to(10 * i, {
                    opacity: 255
                }).start();
            };
            e.prototype.onBtnClicked = function () {
                if (this.continue.opacity > 250) {
                    this.hide(!1);
                    h.CameraMgr.cameraFocus(f.SnakeMgr.getSnakePosition(), function () {
                        h.CameraMgr.enabled = !0;
                        d.GameRuleMgr.gameResume();
                    }, .5);
                }
            };
            e.prototype._getColor = function (t) {
                switch (t) {
                    case 3:
                        return cc.color(232, 210, 8);

                    case 7:
                    case 8:
                    case 9:
                    case 200:
                        return cc.color(254, 140, 27);

                    case 10:
                    case 12:
                        return cc.color(27, 211, 8252);

                    case 2:
                    case 6:
                    case 103:
                        return cc.color(70, 249, 20);

                    default:
                        return cc.Color.WHITE;
                }
            };
            e.attr = {
                layer: 1,
                name: "PopupNewEnemy",
                cache: s.PopupCacheMode.Normal
            };
            r([_(cc.Node)], e.prototype, "layer", void 0);
            r([_(cc.Node)], e.prototype, "bgNode", void 0);
            r([_(cc.Node)], e.prototype, "continue", void 0);
            r([_(cc.Node)], e.prototype, "titleNode", void 0);
            r([_(cc.Node)], e.prototype, "lightNode", void 0);
            r([_(cc.Sprite)], e.prototype, "nameSpr", void 0);
            r([_(cc.Sprite)], e.prototype, "roleSpr", void 0);
            r([_(cc.Sprite)], e.prototype, "infoSpr", void 0);
            r([_(cc.Sprite)], e.prototype, "roleWhiteSpr", void 0);
            r([_(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([g], e);
        }(p.default);
        i.default = y;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/CameraManager": "CameraManager",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/PopupBase": "PopupBase",
        "../../../../battle/manager/battle/GameRuleManager": "GameRuleManager",
        "../../../../battle/manager/battle/SnakeManager": "SnakeManager"
    }],
    PopupPower: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "22bdeuRVgpLvqmoR3Lqvaru", "PopupPower");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../data/manager/ConfigDataManager"), c = t("../../../../../data/storage/GameData"), l = t("../../../../../frame/manager/FrameManager"), h = t("../../../../../frame/ui/PopupBase"), u = t("../../../../../util/GameFunc"), p = t("../../../../../util/Tools"), d = cc._decorator, f = d.ccclass, m = d.property, g = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.titleSpr = null;
                e.powerNum = null;
                e.costNum = null;
                e.atlas = null;
                e.m_power = 0;
                e.m_cost = 0;
                e.m_isBtn = !1;
                return e;
            }
            e.prototype.init = function (t) {
                this.m_isBtn = t;
                var e = s.ConfigDataMgr.getGlobalDataNumArr(o.GlobalKey.PowerDiamond);
                this.m_power = Math.round(e[1]);
                this.m_cost = Math.round(e[0]);
                u.GFunc.createUINum({
                    atlas: this.atlas,
                    type: o.NumType.Power,
                    distance: 2,
                    parent: this.costNum,
                    txt: this.m_cost.toString()
                });
                u.GFunc.createUINum({
                    atlas: this.atlas,
                    type: o.NumType.Power,
                    distance: 2,
                    parent: this.powerNum,
                    color: cc.color(255, 255, 153),
                    txt: this.m_power.toString()
                }).node.scale = 1.51;
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                l.FrameMgr.languageMgr.setImage(this.titleSpr, this.atlas, (this.m_isBtn, "power_title"));
            };
            e.prototype.onBtnCloseClicked = function () {
                p.DYTools.isBtnClickedAble() && this.hide(!1);
            };
            e.prototype.onBtnRewardADClicked = function () {
                if (p.DYTools.isBtnClickedAble()) if (u.GFunc.isDiamondEnough(this.m_cost, !0)) {
                    u.GFunc.powerChange(this.m_power);
                    c.GData.setPowerTimes(c.GData.getPowerTimes() + 1);
                    l.FrameMgr.reportMgr.sendReportBuyPower(c.GData.getPowerTimes());
                    this.hide(!1);
                } else u.GFunc.showFloatTip({
                    txt: l.FrameMgr.languageMgr.getTxt(1002),
                    bgType: 2
                });
            };
            e.attr = {
                layer: 1,
                name: "PopupPower",
                cache: o.PopupCacheMode.Once
            };
            r([m(cc.Sprite)], e.prototype, "titleSpr", void 0);
            r([m(cc.Node)], e.prototype, "powerNum", void 0);
            r([m(cc.Node)], e.prototype, "costNum", void 0);
            r([m(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([f], e);
        }(h.default);
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/PopupBase": "PopupBase",
        "../../../../../util/GameFunc": "GameFunc",
        "../../../../../util/Tools": "Tools"
    }],
    PopupRelive: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e4d64PJ8utJC5xX1IYY1XnU", "PopupRelive");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConfig"), s = t("../../../../../config/GameEnum"), c = t("../../../../../data/manager/ConfigDataManager"), l = t("../../../../../data/storage/GameData"), h = t("../../../../../frame/manager/FrameManager"), u = t("../../../../../frame/ui/PopupBase"), p = t("../../../../../util/GameFunc"), d = t("../../../../../util/Tools"), f = t("../../../../battle/manager/battle/BattleManager"), m = t("../../../../battle/manager/battle/GameRuleManager"), g = t("../../../../battle/manager/battle/SnakeManager"), _ = cc._decorator, y = _.ccclass, v = _.property, b = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.firstTip = null;
                e.timeNode = null;
                e.timeSpr = null;
                e.btnNode = null;
                e.numSpr = [];
                e.adBtnNode = null;
                e.atlas = null;
                e._interval = 0;
                e._initTime = 0;
                e._time = 0;
                e._curNum = 0;
                e.m_pause = !1;
                return e;
            }
            e.prototype.init = function () {
                var t = this;
                this._initTime = c.ConfigDataMgr.getGlobalDataNum(s.GlobalKey.ReliveTime);
                this._time = this._initTime;
                this._curNum = Math.floor(this._time - .1);
                this.numSpr[0].spriteFrame = this.atlas.getSpriteFrame(this._curNum.toString());
                this.numSpr[1].spriteFrame = this.atlas.getSpriteFrame(Math.floor(this._curNum - 1).toString());
                this.firstTip.active = l.GData.isFirstRevive();
                this.timeNode.active = !this.firstTip.active;
                this.refreshLanguage();
                if (this.firstTip.active) {
                    this.btnNode.active = !1;
                    this.scheduleOnce(function () {
                        t.btnNode.active = !0;
                    }, 2);
                }
            };
            e.prototype.refreshLanguage = function () {
                h.FrameMgr.languageMgr.setImage(this.firstTip.children[0].getComponent(cc.Sprite), this.atlas, "tip");
                h.FrameMgr.languageMgr.setImage(this.btnNode.getComponent(cc.Sprite), this.atlas, "btn");
            };
            e.prototype.update = function (t) {
                var e = this;
                if (this.timeNode.active && !this.m_pause) if (this._time > 0) {
                    this._time -= t;
                    this._interval += t;
                    var i = Math.floor(this._time);
                    this.timeSpr.fillRange = this._time / this._initTime;
                    if (i < this._curNum) {
                        this._curNum = i;
                        var n = this.numSpr.shift();
                        cc.tween(n.node).to(6 * o.GConfig.ActionInterval, {
                            scale: 1.2,
                            opacity: 0
                        }).call(function () {
                            n.spriteFrame = e.atlas.getSpriteFrame(Math.ceil(e._curNum - 1).toString());
                            n.node.scale = 1;
                            n.node.active = !1;
                            e.numSpr.push(n);
                        }).start();
                        var a = this.numSpr[0].node;
                        a.active = !0;
                        a.opacity = 0;
                        cc.tween(a).to(4 * o.GConfig.ActionInterval, {
                            opacity: 255
                        }).start();
                    }
                } else {
                    this.hide(!1);
                    f.BattleMgr.result = !1;
                    m.GameRuleMgr.changeState(s.GameState.Over);
                }
            };
            e.prototype.onBtnReliveClicked = function () {
                if (d.DYTools.isBtnClickedAble(!0, 1e3)) {
                    h.FrameMgr.audioMgr.playEffect("ui_click");
                    if (this.firstTip.active) {
                        l.GData.setFirstRevive();
                        this.onRevive();
                    } else {
                        var t = Math.round(c.ConfigDataMgr.getGlobalDataNum(s.GlobalKey.ReviveDiamond, 20));
                        p.GFunc.isDiamondEnough(t, !0) ? this.onRevive() : p.GFunc.showFloatTip({
                            txt: h.FrameMgr.languageMgr.getTxt(1002),
                            bgType: 2
                        });
                    }
                }
            };
            e.prototype.onBtnRewardADClicked = function () {
                var t = this;
                if (d.DYTools.isBtnClickedAble(!0, 1e3)) {
                    this.m_pause = !0;
                    p.GFunc.playRewardAD(s.RewardADType.Revive, function () {
                        t.onRevive();
                    }, function () {
                        t.m_pause = !1;
                    });
                }
            };
            e.prototype.onRevive = function () {
                this.hide(!1);
                g.SnakeMgr.reLive();
            };
            e.attr = {
                layer: 0,
                name: "PopupRelive",
                cache: s.PopupCacheMode.Normal
            };
            r([v(cc.Node)], e.prototype, "firstTip", void 0);
            r([v(cc.Node)], e.prototype, "timeNode", void 0);
            r([v(cc.Sprite)], e.prototype, "timeSpr", void 0);
            r([v(cc.Node)], e.prototype, "btnNode", void 0);
            r([v(cc.Sprite)], e.prototype, "numSpr", void 0);
            r([v(cc.Node)], e.prototype, "adBtnNode", void 0);
            r([v(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([y], e);
        }(u.default);
        i.default = b;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/PopupBase": "PopupBase",
        "../../../../../util/GameFunc": "GameFunc",
        "../../../../../util/Tools": "Tools",
        "../../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../../battle/manager/battle/GameRuleManager": "GameRuleManager",
        "../../../../battle/manager/battle/SnakeManager": "SnakeManager"
    }],
    PopupReward: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "fd8bd7lhZxNpKIUqRkf6JFb", "PopupReward");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../config/GameEnum"), l = t("../../../../data/manager/ConfigDataManager"), h = t("../../../../frame/manager/FrameManager"), u = t("../../../../frame/ui/FrameAnim"), p = t("../../../../frame/ui/PopupBase"), d = t("../../../../util/GameFunc"), f = t("../../../../util/Tools"), m = t("../../../battle/manager/battle/SnakeManager"), g = cc._decorator, _ = g.ccclass, y = g.property, v = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.titleNode = null;
                e.titleWhiteNode = null;
                e.white1 = null;
                e.white2 = null;
                e.btnNode = null;
                e.rewardNode = null;
                e.atlas = null;
                e.m_list = [];
                e.m_rewardList = [];
                return e;
            }
            e.prototype.init = function (t) {
                this.m_list = t;
                this.initUI();
                this.refreshLanguage();
                this.playEnterAnim();
            };
            e.prototype.refreshLanguage = function () {
                h.FrameMgr.languageMgr.setImage(this.titleNode.getComponent(cc.Sprite), this.atlas, "bt");
                h.FrameMgr.languageMgr.setImage(this.titleNode.parent.getChildByName("white").getComponent(cc.Sprite), this.atlas, "bt");
                h.FrameMgr.languageMgr.setImage(this.btnNode.getChildByName("icon").getComponent(cc.Sprite), this.atlas, "btn");
            };
            e.prototype.initUI = function () {
                var t = cc.instantiate(s.GValue.pfFrameAnim);
                this.btnNode.addChild(t);
                var e = t.getComponent(u.default);
                t.scaleX = 2.25;
                t.scaleY = 1.6;
                e.init(this.atlas, "anzou", 9, 2 * o.GConfig.ActionInterval);
                e.slowAble = !1;
                e.setDuration(2);
                e.setDstBlendFactorMode1();
                e.play();
                for (var i = h.FrameMgr.loadMgr.get("TP_Item", cc.SpriteAtlas), n = this.titleWhiteNode.getComponent(cc.Sprite).getMaterial(0), a = 0; a < this.m_list.length; a++) {
                    var r = this.m_list[a], p = l.ConfigDataMgr.getData("ConfigItemData", r.x);
                    (t = new cc.Node("reward")).parent = this.rewardNode;
                    t.width = 150;
                    var g = new cc.Node("icon");
                    g.addComponent(cc.Sprite).spriteFrame = i.getSpriteFrame(p.image);
                    g.parent = t;
                    var _ = new cc.Node("white");
                    _.addComponent(cc.Sprite).spriteFrame = i.getSpriteFrame(p.image);
                    _.getComponent(cc.Sprite).setMaterial(0, n);
                    _.parent = t;
                    _.opacity = 0;
                    r.y > 1 && (d.GFunc.createUINum({
                        txt: f.DYTools.numberToString(r.y),
                        atlas: this.atlas,
                        type: c.NumType.SnakeUI,
                        parent: t
                    }).node.y = -74);
                    if (r.x > 100 && r.x < 200) {
                        g.scale = .8;
                        var y = m.SnakeMgr.getSnakeConfigDataForType(r.x);
                        if (y) {
                            var v = new cc.Node("kuang");
                            v.addComponent(cc.Sprite).spriteFrame = i.getSpriteFrame("kuang_" + y.quality);
                            v.parent = t;
                            v.scale = g.scale;
                        }
                        var b = new cc.Node("name");
                        h.FrameMgr.languageMgr.setImage(b.addComponent(cc.Sprite), i, "snake_name_" + r.x);
                        b.parent = t;
                        b.y = -164;
                    } else g.scale = 1.7;
                    this.m_rewardList.push(t);
                }
            };
            e.prototype.playEnterAnim = function () {
                var t = this, e = o.GConfig.ActionInterval;
                h.FrameMgr.audioMgr.playEffect("popupReward");
                this.white1.x = -380;
                this.white2.x = 380;
                this.titleNode.opacity = 0;
                this.white1.opacity = 255;
                this.white2.opacity = 255;
                cc.tween(this.white1).to(4 * e, {
                    x: 10
                }).to(4 * e, {
                    opacity: 0
                }).start();
                cc.tween(this.white2).to(4 * e, {
                    x: -10
                }).call(function () {
                    t.titleNode.opacity = 255;
                    t.titleWhiteNode.opacity = 255;
                    cc.tween(t.titleNode).to(4 * e, {
                        scale: 1.05
                    }).to(3 * e, {
                        scale: 1
                    }).start();
                    cc.tween(t.titleWhiteNode).to(4 * e, {
                        scale: 1.05
                    }).to(7 * e, {
                        scale: 1.65,
                        opacity: 0
                    }).start();
                }).to(4 * e, {
                    opacity: 0
                }).start();
                for (var i = 0; i < this.m_rewardList.length; i++) this.m_rewardList[i].opacity = 0;
                this.scheduleOnce(function () {
                    for (var i = function (i) {
                        var n = t.m_rewardList[i];
                        n.opacity = 255;
                        n.scale = .6;
                        cc.tween(n).to(4 * e, {
                            scale: 1.05
                        }).call(function () {
                            var t = n.getChildByName("light");
                            if (t) {
                                t.opacity = 225;
                                cc.tween(t).by(1, {
                                    angle: -120
                                }).repeatForever().start();
                            }
                        }).to(5 * e, {
                            scale: 1
                        }).call(function () {
                            for (var i = 0; i < 4; i++) {
                                var a = new cc.Node("star");
                                a.addComponent(cc.Sprite).spriteFrame = t.atlas.getSpriteFrame("star");
                                a.parent = n;
                                a.x = f.DYTools.random_int(-70, 70);
                                a.y = f.DYTools.random_int(-50, 50);
                                a.opacity = 0;
                                cc.tween(a).delay(e * i * 9).to(0, {
                                    opacity: 0,
                                    scale: f.DYTools.random_int(40, 70) / 100
                                }).to(6 * e, {
                                    scale: .8,
                                    angle: -60,
                                    opacity: 255
                                }).to(5 * e, {
                                    scale: .3,
                                    angle: -80,
                                    opacity: 0
                                }).start();
                            }
                        }).start();
                        var a = n.getChildByName("white");
                        if (a) {
                            a.opacity = 255;
                            cc.tween(a).to(4 * e, {
                                opacity: 0
                            }).start();
                        }
                    }, n = 0; n < t.m_rewardList.length; n++) i(n);
                }, 8 * e);
                this.btnNode.active = !1;
                this.scheduleOnce(function () {
                    t.btnNode.active = !0;
                    t.btnNode.scale = .7;
                    cc.tween(t.btnNode).to(4 * e, {
                        scale: 1.05
                    }).to(4 * e, {
                        scale: .95
                    }).to(3 * e, {
                        scale: 1
                    }).start();
                }, 13 * e);
            };
            e.prototype.onBtnClicked = function () {
                f.DYTools.isBtnClickedAble() && this.hide(!1);
            };
            e.attr = {
                layer: 1,
                name: "PopupReward",
                cache: c.PopupCacheMode.Once
            };
            r([y(cc.Node)], e.prototype, "titleNode", void 0);
            r([y(cc.Node)], e.prototype, "titleWhiteNode", void 0);
            r([y(cc.Node)], e.prototype, "white1", void 0);
            r([y(cc.Node)], e.prototype, "white2", void 0);
            r([y(cc.Node)], e.prototype, "btnNode", void 0);
            r([y(cc.Node)], e.prototype, "rewardNode", void 0);
            r([y(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([_], e);
        }(p.default);
        i.default = v;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../frame/ui/PopupBase": "PopupBase",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../../../battle/manager/battle/SnakeManager": "SnakeManager"
    }],
    PopupSetting: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "fc114bK1+NA/KB5TwT4knDF", "PopupSetting");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../data/storage/GameData"), c = t("../../../../../frame/manager/FrameManager"), l = t("../../../../../frame/ui/PopupBase"), h = t("../../../../../util/Tools"), u = cc._decorator, p = u.ccclass, d = u.property, f = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.titleSpr = null;
                e.musicSpr = null;
                e.musicOn = null;
                e.soundSpr = null;
                e.soundOn = null;
                e.lanSpr = null;
                e.privacySpr = null;
                e.versionLab = null;
                e.atlas = null;
                e.languageNode = null;
                e.languageLayer = null;
                e.bgArr = [];
                e.fontArr = [];
                e.m_selFontColor = cc.Color.WHITE;
                e.m_norFontColor = cc.color(65, 185, 223);
                e.m_selBgColor = cc.color(65, 185, 223);
                e.m_norBgColor = cc.color(6, 81, 98);
                return e;
            }
            e.prototype.init = function () {
                this.refreshLanguage();
                this.refreshLanguageUI();
                this._refreshSettingUI();
            };
            e.prototype.onBtnCloseClicked = function () {
                h.DYTools.isBtnClickedAble() && this.hide(!1);
            };
            e.prototype.onBtnMusicClicked = function () {
                if (h.DYTools.isBtnClickedAble()) {
                    s.GData.setMusic(!s.GData.getMusic());
                    c.FrameMgr.audioMgr.setMusicOn(s.GData.getMusic());
                    this._refreshSettingUI();
                }
            };
            e.prototype.onBtnSoundClicked = function () {
                if (h.DYTools.isBtnClickedAble()) {
                    s.GData.setSound(!s.GData.getSound());
                    c.FrameMgr.audioMgr.setSoundOn(s.GData.getSound());
                    this._refreshSettingUI();
                }
            };
            e.prototype.onBtnPrivacyClicked = function () {
                h.DYTools.isBtnClickedAble() && cc.sys.openURL("https://yiduo.link/privacy");
            };
            e.prototype.refreshLanguage = function () {
                this.lanSpr.spriteFrame = this.atlas.getSpriteFrame("lan_" + s.GData.getLanguage());
                c.FrameMgr.languageMgr.setImage(this.titleSpr, this.atlas, "sz");
                c.FrameMgr.languageMgr.setImage(this.musicSpr, this.atlas, "yy");
                c.FrameMgr.languageMgr.setImage(this.soundSpr, this.atlas, "yx");
                c.FrameMgr.languageMgr.setImage(this.privacySpr, this.atlas, "ys");
            };
            e.prototype._refreshSettingUI = function () {
                this.musicOn.active = s.GData.getMusic();
                this.soundOn.active = s.GData.getSound();
            };
            e.prototype.onBtnLanguageClicked = function () {
                if (h.DYTools.isBtnClickedAble()) {
                    this.refreshLanguageUI();
                    this.languageNode.active = !0;
                }
            };
            e.prototype.onBtnLangageSelectClicked = function (t, e) {
                if (h.DYTools.isBtnClickedAble()) {
                    var i = parseInt(e);
                    s.GData.setLanguage(i);
                    c.FrameMgr.languageMgr.language = i;
                    this.refreshLanguage();
                    this.refreshLanguageUI();
                    c.FrameMgr.noticeMgr.emit(o.EventTypeEnum.LanguageRefresh);
                    this.languageNode.active = !1;
                }
            };
            e.prototype.onBtnLanguageCloseClicked = function () {
                h.DYTools.isBtnClickedAble() && (this.languageNode.active = !1);
            };
            e.prototype.refreshLanguageUI = function () {
                var t = 0;
                switch (s.GData.getLanguage()) {
                    case 2:
                        t = 1;
                }
                for (var e = 0; e < this.bgArr.length; e++) {
                    var i = this.bgArr[e], n = this.fontArr[e];
                    if (e == t) {
                        i.color = this.m_selBgColor;
                        n.color = this.m_selFontColor;
                    } else {
                        i.color = this.m_norBgColor;
                        n.color = this.m_norFontColor;
                    }
                }
            };
            e.attr = {
                layer: 1,
                name: "PopupSetting",
                cache: o.PopupCacheMode.Once
            };
            r([d({
                type: cc.Sprite,
                tooltip: !1
            })], e.prototype, "titleSpr", void 0);
            r([d({
                type: cc.Sprite,
                tooltip: !1
            })], e.prototype, "musicSpr", void 0);
            r([d({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "musicOn", void 0);
            r([d({
                type: cc.Sprite,
                tooltip: !1
            })], e.prototype, "soundSpr", void 0);
            r([d({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "soundOn", void 0);
            r([d({
                type: cc.Sprite,
                tooltip: !1
            })], e.prototype, "lanSpr", void 0);
            r([d({
                type: cc.Sprite,
                tooltip: !1
            })], e.prototype, "privacySpr", void 0);
            r([d({
                type: cc.Label,
                tooltip: !1
            })], e.prototype, "versionLab", void 0);
            r([d(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            r([d({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "languageNode", void 0);
            r([d({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "languageLayer", void 0);
            r([d({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "bgArr", void 0);
            r([d({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "fontArr", void 0);
            return r([p], e);
        }(l.default);
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/PopupBase": "PopupBase",
        "../../../../../util/Tools": "Tools"
    }],
    PopupSettle: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1cfeaLbCb1Az5Vd3c/GnEdA", "PopupSettle");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConfig"), s = t("../../../../../config/GameConst"), c = t("../../../../../config/GameEnum"), l = t("../../../../../data/manager/ConfigDataManager"), h = t("../../../../../data/storage/GameData"), u = t("../../../../../frame/manager/FrameManager"), p = t("../../../../../frame/ui/FrameAnim"), d = t("../../../../../frame/ui/PopupBase"), f = t("../../../../../frame/ui/UINum"), m = t("../../../../../util/GameFunc"), g = t("../../../../../util/Tools"), _ = t("../../../../battle/manager/battle/BattleManager"), y = t("../../../../battle/manager/battle/LootManager"), v = t("../../../../battle/manager/battle/SnakeManager"), b = t("../../../../battle/player/move/SnakeMoveDirComp"), M = cc._decorator, S = M.ccclass, k = M.property, C = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.successNode = null;
                e.successStageNumNode = null;
                e.successTitleNode = null;
                e.successTitleIcon = null;
                e.successTitleWhite = null;
                e.stageWhite = null;
                e.otherNode = null;
                e.otherStageNode = null;
                e.otherStageProNode = null;
                e.stageArr = [];
                e.rewardNode = null;
                e.goldNode = null;
                e.curGoldIconNode = null;
                e.curGoldNumNode = null;
                e.bonus = null;
                e.bonumGoldNumNode = null;
                e.itemNode = null;
                e.diamondNode = null;
                e.snakeNode = null;
                e.btnNode = null;
                e.btn5Node = null;
                e.failNode = null;
                e.failTitleSpr = null;
                e.failStageNumNode = null;
                e.failHdSpr = null;
                e.failGoldNumNode = null;
                e.failItemNumNode = null;
                e.failGetBtnSpr = null;
                e.coinGoldNode = null;
                e.coinDiamondNode = null;
                e.shieldNode = null;
                e.atlas = null;
                e.success = !1;
                e.m_snakeGold = 0;
                e.m_curGoldNumComp = null;
                e.m_bonumGoldNumComp = null;
                e.m_bonumAddNumComp = null;
                e.m_itemNumComp = null;
                e.m_diamondNumComp = null;
                e.m_snakeUpdate = !1;
                e.m_snakeCircle = !1;
                e.m_snakePos1 = null;
                e.m_snakeCenter = null;
                e.m_snakeCircirRadius = 150;
                e.m_snakeAngleSpeed = 300;
                e.m_snakeAngle = 0;
                e.m_goldAddAnim = !1;
                e.m_goldAddDiff = 0;
                e.m_curGoldNum = 0;
                e.m_curGoldAddEnd = 0;
                e.m_bonusAdd = !1;
                e.m_bonumAddAnim = !1;
                e.m_itemAddAnim = !1;
                e.m_itemAddDiff = 0;
                e.m_curItemNum = 0;
                e.m_curItemAddEnd = 0;
                e.m_diamondAddAnim = !1;
                e.m_diamondAddDiff = 0;
                e.m_curdiamondNum = 0;
                e.m_curdiamondAddEnd = 0;
                e.m_rewardCount = 0;
                return e;
            }
            e.prototype.init = function (t) {
                if (y.LootMgr.goldNum > 0) {
                    var e = Math.round(y.LootMgr.goldNum) || 0;
                    m.GFunc.goldChange(e);
                    this.m_rewardCount++;
                }
                if (y.LootMgr.diamondNum > 0) {
                    this.diamondNode.active = !0;
                    m.GFunc.diamondChange(Math.round(y.LootMgr.diamondNum));
                    this.m_rewardCount++;
                } else this.diamondNode.active = !1;
                if (y.LootMgr.weaponItemNum > 0) {
                    m.GFunc.itemChange(301, Math.round(y.LootMgr.weaponItemNum));
                    this.m_rewardCount++;
                } else this.itemNode.active = !1;
                this.success = t;
                this.successNode.active = t;
                this.failNode.active = !t;
                if (t) {
                    this.successTitleNode.active = !0;
                    this.otherNode.active = !1;
                    var i = l.ConfigDataMgr.getData("ConfigStageInfoData", _.BattleMgr.stage), n = v.SnakeMgr.getSnakeCurrentLength() - i.snakeGoldLength;
                    if (n > 0) {
                        this.m_snakeGold = Math.round(n * v.SnakeMgr.snakeData.bodyGold);
                        m.GFunc.goldChange(this.m_snakeGold);
                    }
                    this.btn5Node.active = _.BattleMgr.stageInfoData.settle5;
                }
                switch (_.BattleMgr.gameType) {
                    case c.GameType.Coin:
                    default:
                        this.initNormalModelUI();
                        t && this.playSuccessTitleShowAnim();
                }
                this.refreshLanguge();
            };
            e.prototype.refreshLanguge = function () {
                u.FrameMgr.languageMgr.setImage(this.successTitleIcon.getComponent(cc.Sprite), this.atlas, "title1");
                u.FrameMgr.languageMgr.setImage(this.successTitleIcon.parent.children[2].getComponent(cc.Sprite), this.atlas, "title1");
                u.FrameMgr.languageMgr.setImage(this.otherStageNode.children[1].getComponent(cc.Sprite), this.atlas, "guan");
                u.FrameMgr.languageMgr.setImage(this.btnNode.getComponent(cc.Sprite), this.atlas, "btn");
                u.FrameMgr.languageMgr.setImage(this.btnNode.children[0].getComponent(cc.Sprite), this.atlas, "btn");
                var t = this.successStageNumNode.parent;
                u.FrameMgr.languageMgr.setImage(t.children[0].getComponent(cc.Sprite), this.atlas, "di");
                u.FrameMgr.languageMgr.setImage(this.failTitleSpr.getComponent(cc.Sprite), this.atlas, "title2");
                u.FrameMgr.languageMgr.setImage(this.failHdSpr.getComponent(cc.Sprite), this.atlas, "hd1");
                u.FrameMgr.languageMgr.setImage(this.failGetBtnSpr.getComponent(cc.Sprite), this.atlas, "btn");
                var e = this.failStageNumNode.parent;
                u.FrameMgr.languageMgr.setImage(e.children[0].getComponent(cc.Sprite), this.atlas, "di");
                if (u.FrameMgr.languageMgr.language == c.LanguageType.English) {
                    e.children[2].active = !1;
                    t.children[2].active = !1;
                    this.otherStageNode.children[2].active = !1;
                    this.otherStageNode.children[1].x = 0;
                } else {
                    e.children[2].active = !0;
                    t.children[2].active = !0;
                    this.otherStageNode.children[2].active = !0;
                }
            };
            e.prototype.initNormalModelUI = function () {
                if (this.success) {
                    this.background.active = !1;
                    this.createStageNum(this.successStageNumNode, _.BattleMgr.stage, c.NumType.SettleStage);
                    this.m_curGoldNumComp = this.createGoldNum(this.curGoldNumNode, g.DYTools.numberToString(Math.round(y.LootMgr.goldNum)), 0, .7, cc.color(255, 255, 255), cc.v2(0, .5));
                    var t = this.m_curGoldNumComp.node.width + 30;
                    this.goldNode.x = -t / 2;
                    if (this.m_snakeGold > 0) {
                        this.m_bonumAddNumComp = m.GFunc.createUINum({
                            atlas: this.atlas,
                            type: c.NumType.SettleAdd,
                            parent: this.goldNode,
                            txt: "+"
                        });
                        this.m_bonumAddNumComp.node.x = this.curGoldNumNode.x + this.m_curGoldNumComp.getSize().width + 10 + this.m_bonumAddNumComp.node.width / 2;
                        this.m_bonumAddNumComp.node.y = -6;
                        this.m_bonumGoldNumComp = m.GFunc.createUINum({
                            atlas: this.atlas,
                            type: c.NumType.SettleAdd,
                            parent: this.bonumGoldNumNode,
                            txt: this.m_snakeGold.toString(),
                            distance: 2
                        });
                        this.bonumGoldNumNode.parent.x = this.m_bonumAddNumComp.node.x + this.m_bonumAddNumComp.node.width / 2 + this.m_bonumGoldNumComp.getSize().width / 2 + 10;
                    }
                    if (this.diamondNode.active) {
                        this.goldNode.y = -23;
                        this.m_diamondNumComp = m.GFunc.createUINum({
                            parent: this.diamondNode,
                            atlas: this.atlas,
                            type: c.NumType.HomeCoin,
                            distance: 2,
                            anchor: cc.v2(0, .5),
                            scale: .7,
                            txt: Math.round(y.LootMgr.diamondNum).toString()
                        });
                        this.m_diamondNumComp.node.x = 30;
                        this.diamondNode.x = this.goldNode.x;
                    }
                    if (this.itemNode.active) {
                        this.m_itemNumComp = m.GFunc.createUINum({
                            parent: this.itemNode,
                            atlas: this.atlas,
                            type: c.NumType.HomeCoin,
                            distance: 2,
                            anchor: cc.v2(0, .5),
                            scale: .7,
                            txt: Math.round(y.LootMgr.weaponItemNum).toString()
                        });
                        this.m_itemNumComp.node.x = 30;
                        this.itemNode.x = this.goldNode.x;
                    }
                    switch (this.m_rewardCount) {
                        case 1:
                            this.goldNode.y = 0;
                            break;

                        case 2:
                            this.goldNode.y = -35;
                            this.diamondNode.active ? this.diamondNode.y = 35 : this.itemNode.y = 35;
                            break;

                        case 3:
                            this.diamondNode.y = 70;
                            this.itemNode.y = 0;
                            this.goldNode.y = -70;
                    }
                    this.bonus.x = this.bonumGoldNumNode.x;
                    this.goldNode.getChildByName("h1").x = this.bonus.x + 68;
                    for (var e = _.BattleMgr.stage - 1, i = l.ConfigDataMgr.getGlobalDataNum(c.GlobalKey.MaxStage), n = e <= 0 ? 1 : 0, a = 0; a < this.stageArr.length; a++) {
                        if (a < n) this.stageArr[a].active = !1; else if (e > i) this.stageArr[a].active = !1; else {
                            var r = a < 1 ? cc.color(255, 255, 255) : 1 === a ? cc.color(248, 189, 69) : cc.color(102, 102, 102), o = 1 === a ? 1.2 : .8;
                            3 == a && (o = .6);
                            this.stageArr[a].scale = o;
                            this.createStageNum(this.stageArr[a], e, c.NumType.SettleStage, r);
                        }
                        e++;
                    }
                    2 == _.BattleMgr.stage && h.GData.setGuided(c.GuideType.MainStartBattle1);
                    if (_.BattleMgr.stage == h.GData.getCurStage()) {
                        var u = l.ConfigDataMgr.getGlobalDataNum(c.GlobalKey.MaxStage);
                        h.GData.setFinishStage(_.BattleMgr.stage);
                        h.GData.getCurStage() < u ? h.GData.setCurStage(_.BattleMgr.stage + 1) : s.GValue.BattleFinish = !0;
                    }
                } else {
                    this.createStageNum(this.failStageNumNode, _.BattleMgr.stage, c.NumType.SettleStage).scale = .6;
                    this.createGoldNum(this.failGoldNumNode, Math.round(y.LootMgr.goldNum).toString(), 0, 1, cc.Color.WHITE, cc.v2(.5, .5));
                    this.createGoldNum(this.failItemNumNode, Math.round(y.LootMgr.weaponItemNum).toString(), 0, 1, cc.Color.WHITE, cc.v2(.5, .5));
                }
            };
            e.prototype.initCoinModelUI = function () {
                this.background.active = !1;
                this.createStageNum(this.successStageNumNode, _.BattleMgr.stage, 3);
                this.createGoldNum(this.coinGoldNode, Math.round(y.LootMgr.goldNum).toString());
                this.createDiamondNum(this.coinDiamondNode);
                for (var t = _.BattleMgr.stage - 1, e = 0 == t ? 1 : 0, i = 0; i < this.stageArr.length; i++) {
                    if (i < e) this.stageArr[i].active = !1; else {
                        var n = 0 === i ? cc.color(255, 255, 255) : 1 === i ? cc.color(248, 189, 69) : cc.color(102, 102, 102), a = 1 === i ? .9 : .75;
                        this.createStageNum(this.stageArr[i], t, 3, n, a);
                    }
                    t++;
                }
                2 == _.BattleMgr.stage && h.GData.setGuided(c.GuideType.MainStartBattle1);
                if (_.BattleMgr.stage == h.GData.getCurStage()) {
                    var r = l.ConfigDataMgr.getGlobalDataNum(c.GlobalKey.MaxStage);
                    h.GData.getCurStage() < r ? h.GData.setCurStage(_.BattleMgr.stage + 1) : s.GValue.BattleFinish = !0;
                }
            };
            e.prototype.createStageNum = function (t, e, i, n, a) {
                void 0 === i && (i = 5);
                void 0 === n && (n = cc.color(248, 189, 69));
                void 0 === a && (a = .8);
                var r = cc.instantiate(s.GValue.pfNum);
                r.parent = t;
                r.scale = a;
                var o = r.getComponent(f.default);
                o.setType(i);
                o.setAtlas(this.atlas);
                o.setDistance(2);
                o.setString(e.toString());
                o.setColor(n);
                t.width = o.getSize().width;
                return r;
            };
            e.prototype.createGoldNum = function (t, e, i, n, a, r) {
                void 0 === i && (i = 0);
                void 0 === n && (n = 1);
                void 0 === a && (a = cc.color(255, 255, 255));
                void 0 === r && (r = cc.v2(0, .5));
                var o = cc.instantiate(s.GValue.pfNum);
                o.x = i;
                o.scale = n;
                o.parent = t;
                var c = o.getComponent(f.default);
                c.setType(3);
                c.setAtlas(this.atlas);
                c.setDistance(2);
                c.setAnchor(r);
                c.setDiffY(".", -12);
                c.setDiffY("m", -6);
                c.setDiffY("b", -6);
                c.setString(e);
                c.setColor(a);
                return c;
            };
            e.prototype.createDiamondNum = function (t) {
                var e = cc.instantiate(s.GValue.pfNum);
                e.parent = t;
                var i = e.getComponent(f.default);
                i.setType(3);
                i.setAtlas(this.atlas);
                i.setDistance(2);
                i.setAnchor(cc.v2(0, .5));
                i.setDiffY(".", -12);
                i.setDiffY("m", -6);
                i.setDiffY("b", -6);
                i.setString(Math.round(y.LootMgr.diamondNum).toString());
            };
            e.prototype.onBtnGet5Clicked = function () {
                var t = this;
                m.GFunc.playRewardAD(c.RewardADType.Settle5, function () {
                    var e = Math.round(y.LootMgr.goldNum) || 0;
                    e *= 4;
                    m.GFunc.goldChange(e);
                    t.onBtnGetClicked();
                });
            };
            e.prototype.onBtnGetClicked = function () {
                this.shieldNode.active = !0;
                v.SnakeMgr.targetSpeed = 0;
                _.BattleMgr.setBattleData(h.GData.getCurStage());
                this.m_snakeUpdate = !1;
                if (this.success) switch (h.GData.getCurStage() - 1) {
                    case 1:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage1Over);
                        break;

                    case 2:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage2Over);
                        break;

                    case 3:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage3Over);
                        break;

                    case 4:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage4Over);
                        break;

                    case 5:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage5Over);
                        break;

                    case 6:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage6Over);
                        break;

                    case 7:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage7Over);
                        break;

                    case 8:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage8Over);
                        break;

                    case 9:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage9Over);
                        break;

                    case 10:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage10Over);
                        break;

                    case 11:
                        u.FrameMgr.reportMgr.sendReportLoading(c.LoadingStep.Stage11Over);
                }
                u.FrameMgr.audioMgr.playEffect("getReward");
                u.FrameMgr.loadMgr.loadBundleScene("mainScene", "/scene/MainScene", function (t) {
                    s.GValue.BattleToMain = !0;
                    _.BattleMgr.clear();
                    cc.director.runScene(t);
                });
            };
            e.prototype.update = function (t) {
                t > .2 && (t = 1 / 60);
                if (this.m_goldAddAnim) {
                    this.m_curGoldNum += this.m_goldAddDiff * t;
                    if (this.m_curGoldNum > this.m_curGoldAddEnd) {
                        this.m_curGoldNum = this.m_curGoldAddEnd;
                        this.m_goldAddAnim = !1;
                        if (this.m_bonusAdd) {
                            var e = cc.instantiate(s.GValue.pfFrameAnim);
                            e.parent = this.curGoldIconNode;
                            var i = e.getComponent(p.default);
                            i.init(this.atlas, "anim_star_", 9, 2 * o.GConfig.ActionInterval);
                            i.slowAble = !1;
                            i.play(1);
                            this.m_bonusAdd = !1;
                        }
                    }
                    this.m_curGoldNumComp.setString(g.DYTools.numberToString(Math.floor(this.m_curGoldNum)));
                }
                if (this.m_bonumAddAnim) {
                    this.m_curGoldNum += this.m_goldAddDiff * t;
                    if (this.m_curGoldNum > this.m_curGoldAddEnd) {
                        this.m_curGoldNum = this.m_curGoldAddEnd;
                        this.m_bonumAddAnim = !1;
                    }
                    this.m_bonumGoldNumComp && this.m_bonumGoldNumComp.setString(g.DYTools.numberToString(Math.floor(this.m_curGoldNum)));
                }
                if (this.m_itemAddAnim) {
                    this.m_curItemNum += this.m_itemAddDiff * t;
                    if (this.m_curItemNum > this.m_curItemAddEnd) {
                        this.m_curItemNum = this.m_curItemAddEnd;
                        this.m_itemAddAnim = !1;
                    }
                    this.m_itemNumComp.setString(g.DYTools.numberToString(Math.floor(this.m_curItemNum)));
                }
                if (this.m_diamondAddAnim) {
                    this.m_curdiamondNum += this.m_diamondAddDiff * t;
                    if (this.m_curdiamondNum > this.m_curdiamondAddEnd) {
                        this.m_curdiamondNum = this.m_curdiamondAddEnd;
                        this.m_diamondAddAnim = !1;
                    }
                    this.m_diamondNumComp.setString(g.DYTools.numberToString(Math.floor(this.m_curdiamondNum)));
                }
                if (this.m_snakeUpdate) {
                    v.SnakeMgr.updateLogic(t, 1);
                    var n = v.SnakeMgr.getSnake();
                    if (n) {
                        if (!this.m_snakeCircle && v.SnakeMgr.getPlayerPos().y + n.node.y >= this.m_snakePos1.y) {
                            this.m_snakeCircle = !0;
                            v.SnakeMgr.m_settleCircle = !0;
                            n.setMoveSpeed(this.m_snakeAngleSpeed / 360 * 2 * this.m_snakeCircirRadius * Math.PI);
                            v.SnakeMgr.setDir(cc.Vec2.ZERO);
                            this.scheduleOnce(function () {
                                cc.tween(n.node).to(.3, {
                                    opacity: 255
                                }).start();
                            }, .1);
                        }
                        if (this.m_snakeCircle) {
                            this.m_snakeAngle += this.m_snakeAngleSpeed * t;
                            var a = n.getMoveComp(), r = cc.v3(cc.v2(0, -this.m_snakeCircirRadius).rotate(cc.misc.degreesToRadians(this.m_snakeAngle))).add(this.m_snakeCenter);
                            a.position = r;
                            a.angle = -90 + this.m_snakeAngle;
                            n.pushSnakePosition(r);
                            this.m_snakeAngle > 360 && this.m_snakeAngleSpeed > 100 && (this.m_snakeAngleSpeed -= 10);
                        }
                        v.SnakeMgr.m_settleDelBody && (v.SnakeMgr.m_settleDelBody = !1);
                    }
                }
            };
            e.prototype.playSuccessTitleShowAnim = function () {
                var t = this;
                this.successTitleWhite.scale = .7;
                this.successTitleWhite.opacity = 0;
                this.successTitleIcon.scale = 2.95;
                var e = this.successTitleIcon.parent.getChildByName("bg");
                e.opacity = 0;
                this.stageWhite.parent.opacity = 0;
                var i = o.GConfig.ActionInterval;
                u.FrameMgr.audioMgr.playEffect("settle_success");
                cc.tween(this.successTitleIcon).to(4 * i, {
                    scale: .7
                }).call(function () {
                    u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.ScreenShake, {
                        level: 2
                    });
                    t.successTitleWhite.opacity = 255;
                    cc.tween(t.successTitleWhite).to(7 * i, {
                        scale: 1.6,
                        opacity: 0
                    }).start();
                    t.stageWhite.active = !0;
                    t.stageWhite.parent.opacity = 255;
                    cc.tween(t.stageWhite).to(7 * i, {
                        opacity: 0
                    }).start();
                    cc.tween(e).to(3 * i, {
                        opacity: 255
                    }).start();
                }).to(3 * i, {
                    scale: 1,
                    angle: 2
                }).to(3 * i, {
                    angle: -3
                }).to(5 * i, {
                    angle: 0
                }).start();
                this.scheduleOnce(function () {
                    _.BattleMgr.showGameResultForSuccess(function () {
                        t.playAnimAfterSnakeOut();
                    });
                }, 13 * i);
            };
            e.prototype.playAnimAfterSnakeOut = function () {
                var t = this;
                this.successTitleNode.active = !1;
                this.background.active = !0;
                this.otherNode.active = !0;
                this.otherNode.getChildByName("btn").active = !1;
                this.btn5Node.active && (this.btn5Node.active = !1);
                var e = o.GConfig.ActionInterval, i = this.otherStageNode.y;
                this.otherStageNode.y += 63;
                cc.tween(this.otherStageNode).to(7 * e, {
                    y: i
                }).delay(10 * e).call(function () {
                    if (l.ConfigDataMgr.getGlobalDataNum(c.GlobalKey.MaxStage) > _.BattleMgr.stage) {
                        u.FrameMgr.audioMgr.playEffect("settle_stage");
                        var i = t.stageArr[0];
                        i.active && cc.tween(i).to(5 * e, {
                            opacity: 0,
                            scale: .6,
                            x: -120
                        }).start();
                        var n = t.stageArr[1];
                        if (n.active) {
                            cc.tween(n).to(7 * e, {
                                scale: .8,
                                x: -80
                            }).start();
                            if (o = n.getChildByName("UINum")) {
                                var a = o.getComponent(f.default);
                                cc.tween(a).to(7 * e, {
                                    color: cc.color(255, 255, 255)
                                }).start();
                            }
                        }
                        var r = t.stageArr[2];
                        if (r.active) {
                            cc.tween(r).to(7 * e, {
                                scale: 1.2,
                                x: 0
                            }).start();
                            var o;
                            if (o = r.getChildByName("UINum")) {
                                a = o.getComponent(f.default);
                                cc.tween(a).to(7 * e, {
                                    color: cc.color(248, 189, 69)
                                }).start();
                            }
                        }
                        var s = t.stageArr[3];
                        s.active && cc.tween(s).to(7 * e, {
                            scale: .8,
                            x: 80,
                            opacity: 255
                        }).start();
                    }
                }).start();
                var n = this;
                (function () {
                    var t = n.rewardNode.getChildByName("bg");
                    t.height = 177;
                    2 == n.m_rewardCount ? t.height = 196 : 3 == n.m_rewardCount && (t.height = 228);
                    t.scaleX = .3;
                    t.scaleY = .96;
                    t.angle = -20;
                    t.x = -600;
                    n.scheduleOnce(function () {
                        u.FrameMgr.audioMgr.playEffect("settle_board");
                        cc.tween(t).to(3 * e, {
                            scaleX: 1.1,
                            scaleY: 1.43,
                            angle: -3.5,
                            x: 0
                        }).to(3 * e, {
                            scaleX: 1,
                            scaleY: 1,
                            angle: 1.5
                        }).to(2 * e, {
                            angle: -2
                        }).to(2 * e, {
                            angle: 1
                        }).to(3 * e, {
                            angle: -1.5
                        }).to(3 * e, {
                            angle: 0
                        }).start();
                    }, 26 * e);
                })();
                var a = 36 * e;
                if (this.diamondNode.active) {
                    this.diamondNode.opacity = 0;
                    this.scheduleOnce(function () {
                        t.m_diamondAddAnim = !0;
                        t.m_diamondNumComp.setString("0");
                        t.m_diamondAddDiff = Math.round(y.LootMgr.diamondNum) / (9 * e);
                        t.m_curdiamondAddEnd = Math.round(y.LootMgr.diamondNum);
                        u.FrameMgr.audioMgr.playEffect("settle_number");
                        t.diamondNode.opacity = 255;
                        var i = t.m_diamondNumComp.node.scale;
                        cc.tween(t.m_diamondNumComp.node).to(4 * e, {
                            scale: 2 * i
                        }).to(1 * e, {
                            scale: 1.85 * i
                        }).to(1 * e, {
                            scale: 2 * i
                        }).to(1 * e, {
                            scale: 1.85 * i
                        }).to(1 * e, {
                            scale: 2 * i
                        }).to(1 * e, {
                            scale: 1.85 * i
                        }).delay(3 * e).to(2 * e, {
                            scale: 1 * i
                        }).to(1 * e, {
                            scale: 1.07 * i
                        }).to(1 * e, {
                            scale: 1 * i
                        }).start();
                    }, a);
                    a += 9 * e;
                }
                if (this.itemNode.active) {
                    this.itemNode.opacity = 0;
                    this.scheduleOnce(function () {
                        t.m_itemAddAnim = !0;
                        t.m_itemNumComp.setString("0");
                        t.m_itemAddDiff = Math.round(y.LootMgr.weaponItemNum) / (9 * e);
                        t.m_curItemAddEnd = Math.round(y.LootMgr.weaponItemNum);
                        u.FrameMgr.audioMgr.playEffect("settle_number");
                        t.itemNode.opacity = 255;
                        var i = t.m_itemNumComp.node.scale;
                        cc.tween(t.m_itemNumComp.node).to(4 * e, {
                            scale: 2 * i
                        }).to(1 * e, {
                            scale: 1.85 * i
                        }).to(1 * e, {
                            scale: 2 * i
                        }).to(1 * e, {
                            scale: 1.85 * i
                        }).to(1 * e, {
                            scale: 2 * i
                        }).to(1 * e, {
                            scale: 1.85 * i
                        }).delay(3 * e).to(2 * e, {
                            scale: 1 * i
                        }).to(1 * e, {
                            scale: 1.07 * i
                        }).to(1 * e, {
                            scale: 1 * i
                        }).start();
                    }, a);
                    a += 9 * e;
                }
                this.curGoldIconNode.opacity = 0;
                this.curGoldNumNode.opacity = 0;
                this.curGoldNumNode.scale = .6;
                this.bonus.opacity = 0;
                this.bonumGoldNumNode.opacity = 0;
                this.m_bonumAddNumComp && (this.m_bonumAddNumComp.node.opacity = 0);
                this.scheduleOnce(function () {
                    t.m_goldAddAnim = !0;
                    t.m_curGoldNumComp.setString("0");
                    t.m_goldAddDiff = Math.round(y.LootMgr.goldNum) / (18 * e);
                    t.m_curGoldAddEnd = Math.round(y.LootMgr.goldNum);
                    u.FrameMgr.audioMgr.playEffect("settle_number");
                    t.curGoldIconNode.opacity = 255;
                    t.curGoldNumNode.opacity = 255;
                    cc.tween(t.curGoldNumNode).to(8 * e, {
                        scale: 2
                    }).to(2 * e, {
                        scale: 1.85
                    }).to(2 * e, {
                        scale: 2
                    }).to(2 * e, {
                        scale: 1.85
                    }).to(2 * e, {
                        scale: 2
                    }).to(2 * e, {
                        scale: 1.85
                    }).delay(3 * e).to(3 * e, {
                        scale: 1
                    }).to(2 * e, {
                        scale: 1.07
                    }).to(2 * e, {
                        scale: 1
                    }).start();
                }, a);
                this.scheduleOnce(function () {
                    t.playSnakeInAnim();
                }, 25 * e);
            };
            e.prototype.playSnakeInAnim = function () {
                var t = this, e = o.GConfig.ActionInterval, i = this;
                (function () {
                    var n = v.SnakeMgr.getSnake();
                    n.node.parent = i.snakeNode;
                    n.node.y = -s.GValue.ViewCenter.y - 50;
                    n.changeSnakePos(cc.v2(0, 0), cc.v2(0, -1));
                    v.SnakeMgr.setDir(cc.v2(0, 1));
                    v.SnakeMgr.setJoyRat(1);
                    i.m_snakePos1 = i.snakeNode.getChildByName("start").getPosition();
                    i.m_snakeCenter = i.snakeNode.getChildByName("center").position;
                    i.m_snakeCenter.y += s.GValue.ViewCenter.y + 50;
                    n.getSnakeHead().changeMoveComp(b.default);
                    n.node.opacity = 100;
                    v.SnakeMgr.targetSpeed = 1200;
                    i.m_snakeUpdate = !0;
                    for (var a = v.SnakeMgr.getSnakeUnits(), r = 0; r < a.length; r++) {
                        a[r].node.opacity = 255;
                        a[r]._snakeOutCall = null;
                    }
                    i.scheduleOnce(function () {
                        v.SnakeMgr.m_settleDelBody = !0;
                        var i = l.ConfigDataMgr.getData("ConfigStageInfoData", _.BattleMgr.stage), a = v.SnakeMgr.getSnakeCurrentLength() - i.snakeGoldLength;
                        a > 0 && u.FrameMgr.audioMgr.playEffect("toGold");
                        for (var r = function (i) {
                            var n = v.SnakeMgr.getSnakeCurrentLength(), a = g.DYTools.random_int(1, n - 2), r = v.SnakeMgr.getSnake().getSnakeNode(a).convertToWorldSpaceAR(cc.Vec2.ZERO);
                            v.SnakeMgr.getSnake().removeSnakeBody(a, !1);
                            var o = cc.instantiate(s.GValue.pfFrameAnim);
                            o.parent = t.curGoldIconNode;
                            o.setPosition(t.curGoldIconNode.convertToNodeSpaceAR(r));
                            var c = o.getComponent(p.default);
                            c.slowAble = !1;
                            c.init(t.atlas, "gold_", 6, 2 * e);
                            c.play();
                            cc.tween(o).to(e * g.DYTools.random_int(2, 4), {
                                scale: 1.2
                            }).to(e * g.DYTools.random_int(3, 6), {
                                scale: 1
                            }).to(e * g.DYTools.random_int(4, 7), {
                                y: -g.DYTools.random_int(30, 50)
                            }).to(e * g.DYTools.random_int(7, 12), {
                                x: 0,
                                y: 0
                            }).call(function () {
                                var n = cc.instantiate(s.GValue.pfFrameAnim), a = n.getComponent(p.default);
                                a.slowAble = !1;
                                n.parent = t.curGoldIconNode;
                                n.color = cc.color(255, 255, 51);
                                a.init(t.atlas, "anim_gold_arrival_", 6, 2 * e);
                                a.play(1);
                                o.destroy();
                                0 == i && cc.tween(t.curGoldIconNode).to(2 * e, {
                                    scale: 1.3
                                }).to(2 * e, {
                                    scale: 1
                                }).to(2 * e, {
                                    scale: 1.3
                                }).to(2 * e, {
                                    scale: 1
                                }).to(2 * e, {
                                    scale: 1.3
                                }).to(2 * e, {
                                    scale: 1
                                }).start();
                            }).start();
                        }, o = 0; o < a; o++) r(o);
                        t.scheduleOnce(function () {
                            cc.tween(n.node).to(8 * e, {
                                opacity: 75
                            }).start();
                        }, .2);
                    }, 2);
                })();
                var n = 0;
                if (this.m_bonumGoldNumComp) {
                    this.scheduleOnce(function () {
                        t.playAddBonusGoldAnim();
                    }, 20 * e + 2);
                    n = 60 * e + 2;
                } else n = 20 * e + 2;
                this.scheduleOnce(function () {
                    var i = t.otherNode.getChildByName("btn");
                    i.active = !0;
                    i.scale = .7;
                    cc.tween(i).to(3 * e, {
                        scale: 1.05
                    }).to(3 * e, {
                        scale: 1
                    }).call(function () {
                        var e = cc.instantiate(s.GValue.pfFrameAnim);
                        e.parent = i;
                        e.y = 4;
                        e.scaleX = 2.7;
                        e.scaleY = 1.7;
                        var n = e.getComponent(p.default);
                        n.init(t.atlas, "anzou", 9, 2 * o.GConfig.ActionInterval);
                        n.slowAble = !1;
                        n.setDuration(2);
                        n.play();
                    }).start();
                    var n = i.getChildByName("white");
                    n.active = !0;
                    cc.tween(n).delay(e).to(3 * e, {
                        opacity: 0
                    }).start();
                    if (_.BattleMgr.stageInfoData.settle5) {
                        t.btn5Node.active = !0;
                        t.btn5Node.scale = .7;
                        cc.tween(t.btn5Node).to(3 * e, {
                            scale: 1.05
                        }).to(3 * e, {
                            scale: 1
                        }).start();
                        var a = t.btn5Node.getChildByName("white");
                        a.active = !0;
                        cc.tween(a).delay(e).to(3 * e, {
                            opacity: 0
                        }).start();
                    }
                }, n);
            };
            e.prototype.playAddBonusGoldAnim = function () {
                var t = this, e = o.GConfig.ActionInterval;
                this.bonus.opacity = 255;
                cc.tween(this.bonus).to(2 * e, {
                    scale: 1.1
                }).to(2 * e, {
                    scale: 1
                }).to(2 * e, {
                    scale: 1.1
                }).to(2 * e, {
                    scale: 1
                }).to(2 * e, {
                    scale: 1.1
                }).to(2 * e, {
                    scale: 1
                }).delay(12 * e).to(3 * e, {
                    x: this.curGoldNumNode.x
                }).call(function () {
                    t.bonus.opacity = 0;
                }).start();
                this.bonumGoldNumNode.opacity = 255;
                this.bonumGoldNumNode.scale = .7;
                this.m_bonumAddNumComp && (this.m_bonumAddNumComp.node.opacity = 255);
                this.m_bonumGoldNumComp.setString("0");
                cc.tween(this.bonumGoldNumNode).to(2 * e, {
                    scale: 1.1
                }).call(function () {
                    t.m_bonumAddAnim = !0;
                    t.m_curGoldNum = 0;
                    t.m_goldAddDiff = Math.round(t.m_snakeGold) / (10 * e);
                    t.m_curGoldAddEnd = t.m_snakeGold;
                }).to(2 * e, {
                    scale: 1
                }).to(2 * e, {
                    scale: 1.1
                }).to(2 * e, {
                    scale: 1
                }).to(2 * e, {
                    scale: 1.1
                }).to(2 * e, {
                    scale: 1
                }).delay(12 * e).to(3 * e, {
                    x: this.curGoldNumNode.x
                }).call(function () {
                    t.bonumGoldNumNode.opacity = 0;
                    t.m_bonumAddNumComp && (t.m_bonumAddNumComp.node.opacity = 0);
                }).start();
                this.scheduleOnce(function () {
                    (function () {
                        var i = t.goldNode.getChildByName("h1");
                        i.active = !0;
                        cc.tween(i).to(3 * e, {
                            scaleX: .95,
                            scaleY: .1,
                            x: t.curGoldNumNode.x + 30
                        }).delay(e).call(function () {
                            i.active = !1;
                        }).start();
                    })();
                    t.m_goldAddAnim = !0;
                    t.m_curGoldNum = Math.round(y.LootMgr.goldNum);
                    t.m_goldAddDiff = t.m_snakeGold / (10 * e);
                    t.m_curGoldAddEnd = Math.round(y.LootMgr.goldNum) + Math.round(t.m_snakeGold);
                    t.m_bonusAdd = !0;
                    u.FrameMgr.audioMgr.playEffect("settle_number");
                    cc.tween(t.curGoldNumNode).to(2 * e, {
                        scale: 1.2
                    }).to(2 * e, {
                        scale: 1
                    }).to(2 * e, {
                        scale: 1.2
                    }).to(2 * e, {
                        scale: .95
                    }).to(2 * e, {
                        scale: 1
                    }).start();
                    t.curGoldIconNode.stopAllActions();
                    cc.tween(t.curGoldIconNode).to(2 * e, {
                        scale: 1.3
                    }).to(2 * e, {
                        scale: 1
                    }).to(2 * e, {
                        scale: 1.3
                    }).to(2 * e, {
                        scale: 1
                    }).to(2 * e, {
                        scale: 1.3
                    }).to(2 * e, {
                        scale: 1
                    }).to(2 * e, {
                        scale: 1.35
                    }).to(2 * e, {
                        scale: 1
                    }).start();
                }, 27 * e);
            };
            e.attr = {
                layer: 0,
                name: "PopupSettle",
                cache: c.PopupCacheMode.Once
            };
            r([k(cc.Node)], e.prototype, "successNode", void 0);
            r([k(cc.Node)], e.prototype, "successStageNumNode", void 0);
            r([k(cc.Node)], e.prototype, "successTitleNode", void 0);
            r([k(cc.Node)], e.prototype, "successTitleIcon", void 0);
            r([k(cc.Node)], e.prototype, "successTitleWhite", void 0);
            r([k(cc.Node)], e.prototype, "stageWhite", void 0);
            r([k(cc.Node)], e.prototype, "otherNode", void 0);
            r([k(cc.Node)], e.prototype, "otherStageNode", void 0);
            r([k(cc.Node)], e.prototype, "otherStageProNode", void 0);
            r([k(cc.Node)], e.prototype, "stageArr", void 0);
            r([k(cc.Node)], e.prototype, "rewardNode", void 0);
            r([k(cc.Node)], e.prototype, "goldNode", void 0);
            r([k(cc.Node)], e.prototype, "curGoldIconNode", void 0);
            r([k(cc.Node)], e.prototype, "curGoldNumNode", void 0);
            r([k(cc.Node)], e.prototype, "bonus", void 0);
            r([k(cc.Node)], e.prototype, "bonumGoldNumNode", void 0);
            r([k(cc.Node)], e.prototype, "itemNode", void 0);
            r([k(cc.Node)], e.prototype, "diamondNode", void 0);
            r([k(cc.Node)], e.prototype, "snakeNode", void 0);
            r([k(cc.Node)], e.prototype, "btnNode", void 0);
            r([k(cc.Node)], e.prototype, "btn5Node", void 0);
            r([k(cc.Node)], e.prototype, "failNode", void 0);
            r([k(cc.Sprite)], e.prototype, "failTitleSpr", void 0);
            r([k(cc.Node)], e.prototype, "failStageNumNode", void 0);
            r([k(cc.Sprite)], e.prototype, "failHdSpr", void 0);
            r([k(cc.Node)], e.prototype, "failGoldNumNode", void 0);
            r([k(cc.Node)], e.prototype, "failItemNumNode", void 0);
            r([k(cc.Sprite)], e.prototype, "failGetBtnSpr", void 0);
            r([k(cc.Node)], e.prototype, "coinGoldNode", void 0);
            r([k(cc.Node)], e.prototype, "coinDiamondNode", void 0);
            r([k(cc.Node)], e.prototype, "shieldNode", void 0);
            r([k(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([S], e);
        }(d.default);
        i.default = C;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../frame/ui/PopupBase": "PopupBase",
        "../../../../../frame/ui/UINum": "UINum",
        "../../../../../util/GameFunc": "GameFunc",
        "../../../../../util/Tools": "Tools",
        "../../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../../battle/manager/battle/LootManager": "LootManager",
        "../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "../../../../battle/player/move/SnakeMoveDirComp": "SnakeMoveDirComp"
    }],
    PopupSnakeInfo: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "42867h5jtlFRKUSFmZqQ5zJ", "PopupSnakeInfo");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        }, o = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, s = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var c = t("../../../../../../config/GameConfig"), l = t("../../../../../../config/GameConst"), h = t("../../../../../../config/GameEnum"), u = t("../../../../../../data/manager/ConfigDataManager"), p = t("../../../../../../data/storage/GameData"), d = t("../../../../../../frame/manager/FrameManager"), f = t("../../../../../../frame/ui/FrameAnim"), m = t("../../../../../../frame/ui/PopupBase"), g = t("../../../../../../util/GameFunc"), _ = t("../../../../../../util/Tools"), y = t("../../../../../battle/manager/battle/SnakeManager"), v = t("../../../../../battle/manager/common/GuideManager"), b = t("../../../../../battle/player/skill/fireball/SnakeSkillFireBall"), M = t("../../../../../battle/player/skill/forst/SnakeSkillForst"), S = t("../../../../../battle/player/skill/thorns/SnakeSkillThorns"), k = t("./SnakeSkillEvent"), C = cc._decorator, w = C.ccclass, A = C.property, T = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.uiNode = null;
                e.roleSpr = null;
                e.useBtnNode = null;
                e.usedNode = null;
                e.cardSpr = null;
                e.kuangSpr = null;
                e.proSpr = null;
                e.arrowSpr = null;
                e.spine = null;
                e.nameSpr = null;
                e.lvNode = null;
                e.infoLab = null;
                e.attrView = null;
                e.pageBar = [];
                e.enemyNode = null;
                e.title1Spr = null;
                e.atkNum = null;
                e.hpNum = null;
                e.circleNum = null;
                e.skillName = null;
                e.skillNum = null;
                e.skillCDName = null;
                e.skillCDNum = null;
                e.attrLab = [];
                e.title2Spr = null;
                e.skillNode = null;
                e.circleSpine = null;
                e.skillAnim = null;
                e.skillEvent = null;
                e.skillNull = null;
                e.getNode = null;
                e.upgradeNode = null;
                e.coinSpr = null;
                e.itemSpr = null;
                e.itemNum = null;
                e.fullNode = null;
                e.shield = null;
                e.roleAtlas = null;
                e.atlas = null;
                e.m_data = null;
                e.m_item = null;
                e.m_weaponData = null;
                e.m_nextData = null;
                e.m_unlock = !1;
                e.m_cardProNum = null;
                e.m_lvNum = null;
                e.m_goldCostNum = null;
                e.m_itemCostNum = null;
                e.m_itemOwnNum = null;
                e.m_fullLv = !1;
                e.m_lvupNodes = [];
                e.m_itemCount = 0;
                e.m_enemyDieAnim = null;
                e.m_skill = null;
                e.m_time = 0;
                e.m_guide = 0;
                return e;
            }
            i = e;
            e.prototype.init = function (t) {
                var e = this;
                i.popup = this;
                this.m_data = t.data ? t.data : y.SnakeMgr.getSnakeConfigDataForType(t.snakeType);
                this.m_item = t.item;
                this.m_weaponData = u.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", p.GData.getSnakeTurretLv());
                this.initSnakeRes();
                this.refreshUI();
                this.playEnterAnim();
                this.scheduleOnce(function () {
                    e.checkGuide();
                }, .2);
                this.spine.setCompleteListener(function () {
                    e.spine.node.opacity = 0;
                });
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                d.FrameMgr.languageMgr.setImage(this.nameSpr, this.atlas, "name" + this.m_data.type);
                d.FrameMgr.languageMgr.setImage(this.fullNode.getComponent(cc.Sprite), this.atlas, "full2");
                d.FrameMgr.languageMgr.setImage(this.useBtnNode.children[0].getComponent(cc.Sprite), this.atlas, "btn3");
                d.FrameMgr.languageMgr.setImage(this.usedNode.getComponent(cc.Sprite), this.atlas, "syz2");
                d.FrameMgr.languageMgr.setImage(this.title1Spr, this.atlas, "t2");
                d.FrameMgr.languageMgr.setImage(this.title2Spr, this.atlas, "t1");
                d.FrameMgr.languageMgr.setImage(this.skillNull.getComponent(cc.Sprite), this.atlas, "jqqd");
                d.FrameMgr.languageMgr.setImage(this.getNode.children[0].getComponent(cc.Sprite), this.atlas, "info_btn_get");
                d.FrameMgr.languageMgr.setImage(this.upgradeNode.children[0].getComponent(cc.Sprite), this.atlas, "info_btn_upgrade");
                for (var t = 0; t < this.attrLab.length; t++) this.attrLab[t].string = d.FrameMgr.languageMgr.getTxt(2e3 + t);
            };
            e.prototype.update = function (t) {
                this.m_skill && this.m_skill.updateUI(t);
            };
            e.prototype.refreshData = function (t) {
                t && (this.m_data = y.SnakeMgr.getSnakeConfigDataForType(this.m_data.type));
                this.m_nextData = y.SnakeMgr.getSnakeConfigDataForId(this.m_data.id + 1);
            };
            e.prototype.refreshUI = function (t) {
                void 0 === t && (t = !1);
                this.m_lvupNodes.splice(0);
                this.m_unlock = y.SnakeMgr.isSnakeUnlock(this.m_data.type);
                this.refreshData(t);
                this.m_fullLv = !this.m_nextData;
                if (this.m_unlock) {
                    this.useBtnNode.active = y.SnakeMgr.getCurSnakeType() != this.m_data.type;
                    this.usedNode.active = y.SnakeMgr.getCurSnakeType() == this.m_data.type;
                } else {
                    this.useBtnNode.active = !1;
                    this.usedNode.active = !1;
                }
                var e = g.GFunc.isGoldEnough(this.m_data.costGold), i = g.GFunc.isItemEnough(this.m_data.costMaterial.itemId, this.m_data.costMaterial.itemNum);
                this.roleSpr.spriteFrame = this.roleAtlas.getSpriteFrame("lh_" + this.m_data.type);
                var n = p.GData.getItemNum(this.m_data.costMaterial.itemId);
                this.m_itemCount = n;
                var a = this.m_data.costMaterial.itemNum;
                this.m_data.atk, this.m_weaponData.normalAtk;
                this.cardSpr.spriteFrame = this.atlas.getSpriteFrame("item_" + this.m_data.type);
                this.kuangSpr.spriteFrame = this.atlas.getSpriteFrame("kuang_" + this.m_data.quality);
                this.arrowSpr.spriteFrame = this.atlas.getSpriteFrame("jt" + (n >= a ? 1 : 2));
                this.proSpr.spriteFrame = this.atlas.getSpriteFrame("jd" + (n >= a ? 2 : 3));
                this.proSpr.fillRange = Math.min(n / a, 1);
                if (!this.m_cardProNum) {
                    this.m_cardProNum = g.GFunc.createUINum({
                        atlas: this.atlas,
                        type: h.NumType.SnakeUI,
                        parent: this.proSpr.node.parent,
                        distance: 2
                    });
                    this.m_cardProNum.node.x = 4;
                    this.m_cardProNum.node.scale = .7;
                }
                this.m_cardProNum.setString(n + "/" + a);
                cc.Tween.stopAllByTarget(this.arrowSpr.node);
                this.arrowSpr.node.y = 4;
                this.arrowSpr.node.scale = 1;
                if (i) {
                    var r = c.GConfig.ActionInterval;
                    cc.tween(this.arrowSpr.node).to(6 * r, {
                        scaleX: 1,
                        scaleY: 1.15,
                        y: 12
                    }).to(16 * r, {
                        scaleX: 1,
                        scaleY: 1,
                        y: 4
                    }).union().repeatForever().start();
                }
                d.FrameMgr.languageMgr.setImage(this.nameSpr, this.atlas, "name" + this.m_data.type);
                this.infoLab.string = d.FrameMgr.languageMgr.getTxt(this.m_data.content);
                this.m_lvNum || (this.m_lvNum = g.GFunc.createUINum({
                    atlas: this.atlas,
                    type: h.NumType.SnakeUI,
                    parent: this.lvNode,
                    distance: 2
                }));
                this.m_lvNum.setString(y.SnakeMgr.getSnakeLv(this.m_data.type).toString());
                this.m_lvNum.node.width = this.m_lvNum.getSize().width;
                this._refreshAtkNum();
                this._refreshHpNum();
                this._refreshCircleNum();
                this._refreshSkillAtkNum();
                do {
                    _.DYTools.removeChildByName(this.upgradeNode, "anim");
                    if (!this.m_unlock) {
                        this.fullNode.active = !1;
                        this.getNode.active = !0;
                        this.upgradeNode.active = !1;
                        this.proSpr.node.parent.active = !1;
                        this.lvNode.active = !1;
                        this.nameSpr.node.y -= 20;
                        break;
                    }
                    this.getNode.active = !1;
                    if (this.m_fullLv) {
                        this.upgradeNode.active = !1;
                        this.fullNode.active = !0;
                        this.proSpr.node.parent.active = !1;
                        this.useBtnNode.y = -330;
                    } else {
                        this.upgradeNode.active = !0;
                        this.fullNode.active = !1;
                        this.useBtnNode.y = -316;
                        this.coinSpr.spriteFrame = this.atlas.getSpriteFrame("item_gold_1");
                        if (!this.m_goldCostNum) {
                            this.m_goldCostNum = g.GFunc.createUINum({
                                atlas: this.atlas,
                                type: h.NumType.SnakeUI,
                                parent: this.coinSpr.node.parent,
                                distance: 2
                            });
                            this.m_goldCostNum.setDiffY(".", -10);
                            this.m_goldCostNum.node.scale = .7;
                            this.m_goldCostNum.node.x = 6;
                        }
                        this.m_goldCostNum.color = e ? cc.Color.WHITE : cc.Color.RED;
                        this.m_goldCostNum.setString(_.DYTools.numberToString(this.m_data.costGold));
                        u.ConfigDataMgr.getData("ConfigItemData", this.m_data.costMaterial.itemId);
                        if (!this.m_itemOwnNum) {
                            this.m_itemOwnNum = g.GFunc.createUINum({
                                atlas: this.atlas,
                                type: h.NumType.SnakeUI,
                                parent: this.itemNum,
                                distance: 2
                            });
                            this.m_itemOwnNum.node.scale = .7;
                        }
                        this.m_itemOwnNum.color = i ? cc.Color.WHITE : cc.Color.RED;
                        this.m_itemOwnNum.setString(p.GData.getItemNum(this.m_data.costMaterial.itemId).toString());
                        if (!this.m_itemCostNum) {
                            this.m_itemCostNum = g.GFunc.createUINum({
                                atlas: this.atlas,
                                type: h.NumType.SnakeUI,
                                parent: this.itemNum,
                                distance: 2
                            });
                            this.m_itemCostNum.node.scale = .7;
                        }
                        this.m_itemCostNum.setString("/" + this.m_data.costMaterial.itemNum);
                        if (e && i) {
                            var o = this.upgradeNode.getChildByName("anim");
                            if (!o) {
                                (o = cc.instantiate(l.GValue.pfFrameAnim)).name = "anim";
                                o.parent = this.upgradeNode;
                                o.y = 4;
                                o.scaleX = 2.4;
                                o.scaleY = 1.5;
                                var s = o.getComponent(f.default);
                                s.init(this.atlas, "anzou", 9, 2 * c.GConfig.ActionInterval);
                                s.slowAble = !1;
                            }
                            var m = o.getComponent(f.default);
                            m.setDuration(2);
                            m.play();
                        }
                    }
                } while (0);
            };
            e.prototype._refreshAtkNum = function (t) {
                void 0 === t && (t = !1);
                var e = this.m_data.atk * this.m_weaponData.normalAtk;
                this.atkNum.destroyAllChildren();
                var i = g.GFunc.createUINum({
                    atlas: this.atlas,
                    type: h.NumType.SnakeUI,
                    parent: this.atkNum,
                    distance: 2,
                    anchor: cc.v2(0, .5)
                });
                i.node.name = "cur";
                i.setDiffY(".", -8);
                i.setString(Math.round(e).toString());
                if (this.m_unlock && this.m_nextData) {
                    var n = this.m_nextData.atk * this.m_weaponData.normalAtk, a = Math.round(n - e), r = g.GFunc.createUINum({
                        atlas: this.atlas,
                        type: h.NumType.SnakeUI,
                        parent: this.atkNum,
                        distance: 2,
                        color: cc.color(112, 253, 68),
                        anchor: cc.v2(0, .5)
                    });
                    r.node.name = "add";
                    r.setDiffY(".", -8);
                    r.setString("+" + a);
                    r.node.x = i.node.x + i.getSize().width + 4;
                    t || this.m_lvupNodes.push(this.atkNum.parent);
                }
            };
            e.prototype._refreshHpNum = function (t) {
                void 0 === t && (t = !1);
                this.hpNum.destroyAllChildren();
                var e = g.GFunc.createUINum({
                    atlas: this.atlas,
                    type: h.NumType.SnakeUI,
                    parent: this.hpNum,
                    distance: 2,
                    anchor: cc.v2(0, .5),
                    txt: this.m_data.hp.toString()
                });
                e.node.name = "cur";
                if (this.m_unlock && this.m_nextData && this.m_nextData.hp > this.m_data.hp) {
                    var i = g.GFunc.createUINum({
                        atlas: this.atlas,
                        type: h.NumType.SnakeUI,
                        parent: this.hpNum,
                        distance: 2,
                        color: cc.color(112, 253, 68),
                        anchor: cc.v2(0, .5),
                        txt: "+" + (this.m_nextData.hp - this.m_data.hp)
                    });
                    i.node.name = "add";
                    i.node.x = e.node.x + e.getSize().width + 4;
                    t || this.m_lvupNodes.push(this.hpNum.parent);
                }
            };
            e.prototype._refreshCircleNum = function (t) {
                void 0 === t && (t = !1);
                var e = this.m_data.atk * this.m_weaponData.normalAtk;
                this.circleNum.destroyAllChildren();
                var i = g.GFunc.createUINum({
                    atlas: this.atlas,
                    type: h.NumType.SnakeUI,
                    parent: this.circleNum,
                    distance: 2,
                    anchor: cc.v2(0, .5)
                });
                i.node.name = "cur";
                i.setDiffY(".", -8);
                i.setString(Math.round(e * this.m_data.circle).toString());
                if (this.m_unlock && this.m_nextData) {
                    var n = this.m_nextData.atk * this.m_weaponData.normalAtk, a = g.GFunc.createUINum({
                        atlas: this.atlas,
                        type: h.NumType.SnakeUI,
                        parent: this.circleNum,
                        distance: 2,
                        color: cc.color(112, 253, 68),
                        anchor: cc.v2(0, .5)
                    });
                    a.node.name = "add";
                    a.setDiffY(".", -8);
                    a.setString("+" + Math.round(this.m_nextData.circle * n - this.m_data.circle * e));
                    a.node.x = i.node.x + i.getSize().width + 4;
                    t || this.m_lvupNodes.push(this.circleNum.parent);
                }
            };
            e.prototype._refreshSkillAtkNum = function (t) {
                void 0 === t && (t = !1);
                var e = this.m_data.atk * this.m_weaponData.normalAtk, i = u.ConfigDataMgr.getData("ConfigSnakeSkillData", this.m_data.skillId);
                if (i) {
                    this.skillName.active = !0;
                    this.skillNum.destroyAllChildren();
                    var n = g.GFunc.createUINum({
                        atlas: this.atlas,
                        type: h.NumType.SnakeUI,
                        parent: this.skillNum,
                        distance: 2,
                        anchor: cc.v2(0, .5)
                    });
                    n.node.name = "cur";
                    n.setDiffY(".", -8);
                    n.setString(Math.round(i.atk * e).toString());
                    if (this.m_unlock && this.m_nextData) {
                        var a = this.m_nextData.atk * this.m_weaponData.normalAtk, r = u.ConfigDataMgr.getData("ConfigSnakeSkillData", this.m_nextData.skillId);
                        if (r) {
                            var o = Math.round(r.atk * a - e * i.atk), s = g.GFunc.createUINum({
                                atlas: this.atlas,
                                type: h.NumType.SnakeUI,
                                parent: this.skillNum,
                                distance: 2,
                                color: cc.color(112, 253, 68),
                                anchor: cc.v2(0, .5)
                            });
                            s.node.name = "add";
                            s.setDiffY(".", -8);
                            s.setString("+" + o);
                            s.node.x = n.node.x + n.getSize().width + 4;
                            t || this.m_lvupNodes.push(this.skillNum.parent);
                        }
                    }
                }
            };
            e.prototype._refreshSkillCDNum = function (t) {
                void 0 === t && (t = !1);
            };
            e.prototype.initSnakeRes = function () {
                return o(this, void 0, void 0, function () {
                    return s(this, function (t) {
                        switch (t.label) {
                            case 0:
                                return [4, i.loadSnakeRes(this.m_data.type)];

                            case 1:
                                if (t.sent()) {
                                    this.initSnake();
                                    this.initSkill();
                                    this.initEnemy();
                                }
                                return [2];
                        }
                    });
                });
            };
            e.prototype.initSnake = function () { };
            e.prototype.initEnemy = function () {
                if (!this.m_enemyDieAnim) {
                    var t = cc.instantiate(l.GValue.pfFrameAnim);
                    t.parent = this.skillNode;
                    t.zIndex = -1;
                    t.position = this.enemyNode.position;
                    this.m_enemyDieAnim = t.getComponent(f.default);
                    this.m_enemyDieAnim.init(this.atlas, "anim_die_5_", 20, c.GConfig.ActionInterval);
                    this.m_enemyDieAnim.slowAble = !1;
                }
            };
            e.prototype.initSkill = function () {
                var t = this, e = new cc.Node("skill");
                e.parent = this.skillNode;
                var i = this.m_data.type, n = u.ConfigDataMgr.getData("ConfigSnakeSkillData", this.m_data.skillId);
                switch (i) {
                    case 101:
                        this.skillNull.active = !1;
                        this.skillNode.active = !0;
                        this.circleSpine.node.active = !0;
                        this.circleSpine.setEventListener(function (e, i) {
                            "die" == i.data.name && t.enemyDie();
                        });
                        this.circleSpine.setCompleteListener(function () {
                            t.onSkillStart();
                        });
                        this.circleSpine.setAnimation(0, "play", !0);
                        this.enemyNode.setPosition(this.circleSpine.node.getPosition());
                        break;

                    case 102:
                        this.m_skill = e.addComponent(S.default);
                        this.m_skill.initParam(n.var);
                        break;

                    case 103:
                        this.m_skill = e.addComponent(b.default);
                        this.m_skill.initParam(n.var);
                        break;

                    case 104:
                        this.skillAnim.node.x = -50;
                        this.m_skill = e.addComponent(M.default);
                        this.m_skill.initParam(n.var);
                        break;

                    default:
                        this.skillNull.active = !0;
                        this.skillNode.active = !1;
                }
                if (this.m_skill) {
                    this.skillNull.active = !1;
                    this.skillNode.active = !0;
                    this.skillAnim.node.active = !0;
                    this.skillAnim.node.parent.zIndex = 2;
                    this.skillAnim.play();
                    this.skillEvent.init(this, this.m_data.id);
                }
            };
            e.prototype.onSkill = function () {
                var t = this, e = this.playSkill();
                this.scheduleOnce(function () {
                    t.enemyDie();
                }, e);
            };
            e.prototype.onSkillStart = function () {
                this.enemyNode.opacity = 255;
            };
            e.prototype.enemyDie = function () {
                this.enemyNode.opacity = 0;
                this.m_enemyDieAnim.play(1);
            };
            e.prototype.onBtnCloseClicked = function () {
                if (_.DYTools.isBtnClickedAble()) {
                    this.m_data.type != y.SnakeMgr.getCurSnakeType() && i.releaseRes();
                    this.hide(!1);
                    i.popup = null;
                }
            };
            e.prototype.onBtnUseClicked = function () {
                if (this.m_unlock && _.DYTools.isBtnClickedAble(!1)) {
                    d.FrameMgr.audioMgr.playEffect("snake_use");
                    y.SnakeMgr.setCurSnakeId(this.m_data.id);
                    this.refreshUI();
                    this.useBtnNode.active = y.SnakeMgr.getCurSnakeType() != this.m_data.type;
                    if (this.m_guide == h.GuideType.SnakeChange) {
                        p.GData.setGuided(this.m_guide);
                        this.m_guide = 0;
                    }
                }
            };
            e.prototype.onBtnUpgradeClicked = function () {
                if (_.DYTools.isBtnClickedAble(!1)) if (this.m_fullLv) g.GFunc.showFloatTip({
                    txt: d.FrameMgr.languageMgr.getTxt(1006),
                    bgType: 2
                }); else {
                    var t = g.GFunc.isGoldEnough(this.m_data.costGold), e = g.GFunc.isItemEnough(this.m_data.costMaterial.itemId, this.m_data.costMaterial.itemNum);
                    if (t && e) {
                        d.FrameMgr.audioMgr.playEffect("snake_lvup");
                        if (this.m_guide == h.GuideType.SnakeLvup) {
                            p.GData.setGuided(this.m_guide);
                            this.m_guide = 0;
                        }
                        _.DYTools.removeChildByName(this.upgradeNode, "finger");
                        var i = y.SnakeMgr.getSnakeLv(this.m_data.type);
                        y.SnakeMgr.setSnakeLv(this.m_data.type, i + 1);
                        g.GFunc.goldChange(-this.m_data.costGold);
                        g.GFunc.itemChange(this.m_data.costMaterial.itemId, -this.m_data.costMaterial.itemNum);
                        this.refreshData(!0);
                        this.m_item && this.m_item.refreshUI(!0);
                        this.m_data && y.SnakeMgr.getCurSnakeType() == this.m_data.type && y.SnakeMgr.setCurSnakeId(this.m_data.id);
                        d.FrameMgr.noticeMgr.emit(h.EventTypeEnum.SnakeLvup);
                        this.playLvupAnim();
                    } else {
                        d.FrameMgr.audioMgr.playEffect("ui_click");
                        var n;
                        n = t || e ? t ? d.FrameMgr.languageMgr.getTxt(1001) : d.FrameMgr.languageMgr.getTxt(1004) : d.FrameMgr.languageMgr.getTxt(1001);
                        g.GFunc.showFloatTip({
                            txt: n,
                            bgType: 2
                        });
                    }
                }
            };
            e.prototype.onBtnGetClicked = function () { };
            e.prototype.onPageView = function () {
                for (var t = this.attrView.getCurrentPageIndex(), e = 0; e < this.pageBar.length; e++) this.pageBar[e].spriteFrame = this.atlas.getSpriteFrame("dian" + (e == t ? 1 : 2));
            };
            e.prototype.playSkill = function () {
                if (this.m_skill) {
                    var t = this.skillAnim.node.getChildByName("head"), e = t.getPosition().add(this.skillAnim.node.getPosition()), i = this.skillNode.getChildByName("snake");
                    return this.m_skill.playSkill({
                        audio: 2 == this.attrView.getCurrentPageIndex(),
                        snakePos: e,
                        targetPos: this.enemyNode.getPosition(),
                        parent: i.getChildByName("front"),
                        snakeHead: t,
                        back: i.getChildByName("back"),
                        atlas: d.FrameMgr.loadMgr.get("TP_Snake_" + this.m_data.type, cc.SpriteAtlas)
                    });
                }
                return 0;
            };
            e.prototype.checkGuide = function () {
                if (l.GValue.MainSceneGuide > 0) {
                    _.DYTools.removeChildByName(this.upgradeNode, "finger");
                    _.DYTools.removeChildByName(this.useBtnNode, "finger");
                } else {
                    var t = null;
                    if (v.GuideMgr.guideAble(h.GuideType.SnakeLvup) && g.GFunc.isItemEnough(this.m_data.costMaterial.itemId, this.m_data.costMaterial.itemNum) && g.GFunc.isGoldEnough(this.m_data.costGold)) {
                        t = this.upgradeNode;
                        this.m_guide = h.GuideType.SnakeLvup;
                    }
                    if (!t && v.GuideMgr.guideAble(h.GuideType.SnakeChange) && y.SnakeMgr.isSnakeUnlock(103) && 103 != y.SnakeMgr.getCurSnakeType()) {
                        t = this.useBtnNode;
                        this.m_guide = h.GuideType.SnakeChange;
                    }
                    if (t) {
                        var e = t.getChildByName("finger");
                        e || (e = g.GFunc.createfinger(t, "finger", 0));
                        e.active = !0;
                        this.m_guide == h.GuideType.SnakeLvup ? e.setPosition(cc.v2(70, 0)) : e.setPosition(cc.v2(10, 0));
                    }
                }
            };
            e.prototype.playEnterAnim = function () {
                var t = this;
                this.shield.active = !0;
                var e = c.GConfig.ActionInterval;
                this.uiNode.scale = .75;
                this.uiNode.opacity = 0;
                cc.tween(this.uiNode).to(4 * e, {
                    scale: 1.05,
                    opacity: 255
                }).to(5 * e, {
                    scale: .98
                }).to(3 * e, {
                    scale: 1
                }).start();
                this.useBtnNode.y;
                this.useBtnNode.opacity = 0;
                cc.tween(this.useBtnNode).delay(7 * e).to(3 * e, {
                    scale: 1.1,
                    opacity: 255
                }).to(3 * e, {
                    scale: .96
                }).to(4 * e, {
                    scale: 1
                }).start();
                this.upgradeNode.scale = .7;
                this.upgradeNode.opacity = 0;
                cc.tween(this.upgradeNode).delay(7 * e).to(3 * e, {
                    scale: 1.1,
                    opacity: 255
                }).to(3 * e, {
                    scale: .96
                }).to(4 * e, {
                    scale: 1
                }).start();
                this.scheduleOnce(function () {
                    t.shield.active = !1;
                }, 12 * e);
            };
            e.prototype.playLvupAnim = function () {
                var t = this, e = c.GConfig.ActionInterval;
                this.shield.active = !0;
                var i = this;
                (function () {
                    var n = p.GData.getItemNum(i.m_data.costMaterial.itemId), a = i.m_data.costMaterial.itemNum;
                    cc.tween(i.proSpr).delay(3 * e).to(7 * e, {
                        fillRange: n / a
                    }).start();
                    var r = i.proSpr.node.parent.getChildByName("white");
                    if (r) {
                        var o = r.getComponent(cc.Sprite);
                        o.fillRange = 1;
                        cc.tween(o).delay(3 * e).to(7 * e, {
                            fillRange: n / a
                        }).start();
                        cc.tween(r).to(3 * e, {
                            opacity: 255
                        }).to(7 * e, {
                            opacity: 0
                        }).start();
                    }
                    var s = (n - i.m_itemCount) / (7 * e);
                    i.schedule(function (e) {
                        t.m_itemCount += s * e;
                        if (t.m_itemCount < n) {
                            t.m_itemCount = n;
                            t.unscheduleAllCallbacks();
                        }
                        t.m_cardProNum.setString(Math.round(t.m_itemCount) + "/" + a);
                    });
                })();
                var n = this.cardSpr.node.parent;
                cc.tween(n).delay(5 * e).to(8 * e, {
                    scale: 1
                }).to(3 * e, {
                    scale: 1.1
                }).call(function () {
                    t.spine.node.opacity = 255;
                    d.FrameMgr.audioMgr.playEffect("snake_lvup_light");
                    t.spine.setAnimation(0, "play2", !1);
                }).to(3 * e, {
                    scale: 1.2
                }).to(3 * e, {
                    scale: .95
                }).to(4 * e, {
                    scale: 1
                }).start();
                var a = n.getChildByName("white");
                a && cc.tween(a).delay(5 * e).to(8 * e, {
                    opacity: 255
                }).to(3 * e, {
                    opacity: 0
                }).start();
                var r = this;
                (function () {
                    var i = r.lvNode.scale;
                    cc.tween(r.lvNode).delay(14 * e).to(3 * e, {
                        scale: 1.43 * i
                    }).to(1 * e, {
                        scale: 1.5 * i
                    }).call(function () {
                        t.m_lvNum.setString(y.SnakeMgr.getSnakeLv(t.m_data.type).toString());
                    }).to(3 * e, {
                        scale: .9 * i
                    }).to(4 * e, {
                        scale: 1 * i
                    }).start();
                    var n = r.lvNode.parent.getChildByName("light0");
                    n && cc.tween(n).delay(17 * e).call(function () {
                        n.scale = 2;
                        n.opacity = 255;
                    }).delay(3 * e).to(8 * e, {
                        opacity: 0
                    }).start();
                })();
                for (var o = 4 * e, s = 28 * e, l = function (i) {
                    var n = h.m_lvupNodes[i], a = s + o * i, r = n.getChildByName("white");
                    r.opacity = 0;
                    cc.tween(r).delay(a).call(function () {
                        d.FrameMgr.audioMgr.playEffect("snake_lvup_attr");
                    }).to(2 * e, {
                        opacity: 255
                    }).call(function () {
                        switch (n.name) {
                            case "atk":
                                t._refreshAtkNum(!0);
                                break;

                            case "hp":
                                t._refreshHpNum(!0);
                                break;

                            case "circle":
                                t._refreshCircleNum(!0);
                                break;

                            case "skill":
                                t._refreshSkillAtkNum(!0);
                        }
                    }).to(3 * e, {
                        opacity: 0
                    }).start();
                    var c = n.getChildByName("num");
                    c && cc.tween(c).delay(a + 2 * e).to(3 * e, {
                        scale: 1.2
                    }).delay(2 * e).to(3 * e, {
                        scale: 1
                    }).start();
                    var l = n.getChildByName("bar");
                    l && cc.tween(l).delay(a).call(function () {
                        l.scaleY = .75;
                        l.scaleX = 1;
                        l.opacity = 255;
                        l.color = cc.color(244, 138, 47);
                    }).to(4 * e, {
                        scaleX: 8.95,
                        scaleY: .75
                    }).to(5 * e, {
                        scaleX: 8.9,
                        scaleY: .55,
                        opacity: 0,
                        color: cc.color(242, 196, 34)
                    }).start();
                    var u = n.getChildByName("point");
                    if (u && c) {
                        var p = c.getChildByName("cur"), f = c.getChildByName("add"), m = p ? p.x : 0, g = f ? f.x : 0;
                        cc.tween(u).delay(a + 4 * e).call(function () {
                            u.opacity = 255;
                            u.x = m + c.x;
                        }).to(12 * e, {
                            x: c.x + g,
                            opacity: 0
                        }).call(function () {
                            if (i == t.m_lvupNodes.length - 1) {
                                t.refreshUI();
                                t.shield.active = !1;
                            }
                        }).start();
                    }
                    var _ = n.getChildByName("yellow");
                    _ && cc.tween(_).delay(a + 4 * e).call(function () {
                        _.scaleY = .88;
                        _.scaleX = 4.3;
                        _.opacity = 255;
                    }).to(8 * e, {
                        scaleX: 4.9,
                        scaleY: .85,
                        opacity: 0
                    }).start();
                }, h = this, u = 0; u < this.m_lvupNodes.length; u++) l(u);
            };
            e.loadSnakeRes = function (t) {
                return o(this, void 0, void 0, function () {
                    var e, n, a;
                    return s(this, function (r) {
                        switch (r.label) {
                            case 0:
                                i.snakeAtlas = null;
                                i.skillPf = null;
                                i.snakeType = t;
                                return [4, d.FrameMgr.loadMgr.loadAtlasAsync("TP_Snake_" + t)];

                            case 1:
                                if (!(e = r.sent())) return [3, 4];
                                i.snakeAtlas = e;
                                if (!i.checkRes()) return [3, 4];
                                n = null;
                                switch (t) {
                                    case 101:
                                        break;

                                    case 102:
                                        n = "SnakeThornsEntity";
                                        break;

                                    case 103:
                                        n = "SnakeMeteorEntity";
                                        break;

                                    case 104:
                                        n = "SnakeForstEntity";
                                }
                                return n ? [4, d.FrameMgr.loadMgr.loadPrefabAsync(n)] : [3, 3];

                            case 2:
                                if (a = r.sent()) {
                                    i.skillPf = a;
                                    if (i.checkRes()) return [2, !0];
                                }
                                return [3, 4];

                            case 3:
                                return [2, !0];

                            case 4:
                                return [2, !1];
                        }
                    });
                });
            };
            e.checkRes = function () {
                if (!i.popup) {
                    if (y.SnakeMgr.getCurSnakeType() != i.snakeType) {
                        if (i.snakeAtlas) {
                            d.FrameMgr.loadMgr.releaseAsset(i.snakeAtlas);
                            i.snakeAtlas = null;
                        }
                        if (i.skillPf && 101 != i.snakeType) {
                            d.FrameMgr.loadMgr.releaseAsset(i.skillPf);
                            i.skillPf = null;
                        }
                    }
                    return !1;
                }
                return !0;
            };
            e.releaseRes = function () {
                if (i.snakeAtlas) {
                    d.FrameMgr.loadMgr.releaseAsset(i.snakeAtlas);
                    i.snakeAtlas = null;
                }
                if (i.skillPf && 101 != i.snakeType) {
                    d.FrameMgr.loadMgr.releaseAsset(i.skillPf);
                    i.skillPf = null;
                }
            };
            var i;
            e.attr = {
                layer: 1,
                name: "PopupSnakeInfo",
                cache: h.PopupCacheMode.Normal
            };
            e.popup = null;
            e.snakeAtlas = null;
            e.skillPf = null;
            e.snakeType = 0;
            r([A(cc.Node)], e.prototype, "uiNode", void 0);
            r([A(cc.Sprite)], e.prototype, "roleSpr", void 0);
            r([A(cc.Node)], e.prototype, "useBtnNode", void 0);
            r([A(cc.Node)], e.prototype, "usedNode", void 0);
            r([A(cc.Sprite)], e.prototype, "cardSpr", void 0);
            r([A(cc.Sprite)], e.prototype, "kuangSpr", void 0);
            r([A(cc.Sprite)], e.prototype, "proSpr", void 0);
            r([A(cc.Sprite)], e.prototype, "arrowSpr", void 0);
            r([A(sp.Skeleton)], e.prototype, "spine", void 0);
            r([A(cc.Sprite)], e.prototype, "nameSpr", void 0);
            r([A(cc.Node)], e.prototype, "lvNode", void 0);
            r([A(cc.Label)], e.prototype, "infoLab", void 0);
            r([A(cc.PageView)], e.prototype, "attrView", void 0);
            r([A(cc.Sprite)], e.prototype, "pageBar", void 0);
            r([A(cc.Node)], e.prototype, "enemyNode", void 0);
            r([A(cc.Sprite)], e.prototype, "title1Spr", void 0);
            r([A(cc.Node)], e.prototype, "atkNum", void 0);
            r([A(cc.Node)], e.prototype, "hpNum", void 0);
            r([A(cc.Node)], e.prototype, "circleNum", void 0);
            r([A(cc.Node)], e.prototype, "skillName", void 0);
            r([A(cc.Node)], e.prototype, "skillNum", void 0);
            r([A(cc.Node)], e.prototype, "skillCDName", void 0);
            r([A(cc.Node)], e.prototype, "skillCDNum", void 0);
            r([A(cc.Label)], e.prototype, "attrLab", void 0);
            r([A(cc.Sprite)], e.prototype, "title2Spr", void 0);
            r([A(cc.Node)], e.prototype, "skillNode", void 0);
            r([A(sp.Skeleton)], e.prototype, "circleSpine", void 0);
            r([A(cc.Animation)], e.prototype, "skillAnim", void 0);
            r([A(k.default)], e.prototype, "skillEvent", void 0);
            r([A(cc.Node)], e.prototype, "skillNull", void 0);
            r([A(cc.Node)], e.prototype, "getNode", void 0);
            r([A(cc.Node)], e.prototype, "upgradeNode", void 0);
            r([A(cc.Sprite)], e.prototype, "coinSpr", void 0);
            r([A(cc.Sprite)], e.prototype, "itemSpr", void 0);
            r([A(cc.Node)], e.prototype, "itemNum", void 0);
            r([A(cc.Node)], e.prototype, "fullNode", void 0);
            r([A(cc.Node)], e.prototype, "shield", void 0);
            r([A(cc.SpriteAtlas)], e.prototype, "roleAtlas", void 0);
            r([A(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return i = r([w], e);
        }(m.default);
        i.default = T;
        cc._RF.pop();
    }, {
        "../../../../../../config/GameConfig": "GameConfig",
        "../../../../../../config/GameConst": "GameConst",
        "../../../../../../config/GameEnum": "GameEnum",
        "../../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../../data/storage/GameData": "GameData",
        "../../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../../frame/ui/PopupBase": "PopupBase",
        "../../../../../../util/GameFunc": "GameFunc",
        "../../../../../../util/Tools": "Tools",
        "../../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "../../../../../battle/manager/common/GuideManager": "GuideManager",
        "../../../../../battle/player/skill/fireball/SnakeSkillFireBall": "SnakeSkillFireBall",
        "../../../../../battle/player/skill/forst/SnakeSkillForst": "SnakeSkillForst",
        "../../../../../battle/player/skill/thorns/SnakeSkillThorns": "SnakeSkillThorns",
        "./SnakeSkillEvent": "SnakeSkillEvent"
    }],
    PropItemBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "563bcfk2thIJ60zNpBPFspF", "PropItemBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../common/EntityBase"), s = t("../manager/battle/PropManager"), c = t("../../../config/GameEnum"), l = t("../../../data/manager/ConfigDataManager"), h = t("../collide/RectColliderComp"), u = t("../collide/CircleColliderComp"), p = t("../manager/battle/EnemyManager"), d = t("../../../frame/ui/FrameAnim"), f = t("../../../util/Tools"), m = t("../../../config/GameConst"), g = t("../../../config/GameConfig"), _ = cc._decorator, y = _.ccclass, v = (_.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_group = c.ColliderGroup.Prop;
                    e._col = null;
                    e._propId = 0;
                    e._curHp = 0;
                    e._initHp = 0;
                    e.m_roleSpr = null;
                    e._hpBar = null;
                    e._stopWave = 0;
                    e.m_isActive = !1;
                    e.m_isDead = !1;
                    e._data = null;
                    e.m_hurtAnim = null;
                    e.m_lockMask = null;
                    return e;
                }
                e.prototype.init = function (t, e, i) {
                    this._propId = t;
                    this._dataId = e;
                    this._stopWave = i;
                    this.initData();
                    this.initUI();
                    this.initComp();
                    this.isActive = !0;
                };
                e.prototype.initData = function () {
                    var t = l.ConfigDataMgr.getData("ConfigPropData", this._dataId);
                    this._data = t;
                    this._type = t.type;
                    this._initHp = t.hp;
                    this._curHp = this._initHp;
                    this.m_isDead = !1;
                    this.setIsDie(!1);
                };
                e.prototype.initUI = function () {
                    if (!this.m_roleSpr) {
                        var t = new cc.Node("skin");
                        t.parent = this.node;
                        this.m_roleSpr = t.addComponent(cc.Sprite);
                    }
                    this.m_roleSpr.spriteFrame = s.PropMgr.atlas.getSpriteFrame("prop_" + this._type);
                    this.node.color = cc.Color.WHITE;
                    if (this._initHp > 0) {
                        if (!this._hpBar) {
                            var e = new cc.Node("hp");
                            e.parent = this.node;
                            e.position = cc.v3(0, 70);
                            var i = new cc.Node();
                            i.parent = e;
                            i.addComponent(cc.Sprite).spriteFrame = s.PropMgr.atlas.getSpriteFrame("prop_hpBg");
                            var n = new cc.Node();
                            n.parent = e;
                            this._hpBar = n.addComponent(cc.Sprite);
                            this._hpBar.spriteFrame = s.PropMgr.atlas.getSpriteFrame("prop_hpBar");
                            this._hpBar.type = cc.Sprite.Type.FILLED;
                        }
                        this._hpBar.node.parent.active = !0;
                        this._hpBar.fillRange = 1;
                    } else this._hpBar && (this._hpBar.node.parent.active = !1);
                };
                e.prototype.initComp = function () {
                    var t = this._data.col;
                    if (t.length > 0) {
                        switch (t[0]) {
                            case c.ColliderType.Circle:
                                this._col = new u.default();
                                this._col.init([t[1], t[2], t[3]], this, this.node);
                                break;

                            case c.ColliderType.Rectangle:
                                this._col = new h.default();
                                this._col.init([t[1], t[2], t[3], t[4]], this, this.node);
                        }
                        this._col.enabled = !0;
                    } else cc.error("缺少道具碰撞配置");
                    this.enabled = !0;
                };
                e.prototype.onCollide = function (t, e) {
                    if (!(this._initHp <= 0) || this.enabled) switch (t) {
                        case c.ContactType.Enter:
                            if (e && e.entity) switch (e.entity.group) {
                                case c.ColliderGroup.PlayerBullet:
                                    var i = e.entity;
                                    if (i) {
                                        var n = i.getBulletAttack() || 1;
                                        this.hpChange(-n);
                                    }
                            }
                    }
                };
                e.prototype.hpChange = function (t) {
                    this._curHp += t;
                    this.playHurtAnim();
                    if (this._curHp <= 0) {
                        this._curHp = 0;
                        this.m_isDead = !0;
                        this.setIsDie(!0);
                        this.isActive = !1;
                        this._col.enabled = !1;
                        this.propTrigger();
                        this._hpBar.node.parent.active = !1;
                        this.hideLockedMark();
                    } else this._hpBar.fillRange = this._curHp / this._initHp;
                };
                e.prototype.playHurtAnim = function () {
                    this.m_hurtAnim || this.initHurtAnim();
                    if (this.m_hurtAnim) {
                        this.m_hurtAnim.play(1);
                        this.m_hurtAnim.node.x = -20 + f.DYTools.random_int(0, 40);
                        this.m_hurtAnim.node.y = -20 + f.DYTools.random_int(0, 40);
                    }
                };
                e.prototype.initHurtAnim = function () {
                    if (!this.m_hurtAnim && p.EnemyMgr.hurtCount > 0) {
                        var t = cc.instantiate(m.GValue.pfFrameAnim);
                        t.name = "m_hurtAnim";
                        t.parent = this.node;
                        this.m_hurtAnim = t.getComponent(d.default);
                        this.m_hurtAnim.init(p.EnemyMgr.enemyEffectAtlas, p.EnemyMgr.hurtImage, p.EnemyMgr.hurtCount, g.GConfig.ActionInterval);
                    }
                };
                e.prototype.propTrigger = function () { };
                e.prototype.clear = function () { };
                e.prototype.getColliders = function () {
                    return this._col;
                };
                Object.defineProperty(e.prototype, "stopWave", {
                    get: function () {
                        return this._stopWave;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "isActive", {
                    get: function () {
                        return this.m_isActive;
                    },
                    set: function (t) {
                        this.m_isActive = t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "hurtAble", {
                    get: function () {
                        return this.isActive && !this.isDead;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "isDead", {
                    get: function () {
                        return this.m_isDead;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "atkAble", {
                    get: function () {
                        return this._initHp > 0;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "speed", {
                    get: function () {
                        return cc.Vec3.ZERO;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "colRect", {
                    get: function () {
                        if (this._col) {
                            if (this._col instanceof h.default) return this._col.rect;
                            if (this._col instanceof u.default) return cc.rect(this.node.x - this._col.radius, this.node.y - this._col.radius, 2 * this._col.radius, 2 * this._col.radius);
                        }
                        return cc.rect(this.node.x, this.node.y);
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.showLockedMark = function () {
                    this.isDead || this.m_lockMask || (this.m_lockMask = p.EnemyMgr.addLockMask(this, 1, cc.v2(0, -30)));
                };
                e.prototype.hideLockedMark = function () {
                    if (this.m_lockMask) {
                        p.EnemyMgr.removeLockMask();
                        this.m_lockMask = null;
                    }
                };
                e.prototype.getRadius = function () {
                    if (this._col) {
                        if (this._col instanceof h.default) return this._col.rect.width;
                        if (this._col instanceof u.default) return this._col.radius;
                    }
                    return 0;
                };
                return r([y], e);
            }(o.default));
        i.default = v;
        cc._RF.pop();
    }, {
        "../../../config/GameConfig": "GameConfig",
        "../../../config/GameConst": "GameConst",
        "../../../config/GameEnum": "GameEnum",
        "../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../util/Tools": "Tools",
        "../collide/CircleColliderComp": "CircleColliderComp",
        "../collide/RectColliderComp": "RectColliderComp",
        "../common/EntityBase": "EntityBase",
        "../manager/battle/EnemyManager": "EnemyManager",
        "../manager/battle/PropManager": "PropManager"
    }],
    PropLootSnakeItem: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "86f3eEOROlLh4XB6UBBZI+A", "PropLootSnakeItem");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../config/GameEnum"), s = t("../manager/battle/PropManager"), c = t("../manager/battle/LootManager"), l = t("./PropItemBase"), h = t("../../../frame/manager/FrameManager"), u = t("../../../config/GameConfig"), p = cc._decorator, d = p.ccclass, f = (p.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._lootNum = 0;
                    e.m_hurting = !1;
                    e.m_hurtBodyAct = null;
                    return e;
                }
                e.prototype.init = function (e, i, n) {
                    t.prototype.init.call(this, e, i, n);
                    this.node.opacity = 0;
                };
                e.prototype.initData = function () {
                    t.prototype.initData.call(this);
                    this._lootNum = Number(this._data.para);
                };
                e.prototype.initUI = function () {
                    t.prototype.initUI.call(this);
                    cc.tween(this.node).to(0, {
                        scale: .4,
                        opacity: 0
                    }).to(.2, {
                        scale: .8,
                        opacity: 255
                    }).start();
                };
                e.prototype.propTrigger = function () {
                    c.LootMgr.addLoot(o.LootType.Snake, this.node.position, this._lootNum, !0, this.stopWave);
                    s.PropMgr.onPropTrigger(this._propId);
                    h.FrameMgr.audioMgr.playEffect("propBlast");
                    this.node.active = !1;
                    this._col.enabled = !1;
                    this.enabled = !1;
                };
                e.prototype.playHurtAnim = function () {
                    var e = this;
                    if (!this.m_hurting) {
                        t.prototype.playHurtAnim.call(this);
                        this.m_hurting = !0;
                        cc.tween(this.m_roleSpr.node).to(0, {
                            color: cc.color(249, 123, 211)
                        }).delay(.1).call(function () {
                            e.m_roleSpr.node.color = cc.Color.WHITE;
                            e.m_hurting = !1;
                        }).start();
                        do {
                            if (this.m_hurtBodyAct) break;
                            var i = this.m_roleSpr.node.position;
                            this.m_hurtBodyAct = cc.tween(this.m_roleSpr.node).to(0, {
                                scaleX: 1,
                                scaleY: .95
                            }).to(2 * u.GConfig.ActionInterval, {
                                scaleX: 1.08,
                                scaleY: 1.1,
                                x: i.x + 2,
                                y: i.y + 4
                            }).to(1 * u.GConfig.ActionInterval, {
                                scale: 1,
                                x: i.x,
                                y: i.y
                            }).call(function () {
                                e.m_hurtBodyAct = null;
                            }).start();
                        } while (0);
                    }
                };
                return r([d], e);
            }(l.default));
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../config/GameConfig": "GameConfig",
        "../../../config/GameEnum": "GameEnum",
        "../../../frame/manager/FrameManager": "FrameManager",
        "../manager/battle/LootManager": "LootManager",
        "../manager/battle/PropManager": "PropManager",
        "./PropItemBase": "PropItemBase"
    }],
    PropManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "478aa5bI29Pv5zC2IIHx7oD", "PropManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.PropMgr = void 0;
        var o = t("../../../../util/Tools"), s = t("../../../../config/GameEnum"), c = t("../../../../data/manager/ConfigDataManager"), l = t("../../../../data/config/ConfigPropData"), h = t("../../../../frame/manager/FrameManager"), u = t("./MapManager"), p = t("./LootManager"), d = t("../../prop/PropLootSnakeItem"), f = t("../../../../frame/manager/BattleFlowManager"), m = t("./BattleManager"), g = cc._decorator, _ = g.ccclass, y = (g.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._atlas = null;
                    e._posMap = null;
                    e._stopWavePropMap = new Map();
                    e.propId = 0;
                    e._propMap = new Map();
                    e._propColRects = [];
                    e.m_propCount = 0;
                    return e;
                }
                i = e;
                e.prototype.addLoadingRes = function () {
                    return [{
                        itemType: cc.SpriteAtlas,
                        itemNames: ["TP_Loot"],
                        loadType: s.LoadType.All
                    }, {
                        itemType: cc.TextAsset,
                        itemNames: ["prop"],
                        loadType: s.LoadType.All
                    }];
                };
                e.prototype.initData = function () {
                    c.ConfigDataMgr.initJsonMapWithLoaded("ConfigPropData", "prop", l.default);
                    this._atlas || (this._atlas = h.FrameMgr.loadMgr.get("TP_Loot", cc.SpriteAtlas));
                };
                e.prototype.init = function () {
                    if (!this._posMap) {
                        this._posMap = new Map();
                        for (var t = u.MapMgr.getPropPosData(), e = 0, i = cc.Vec3.ZERO, n = 0, a = t.length; n < a; n++) {
                            var r = t[n];
                            e = r.id;
                            i = cc.v3(r.x, r.y);
                            this._posMap.set(e, i);
                        }
                    }
                };
                e.prototype.clear = function () {
                    this._atlas = null;
                    this._posMap && this._posMap.clear();
                    this._posMap = null;
                    this.propId = 0;
                    this._stopWavePropMap.clear();
                    this._propMap.forEach(function (t) {
                        t.node.destroy();
                    });
                    this._propColRects.splice(0);
                    this._propMap.clear();
                    c.ConfigDataMgr.clearData("ConfigPropData", !1);
                    this.m_propCount = 0;
                };
                e.prototype.addProp = function (t, e) {
                    for (var i = t.split("#"), n = 0, a = i.length; n < a; n++) {
                        var r = i[n].split("*");
                        if (2 == r.length) {
                            var s = Number(r[0]), c = o.DYTools.stringToNumber(r[1], ","), l = Math.floor(Math.random() * c.length);
                            this.createProp(s, c[l], e);
                        }
                    }
                };
                e.prototype.createProp = function (t, e, i) {
                    void 0 === i && (i = 0);
                    var n = this._posMap.get(e) || cc.Vec3.ZERO, a = null, r = null;
                    switch (c.ConfigDataMgr.getData("ConfigPropData", t).type) {
                        case s.PropItemType.Snake:
                            p.LootMgr.addLoot(s.LootType.Snake, n, 1, !1, i);
                            break;

                        case s.PropItemType.LootSnake:
                        default:
                            a = (r = new cc.Node()).addComponent(d.default);
                    }
                    if (a) {
                        r.parent = u.MapMgr.getPropLayer();
                        r.position = n;
                        a.init(this.propId, t, i);
                        if (i > 0) {
                            var o = this._stopWavePropMap.get(i) || 0;
                            o += 1;
                            this._stopWavePropMap.set(i, o);
                        }
                        this._propColRects.push(a.colRect);
                        this._propMap.set(this.propId++, a);
                    }
                };
                e.prototype.onPropTrigger = function (t) {
                    var e = this._propMap.get(t);
                    if (e) {
                        if (e.stopWave > 0) {
                            var i = this._stopWavePropMap.get(e.stopWave);
                            i -= 1;
                            this._stopWavePropMap.set(e.stopWave, i);
                        }
                        var n = e.colRect, a = this._propColRects.indexOf(n);
                        a && this._propColRects.splice(a, 1);
                        e.node.destroy();
                        this._propMap.delete(t);
                        this.m_propCount++;
                        2 == m.BattleMgr.stage && 1 == this.m_propCount && h.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage2Box1);
                    }
                };
                Object.defineProperty(e.prototype, "props", {
                    get: function () {
                        var t = [];
                        this._propMap.forEach(function (e) {
                            t.push(e);
                        });
                        return t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "atkAbleProps", {
                    get: function () {
                        var t = [];
                        this._propMap.forEach(function (e) {
                            e.atkAble && t.push(e);
                        });
                        return t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "allBlockRects", {
                    get: function () {
                        return this._propColRects;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "atlas", {
                    get: function () {
                        return this._atlas;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.hasStopWaveProp = function (t) {
                    return (this._stopWavePropMap.get(t) || 0) > 0;
                };
                var i;
                e.instance = new i();
                return r([_], e);
            }(f.BattleFlowBase));
        i.default = y;
        i.PropMgr = y.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/config/ConfigPropData": "ConfigPropData",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../prop/PropLootSnakeItem": "PropLootSnakeItem",
        "./BattleManager": "BattleManager",
        "./LootManager": "LootManager",
        "./MapManager": "MapManager"
    }],
    RectColliderComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "4cdd1kQULpM+ZzPboFxksie", "RectColliderComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../config/GameEnum"), o = t("../../../util/Tools"), s = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_type = r.ColliderType.Rectangle;
                e.m_rect = new cc.Rect();
                e.m_widthHalf = 0;
                e.m_heightHalf = 0;
                return e;
            }
            e.prototype.init = function (e, i, n) {
                this.initBase(i, n);
                t.prototype.init.call(this, e, i, n);
                if (e.length > 3) {
                    this.m_offset.x = e[0];
                    this.m_offset.y = e[1];
                    this.m_rect.x = this.m_offset.x - e[2] / 2;
                    this.m_rect.y = this.m_offset.y - e[3] / 2;
                    this.m_rect.width = e[2];
                    this.m_rect.height = e[3];
                    this.m_widthHalf = e[2] / 2;
                    this.m_heightHalf = e[3] / 2;
                } else o.DYTools.error("rect colider data error", JSON.stringify(e));
            };
            Object.defineProperty(e.prototype, "data", {
                get: function () {
                    return this.m_rect;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "minX", {
                get: function () {
                    return this.m_rect.xMin;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "maxX", {
                get: function () {
                    return this.m_rect.xMax;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "minY", {
                get: function () {
                    return this.m_rect.yMin;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "maxY", {
                get: function () {
                    return this.m_rect.yMax;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "center", {
                get: function () {
                    return this.m_rect.center;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "rect", {
                get: function () {
                    return this.m_rect;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "size", {
                get: function () {
                    return this.m_rect.size;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "widthHalf", {
                get: function () {
                    return this.m_widthHalf;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "heightHalf", {
                get: function () {
                    return this.m_heightHalf;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.onEnable = function () {
                t.prototype.onEnable.call(this);
                this.updateLogic(0);
            };
            e.prototype.updateLogic = function () {
                if (this.node) {
                    this.m_rect.x = this.node.x + this.m_offset.x - this.m_rect.width / 2;
                    this.m_rect.y = this.node.y + this.m_offset.y - this.m_rect.height / 2;
                }
            };
            e.prototype.draw = function () {
                var t = this.node.addComponent(cc.BoxCollider);
                t.size.width = this.rect.width / this.node.scaleX;
                t.size.height = this.rect.height / this.node.scaleY;
                t.offset.x = this.m_offset.x / this.node.scaleX;
                t.offset.y = this.m_offset.y / this.node.scaleY;
            };
            return e;
        }(t("./ColliderComp").default);
        i.default = s;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../../../util/Tools": "Tools",
        "./ColliderComp": "ColliderComp"
    }],
    RegionEffect: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "db4e6lB7l5IUaK3a9mYCEmm", "RegionEffect");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../logic/battle/effect/EffectCircle"), s = t("../../logic/battle/manager/battle/CollideManager"), c = t("../../logic/battle/manager/battle/SnakeManager"), l = t("../manager/FrameManager"), h = t("../../config/GameConst"), u = t("../ui/FrameAnim"), p = t("../../config/GameConfig"), d = t("../../util/Tools"), f = cc._decorator, m = f.ccclass, g = f.property, _ = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.topEffect = null;
                e.downEffect = null;
                e.spine = null;
                e.mask = null;
                e.arrNodes = [];
                e.arrPoints = [];
                e.arrRegion = [];
                e.arrEffectCircle = [];
                e.lastTime = 0;
                e.atkNum = 0;
                e.atkIntervalTime = 0;
                e.curAtkIntervalTime = 0;
                e.skillDelayTime = 0;
                e.atlasEffect = null;
                return e;
            }
            e.prototype.show = function (t, e, i, n, a, r) {
                this.atlasEffect = l.FrameMgr.loadMgr.get("TP_hurtEffect", cc.SpriteAtlas);
                this.lastTime = e;
                this.atkNum = i;
                this.atkIntervalTime = a;
                this.curAtkIntervalTime = 0;
                this.skillDelayTime = r;
                this.arrNodes = [];
                this.arrNodes = t;
                var o = this.arrNodes.length;
                this.arrPoints = [];
                for (var s = 0; s < o; s++) this.arrPoints.push(this.arrNodes[s].getPosition());
                this.arrRegion = [];
                this.arrRegion = this.getArrRegions(this.arrPoints);
                this.playRegionEffect(e);
                c.SnakeMgr.getSnake().triggerSkillRegionEffectHurt(this, n);
            };
            e.prototype.isHurt = function (t) {
                if (t.getIsInSky()) return !1;
                for (var e = this.arrEffectCircle.length, i = 0; i < e; i++) {
                    var n = this.arrEffectCircle[i];
                    if (s.CollideMgr.getCollideArea().checkCollide(t.getColliders(), n.getColliders())) return !0;
                }
                return !!this.isPointInAllRegion(t.node.getPosition());
            };
            e.prototype.isPropInArea = function (t) {
                return this.isPointInAllRegion(t.node.getPosition());
            };
            e.prototype.getAtk = function () {
                return this.atkNum;
            };
            e.prototype.updateLogic = function (t) {
                this.curAtkIntervalTime -= t;
                if (this.curAtkIntervalTime < 0) {
                    this.curAtkIntervalTime = this.atkIntervalTime;
                    var e = this.atkIntervalTime + this.skillDelayTime;
                    c.SnakeMgr.getSnake().triggerSkillRegionEffectBuff(this, e, this.atkNum, this.atkIntervalTime);
                }
                this.lastTime -= t;
                this.lastTime <= 0 && c.SnakeMgr.getSnake().removeRegionEffect(this);
            };
            e.prototype.removeEffect = function () {
                var t = this;
                this.arrEffectCircle.splice(0);
                this.topEffect && cc.tween(this.topEffect).to(.06, {
                    opacity: 150
                }).call(function () {
                    t.node.destroy();
                }).start();
                this.downEffect && cc.tween(this.downEffect).to(.03, {
                    opacity: 50
                }).start();
            };
            e.prototype.isPointInAllRegion = function (t, e) {
                void 0 === e && (e = !1);
                for (var i = this.arrRegion.length, n = 0; n < i; n++) {
                    var a = this.arrRegion[n];
                    if (e) {
                        if (this.isDotInPolygonToRight(t, a) && this.isDotInPolygonToLeft(t, a)) return !0;
                    } else if (this.isDotInPolygonToRight(t, a)) return !0;
                }
                return !1;
            };
            e.prototype.isDotInPolygonToRight = function (t, e) {
                for (var i, n, a = !1, r = 0, o = e.length - 1; r < e.length; o = r++) {
                    i = e[r];
                    n = e[o];
                    i.y > t.y != n.y > t.y && t.x < (t.y - i.y) * (i.x - n.x) / (i.y - n.y) + i.x && (a = !a);
                }
                return a;
            };
            e.prototype.isDotInPolygonToLeft = function (t, e) {
                for (var i, n, a = !1, r = 0, o = e.length - 1; r < e.length; o = r++) {
                    i = e[r];
                    n = e[o];
                    i.y > t.y != n.y > t.y && t.x > (t.y - i.y) * (i.x - n.x) / (i.y - n.y) + i.x && (a = !a);
                }
                return a;
            };
            e.prototype.getArrRegions = function (t) {
                var e = [], i = t.length;
                if (!(i < 3)) {
                    for (var n = [], a = 0; a < i; a++) n.push(t[a]);
                    var r = [];
                    e.push(r);
                    r.push(n[0]);
                    r.push(n[1]);
                    r.push(n[2]);
                    for (var o = 2; ;) {
                        var s = o, c = o + 1;
                        if (c >= n.length) break;
                        var l = n[s], h = n[c], u = this.checkCross(l, h, r), p = u.index, d = u.pos;
                        if (-1 == p) {
                            r.push(h);
                            o++;
                        } else {
                            var f = p + 1, m = [];
                            e.push(m);
                            m.push(d);
                            for (var g = f; g < r.length; g++) m.push(r[g]);
                            r.splice(f, m.length - 1);
                            r.push(d);
                            n.splice(o + 1, 0, d);
                            o++;
                        }
                    }
                    return e;
                }
            };
            e.prototype.checkCross = function (t, e, i) {
                var n = i.length;
                if (n < 2) return {
                    index: -1,
                    pos: null
                };
                for (var a = 0; a < n - 1; a++) {
                    var r = this.segmentsIntr(t, e, i[a], i[a + 1]);
                    if (null != r) return {
                        index: a,
                        pos: r
                    };
                }
                return {
                    index: -1,
                    pos: null
                };
            };
            e.prototype.segmentsIntr = function (t, e, i, n) {
                var a = (t.x - i.x) * (e.y - i.y) - (t.y - i.y) * (e.x - i.x), r = (t.x - n.x) * (e.y - n.y) - (t.y - n.y) * (e.x - n.x);
                if (a * r >= 0) return null;
                var o = (i.x - t.x) * (n.y - t.y) - (i.y - t.y) * (n.x - t.x);
                if (o * (o + a - r) >= 0) return null;
                var s = o / (r - a), c = s * (e.x - t.x), l = s * (e.y - t.y);
                return cc.v2(t.x + c, t.y + l);
            };
            e.prototype.playRegionEffect = function () {
                this.mask.inverted = !1;
                this.mask.onDraw = this.onDraw.bind(this);
                this.mask._updateGraphics = this._updateGraphics.bind(this);
                this.mask.type = cc.Mask.Type.RECT;
                this.downEffect.opacity = 255;
                this.downEffect.setPosition(this.arrPoints[0]);
                this.topEffect.opacity = 255;
                this.arrEffectCircle = [];
                var t = this.arrPoints.length, e = cc.v2(0, 0), i = cc.v2(0, 0);
                if (this.arrPoints.length > 0) {
                    var n = this.arrPoints[0];
                    e.x = n.x;
                    e.y = n.x;
                    i.x = n.y;
                    i.y = n.y;
                }
                for (var a = 0; a < t; a++) {
                    n = this.arrPoints[a];
                    e.x > n.x && (e.x = n.x);
                    e.y < n.x && (e.y = n.x);
                    i.x > n.y && (i.x = n.y);
                    i.y < n.y && (i.y = n.y);
                    var r = new cc.Node();
                    r.angle = this.arrNodes[a].angle;
                    r.setPosition(n);
                    this.topEffect.addChild(r);
                    var s = r.addComponent(o.default);
                    s.init(0, 0, 40);
                    this.arrEffectCircle.push(s);
                    (_ = cc.instantiate(h.GValue.pfFrameAnim)).scale = 1.4;
                    (g = _.getComponent(u.default)).node.setPosition(n);
                    this.topEffect.addChild(_, 100);
                    g.init(this.atlasEffect, "anim_effect_regiontop_", 1, 1 * p.GConfig.ActionInterval);
                    g.play(0);
                }
                var c = Math.abs(Math.ceil((e.y - e.x) / 60)) + 1, l = Math.abs(Math.ceil((i.y - i.x) / 60)) + 1, f = 0;
                for (a = 0; a < c; a++) for (var m = 0; m < l; m++) {
                    n = cc.v2(e.x + 60 * a, i.x + 60 * m);
                    if (this.isPointInAllRegion(n)) {
                        (_ = cc.instantiate(h.GValue.pfFrameAnim)).scale = d.DYTools.random_int(30, 60) / 10;
                        var g = _.getComponent(u.default);
                        _.setPosition(n.add(d.DYTools.getRandomVec2(cc.v2(-12, 12), cc.v2(-12, 12))));
                        this.topEffect.addChild(_, 101);
                        g.init(this.atlasEffect, "anim_fire_", 16, 2 * p.GConfig.ActionInterval);
                        g.play(0);
                        g.setDstBlendFactorMode1();
                        _.opacity = 80;
                        f++;
                    }
                }
                if (0 == f) {
                    var _;
                    (_ = cc.instantiate(h.GValue.pfFrameAnim)).scale = d.DYTools.random_int(30, 60) / 10;
                    g = _.getComponent(u.default);
                    _.setPosition(cc.v2((e.x + e.y) / 2, (i.x + i.y) / 2));
                    _.y += _.height * _.scaleY / 3;
                    this.topEffect.addChild(_, 101);
                    g.init(this.atlasEffect, "anim_fire_", 16, 2 * p.GConfig.ActionInterval);
                    g.play(0);
                    g.setDstBlendFactorMode1();
                    _.opacity = 80;
                }
            };
            e.prototype._updateGraphics = function () {
                var t = this.mask._graphics;
                t && this.onDraw(t);
            };
            e.prototype.onDraw = function (t) {
                t.clear(!1);
                this.setMask(t, this.arrRegion);
            };
            e.prototype.setMask = function (t, e) {
                var i = e.length;
                if (!(i <= 0)) {
                    t.lineWidth = 0;
                    t.fillColor = cc.color(0, 0, 255);
                    for (var n = 0; n < i; n++) {
                        var a = e[n], r = a.length;
                        if (!(r <= 0)) {
                            t.moveTo(a[0].x, a[0].y);
                            for (var o = 0; o < r; o++) {
                                var s = a[o];
                                t.lineTo(s.x, s.y);
                            }
                            t.lineTo(a[0].x, a[0].y);
                            t.fill();
                            t.stroke();
                        }
                    }
                }
            };
            r([g(cc.Node)], e.prototype, "topEffect", void 0);
            r([g(cc.Node)], e.prototype, "downEffect", void 0);
            r([g(sp.Skeleton)], e.prototype, "spine", void 0);
            r([g(cc.Mask)], e.prototype, "mask", void 0);
            return r([m], e);
        }(cc.Component);
        i.default = _;
        cc._RF.pop();
    }, {
        "../../config/GameConfig": "GameConfig",
        "../../config/GameConst": "GameConst",
        "../../logic/battle/effect/EffectCircle": "EffectCircle",
        "../../logic/battle/manager/battle/CollideManager": "CollideManager",
        "../../logic/battle/manager/battle/SnakeManager": "SnakeManager",
        "../../util/Tools": "Tools",
        "../manager/FrameManager": "FrameManager",
        "../ui/FrameAnim": "FrameAnim"
    }],
    ReportManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "5d5302wUtZLyqcLygCZl5k1", "ReportManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ReportMgr = void 0;
        var n = t("../../config/GameConfig"), a = t("../../data/storage/GameData"), r = t("../../other/Hawkeye"), o = function () {
            function t() { }
            t.prototype.sendReportLogin = function () {
                n.GConfig.ReportAble && r.HKReport.sendLogin();
            };
            t.prototype.sendReportOnline = function () {
                n.GConfig.ReportAble && r.HKReport.sendOnline();
            };
            t.prototype.sendReportGuide = function (t, e) {
                void 0 === e && (e = 0);
                n.GConfig.ReportAble && r.HKReport.sendGuide(t);
            };
            t.prototype.sendReportLoading = function (t) {
                if (n.GConfig.ReportAble && !a.GData.getLoadingStep(t)) {
                    r.HKReport.sendLoading(t);
                    a.GData.setLoadingStep(t);
                }
            };
            t.prototype.sendReportStageTime = function (t, e) {
                n.GConfig.ReportAble && r.HKReport.sendStageTime(t, e);
            };
            t.prototype.sendReportBtnStart = function (t, e, i, a) {
                n.GConfig.ReportAble && r.HKReport.sendBtnStart(t, e, i, a);
            };
            t.prototype.sendReportPlayerHurt = function (t, e, i, a, o) {
                n.GConfig.ReportAble && r.HKReport.sendPlayerHurt(t, e, i, a, o);
            };
            t.prototype.sendReportPlayerDie = function (t, e, i, a, o) {
                n.GConfig.ReportAble && r.HKReport.sendPlayerDie(t, e, i, a, o);
            };
            t.prototype.sendReportPlayerRevive = function (t, e, i, a, o) {
                n.GConfig.ReportAble && r.HKReport.sendPlayerRevive(t, e, i, a, o);
            };
            t.prototype.sendReportStageOver = function (t, e, i, a) {
                n.GConfig.ReportAble && r.HKReport.sendStageOver(t, e, i, a);
            };
            t.prototype.sendReportSnakeCircle = function (t, e, i) {
                n.GConfig.ReportAble && r.HKReport.sendSnakeCircle(t, e, i);
            };
            t.prototype.sendReportBuyPower = function (t) {
                n.GConfig.ReportAble && r.HKReport.sendBuyPower(t);
            };
            t.prototype.sendReportPowerShow = function (t) {
                n.GConfig.ReportAble && r.HKReport.sendPowerShow(t);
            };
            t._instance = new t();
            return t;
        }();
        i.default = o;
        i.ReportMgr = o._instance;
        cc._RF.pop();
    }, {
        "../../config/GameConfig": "GameConfig",
        "../../data/storage/GameData": "GameData",
        "../../other/Hawkeye": "Hawkeye"
    }],
    RotateForever: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "8fe01AcKUxKbpfAMliWT+n4", "RotateForever");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = cc._decorator, s = o.ccclass, c = o.property, l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.time = 1;
                return e;
            }
            e.prototype.start = function () {
                cc.tween(this.node).by(this.time, {
                    angle: 360
                }).repeatForever().start();
            };
            r([c(cc.Float)], e.prototype, "time", void 0);
            return r([s], e);
        }(cc.Component);
        i.default = l;
        cc._RF.pop();
    }, {}],
    SelectLightRing: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "7d9f6/RWc1NwZkTkASD6dOw", "SelectLightRing");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.SelectRingColor = void 0;
        var o = cc._decorator, s = o.ccclass, c = o.property, l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.LightBg = null;
                e.LightRing = null;
                e.AnimNode = null;
                return e;
            }
            e.prototype.initUI = function (t, e) {
                this.LightBg.spriteFrame = e.getSpriteFrame("select_light_" + t + "_point");
                this.LightRing.spriteFrame = e.getSpriteFrame("select_light_" + t);
            };
            r([c(cc.Sprite)], e.prototype, "LightBg", void 0);
            r([c(cc.Sprite)], e.prototype, "LightRing", void 0);
            r([c(cc.Node)], e.prototype, "AnimNode", void 0);
            return r([s], e);
        }(cc.Component);
        i.default = l;
        (function (t) {
            t.white = "white";
            t.orange = "orange";
            t.blue = "blue";
            t.green = "green";
            t.purple = "purple";
        })(i.SelectRingColor || (i.SelectRingColor = {}));
        cc._RF.pop();
    }, {}],
    ShadowComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "9c107qVO2pHmY7qdoA+BROn", "ShadowComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../manager/battle/GameRuleManager"), s = cc._decorator, c = s.ccclass, l = s.property, h = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.iconSpr = null;
                e._target = null;
                e._offsetX = 0;
                e._offsetY = 0;
                e._jumpOffsetX = 0;
                e._jumpOffsetY = 0;
                e.m_angleTarget = null;
                return e;
            }
            e.prototype.init = function (t, e, i, n, a) {
                void 0 === a && (a = 1);
                this.iconSpr.spriteFrame = t;
                this._target = e;
                this._offsetX = i;
                this._offsetY = n;
                this._jumpOffsetX = 0;
                this._jumpOffsetY = 0;
                this.node.scale = a;
                this.m_angleTarget = null;
            };
            e.prototype.setAngleTarget = function (t) {
                this.m_angleTarget = t;
            };
            e.prototype.setPosOffset = function (t) {
                this._offsetX = t.x;
                this._offsetY = t.y;
            };
            e.prototype.setJumpOffset = function (t) {
                this._jumpOffsetX = t.x;
                this._jumpOffsetY = t.y;
            };
            e.prototype.lateUpdate = function () {
                if (o.GameRuleMgr.isCanUpdate()) {
                    this.updatePos();
                    this.updateAngle();
                }
            };
            e.prototype.updatePos = function () {
                if (this._target) {
                    this.node.x = this._target.x + this._offsetX + this._jumpOffsetX;
                    this.node.y = this._target.y + this._offsetY + this._jumpOffsetY;
                }
            };
            e.prototype.updateAngle = function () {
                this.m_angleTarget && (this.node.angle = this.m_angleTarget.angle);
            };
            Object.defineProperty(e.prototype, "target", {
                set: function (t) {
                    this._target = t;
                },
                enumerable: !1,
                configurable: !0
            });
            r([l(cc.Sprite)], e.prototype, "iconSpr", void 0);
            return r([c], e);
        }(cc.Component);
        i.default = h;
        cc._RF.pop();
    }, {
        "../manager/battle/GameRuleManager": "GameRuleManager"
    }],
    ShadowManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "63404HD14dJ9b5qS46Vf11I", "ShadowManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.ShadowMgr = void 0;
        var r = t("../../../../config/GameEnum"), o = t("../../../../frame/manager/BattleFlowManager"), s = t("../../../../frame/manager/FrameManager"), c = t("../../../../util/Tools"), l = t("../../shadow/ShadowComp"), h = t("./EnemyManager"), u = t("./EntityManager"), p = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._atlas = null;
                e._shadowArr = [];
                e._shadowPool = [];
                e._pfShadow = null;
                return e;
            }
            e.prototype.addLoadingRes = function () {
                return [{
                    itemType: cc.Prefab,
                    itemNames: ["shadow"],
                    loadType: r.LoadType.All
                }];
            };
            e.prototype.initData = function () {
                this._pfShadow || (this._pfShadow = s.FrameMgr.loadMgr.get("shadow", cc.Prefab));
                this._atlas || (this._atlas = s.FrameMgr.loadMgr.get("TP_Shadow", cc.SpriteAtlas));
                for (var t = 0; t < h.EnemyMgr.getPoolCount(); t++) {
                    var e = this.createNewShadow();
                    this._shadowPool.push(e);
                }
            };
            e.prototype.init = function () { };
            e.prototype.clear = function () {
                c.DYTools.clearArrayForNode(this._shadowArr);
                c.DYTools.clearArrayForNode(this._shadowPool);
                this._pfShadow = null;
                this._atlas = null;
            };
            e.prototype.addShadow = function (t, e, i, n) {
                void 0 === i && (i = 1);
                void 0 === n && (n = cc.v2(10, -25));
                var a = this._shadowPool.pop();
                a || (a = this.createNewShadow());
                a.position = cc.v3(-1e4, -1e4, 0);
                u.EntityMgr.addShadow(a);
                var r = a.getComponent(l.default);
                r.init(t, e, n.x, n.y, i);
                this._shadowArr.push(e);
                a.opacity = 255;
                r.enabled = !0;
                return r;
            };
            e.prototype.removeShadow = function (t) {
                t.target = null;
                t.node.opacity = 0;
                t.enabled = !1;
                c.DYTools.arrRemove(this._shadowArr, t.node);
                this._shadowPool.push(t.node);
            };
            e.prototype.createNewShadow = function () {
                var t = cc.instantiate(this._pfShadow);
                t.name = "shadow";
                t.opacity = 0;
                return t;
            };
            Object.defineProperty(e.prototype, "atlas", {
                get: function () {
                    return this._atlas;
                },
                enumerable: !1,
                configurable: !0
            });
            e.instance = new e();
            return e;
        }(o.BattleFlowBase);
        i.ShadowMgr = p.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../shadow/ShadowComp": "ShadowComp",
        "./EnemyManager": "EnemyManager",
        "./EntityManager": "EntityManager"
    }],
    ShopBoxResult: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "90be7GPhwxPKruIKtf9WbiI", "ShopBoxResult");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConfig"), s = t("../../../../../config/GameEnum"), c = t("../../../../../frame/manager/FrameManager"), l = t("../../../../../frame/ui/UIComponent"), h = t("../../../../../frame/ui/UINum"), u = t("../../../../battle/manager/battle/SnakeManager"), p = cc._decorator, d = p.ccclass, f = p.property, m = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_atlasNum = null;
                e.m_atlasSnake = null;
                e.boxOpenUp = null;
                e.boxOpenDown = null;
                e.spine_shopBox_shine = null;
                e.boxOpenCountAction = null;
                e.boxOpenCountBg = null;
                e.boxOpenCount = null;
                e.cardNode = null;
                e.spine_card = null;
                e.spine_card_star = null;
                e.spine_shopbox_cardshine = null;
                e.cardBgShine = null;
                e.cardBgShine2 = null;
                e.cardBoard = null;
                e.kuangSp = null;
                e.cardSp = null;
                e.cardCountNode = null;
                e.cardCount = null;
                e.cardTitleNode = null;
                e.cardTitleSp = null;
                e.cardInfoArr = [];
                e.btnNext = null;
                e.posBoxUp = cc.Vec2.ZERO;
                e.posBoxDown = cc.Vec2.ZERO;
                e.posCard = cc.Vec2.ZERO;
                e.listReward = [];
                e.cardInfoValueArr = [];
                e.cardInfoProgressArr = [];
                e.resultCallback = null;
                e.isInit = !1;
                return e;
            }
            e.prototype.init = function () {
                var t = this;
                if (!this.isInit) {
                    this.isInit = !0;
                    this.posBoxUp = this.boxOpenUp.getPosition();
                    this.posBoxDown = this.boxOpenDown.getPosition();
                    this.posCard = this.cardNode.getPosition();
                    this.boxOpenCount.init();
                    this.boxOpenCount.setAtlas(this.m_atlasNum);
                    this.boxOpenCount.setType(s.NumType.ShopBox);
                    this.boxOpenCount.node.scale = 1;
                    this.cardCount.init();
                    this.cardCount.setAtlas(this.m_atlasNum);
                    this.cardCount.setType(s.NumType.ShopBox);
                    this.cardCount.setDiffY("x", -7);
                    this.cardCount.setDistance(5);
                    this.cardCount.node.scale = 1;
                    this.cardBgShine.runAction(cc.repeatForever(cc.rotateBy(3, 360)));
                    this.spine_shopBox_shine.setCompleteListener(function (e) {
                        "shine" == (e.animation ? e.animation.name : "") && t.spine_shopBox_shine.setAnimation(0, "idle", !0);
                    });
                    this.spine_card.setCompleteListener(function (t) {
                        t.animation && t.animation.name;
                    });
                    this.refreshLanguage();
                }
            };
            e.prototype.refreshLanguage = function () {
                c.FrameMgr.languageMgr.setImage(this.cardInfoArr[0].getChildByName("txt5").getComponent(cc.Sprite), this.m_atlasNum, "txt5");
                c.FrameMgr.languageMgr.setImage(this.cardInfoArr[1].getChildByName("txt6").getComponent(cc.Sprite), this.m_atlasNum, "txt6");
                c.FrameMgr.languageMgr.setImage(this.cardInfoArr[2].getChildByName("txt7").getComponent(cc.Sprite), this.m_atlasNum, "txt7");
            };
            e.prototype.resetUI = function () {
                this.boxOpenUp.setPosition(this.posBoxUp);
                this.boxOpenUp.stopAllActions();
                this.boxOpenUp.active = !0;
                this.boxOpenDown.stopAllActions();
                this.boxOpenDown.active = !1;
                this.cardNode.setPosition(this.posBoxDown);
                this.cardNode.stopAllActions();
                this.cardNode.active = !1;
                this.cardBgShine.opacity = 0;
                this.cardBgShine2.opacity = 0;
                this.boxOpenCountAction.stopAllActions();
                this.cardTitleNode.stopAllActions();
                this.cardTitleNode.opacity = 0;
                this.cardInfoValueArr = [];
                this.cardInfoProgressArr = [];
                for (var t = 0; t < this.cardInfoArr.length; t++) {
                    var e = this.cardInfoArr[t];
                    e.stopAllActions();
                    e.opacity = 0;
                    var i = e.getChildByName("progressBg");
                    if (i) {
                        var n = i.getChildByName("progress").getComponent(cc.Sprite);
                        n && this.cardInfoProgressArr.push(n);
                    }
                }
                this.btnNext.node.active = !1;
            };
            e.prototype.showResult = function (t, e) {
                var i = this;
                this.init();
                this.listReward = t;
                this.resultCallback = e;
                this.resetUI();
                this.boxOpenUp.stopAllActions();
                this.boxOpenUp.scale = 1;
                this.boxOpenUp.setPosition(this.posBoxUp);
                cc.tween(this.boxOpenUp).to(6 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x,
                    y: this.posBoxDown.y
                }).to(3 * o.GConfig.ActionInterval, {
                    scaleX: .7,
                    scaleY: .64
                }).to(2 * o.GConfig.ActionInterval, {
                    scaleX: .8,
                    scaleY: .8
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x + 7,
                    y: this.posBoxDown.y - 3,
                    angle: 6
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x,
                    y: this.posBoxDown.y,
                    angle: 0
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x - 4,
                    y: this.posBoxDown.y - 3,
                    angle: -7
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x,
                    y: this.posBoxDown.y,
                    angle: 0
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x + 11,
                    y: this.posBoxDown.y - 11,
                    angle: 6
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x,
                    y: this.posBoxDown.y,
                    angle: 0
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x - 12,
                    y: this.posBoxDown.y - 7,
                    angle: -7
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x,
                    y: this.posBoxDown.y,
                    angle: 0
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x + 9,
                    y: this.posBoxDown.y - 5,
                    angle: 8
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x,
                    y: this.posBoxDown.y,
                    angle: 0
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x - 6,
                    y: this.posBoxDown.y - 5,
                    angle: -9
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x,
                    y: this.posBoxDown.y,
                    angle: 0
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x + 13,
                    y: this.posBoxDown.y - 13,
                    angle: 8
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x,
                    y: this.posBoxDown.y,
                    angle: 0
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x - 14,
                    y: this.posBoxDown.y - 9,
                    angle: -9
                }).to(1 * o.GConfig.ActionInterval, {
                    x: this.posBoxDown.x,
                    y: this.posBoxDown.y,
                    angle: 0
                }).to(4 * o.GConfig.ActionInterval, {
                    scale: .64
                }).call(function () {
                    i.boxOpenUp.active = !1;
                    i.boxOpenDown.active = !0;
                    i.showOneResult();
                }).start();
                this.boxOpenCountAction.opacity = 0;
                this.boxOpenCountAction.scale = .8;
                var n = cc.delayTime(17 * o.GConfig.ActionInterval), a = cc.fadeTo(0, 255), r = cc.scaleTo(4 * o.GConfig.ActionInterval, 1.1), s = cc.scaleTo(3 * o.GConfig.ActionInterval, 1), c = cc.sequence(n, a, r, s);
                this.boxOpenCountAction.runAction(c);
            };
            e.prototype.showOneResult = function () {
                var t = this;
                if (this.listReward.length <= 0) this.resultCallback && this.resultCallback(); else {
                    var e = this.listReward[0], i = e.x, n = e.y;
                    this.listReward.splice(0, 1);
                    var a = u.SnakeMgr.getSnakeConfigDataForType(i);
                    if (a) {
                        this.resetCard(a, n);
                        this.spine_shopBox_shine.setAnimation(0, "shine", !1);
                        this.boxOpenDown.stopAllActions();
                        this.boxOpenDown.scaleX = .9;
                        this.boxOpenDown.scaleY = 1;
                        var r = cc.scaleTo(3 * o.GConfig.ActionInterval, .65, .65), s = cc.scaleTo(3 * o.GConfig.ActionInterval, .8, .8), c = cc.sequence(r, s);
                        this.boxOpenDown.runAction(c);
                        this.cardBoard.opacity = 0;
                        var l = cc.delayTime(14 * o.GConfig.ActionInterval), h = cc.fadeTo(0, 255), p = cc.sequence(l, h);
                        this.cardBoard.runAction(p);
                        this.cardBgShine.opacity = 0;
                        var d = cc.delayTime(15 * o.GConfig.ActionInterval), f = cc.fadeTo(0, 255), m = cc.sequence(d, f);
                        this.cardBgShine.runAction(m);
                        this.cardBgShine.scale = 1 == a.quality ? 1.6 : 2.2;
                        this.cardBgShine2.opacity = 0;
                        var g = cc.delayTime(15 * o.GConfig.ActionInterval), _ = cc.fadeTo(0, 255), y = cc.sequence(g, _);
                        this.cardBgShine2.runAction(y);
                        this.spine_shopbox_cardshine.node.stopAllActions();
                        var v = cc.delayTime(11 * o.GConfig.ActionInterval), b = cc.callFunc(function () {
                            t.spine_shopbox_cardshine.setAnimation(0, "shine", !1);
                        }), M = cc.sequence(v, b);
                        this.spine_shopbox_cardshine.node.runAction(M);
                        this.spine_card.setSkin("skin_" + a.quality);
                        this.cardNode.active = !0;
                        this.cardNode.stopAllActions();
                        this.cardNode.setPosition(this.posBoxDown.add(cc.v2(0, 100)));
                        this.cardNode.scaleX = .7;
                        this.cardNode.scaleY = .55;
                        this.cardNode.opacity = 0;
                        var S = cc.delayTime(0 * o.GConfig.ActionInterval), k = cc.callFunc(function () {
                            t.spine_card.setAnimation(0, "show", !1);
                            t.spine_card_star.setAnimation(0, "idle", !0);
                        }), C = cc.fadeTo(0, 255), w = cc.scaleTo(2 * o.GConfig.ActionInterval, .75, .75), A = cc.moveTo(2 * o.GConfig.ActionInterval, this.posCard.add(cc.v2(0, -464))), T = cc.spawn(C, w, A), D = cc.scaleTo(6 * o.GConfig.ActionInterval, 1, 1), P = cc.moveTo(6 * o.GConfig.ActionInterval, this.posCard.add(cc.v2(0, -10))), E = cc.spawn(D, P), B = cc.moveTo(4 * o.GConfig.ActionInterval, this.posCard), F = cc.callFunc(function () {
                            t.cardNode.stopAllActions();
                            var e = 20 * o.GConfig.ActionInterval, i = cc.moveBy(e, cc.v2(0, 5)), n = cc.moveBy(e, cc.v2(0, -5)), a = cc.sequence(i, n);
                            t.cardNode.runAction(cc.repeatForever(a));
                        }), N = cc.sequence(S, k, T, E, B, F);
                        this.cardNode.runAction(N);
                        this.cardCountNode.opacity = 0;
                        this.cardCountNode.scale = .9;
                        var x = cc.delayTime(15 * o.GConfig.ActionInterval), R = cc.fadeTo(0, 255), I = cc.scaleTo(3 * o.GConfig.ActionInterval, 1.4), G = cc.scaleTo(3 * o.GConfig.ActionInterval, .9), O = cc.scaleTo(6 * o.GConfig.ActionInterval, 1), L = cc.sequence(x, R, I, G, O);
                        this.cardCountNode.runAction(L);
                        this.cardTitleNode.opacity = 0;
                        var j = cc.delayTime(5 * o.GConfig.ActionInterval), U = cc.fadeTo(4 * o.GConfig.ActionInterval, 255), Y = cc.sequence(j, U);
                        this.cardTitleNode.runAction(Y);
                        for (var H = 20 * o.GConfig.ActionInterval, W = 0; W < this.cardInfoArr.length; W++) {
                            var V = this.cardInfoArr[W];
                            V.stopAllActions();
                            V.opacity = 0;
                            V.position.x = -80;
                            var z = V.position.y, J = cc.delayTime(H + 1 * W * o.GConfig.ActionInterval), X = cc.moveTo(4 * o.GConfig.ActionInterval, cc.v2(6, z)), q = cc.fadeTo(4 * o.GConfig.ActionInterval, 255), K = cc.spawn(X, q), Z = cc.moveTo(2 * o.GConfig.ActionInterval, cc.v2(0, z)), Q = cc.sequence(J, K, Z);
                            V.runAction(Q);
                        }
                        if (0 == this.listReward.length) this.boxOpenCountBg.active = !1; else {
                            this.boxOpenCountBg.active = !0;
                            this.boxOpenCount.setString(this.listReward.length.toString());
                        }
                        this.scheduleOnce(function () {
                            t.btnNext.node.active = !0;
                        }, 50 * o.GConfig.ActionInterval);
                    } else console.error("抽卡数据错误 snakeType = " + i);
                }
            };
            e.prototype.resetCard = function (t, e) {
                var i = new cc.Color();
                i = i.fromHEX(t.color);
                this.cardCount.setString("x" + e);
                c.FrameMgr.languageMgr.setImage(this.cardTitleSp, this.m_atlasSnake, "name" + t.type);
                this.cardTitleSp.node.color = i;
                this.kuangSp.spriteFrame = this.m_atlasSnake.getSpriteFrame("kuang_" + t.quality);
                this.cardSp.spriteFrame = this.m_atlasSnake.getSpriteFrame("item_" + t.type);
                this.cardBgShine.color = i;
                this.cardBgShine2.color = i;
                if (3 == this.cardInfoValueArr.length) {
                    var n = t.atk, a = n * t.circle;
                    this.cardInfoValueArr[0].setString(Math.ceil(n).toString());
                    this.cardInfoValueArr[1].setString(Math.ceil(t.hp).toString());
                    this.cardInfoValueArr[2].setString(Math.ceil(a).toString());
                }
                if (3 == this.cardInfoProgressArr.length) {
                    var r = t.show.split("*");
                    if (3 == r.length) {
                        this.cardInfoProgressArr[0].fillRange = parseFloat(r[0]);
                        this.cardInfoProgressArr[1].fillRange = parseFloat(r[1]);
                        this.cardInfoProgressArr[2].fillRange = parseFloat(r[2]);
                    }
                }
            };
            e.prototype.OnClickBtnNext = function () {
                this.btnNext.node.active = !1;
                this.showOneResult();
            };
            r([f(cc.SpriteAtlas)], e.prototype, "m_atlasNum", void 0);
            r([f(cc.SpriteAtlas)], e.prototype, "m_atlasSnake", void 0);
            r([f(cc.Node)], e.prototype, "boxOpenUp", void 0);
            r([f(cc.Node)], e.prototype, "boxOpenDown", void 0);
            r([f(sp.Skeleton)], e.prototype, "spine_shopBox_shine", void 0);
            r([f(cc.Node)], e.prototype, "boxOpenCountAction", void 0);
            r([f(cc.Node)], e.prototype, "boxOpenCountBg", void 0);
            r([f(h.default)], e.prototype, "boxOpenCount", void 0);
            r([f(cc.Node)], e.prototype, "cardNode", void 0);
            r([f(sp.Skeleton)], e.prototype, "spine_card", void 0);
            r([f(sp.Skeleton)], e.prototype, "spine_card_star", void 0);
            r([f(sp.Skeleton)], e.prototype, "spine_shopbox_cardshine", void 0);
            r([f(cc.Node)], e.prototype, "cardBgShine", void 0);
            r([f(cc.Node)], e.prototype, "cardBgShine2", void 0);
            r([f(cc.Node)], e.prototype, "cardBoard", void 0);
            r([f(cc.Sprite)], e.prototype, "kuangSp", void 0);
            r([f(cc.Sprite)], e.prototype, "cardSp", void 0);
            r([f(cc.Node)], e.prototype, "cardCountNode", void 0);
            r([f(h.default)], e.prototype, "cardCount", void 0);
            r([f(cc.Node)], e.prototype, "cardTitleNode", void 0);
            r([f(cc.Sprite)], e.prototype, "cardTitleSp", void 0);
            r([f([cc.Node])], e.prototype, "cardInfoArr", void 0);
            r([f(cc.Button)], e.prototype, "btnNext", void 0);
            return r([d], e);
        }(l.default);
        i.default = m;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../frame/ui/UINum": "UINum",
        "../../../../battle/manager/battle/SnakeManager": "SnakeManager"
    }],
    ShopUI: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "267faUE79hNq7tAIFf7124p", "ShopUI");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConfig"), s = t("../../../../../config/GameConst"), c = t("../../../../../config/GameEnum"), l = t("../../../../../data/manager/ConfigDataManager"), h = t("../../../../../data/storage/GameData"), u = t("../../../../../frame/manager/FrameManager"), p = t("../../../../../frame/ui/UIComponent"), d = t("../../../../../frame/ui/UINum"), f = t("../../../../../util/GameFunc"), m = t("../../../../../util/Tools"), g = t("../../../../battle/manager/common/GuideManager"), _ = t("./ShopBoxResult"), y = cc._decorator, v = y.ccclass, b = y.property, M = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_atlas = null;
                e.topNode = null;
                e.boxFree_bg = null;
                e.boxFree_box = null;
                e.boxFree_timeNodeAction = null;
                e.boxFree_timeNode = null;
                e.boxFree_numTime = null;
                e.boxFree_btns = null;
                e.boxFree_btnFree = null;
                e.boxFree_btnDiamond = null;
                e.boxFree_iconCountDiamond = null;
                e.boxFree_numCountDiamond = null;
                e.boxFree_btnGrey = null;
                e.boxFree_iconCountGrey = null;
                e.boxFree_numCountGrey = null;
                e.shopBoxResult = null;
                e.boxFree_remainTime = -1;
                e.boxFree_costDiamond = 9999;
                e.boxFree_data = null;
                e.boxFree_boxInitPos = cc.Vec2.ZERO;
                e.m_mainScene = null;
                return e;
            }
            i = e;
            e.prototype.create = function (t) {
                var e = this;
                f.GFunc.adjustTopUI(this.topNode);
                this.m_mainScene = t;
                this.boxFree_data = l.ConfigDataMgr.getShopBoxData(i.boxFree_id);
                if (!this.boxFree_data) {
                    console.error("no shop free box data");
                    return 0;
                }
                this.initFreeBox();
                this.schedule(function () {
                    e.refreshFreeBoxTime();
                }, 1, cc.macro.REPEAT_FOREVER, 0);
                this.boxFree_boxInitPos = this.boxFree_box.getPosition();
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                u.FrameMgr.languageMgr.setImage(this.topNode.getChildByName("title").getComponent(cc.Sprite), this.m_atlas, "title");
                u.FrameMgr.languageMgr.setImage(this.boxFree_timeNode.getChildByName("txt4").getComponent(cc.Sprite), this.m_atlas, "txt4");
                u.FrameMgr.languageMgr.setImage(this.boxFree_btnFree.node.children[0].getComponent(cc.Sprite), this.m_atlas, "txt3");
            };
            e.prototype.open = function () {
                this.refresh();
                this.refreshLanguage();
                this.openAction();
                this.checkGuide();
            };
            e.prototype.openAction = function () {
                this.boxFree_box.active = !0;
                this.boxFree_box.stopAllActions();
                this.boxFree_box.scale = .7;
                this.boxFree_box.setPosition(this.boxFree_boxInitPos.add(cc.v2(0, -20)));
                var t = cc.scaleTo(3 * o.GConfig.ActionInterval, .8), e = cc.moveTo(3 * o.GConfig.ActionInterval, this.boxFree_boxInitPos.add(cc.v2(0, 195))), i = cc.spawn(t, e), n = cc.scaleTo(3 * o.GConfig.ActionInterval, 1.05), a = cc.moveTo(3 * o.GConfig.ActionInterval, this.boxFree_boxInitPos.add(cc.v2(0, -13))), r = cc.spawn(n, a), s = cc.scaleTo(3 * o.GConfig.ActionInterval, .98), c = cc.moveTo(3 * o.GConfig.ActionInterval, this.boxFree_boxInitPos.add(cc.v2(0, 15))), l = cc.spawn(s, c), h = cc.scaleTo(4 * o.GConfig.ActionInterval, 1), u = cc.moveTo(4 * o.GConfig.ActionInterval, this.boxFree_boxInitPos), p = cc.spawn(h, u), d = cc.sequence(i, r, l, p);
                this.boxFree_box.runAction(d);
                this.topNode.stopAllActions();
                this.topNode.opacity = 0;
                this.topNode.runAction(cc.fadeTo(10 * o.GConfig.ActionInterval, 255));
                this.boxFree_bg.stopAllActions();
                this.boxFree_bg.opacity = 0;
                var f = cc.delayTime(3 * o.GConfig.ActionInterval), m = cc.fadeTo(5 * o.GConfig.ActionInterval, 255), g = cc.sequence(f, m);
                this.boxFree_bg.runAction(g);
                this.boxFree_timeNodeAction.stopAllActions();
                this.boxFree_timeNodeAction.opacity = 0;
                var _ = cc.delayTime(3 * o.GConfig.ActionInterval), y = cc.fadeTo(5 * o.GConfig.ActionInterval, 255), v = cc.sequence(_, y);
                this.boxFree_timeNodeAction.runAction(v);
                this.boxFree_btns.active = !0;
                this.boxFree_btns.stopAllActions();
                this.boxFree_btns.opacity = 0;
                this.boxFree_btns.scale = .8;
                var b = cc.delayTime(7 * o.GConfig.ActionInterval), M = cc.scaleTo(5 * o.GConfig.ActionInterval, 1.05), S = cc.fadeTo(5 * o.GConfig.ActionInterval, 255), k = cc.spawn(M, S), C = cc.scaleTo(4 * o.GConfig.ActionInterval, 1), w = cc.sequence(b, k, C);
                this.boxFree_btns.runAction(w);
            };
            e.prototype.openBoxAction = function (t) {
                var e = this;
                this.m_mainScene.getHomeUI().showTopBottomUI(!1);
                this.topNode.stopAllActions();
                this.topNode.runAction(cc.fadeTo(6 * o.GConfig.ActionInterval, 0));
                this.boxFree_bg.stopAllActions();
                this.boxFree_bg.opacity = 0;
                this.boxFree_timeNodeAction.stopAllActions();
                this.boxFree_timeNodeAction.opacity = 0;
                this.boxFree_btns.stopAllActions();
                this.boxFree_btns.opacity = 0;
                this.boxFree_btns.active = !1;
                this.boxFree_box.stopAllActions();
                this.boxFree_box.setPosition(this.boxFree_boxInitPos);
                this.boxFree_box.scale = 1;
                this.boxFree_box.active = !1;
                this.shopBoxResult.node.active = !0;
                this.shopBoxResult.showResult(t, function () {
                    e.refresh();
                    e.openAction();
                    e.m_mainScene.getHomeUI().showTopBottomUI(!0);
                    u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.MainGuide);
                    e.shopBoxResult.node.active = !1;
                });
                u.FrameMgr.audioMgr.playEffect("a_weaponUI_openBox");
            };
            e.prototype.refresh = function () {
                this.refreshFreeBoxDiamond();
                this.refreshFreeBoxTime();
            };
            e.prototype.initFreeBox = function () {
                this.boxFree_remainTime = -1;
                this.boxFree_numTime.init();
                this.boxFree_numTime.setAtlas(this.m_atlas);
                this.boxFree_numTime.setType(c.NumType.ShopBox);
                this.boxFree_numTime.setColor(cc.color(251, 251, 157));
                this.boxFree_numTime.node.scale = .6;
                this.boxFree_numTime.setAnchor(cc.v2(.5, .5));
                this.boxFree_numTime.setDistance(5);
                this.refreshFreeBoxTime();
                this.boxFree_numCountDiamond.init();
                this.boxFree_numCountDiamond.setAtlas(this.m_atlas);
                this.boxFree_numCountDiamond.setType(c.NumType.ShopBox);
                this.boxFree_numCountDiamond.setDistance(5);
                this.boxFree_numCountDiamond.node.scale = .9;
                this.boxFree_numCountGrey.init();
                this.boxFree_numCountGrey.setAtlas(this.m_atlas);
                this.boxFree_numCountGrey.setType(c.NumType.ShopBox);
                this.boxFree_numCountGrey.setDistance(5);
                this.boxFree_numCountGrey.setColor(cc.color(236, 83, 70));
                this.boxFree_numCountGrey.node.scale = .9;
                this.refreshFreeBoxDiamond();
            };
            e.prototype.refreshFreeBoxTime = function () {
                var t = Math.ceil(f.GFunc.getShopFreeBoxTime() / 1e3);
                if (this.boxFree_remainTime != t) {
                    this.boxFree_remainTime = t;
                    this.boxFree_numTime.setString(m.DYTools.getTimeStrForHMS(this.boxFree_remainTime));
                }
                this.refreshFreeBoxBtns();
            };
            e.prototype.refreshFreeBoxBtns = function () {
                if (this.boxFree_remainTime <= 0) {
                    this.boxFree_btnFree.node.active = !0;
                    this.boxFree_btnDiamond.node.active = !1;
                    this.boxFree_btnGrey.node.active = !1;
                    this.boxFree_timeNode.active = !1;
                } else {
                    this.boxFree_btnFree.node.active = !1;
                    this.boxFree_timeNode.active = !0;
                    if (h.GData.getDiamond() >= this.boxFree_costDiamond) {
                        this.boxFree_btnDiamond.node.active = !0;
                        this.boxFree_btnGrey.node.active = !1;
                    } else {
                        this.boxFree_btnDiamond.node.active = !1;
                        this.boxFree_btnGrey.node.active = !0;
                    }
                }
            };
            e.prototype.refreshFreeBoxDiamond = function () {
                if (this.boxFree_data) {
                    this.boxFree_costDiamond = this.boxFree_data.consume;
                    if (this.boxFree_numCountDiamond) {
                        this.boxFree_numCountDiamond.setString(this.boxFree_costDiamond.toString());
                        this.boxFree_iconCountDiamond.x = this.boxFree_numCountDiamond.node.x - .5 * this.boxFree_numCountDiamond.getSize().width - 35;
                    }
                    if (this.boxFree_numCountGrey) {
                        this.boxFree_numCountGrey.setString(this.boxFree_costDiamond.toString());
                        this.boxFree_iconCountGrey.x = this.boxFree_numCountGrey.node.x - .5 * this.boxFree_numCountGrey.getSize().width - 35;
                    }
                }
            };
            e.prototype.getRewardBox = function (t) {
                var e = h.GData.getShopBoxOpenTimes(t.id);
                e += 1;
                h.GData.setShopBoxOpenTimes(t.id, e);
                if (this.boxFree_btns.getChildByName("finger")) {
                    var i = h.GData.getShopGuide();
                    h.GData.setShopGuide(i + 1);
                    var n = l.ConfigDataMgr.getGlobalDataInt(c.GlobalKey.ShopGuideCount, 3);
                    h.GData.getShopGuide() >= n && u.FrameMgr.reportMgr.sendReportGuide(c.GuideType.MainShopRP);
                }
                var a = t.specialDic[e];
                if (a && a.length > 0) {
                    var r = a[0], o = a[1];
                    this.showBoxResult(r, o);
                } else {
                    for (var s = h.GData.getCurStage(), p = 1, d = 0; d < t.stagePollArr.length; d++) {
                        var f = t.stagePollArr[d], g = f[0], _ = f[1], y = f[2];
                        if (s >= g && s <= _) {
                            p = y;
                            break;
                        }
                    }
                    var v = 1, b = 0;
                    for (var M in t.weightDic) b += t.weightDic[M];
                    var S = m.DYTools.random_int(1, b);
                    for (var M in t.weightDic) if ((S -= t.weightDic[M]) <= 0) {
                        v = parseInt(M);
                        break;
                    }
                    var k = t.getPollDic(v)[p], C = k[m.DYTools.random_int(0, k.length - 1)].split("*"), w = parseInt(C[0]), A = parseInt(C[1]);
                    this.showBoxResult(w, A);
                }
            };
            e.prototype.showBoxResult = function (t, e) {
                var i = [];
                i.push(cc.v2(t, e));
                f.GFunc.onGetReward(i, !1);
                this.openBoxAction(i);
            };
            e.prototype.OnClickBoxFreeBtnFree = function () {
                if (this.boxFree_btnFree.node.active) {
                    this.getRewardBox(this.boxFree_data);
                    f.GFunc.resetShopFreeBoxTimestamp();
                    this.refreshFreeBoxTime();
                    this.checkGuide();
                }
            };
            e.prototype.OnClickBoxFreeBtnDiamond = function () {
                if (f.GFunc.diamondChange(-this.boxFree_costDiamond)) {
                    this.getRewardBox(this.boxFree_data);
                    this.refreshFreeBoxTime();
                    this.checkGuide();
                }
            };
            e.prototype.OnClickBoxFreeBtnGrey = function () {
                f.GFunc.showFloatTip({
                    txt: u.FrameMgr.languageMgr.getTxt(1002),
                    bgType: 2
                });
            };
            e.isShowRP = function () {
                if (f.GFunc.getShopFreeBoxTime() <= 0) return !0;
                var t = l.ConfigDataMgr.getShopBoxData(i.boxFree_id);
                return !!(t && h.GData.getDiamond() >= t.consume);
            };
            e.prototype.checkGuide = function () {
                if (s.GValue.MainSceneGuide > 0) m.DYTools.removeChildByName(this.boxFree_btns, "finger"); else if (h.GData.isGuided(c.GuideType.MainShop) && (this.boxFree_btnFree.node.active || this.boxFree_btnDiamond.node.active) && g.GuideMgr.guideAble(c.GuideType.MainShopRP)) {
                    var t = this.boxFree_btns.getChildByName("finger");
                    t || ((t = f.GFunc.createfinger(this.boxFree_btns, "finger", 0)).x = 100);
                } else m.DYTools.removeChildByName(this.boxFree_btns, "finger");
            };
            var i;
            e.boxFree_id = 1;
            r([b(cc.SpriteAtlas)], e.prototype, "m_atlas", void 0);
            r([b(cc.Node)], e.prototype, "topNode", void 0);
            r([b(cc.Node)], e.prototype, "boxFree_bg", void 0);
            r([b(cc.Node)], e.prototype, "boxFree_box", void 0);
            r([b(cc.Node)], e.prototype, "boxFree_timeNodeAction", void 0);
            r([b(cc.Node)], e.prototype, "boxFree_timeNode", void 0);
            r([b(d.default)], e.prototype, "boxFree_numTime", void 0);
            r([b(cc.Node)], e.prototype, "boxFree_btns", void 0);
            r([b(cc.Button)], e.prototype, "boxFree_btnFree", void 0);
            r([b(cc.Button)], e.prototype, "boxFree_btnDiamond", void 0);
            r([b(cc.Node)], e.prototype, "boxFree_iconCountDiamond", void 0);
            r([b(d.default)], e.prototype, "boxFree_numCountDiamond", void 0);
            r([b(cc.Button)], e.prototype, "boxFree_btnGrey", void 0);
            r([b(cc.Node)], e.prototype, "boxFree_iconCountGrey", void 0);
            r([b(d.default)], e.prototype, "boxFree_numCountGrey", void 0);
            r([b(_.default)], e.prototype, "shopBoxResult", void 0);
            return i = r([v], e);
        }(p.default);
        i.default = M;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../frame/ui/UINum": "UINum",
        "../../../../../util/GameFunc": "GameFunc",
        "../../../../../util/Tools": "Tools",
        "../../../../battle/manager/common/GuideManager": "GuideManager",
        "./ShopBoxResult": "ShopBoxResult"
    }],
    SkillManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "71a1evAcNVES7Ssc2ypjOI0", "SkillManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.SkillMgr = void 0;
        var r = t("../../../../frame/manager/BattleFlowManager"), o = t("../../../../frame/manager/FrameManager"), s = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._skillAtlas = null;
                e._skillList = [];
                return e;
            }
            e.prototype.addLoadingRes = function () {
                return [];
            };
            e.prototype.checkType = function () { };
            e.prototype.getInitTime = function () {
                return 100;
            };
            e.prototype.initData = function () {
                this._skillList.splice(0);
                this._skillAtlas = o.FrameMgr.loadMgr.get("TP_snake_b_1", cc.SpriteAtlas);
                this.checkType();
            };
            e.prototype.init = function () { };
            e.prototype.clear = function () {
                this._skillList.forEach(function (t) {
                    t.node.destroy();
                });
                this._skillList.splice(0);
                this._skillAtlas = null;
            };
            e.instance = new e();
            return e;
        }(r.BattleFlowBase);
        i.SkillMgr = s.instance;
        cc._RF.pop();
    }, {
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager"
    }],
    SnakeBody: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "035eb0DzNBN3b68tv/oSXYg", "SnakeBody");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameEnum"), c = t("../../../../frame/manager/FrameManager"), l = t("../../manager/battle/ShadowManager"), h = t("../../manager/battle/SnakeManager"), u = t("../move/SnakeMoveBodyComp"), p = t("./SnakeUnit"), d = cc._decorator.ccclass, f = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_skinSpr = null;
                e.m_lightNode = null;
                e.m_img = "";
                e.m_imgCD = "";
                return e;
            }
            e.prototype.init = function (e) {
                this._type = s.SnakeUnitType.body;
                t.prototype.init.call(this, e);
                this.initData();
                this.initSkill();
                c.FrameMgr.noticeMgr.on(s.EventTypeEnum.OnCircleCDOver, this.onCircleCDOver, this);
                c.FrameMgr.noticeMgr.on(s.EventTypeEnum.OnCircleCD, this.onCircleCD, this);
            };
            e.prototype.initData = function () {
                var t = this._mainEntity.getSnakeConfig().imgSnake;
                this.m_img = t + "_body";
                this.m_imgCD = this.m_img;
            };
            e.prototype.initSkill = function () {
                var t = this._mainEntity.getSnakeConfig().imgSnake;
                this.m_skinSpr = this.node.getChildByName("img").getChildByName("icon").getComponent(cc.Sprite);
                this.m_skinSpr.spriteFrame = h.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_img);
                this.m_lightNode = new cc.Node("light");
                this.m_lightNode.parent = this.node;
                this.m_lightNode.addComponent(cc.Sprite).spriteFrame = h.SnakeMgr.snakeAtlas.getSpriteFrame(t + "_bodyw");
                this.m_lightNode.opacity = 0;
            };
            e.prototype.onCircleCDOver = function () {
                this.m_skinSpr.spriteFrame = h.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_img);
                if (this.m_lightNode) {
                    var t = o.GConfig.ActionInterval;
                    this.m_lightNode.scale = .9;
                    this.m_lightNode.opacity = 255;
                    cc.tween(this.m_lightNode).to(6 * t, {
                        scale: 1.9,
                        opacity: 0
                    }).start();
                }
            };
            e.prototype.onCircleCD = function () {
                this.m_skinSpr.spriteFrame = h.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_imgCD);
            };
            e.prototype._initMoveComp = function () {
                this._moveComp = new u.default();
                this._moveComp.initBase(this, this.node);
            };
            e.prototype._initColliderComp = function () {
                var t = this._mainEntity.getColliderDataByType(this._type);
                this.m_collideComp.init(t, this);
                this.startBattle();
            };
            e.prototype._initShadowComp = function () {
                var t = this._mainEntity.getSnakeConfig().imgSnake, e = this._mainEntity.getSnakeConfig().shadowScale, i = this._mainEntity.getSnakeConfig().shadowOffset, n = l.ShadowMgr.atlas.getSpriteFrame(t + "_shadow_body");
                this._shadowComp = l.ShadowMgr.addShadow(n, this.node, e, i);
                this._shadowComp.setAngleTarget(this);
            };
            e.prototype.changeShadow = function (t) {
                void 0 === t && (t = "snake_shadow_intensifybody");
                var e = l.ShadowMgr.atlas.getSpriteFrame(t);
                if (e && this._shadowComp) {
                    l.ShadowMgr.removeShadow(this._shadowComp);
                    var i = this._mainEntity.getSnakeConfig().shadowScale, n = this._mainEntity.getSnakeConfig().shadowOffset;
                    this._shadowComp = l.ShadowMgr.addShadow(e, this.node, i, n);
                }
            };
            e.prototype.clear = function () {
                c.FrameMgr.noticeMgr.off(s.EventTypeEnum.OnCircleCDOver, this.onCircleCDOver, this);
                c.FrameMgr.noticeMgr.off(s.EventTypeEnum.OnCircleCD, this.onCircleCD, this);
            };
            return r([d], e);
        }(p.default);
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../manager/battle/ShadowManager": "ShadowManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../move/SnakeMoveBodyComp": "SnakeMoveBodyComp",
        "./SnakeUnit": "SnakeUnit"
    }],
    SnakeBuffComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "613efcx6EBBvYlVWDCovept", "SnakeBuffComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, o = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var s = t("../../../../config/GameEnum"), c = t("../../../../frame/manager/FrameManager"), l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_snakeEntity = null;
                e.m_buffTimeMap = new Map();
                e.m_buffDataMap = new Map();
                e.m_audioIdMap = new Map();
                return e;
            }
            e.prototype.create = function (e) {
                t.prototype.initBase.call(this, e);
                this.m_snakeEntity = e;
                c.FrameMgr.noticeMgr.on(s.EventTypeEnum.SnakeBuffStart, this.addBuff.bind(this));
            };
            e.prototype.clear = function () {
                this.m_audioIdMap.forEach(function (t) {
                    c.FrameMgr.audioMgr.stopEffect(t);
                });
                this.m_audioIdMap.clear();
            };
            e.prototype.updateLogic = function (t) {
                var e = this;
                this.m_buffTimeMap.forEach(function (i, n) {
                    i -= t;
                    e.m_buffTimeMap.set(n, i);
                    i < 0 && e.removeBuff(n);
                });
            };
            e.prototype.removeAllBuff = function () {
                var t = this;
                this.m_buffDataMap.forEach(function (e, i) {
                    t.removeBuff(i);
                });
            };
            e.prototype.removeBuff = function (t) {
                this.m_buffTimeMap.delete(t);
                this.m_buffDataMap.delete(t) && this.finishBuff(t);
            };
            e.prototype.addBuff = function (t) {
                var e = t.time ? t.time : 0;
                if (0 == e) switch (t.type) {
                    case s.SnakeBuffType.Crazy:
                        e = t.data[2] ? t.data[2] : 0;
                        break;

                    case s.SnakeBuffType.SkillAtkAdd:
                }
                var i = this.m_buffTimeMap.get(t.type);
                (!i || i < e) && (i = e);
                this.m_buffTimeMap.set(t.type, i);
                this.m_buffDataMap.set(t.type, t.data);
                this.excuteBuff(t.type);
                this.playEffect(t.type);
            };
            e.prototype.playEffect = function (t) {
                return r(this, void 0, void 0, function () {
                    var e;
                    return o(this, function (i) {
                        switch (i.label) {
                            case 0:
                                switch (t) {
                                    case s.SnakeBuffType.Crazy:
                                        return [3, 1];
                                }
                                return [3, 3];

                            case 1:
                                null != (e = this.m_audioIdMap.get(t)) && e >= 0 && c.FrameMgr.audioMgr.stopEffect(e);
                                return [4, c.FrameMgr.audioMgr.playEffect("snake_crazy")];

                            case 2:
                                e = i.sent();
                                this.m_audioIdMap.set(t, e);
                                return [3, 3];

                            case 3:
                                return [2];
                        }
                    });
                });
            };
            e.prototype.hasBuff = function (t) {
                var e = this.m_buffTimeMap.get(t);
                return e && e > 0;
            };
            e.prototype.getBuffData = function (t) {
                return this.m_buffDataMap.get(t);
            };
            e.prototype.excuteBuff = function (t) {
                this.m_snakeEntity.checkSnakeDataChangeForBuff();
                switch (t) {
                    case s.SnakeBuffType.Crazy:
                        this.onCrazyStart();
                }
            };
            e.prototype.finishBuff = function (t) {
                this.m_snakeEntity.checkSnakeDataChangeForBuff();
                switch (t) {
                    case s.SnakeBuffType.Crazy:
                        this.onCrazyOver();
                        break;

                    case s.SnakeBuffType.Crazy:
                }
            };
            e.prototype.onCrazyStart = function () {
                for (var t = this.m_snakeEntity.getUnits(), e = 0, i = t.length; e < i; e++) t[e].onCrazyStart();
            };
            e.prototype.onCrazyOver = function () {
                for (var t = this.m_snakeEntity.getUnits(), e = 0, i = t.length; e < i; e++) t[e].onCrazyOver();
            };
            return e;
        }(t("../../common/CompBase").default);
        i.default = l;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../common/CompBase": "CompBase"
    }],
    SnakeCrazyComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "15a29bIq4BEQpUaevdj5uQ3", "SnakeCrazyComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../common/CompBase"), s = cc._decorator, c = s.ccclass, l = (s.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_snakeUnitArr = [];
                    return e;
                }
                e.prototype.create = function (t) {
                    this.m_snakeUnitArr = t;
                };
                e.prototype.onCrazyStart = function () {
                    for (var t = 0; t < this.m_snakeUnitArr.length; t++) this.m_snakeUnitArr[t].onCrazyStart();
                };
                e.prototype.onCrazyOver = function () {
                    for (var t = 0; t < this.m_snakeUnitArr.length; t++) this.m_snakeUnitArr[t].onCollide();
                };
                return r([c], e);
            }(o.default));
        i.default = l;
        cc._RF.pop();
    }, {
        "../../common/CompBase": "CompBase"
    }],
    SnakeEntity: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "91c2131SIpImIfBsOettkEV", "SnakeEntity");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("../../../../data/game/PlayerData"), c = t("../../../../data/manager/ConfigDataManager"), l = t("../../../../frame/effect/RegionEffect"), h = t("../../../../frame/manager/FrameManager"), u = t("../../bullet/FirePoint/FirePointSnake"), p = t("../../common/EntityBase"), d = t("../../manager/battle/BattleManager"), f = t("../../manager/battle/BulletManager"), m = t("../../manager/battle/EnemyManager"), g = t("../../manager/battle/MapManager"), _ = t("../../manager/battle/SnakeManager"), y = t("../unit/SnakeBody"), v = t("../unit/SnakeHead"), b = t("../unit/SnakeTail"), M = t("../unit/SnakeUnit"), S = t("../../manager/battle/PropManager"), k = t("../../manager/battle/GameRuleManager"), C = t("../../../../config/GameConfig"), w = t("../../../../util/Tools"), A = t("../move/SnakeMoveTargetComp"), T = t("../../../../config/GameConst"), D = t("../../../../data/storage/GameData"), P = t("../../manager/battle/BossManager"), E = t("../../../../frame/ui/UINum"), B = t("../move/SnakeMoveDirComp"), F = t("../../../../frame/manager/ReportManager"), N = t("../../../../platform/PlatformManager"), x = t("../unit/SnakeLine"), R = t("../comp/SnakeBuffComp"), I = t("../../../../util/GameFunc"), G = t("../skill/thorns/SnakeSkillThorns"), O = t("../skill/forst/SnakeSkillForst"), L = t("../skill/fireball/SnakeSkillFireBall"), j = cc._decorator, U = j.ccclass, Y = (j.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_bottomLayer = null;
                    e.m_bottomLayer1 = null;
                    e.m_lineLayer = null;
                    e.m_bodyLayer = null;
                    e.m_fireLayer = null;
                    e.m_topLayer = null;
                    e.m_firePointArr = [];
                    e._nodes = [];
                    e._units = [];
                    e._colliders = [];
                    e.m_lines = [];
                    e._hpNode = null;
                    e._snakeHpBar = null;
                    e._snakeHpWhite = null;
                    e._snakeHpNum = null;
                    e._hpBarTween = null;
                    e._cutHpNum = null;
                    e._cutHpTween = null;
                    e._hurtNum = 0;
                    e._hpRed = null;
                    e.m_snakeData = null;
                    e._snakeConfig = null;
                    e._snakeTurretConfig = null;
                    e._snakePosition = [];
                    e._moveSpeed = 100;
                    e._preMoveIndex = 0;
                    e._preMoveIndexList = [];
                    e._nodeFlyBodyParent = null;
                    e._indexFlyBodyParent = 0;
                    e.m_buffComp = null;
                    e.m_hurtNode = null;
                    e._preTarget = null;
                    e.m_circleAble = !1;
                    e.m_circleTime = 0;
                    e.m_circleEmit = !0;
                    e._skillCount = 0;
                    e._skillHp = 0;
                    e._playerRegionEffect = [];
                    e.skillCurTriggerTime = 0;
                    e.m_skill = null;
                    e._count = 0;
                    return e;
                }
                e.prototype.getColliderDataByType = function (t) {
                    switch (t) {
                        case o.SnakeUnitType.head:
                            return this._snakeConfig.headColliderData;

                        case o.SnakeUnitType.body:
                        case o.SnakeUnitType.tail:
                            return this._snakeConfig.bodyColliderData;

                        case o.SnakeUnitType.intensifyBody:
                            return this._snakeConfig.intensifyColliderData;
                    }
                };
                e.prototype.getColliderAtk = function () {
                    return this.m_snakeData ? this.m_snakeData.colliderAtk : 0;
                };
                e.prototype.getSnakeSpace = function () {
                    return this._snakeConfig.space;
                };
                e.prototype.getSnakeLong = function () {
                    return this.getSnakeLength() * this.getSnakeSpace().headBodySpace * 2;
                };
                e.prototype.getMoveSpeed = function () {
                    return this._moveSpeed;
                };
                e.prototype.getSnakeHead = function () {
                    return this._head ? this._head : null;
                };
                e.prototype.getUnits = function () {
                    return this._units ? this._units : [];
                };
                e.prototype.getSnakeData = function () {
                    return this.m_snakeData;
                };
                e.prototype.getSnakeConfig = function () {
                    return this._snakeConfig ? this._snakeConfig : null;
                };
                e.prototype.getSnakeLength = function () {
                    return this._nodes ? this._nodes.length : 0;
                };
                e.prototype.getSnakeNode = function (t) {
                    return this._nodes[t];
                };
                e.prototype.getRotateSpeed = function () {
                    return this._snakeConfig ? this._snakeConfig.rad : 800;
                };
                e.prototype.getTargetMoveSpeed = function () {
                    return _.SnakeMgr.targetSpeed ? _.SnakeMgr.targetSpeed : this._snakeConfig ? this._snakeConfig.moveSpeed : 350;
                };
                e.prototype.getPreIndex = function () {
                    return this._preMoveIndex;
                };
                e.prototype.getPreIndexList = function () {
                    return this._preMoveIndexList;
                };
                e.prototype.getPlayerPosition = function () {
                    return this._snakePosition;
                };
                e.prototype.clearPlayerPosition = function () {
                    this._snakePosition.splice(0);
                };
                e.prototype.setMoveSpeed = function (t) {
                    this._moveSpeed = t;
                };
                e.prototype.setPreIndex = function (t) {
                    this._preMoveIndex = t;
                };
                e.prototype.pushPreIndexList = function (t) {
                    this._preMoveIndexList.push(t);
                };
                e.prototype.clearPreIndexList = function () {
                    this._preMoveIndexList.splice(0);
                };
                e.prototype.cutHp = function (t) {
                    if (t > 0 && this.m_snakeData.nowHp > 0) {
                        this._hurtNum += t;
                        h.FrameMgr.reportMgr.sendReportPlayerHurt(d.BattleMgr.stage, D.GData.getCurSnakeId(), D.GData.getCurSnakeLv(), D.GData.getSnakeTurretLv(), this._hurtNum);
                        this.m_snakeData.nowHp -= t;
                        this._refreshHpNum();
                        N.PlatformMgr.virbrate(!1);
                        h.FrameMgr.audioMgr.playEffect("snakeHurt");
                        if (this.m_snakeData.nowHp <= 0) this._toDie(); else {
                            this._head.setNoHurt(this.m_snakeData.hurtNoHurt);
                            this._snakeHpBar.fillRange = this.m_snakeData.nowHp / this.m_snakeData.initHp;
                        }
                        this.playHurtEffect(t);
                        return -t;
                    }
                    this.playHurtEffect(t);
                    return 0;
                };
                e.prototype._refreshHpNum = function () {
                    this._snakeHpNum && this._snakeHpNum.setString(this.m_snakeData.nowHp.toString());
                };
                e.prototype.playHurtEffect = function (t) {
                    var e = this, i = C.GConfig.ActionInterval, n = this;
                    (function () {
                        if (!n.m_hurtNode) {
                            n.m_hurtNode = new cc.Node("hurt");
                            n.m_hurtNode.parent = n._snakeHpNum.node.parent;
                        }
                        cc.Tween.stopAllByTarget(n.m_hurtNode);
                        var e = n.m_hurtNode.getChildByName("xin1");
                        if (!e) {
                            (e = new cc.Node("xin1")).parent = n.m_hurtNode;
                            e.addComponent(cc.Sprite).spriteFrame = _.SnakeMgr.snakeAtlas.getSpriteFrame("xin1");
                        }
                        cc.Tween.stopAllByTarget(e);
                        e.x = -34;
                        e.angle = 0;
                        cc.tween(e).delay(25 * i).to(3 * i, {
                            x: -43,
                            angle: 20
                        }).to(2 * i, {
                            x: -42,
                            angle: 14
                        }).start();
                        var a = n.m_hurtNode.getChildByName("xin2");
                        if (!a) {
                            (a = new cc.Node("xin2")).parent = n.m_hurtNode;
                            a.addComponent(cc.Sprite).spriteFrame = _.SnakeMgr.snakeAtlas.getSpriteFrame("xin2");
                        }
                        cc.Tween.stopAllByTarget(a);
                        a.x = -16;
                        a.angle = 0;
                        cc.tween(a).delay(25 * i).to(3 * i, {
                            x: -7,
                            angle: -22
                        }).to(2 * i, {
                            x: -8,
                            angle: -16
                        }).start();
                        var r = n.m_hurtNode.getChildByName("xin0");
                        if (!r) {
                            (r = new cc.Node("xin0")).parent = n.m_hurtNode;
                            r.addComponent(cc.Sprite).spriteFrame = _.SnakeMgr.snakeAtlas.getSpriteFrame("xin0");
                            r.x = -25;
                        }
                        cc.Tween.stopAllByTarget(r);
                        r.opacity = 255;
                        cc.tween(r).delay(25 * i).call(function () {
                            r.opacity = 0;
                        }).start();
                        if (!n._cutHpNum) {
                            var s = cc.instantiate(T.GValue.pfNum);
                            n.m_hurtNode.addChild(s);
                            n._cutHpNum = s.getComponent(E.default);
                            n._cutHpNum.setType(o.NumType.EnemyHurtRed);
                            n._cutHpNum.setAtlas(_.SnakeMgr.snakeAtlas);
                            n._cutHpNum.setDistance(2);
                            n._cutHpNum.setAnchor(cc.v2(0, .5));
                            s.x = 6;
                        }
                        n._cutHpNum.setString("-" + t);
                        n.m_hurtNode.opacity = 255;
                        n.m_hurtNode.scale = 1.5;
                        n.m_hurtNode.y = 0;
                        cc.tween(n.m_hurtNode).to(2 * i, {
                            y: 48,
                            scale: 1.5
                        }).to(4 * i, {
                            y: 38,
                            scale: 1
                        }).to(16 * i, {
                            y: 73
                        }).to(17 * i, {
                            y: 100,
                            opacity: 0
                        }).start();
                    })();
                    if (!this._hpBarTween) {
                        var a = C.GConfig.ActionInterval, r = this._snakeHpBar.node.parent.y;
                        this._hpBarTween = cc.tween().to(0, {
                            y: r + 5,
                            scale: 1.3
                        }).delay(3 * a).to(0, {
                            x: 3,
                            y: r
                        }).delay(4 * a).to(0, {
                            x: -2,
                            y: r + 3
                        }).delay(5 * a).to(0, {
                            x: 0,
                            y: r,
                            scale: 1
                        });
                    }
                    this._hpBarTween.clone(this._snakeHpBar.node.parent).start();
                    this._snakeHpWhite.node.zIndex = 2;
                    cc.tween(this._snakeHpWhite).delay(12 * i).call(function () {
                        e._snakeHpWhite.node.zIndex = 0;
                    }).to(25 * i, {
                        fillRange: this._snakeHpBar.fillRange
                    }).start();
                    this._hpRed.active = !0;
                    this._hpRed.opacity = 255;
                    cc.tween(this._hpRed).delay(8 * i).to(15 * i, {
                        opacity: 0
                    }).start();
                    this._head.playHurtAnim();
                    h.FrameMgr.noticeMgr.emit(o.EventTypeEnum.ScreenShake);
                    h.FrameMgr.noticeMgr.emit(o.EventTypeEnum.ScreenRed);
                };
                e.prototype.checkDeath = function () {
                    return this.m_snakeData.nowHp <= 0;
                };
                e.prototype.reLive = function () {
                    var t = this;
                    this.scheduleOnce(function () {
                        var e = t._head;
                        e && e.setNoHurt(t.m_snakeData.reviveNoHurt);
                        t.m_snakeData.nowHp = t.m_snakeData.initHp;
                        t._snakeHpBar.fillRange = 1;
                        t._snakeHpWhite.fillRange = 1;
                        t._refreshHpNum();
                        t._snakeHpBar.node.parent.parent.active = !0;
                        k.GameRuleMgr.changeState(o.GameState.SnakeRelive);
                        _.SnakeMgr.reviveCount++;
                        _.SnakeMgr.playReviveAnim();
                        h.FrameMgr.reportMgr.sendReportPlayerRevive(d.BattleMgr.stage, D.GData.getCurSnakeId(), D.GData.getCurSnakeLv(), D.GData.getSnakeTurretLv(), _.SnakeMgr.reviveCount);
                    }, .3);
                };
                e.prototype.playSnakeOutAnim = function (t, e) {
                    this.m_circleAble = !1;
                    this.m_buffComp.removeAllBuff();
                    var i = this._head.changeMoveComp(A.default), n = g.MapMgr.getSnakeOutPosByDoor(), a = _.SnakeMgr.getSnakeHead(), r = _.SnakeMgr.getMoveSpeed(), o = cc.v2(Math.sin(-cc.misc.degreesToRadians(a.angle)), Math.cos(cc.misc.degreesToRadians(a.angle))), s = g.MapMgr.getDoorFace(), c = cc.Vec2.ZERO;
                    switch (s) {
                        case 0:
                            c = cc.v2(0, 1);
                            break;

                        case 1:
                            c = cc.v2(-1, 0);
                            break;

                        case 2:
                            c = cc.v2(0, -1);
                            break;

                        case 3:
                            c = cc.v2(1, 0);
                    }
                    i.setStart(a.node.getPosition(), o.mul(r));
                    i.setTime(.8);
                    i.setTargets([n], [c.mul(2 * _.SnakeMgr.getSnake().getTargetMoveSpeed()), c.mul(3 * _.SnakeMgr.getSnake().getTargetMoveSpeed())]);
                    i.setOverCall(e);
                    h.FrameMgr.audioMgr.playEffect("snakeOut");
                    this._addUnitFlyOutCall(t);
                    this._head.getColliders().enabled = !1;
                    this._head.getColliders().clear();
                    this._head.clearCol();
                    for (var l = this._playerRegionEffect.length - 1; l >= 0; l--) {
                        var u = this._playerRegionEffect[l];
                        if (u) {
                            this._playerRegionEffect.splice(l, 1);
                            u.removeEffect();
                        }
                    }
                };
                e.prototype.playSnakeMoveToDoorAnim = function (t) {
                    var e = this._head.changeMoveComp(A.default), i = this.getSnakeOutPosByDoor(0), n = _.SnakeMgr.getSnakeHead(), a = _.SnakeMgr.getMoveSpeed(), r = cc.v2(Math.sin(-cc.misc.degreesToRadians(n.angle)), Math.cos(cc.misc.degreesToRadians(n.angle))), o = g.MapMgr.getDoorFace(), s = cc.Vec2.ZERO;
                    switch (o) {
                        case 0:
                            s = cc.v2(0, 1);
                            break;

                        case 1:
                            s = cc.v2(-1, 0);
                            break;

                        case 2:
                            s = cc.v2(0, -1);
                            break;

                        case 3:
                            s = cc.v2(1, 0);
                    }
                    e.setStart(n.node.getPosition(), r.mul(a));
                    e.setTargets([i], [s.mul(2 * _.SnakeMgr.getSnake().getTargetMoveSpeed())]);
                    e.setOverCall(t);
                    this._snakeHpBar.node.parent.parent.active = !1;
                };
                e.prototype.getSnakeOutPosByDoor = function (t) {
                    var e = g.MapMgr.endDoor, i = g.MapMgr.getDoorFace(), n = 0, a = 0, r = T.GValue.IPADWidth > 0 ? T.GValue.IPADWidth : T.GValue.ViewWidth;
                    switch (i) {
                        case 0:
                            n = e.x;
                            a = e.y - T.GValue.ViewHeight / 2 - t * T.GValue.ViewHeight;
                            break;

                        case 1:
                            n = e.x + r / 2 + t * r;
                            a = e.y;
                            break;

                        case 2:
                            n = e.x;
                            a = e.y + T.GValue.ViewHeight / 2 + t * T.GValue.ViewHeight;
                            break;

                        case 3:
                            n = e.x - r / 2 - t * r;
                            a = e.y;
                    }
                    return cc.v2(n, a);
                };
                e.prototype._addUnitFlyOutCall = function (t) {
                    var e = g.MapMgr.endDoor, i = g.MapMgr.getDoorFace(), n = function (n) {
                        var a = !1;
                        switch (i) {
                            case 0:
                                n.node.y > e.y - 40 && (a = !0);
                                break;

                            case 1:
                                n.node.x < e.x + 40 && (a = !0);
                                break;

                            case 2:
                                n.node.y < e.y + 40 && (a = !0);
                                break;

                            case 3:
                                n.node.x > e.x - 40 && (a = !0);
                        }
                        if (a) {
                            cc.tween(n.node).to(0, {
                                opacity: 0
                            }).start();
                            n.removeShadow();
                            var r = f.BulletMgr.getFirePointWithCreator(n);
                            r && (r.node.active = !1);
                            n._snakeOutCall = null;
                            n.type == o.SnakeUnitType.head && t && t();
                        }
                    };
                    this._units.forEach(function (t) {
                        t._snakeOutCall = n;
                    });
                };
                e.prototype.playSnakeInAnim = function (t) {
                    var e = this, i = this._head.changeMoveComp(A.default), n = g.MapMgr.getPlayerData(), a = cc.v2(n.x, n.y), r = _.SnakeMgr.getSnakeHead(), o = r.node.getPosition(), s = a.sub(o).normalize();
                    i.setStart(r.node.getPosition(), s.mul(650));
                    i.setTargets([a], [cc.v2(0, 200)]);
                    i.setOverCall(function () {
                        e._head.changeMoveComp(B.default);
                        _.SnakeMgr.moveAble = !1;
                        t && t();
                        e._snakeHpBar.node.parent.parent.active = !0;
                        g.MapMgr.hideEnterDoorLight();
                    });
                    i.setMoveType(1);
                    _.SnakeMgr.moveAble = !0;
                    this._snakeHpBar.node.parent.parent.active = !1;
                };
                e.prototype.pushSnakePosition = function (t) {
                    this._snakePosition.push(t);
                };
                e.prototype.pushShadow = function (t) {
                    this._shadows.push(t);
                };
                e.prototype.init = function () {
                    var t = _.SnakeMgr.getCurSnakeConfigData(), e = D.GData.getSnakeTurretLv(), i = c.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", e);
                    if (t && i) {
                        this._snakeConfig = t;
                        this._snakeTurretConfig = i;
                        this.initSnakeData(t, i);
                        this.initUI();
                        this.initComp();
                        this.initCircle();
                        this.initSkill();
                        var n = this.getBulletData(this._snakeConfig.bulletId, this.m_snakeData.curAttack);
                        m.EnemyMgr.hurtImage = n.hurtImage;
                        m.EnemyMgr.hurtCount = n.hurtCount;
                        _.SnakeMgr.targetSpeed = 0;
                    }
                };
                e.prototype.clear = function () {
                    this.m_snakeData = null;
                    this._snakeConfig = null;
                    this._snakeTurretConfig = null;
                    this._snakePosition = [];
                    this._nodes.forEach(function (t) {
                        t.destroy();
                    });
                    this._nodes.splice(0);
                    this._units.splice(0);
                    this._colliders.splice(0);
                    this._head = null;
                    this._bodies.splice(0);
                    this._tail = null;
                    this._shadows.splice(0);
                    this.m_buffComp.clear();
                };
                e.prototype.initUI = function () {
                    this._clearSnakeNodes();
                    this.createSnakeLayer();
                    var t = g.MapMgr.getPlayerData(), e = cc.v2(0, -450).rotate(cc.misc.degreesToRadians(t.angle));
                    this.createSnake(cc.v3(t.x, t.y, 0).add(cc.v3(e)));
                    this._createSearchArea();
                    this._createHpBar();
                    this._refreshZIndex();
                    this._refreshAllIndex();
                    this._initSnakePositionList();
                };
                e.prototype.createSnakeLayer = function () {
                    this.m_bottomLayer = new cc.Node("bottom");
                    this.m_bottomLayer.parent = this.node;
                    this.m_bottomLayer1 = new cc.Node("bottom1");
                    this.m_bottomLayer1.parent = this.node;
                    this.m_lineLayer = new cc.Node("line");
                    this.m_lineLayer.parent = this.node;
                    this.m_bodyLayer = new cc.Node("body");
                    this.m_bodyLayer.parent = this.node;
                    this.m_fireLayer = new cc.Node("fire");
                    this.m_fireLayer.parent = this.node;
                    this.m_topLayer = new cc.Node("top");
                    this.m_topLayer.parent = this.node;
                };
                e.prototype.createSnake = function (t) {
                    for (var e = 0; e < this.m_snakeData.initBodyLength; e++) {
                        var i = this._createNewSnake();
                        i.parent = this.m_bodyLayer;
                        if (0 == e) {
                            this._setSprite(i, "_head");
                            (n = i.addComponent(v.default)).init(this);
                            n.node.zIndex = 2;
                            this._units.unshift(n);
                            this._colliders.unshift(n.getColliders());
                            this._head = n;
                            i.position = t;
                            cc.Camera.main.node.position = i.position;
                        } else if (e == this.m_snakeData.initBodyLength - 1) {
                            this._setSprite(i, "_tail");
                            var n = i.addComponent(b.default);
                            i.zIndex = 1;
                            var a = this.getSnakeSpace().bodyTailSpace;
                            n.init(this);
                            this._units.push(n);
                            this._colliders.push(n.getColliders());
                            this._tail = n;
                            i.x = t.x;
                            i.y = this._nodes[e - 1].y - a;
                        } else {
                            this._setSprite(i, "_body");
                            n = i.addComponent(y.default);
                            i.zIndex = 1;
                            a = this.getSnakeSpace().bodyBodySpace;
                            n.init(this);
                            this._units.splice(1, 0, n);
                            this._colliders.splice(1, 0, n.getColliders());
                            this._bodies.unshift(n);
                            var r = this._nodes.pop();
                            this._nodes.splice(1, 0, r);
                            i.x = t.x;
                            i.y = this._nodes[0].y - a * (this.m_snakeData.initBodyLength - 1 - e);
                            this._createFirePoint(n);
                        }
                    }
                };
                e.prototype.createLink = function (t, e) {
                    var i = cc.instantiate(_.SnakeMgr.pfSnakeLine), n = i.getComponent(x.default);
                    this.m_lineLayer.addChild(i);
                    n.create(this._snakeConfig.imgSnake, t, e);
                    return n;
                };
                e.prototype._createSearchArea = function () { };
                e.prototype._createHpBar = function () {
                    var t = new cc.Node("hp");
                    this._head.node.addChild(t, 3);
                    this._hpNode = t;
                    this._hpRed = new cc.Node("red");
                    this._hpRed.y = 60;
                    this._hpRed.parent = t;
                    this._hpRed.active = !1;
                    this._hpRed.addComponent(cc.Sprite).spriteFrame = _.SnakeMgr.snakeAtlas.getSpriteFrame("hpRed");
                    var e = new cc.Node("barNode");
                    e.y = 60;
                    t.addChild(e);
                    var i = new cc.Node("barBg");
                    i.parent = e;
                    i.addComponent(cc.Sprite).spriteFrame = _.SnakeMgr.snakeAtlas.getSpriteFrame("hpBg");
                    var n = new cc.Node("bar");
                    e.addChild(n, 1);
                    this._snakeHpBar = n.addComponent(cc.Sprite);
                    this._snakeHpBar.spriteFrame = _.SnakeMgr.snakeAtlas.getSpriteFrame("hpBar");
                    this._snakeHpBar.type = cc.Sprite.Type.FILLED;
                    this._snakeHpBar.fillRange = 1;
                    var a = new cc.Node();
                    a.parent = e;
                    this._snakeHpWhite = a.addComponent(cc.Sprite);
                    this._snakeHpWhite.spriteFrame = _.SnakeMgr.snakeAtlas.getSpriteFrame("hpWhite");
                    this._snakeHpWhite.type = cc.Sprite.Type.FILLED;
                    this._snakeHpWhite.fillRange = 1;
                    var r = cc.instantiate(T.GValue.pfNum);
                    r.y = 68;
                    r.scale = 1.5;
                    t.addChild(r);
                    this._snakeHpNum = r.getComponent(E.default);
                    this._snakeHpNum.setType(o.NumType.SnakeHp);
                    this._snakeHpNum.setAtlas(_.SnakeMgr.snakeAtlas);
                    this._snakeHpNum.setDistance(2);
                    this._refreshHpNum();
                };
                e.prototype.addFollowNode = function (t, e) {
                    this.node.addChild(t, e);
                };
                e.prototype.addSnakeBody = function (t) {
                    this._indexFlyBodyParent = 1;
                    this.updateFlyBodyPos(0);
                    this.flySnakeBody2(t);
                };
                e.prototype.addSnakeBodyCallback = function () {
                    var t = this, e = this._indexFlyBodyParent, i = this._createNewSnake();
                    this._setSprite(i, "_body");
                    var n = i.addComponent(y.default);
                    n.init(this);
                    this._units.splice(e, 0, n);
                    this._colliders.splice(e, 0, n.getColliders());
                    this._bodies.unshift(n);
                    var a = this._nodes.pop();
                    this._nodes.splice(e, 0, a);
                    i.parent = this.m_bodyLayer;
                    i.x = this._nodes[e + 1].x;
                    i.y = this._nodes[e + 1].y;
                    this._refreshAllIndex();
                    var r = this._createFirePoint(n);
                    if (r) {
                        r.node.opacity = 0;
                        cc.tween(r.node).delay(3 * C.GConfig.ActionInterval).to(1 * C.GConfig.ActionInterval, {
                            opacity: 255
                        }).start();
                    }
                    this._refreshZIndex();
                    this.snakeBodyAddSpine(i);
                    var s = C.GConfig.ActionInterval;
                    cc.tween(i).to(2 * s, {
                        scale: 3
                    }).to(3 * s, {
                        scale: 1.8
                    }).to(4 * s, {
                        scale: 1
                    }).call(function () {
                        t.m_buffComp.hasBuff(o.SnakeBuffType.Crazy) && n.onCrazyStart();
                    }).start();
                };
                e.prototype.getPreIndexByBodyIndex = function (t) {
                    if (0 == t) return this.getPreIndex();
                    var e = this.getPreIndexList().length, i = t - 1;
                    if (!(i >= e)) return this.getPreIndexList()[i];
                    this.getPreIndexList()[e - 1];
                };
                e.prototype.snakeBodyAddSpine = function (t) {
                    var e = new cc.Node();
                    t.addChild(e);
                    var i = e.addComponent(sp.Skeleton);
                    h.FrameMgr.loadMgr.loadSpine("spine_snake_effect_bodyadd", function (t) {
                        i.skeletonData = t;
                        i.premultipliedAlpha = !1;
                        i.setAnimation(0, "show", !1);
                        i.setCompleteListener(function (t) {
                            "show" == (t.animation ? t.animation.name : "") && e.destroy();
                        });
                    });
                };
                e.prototype.flySnakeBody2 = function (t) {
                    var e = C.GConfig.ActionInterval, i = this._nodes[0];
                    i.stopAllActions();
                    i.scale = 1;
                    cc.tween(i).to(2 * e, {
                        scale: 1.6
                    }).to(2 * e, {
                        scale: 1.7
                    }).to(6 * e, {
                        scale: 1
                    }).start();
                    if (this._nodeFlyBodyParent) {
                        var n = new cc.Node();
                        this._nodeFlyBodyParent.addChild(n);
                        n.name = "0";
                        n.position = this._nodeFlyBodyParent.convertToNodeSpaceAR(t);
                        var a = new cc.Node();
                        n.addChild(a);
                        var r = new cc.Node();
                        a.addChild(r);
                        r.addComponent(cc.Sprite).spriteFrame = this.getBodySpriteFrame();
                        var o = this._nodes[0], s = n.position.sub(o.position);
                        n.position = o.position;
                        a.position = s;
                        a.opacity = 178.5;
                        cc.tween(a).to(3 * e, {
                            scale: 1.7
                        }).to(4 * e, {
                            scale: 1
                        }).start();
                    }
                };
                e.prototype.getBodySpriteFrame = function () {
                    return _.SnakeMgr.snakeAtlas.getSpriteFrame(this._snakeConfig.imgSnake + "_body");
                };
                e.prototype.removeSnakeBody = function (t, e) {
                    void 0 === e && (e = !0);
                    if (t >= 1 && t <= this._nodes.length - 2) {
                        var i = this._nodes.splice(t, 1);
                        i.length > 0 && i.forEach(function (t) {
                            t.destroy();
                        });
                        var n = this._units[t];
                        n.clear();
                        e && n.onCrazyOver();
                        n.removeShadow();
                        this._shadows.splice(t, 1);
                        for (var a = f.BulletMgr.getFirePointWithCreator(n), r = this.m_firePointArr.length - 1; r >= 0; r--) if (a == this.m_firePointArr[r]) {
                            this.m_firePointArr.splice(r, 1);
                            break;
                        }
                        f.BulletMgr.deleteFirePoint(a, n);
                        this._units.splice(t, 1);
                        var o = this.m_lines.splice(t, 1);
                        o.length > 0 && o.forEach(function (t) {
                            t.clear();
                            t.node.destroy();
                        });
                        this._colliders.splice(t, 1);
                        this._refreshAllIndex();
                    }
                };
                e.prototype.updateLogic = function (t) {
                    this._units.forEach(function (e) {
                        e.updateLogic(t);
                    });
                    this.updateFlyBodyPos(t);
                    if (_.SnakeMgr.funcAble) {
                        this._searchEnemyInArea();
                        this.udpateCircle(t);
                        this.m_buffComp && this.m_buffComp.updateLogic(t);
                        this.m_skill && this.m_skill.updateLogic(t);
                    }
                };
                e.prototype.updateFlyBodyPos = function (t) {
                    if (null == this._nodeFlyBodyParent) {
                        this._nodeFlyBodyParent = new cc.Node("fly-body");
                        this._nodeFlyBodyParent.parent = this.m_bodyLayer;
                        this._nodeFlyBodyParent.zIndex = 1e4;
                        this._nodeFlyBodyParent.position = cc.Vec3.ZERO;
                    } else {
                        var e = 600 * t;
                        if (null == this.getPreIndexByBodyIndex(this._indexFlyBodyParent)) return;
                        for (var i = this._nodeFlyBodyParent.children, n = i.length - 1; n >= 0; n--) {
                            var a = i[n], r = parseInt(a.name), o = this._nodes[r];
                            a.position = o.position;
                            var s = a.children[0], c = s.position, l = cc.Vec3.ZERO;
                            if (cc.Vec3.distance(l, c) <= e) {
                                r++;
                                a.name = r.toString();
                                if (parseInt(a.name) > this._indexFlyBodyParent) {
                                    this.addSnakeBodyCallback();
                                    a.destroy();
                                } else {
                                    var h = this._nodes[r];
                                    a.position = h.position;
                                    var u = o.position.sub(h.position);
                                    s.position = u;
                                }
                            } else {
                                var p = l.sub(c).normalize();
                                c = c.add(cc.v3(p.x * e, p.y * e, p.z * e));
                                s.position = c;
                            }
                        }
                    }
                };
                e.prototype.fixedUpdate = function (t) {
                    this._preMoveIndex = 0;
                    this.clearPreIndexList();
                    this._units.forEach(function (e) {
                        e.fixedUpdate(t);
                    });
                };
                e.prototype.getFireData = function (t, e) {
                    void 0 === e && (e = 1);
                    var i = f.BulletMgr.getFireData(t);
                    i.fireSpeed *= e;
                    return i;
                };
                e.prototype.getBulletData = function (t, e) {
                    return f.BulletMgr.getBulletData(t, e, this.m_snakeData.critProb, this.m_snakeData.critAtkRatio);
                };
                e.prototype._searchEnemyInArea = function () {
                    var t = null, e = m.EnemyMgr.enemys;
                    e = (e = e.concat(P.BossMgr.getBosses())).concat(S.PropMgr.atkAbleProps);
                    for (var i = this._head, n = 99999, a = this._snakeConfig.searchArea, r = 0; r < e.length; r++) {
                        var o = e[r];
                        if (o.hurtAble) if (o.getHurtAbleEntity) for (var s = o.getHurtAbleEntity(), c = 0; c < s.length; c++) {
                            var l = s[c];
                            (h = l.node.getPosition().sub(i.node.getPosition())).x = Math.abs(h.x);
                            h.y = Math.abs(h.y);
                            if (l.radius) {
                                h.x -= l.radius;
                                h.y -= l.radius;
                            }
                            if (h.x <= a && h.y <= a && (u = Math.sqrt(h.x * h.x + h.y * h.y)) <= a && u < n) {
                                n = u;
                                t = l;
                            }
                        } else {
                            var h;
                            (h = o.node.getPosition().sub(i.node.getPosition())).x = Math.abs(h.x);
                            h.y = Math.abs(h.y);
                            if (o.radius) {
                                h.x -= o.radius;
                                h.y -= o.radius;
                            }
                            if (h.x <= a && h.y <= a) {
                                var u;
                                if ((u = Math.sqrt(h.x * h.x + h.y * h.y)) <= a && u < n) {
                                    n = u;
                                    t = o;
                                }
                            }
                        }
                    }
                    if (this._preTarget != t) {
                        this._preTarget && this._preTarget.hideLockedMark && this._preTarget.hideLockedMark();
                        t && t.showLockedMark && t.showLockedMark();
                        this._preTarget = t;
                    }
                };
                e.prototype._clearSnakeNodes = function () {
                    this.node.destroyAllChildren();
                    this._nodes.forEach(function (t) {
                        t.destroy();
                    });
                    this._nodes = [];
                    this._units = [];
                    this._colliders.splice(0);
                    this._bodies = [];
                    this._head = null;
                    this._tail = null;
                    this._shadows = [];
                };
                e.prototype._createNewSnake = function (t) {
                    void 0 === t && (t = !1);
                    if (!_.SnakeMgr.snakePfb) return null;
                    var e = cc.instantiate(_.SnakeMgr.snakePfb);
                    this._nodes.push(e);
                    e.name = "snake" + this._nodes.length;
                    return e;
                };
                e.prototype._setSprite = function (t, e) {
                    if (t && this._snakeConfig) {
                        var i = t.getChildByName("img");
                        if (i) {
                            var n = i.getChildByName("icon");
                            if (n) {
                                var a = n.getComponent(cc.Sprite);
                                _.SnakeMgr.snakeAtlas && (a.spriteFrame = _.SnakeMgr.snakeAtlas.getSpriteFrame(this._snakeConfig.imgSnake + e));
                            }
                        }
                    }
                };
                e.prototype._initSnakePositionList = function () {
                    for (var t = this._nodes[0].position, e = this._nodes[this._nodes.length - 1].position, i = (t.y - e.y) / 100, n = (t.x - t.x) / 100, a = 0; a < 100; a++) {
                        var r = cc.v3(n * a, i * a, e.z).add(e);
                        this._snakePosition.push(r);
                    }
                };
                e.prototype._getItemByIndex = function (t, e) {
                    if (t && 0 != t.length) return t[Math.min(e, t.length - 1)];
                };
                e.prototype._toDie = function () {
                    this._snakeHpBar.node.parent.parent.active = !1;
                    _.SnakeMgr.dieCount++;
                    k.GameRuleMgr.changeState(o.GameState.SnakeDie);
                    this.m_buffComp.removeBuff(o.SnakeBuffType.Crazy);
                    h.FrameMgr.reportMgr.sendReportPlayerDie(d.BattleMgr.stage, D.GData.getCurSnakeId(), D.GData.getCurSnakeLv(), D.GData.getSnakeTurretLv(), _.SnakeMgr.dieCount);
                };
                e.prototype.exchangeListItemByIndex = function (t, e, i) {
                    var n;
                    n = [t[i], t[e]], t[e] = n[0], t[i] = n[1];
                };
                e.prototype._refreshZIndex = function () {
                    this._nodes.forEach(function (t, e) {
                        t.setSiblingIndex(-e);
                        0 == e && t.setSiblingIndex(999);
                    });
                };
                e.prototype._refreshAllIndex = function () {
                    this._units.forEach(function (t, e) {
                        t.index = e;
                    });
                    for (var t = function (t) {
                        var i = e.m_lines[t];
                        if (i) i.setTarget(e._units[t].node, e._units[t + 1].node); else {
                            (i = e.createLink(e._units[t].node, e._units[t + 1].node)).node.opacity = 0;
                            e.m_lines.push(i);
                            e.scheduleOnce(function () {
                                i.node.opacity = 255;
                            });
                        }
                    }, e = this, i = 0; i < this._units.length - 1; i++) t(i);
                };
                e.prototype.initCircle = function () {
                    this.m_circleAble = d.BattleMgr.stage > 6 && this._snakeConfig.circle > 0;
                    this.m_circleTime = 0;
                };
                e.prototype.udpateCircle = function (t) {
                    if (this.m_circleAble) {
                        for (var e = this._playerRegionEffect.length - 1; e >= 0; e--) {
                            var i = this._playerRegionEffect[e];
                            i && i.updateLogic(t);
                        }
                        this.m_circleTime -= t;
                        if (this.m_circleTime <= 0) {
                            this.m_circleTime = 0;
                            var n = this._nodes, a = n.length;
                            if (a >= 3) {
                                var r = Math.ceil(.5 * a), s = n[0];
                                for (e = 0; e < r; e++) {
                                    var c = a - 1 - e;
                                    if (c < 3) break;
                                    var l = n[c];
                                    if (cc.Vec2.distance(s.getPosition(), l.getPosition()) <= 60) {
                                        this.m_circleTime = this.getCircleCD();
                                        this.showSnakeRegionEffect(c);
                                        h.FrameMgr.audioMgr.playEffect("skill");
                                        break;
                                    }
                                }
                            }
                        }
                        if (this.m_circleTime <= 0) {
                            if (this.m_circleEmit) {
                                this.m_circleEmit = !1;
                                h.FrameMgr.noticeMgr.emit(o.EventTypeEnum.OnCircleCDOver);
                            }
                        } else {
                            this.m_circleEmit = !0;
                            h.FrameMgr.noticeMgr.emit(o.EventTypeEnum.OnCircleCD);
                        }
                    }
                };
                e.prototype.getCircleCD = function () {
                    return this._snakeConfig.circleCD;
                };
                e.prototype.getCircleAttack = function () {
                    return this.m_snakeData.circleAtk;
                };
                e.prototype.getCircleTime = function () {
                    return this._snakeConfig.circleTime;
                };
                e.prototype.triggerSkillRegionEffectHurt = function (t, e) {
                    for (var i = !1, n = 0, a = m.EnemyMgr.enemys.length - 1; a >= 0 && !(n >= this.m_snakeData.circleNum); a--) {
                        var r = m.EnemyMgr.enemys[a];
                        if (r && !r.isDead && t.isHurt(r)) {
                            i = !0;
                            var s = Math.abs(r.hpChange(-e));
                            r.showIgniteAnim(!0, e);
                            this._skillHp += s;
                            h.FrameMgr.noticeMgr.emit(o.EventTypeEnum.SkillHurtEnemy);
                            n++;
                        }
                    }
                    for (a = P.BossMgr.getBosses().length - 1; a >= 0 && !(n >= this.m_snakeData.circleNum); a--) {
                        var c = P.BossMgr.getBosses()[a];
                        if (c && !c.isDead && t.isHurt(c)) {
                            i = !0;
                            s = c.hurt(e, !1, !0);
                            c.showIgniteAnim(!0, e);
                            this._skillHp += s;
                            n++;
                        }
                    }
                    for (var l = S.PropMgr.props, u = 0, p = l.length; u < p && !(n >= this.m_snakeData.circleNum); u++) if (t.isPropInArea(l[u])) {
                        l[u].propTrigger();
                        n++;
                    }
                    if (i) {
                        this._skillCount++;
                        F.ReportMgr.sendReportSnakeCircle(d.BattleMgr.stage, this._skillCount, Math.floor(this._skillHp));
                    }
                };
                e.prototype.triggerSkillRegionEffectBuff = function (t, e, i, n) {
                    for (var a = m.EnemyMgr.enemys.length - 1; a >= 0; a--) {
                        var r = m.EnemyMgr.enemys[a];
                        r && !r.isDead && t.isHurt(r) && r.setLastTimeRegionEffect(e, i, n);
                    }
                };
                e.prototype.showSnakeRegionEffect = function (t) {
                    var e = this;
                    if (k.GameRuleMgr.isInBattle()) {
                        for (var i = this._nodes, n = [], a = 0; a <= t; a++) a <= i.length - 1 && n.push(i[a]);
                        var r = n.length;
                        if (!(r < 3)) {
                            var o = function (t) {
                                var i = n[t];
                                setTimeout(function () {
                                    if (i) {
                                        var t = i.getComponent(M.default);
                                        if (t && t.bodyShineSpine) {
                                            t.bodyShineSpine.node.opacity = 255;
                                            t.bodyShineSpine.setAnimation(0, "show", !1);
                                        } else {
                                            var n = e.createSnakeShine();
                                            i.addChild(n);
                                        }
                                    }
                                }, 16 * t);
                            };
                            for (a = 0; a < r; a++) o(a);
                            var s = this.getCircleTime(), c = this.getCircleAttack(), l = this.getCircleAttack();
                            this.createRegionEffect(g.MapMgr.getRegionEffectLayer(), n, s, c, l, 11, 0, -100);
                        }
                    }
                };
                e.prototype.createRegionEffect = function (t, e, i, n, a, r, o, s) {
                    var c = this;
                    h.FrameMgr.loadMgr.loadPrefab("RegionEffect", function (h) {
                        var u = cc.instantiate(h);
                        u.zIndex = s;
                        u.setPosition(0, 0);
                        t.addChild(u);
                        var p = u.getComponent(l.default);
                        p.show(e, i, n, a, r, o);
                        c._playerRegionEffect.push(p);
                    });
                };
                e.prototype.removeRegionEffect = function (t) {
                    for (var e = this._playerRegionEffect.length - 1; e >= 0; e--) {
                        var i = this._playerRegionEffect[e];
                        if (i == t) {
                            this._playerRegionEffect.splice(e, 1);
                            i.removeEffect();
                        }
                    }
                };
                e.prototype.createSnakeShine = function () {
                    var t = new cc.Node("shine"), e = t.addComponent(sp.Skeleton);
                    h.FrameMgr.loadMgr.loadSpine("spine_snake_effect_bodyshine", function (i) {
                        e.skeletonData = i;
                        e.premultipliedAlpha = !1;
                        e.setAnimation(0, "show", !1);
                        e.setCompleteListener(function (e) {
                            "show" == (e.animation ? e.animation.name : "") && t.destroy();
                        });
                    });
                    return t;
                };
                e.prototype.initSkill = function () {
                    var t = new cc.Node("SkillFirePoint");
                    t.parent = this.node;
                    var e = _.SnakeMgr.getCurSnakeSkillData();
                    if (e) {
                        switch (e.type) {
                            case o.SnakeSkill.Thorns:
                                this.m_skill = t.addComponent(G.default);
                                break;

                            case o.SnakeSkill.Flame:
                                this.m_skill = t.addComponent(L.default);
                                break;

                            case o.SnakeSkill.Frost:
                                this.m_skill = t.addComponent(O.default);
                        }
                        if (this.m_skill) {
                            this.m_skill.create(this);
                            this.m_skill.init();
                        }
                    } else w.DYTools.warn("no snake skill");
                };
                e.prototype.initComp = function () {
                    this.m_buffComp = new R.default();
                    this.m_buffComp.create(this);
                };
                e.prototype.initSnakeData = function (t, e) {
                    var i = t.initCount, n = c.ConfigDataMgr.getGlobalData(o.GlobalKey.SnakeBodyLength);
                    if ("" != n) for (var a = n.split("#"), r = 0; r < a.length; r++) {
                        var l = w.DYTools.stringToNumber(a[r], "*");
                        if (l.length > 1 && l[0] == d.BattleMgr.stage) {
                            i = l[1];
                            break;
                        }
                    }
                    this.m_snakeData = new s.PlayerData();
                    this.m_snakeData.attack = e.normalAtk * t.atk;
                    this.m_snakeData.maxBodyLength = t.maxCount;
                    this.m_snakeData.colliderAtk = t.bodyColliderATKRat * e.normalAtk;
                    this.m_snakeData.initBodyLength = i;
                    var h = this;
                    (function () {
                        var e = 0, i = 0, n = T.GValue.atkCirtProb, a = T.GValue.atkCirtAtkRatio, r = T.GValue.circleNum, s = T.GValue.circleAtkRatio, c = T.GValue.circleCD, l = T.GValue.skillAtkAddRatio, u = T.GValue.skillCD, p = T.GValue.skillCirtProb, f = T.GValue.skillCirtAtkRatio, m = T.GValue.skillAddNormalAtk;
                        _.SnakeMgr.refreshFetterData().forEach(function (t, h) {
                            switch (h) {
                                case o.SnakeAddType.CirtProb:
                                    n += t;
                                    break;

                                case o.SnakeAddType.CirtAtkRatio:
                                    a += t;
                                    break;

                                case o.SnakeAddType.CircleNum:
                                    r += t;
                                    break;

                                case o.SnakeAddType.CircleAtkRatio:
                                    s += t;
                                    break;

                                case o.SnakeAddType.CircleCD:
                                    c += t;
                                    break;

                                case o.SnakeAddType.SkillAtkRatio:
                                    l += t;
                                    break;

                                case o.SnakeAddType.SkillCD:
                                    u += t;
                                    break;

                                case o.SnakeAddType.SkillCirtProb:
                                    p += t;
                                    break;

                                case o.SnakeAddType.SkillCirtAtkRatio:
                                    f += t;
                                    break;

                                case o.SnakeAddType.SkillAddNormalAtk:
                                    m += t;
                                    break;

                                case o.SnakeAddType.SnakeBodyGoldAddRatio:
                                    i += t;
                                    break;

                                case o.SnakeAddType.SnakeInitBodyAdd:
                                    e += t;
                            }
                        });
                        h.m_snakeData.initHp = t.hp + e;
                        h.m_snakeData.nowHp = h.m_snakeData.initHp;
                        var g = d.BattleMgr.stageInfoData.snakeGoldPer;
                        h.m_snakeData.bodyGold = g * (1 + i);
                        h.m_snakeData.curAttack = h.m_snakeData.attack;
                        h.m_snakeData.critProb = n;
                        h.m_snakeData.critAtkRatio = 3 + a;
                        h.m_snakeData.critAttack = h.m_snakeData.attack * h.m_snakeData.critAtkRatio;
                        h.m_snakeData.circleNum = 5 + r;
                        h.m_snakeData.circleAtk = h.m_snakeData.attack * h._snakeConfig.circle * (1 + s);
                        h.m_snakeData.circleCD = h._snakeConfig.circleCD * (1 - c);
                        var y = _.SnakeMgr.getCurSnakeSkillData();
                        if (y) {
                            h.m_snakeData.skillAtk = h.m_snakeData.attack * y.atk * (1 + l);
                            h.m_snakeData.skillCD = y.cd * (1 - u);
                            h.m_snakeData.skillParam = y.var;
                            h.m_snakeData.skillCritProb = p;
                            h.m_snakeData.skillCritAtkRatio = 3 + f;
                            h.m_snakeData.skillAddNormalAtk = m;
                        }
                    })();
                    this.m_snakeData.reviveNoHurt = c.ConfigDataMgr.getGlobalDataNum(o.GlobalKey.SnakeReviveTime);
                    this.m_snakeData.hurtNoHurt = c.ConfigDataMgr.getGlobalDataNum(o.GlobalKey.SnakeHurtTime);
                };
                e.prototype.checkSnakeDataChangeForBuff = function () {
                    var t = !1, e = 1, i = 1, n = 0;
                    if (this.m_buffComp.hasBuff(o.SnakeBuffType.Crazy)) {
                        e *= (a = this.m_buffComp.getBuffData(o.SnakeBuffType.Crazy))[3] ? a[3] : 1;
                        i *= a[4] ? a[4] : 1;
                    } else t = !0;
                    if (this.m_buffComp.hasBuff(o.SnakeBuffType.SkillAtkAdd)) {
                        var a;
                        n = (a = this.m_buffComp.getBuffData(o.SnakeBuffType.SkillAtkAdd))[0] ? a[0] : 0;
                    }
                    this.m_snakeData.curAttack = this.m_snakeData.attack * e + n;
                    this.m_snakeData.fireSpeddRatio = i;
                    for (var r = this.getFireData(this._snakeConfig.bulletId, this.m_snakeData.fireSpeddRatio), s = this.getBulletData(this._snakeConfig.bulletId, this.m_snakeData.curAttack), c = r.fireSpeed / this.m_firePointArr.length, l = 0; l < this.m_firePointArr.length; l++) {
                        var h = this.m_firePointArr[l];
                        h.changeData(r, s);
                        t && h.setFirstDelay(r.fireSpeed * l * c);
                    }
                };
                e.prototype._createFirePoint = function (t) {
                    var e = this.getFireData(this._snakeConfig.bulletId, this.m_snakeData.fireSpeddRatio), i = this.getBulletData(this._snakeConfig.bulletId, this.m_snakeData.curAttack), n = f.BulletMgr.createFirePoint(u.default, this.m_fireLayer, e, i, t);
                    if (n) {
                        I.GFunc.getSnakeTurretId(this._snakeTurretConfig.id);
                        n.node.name = "fire" + this._count++;
                        n.setSprite(this._snakeConfig.imgSnake + "_turret");
                        n.initFrameAnim();
                        var a = .3 * Math.random();
                        n.setFirstDelay(a);
                        this.m_firePointArr.push(n);
                    }
                    return n;
                };
                e.prototype.getColliders = function () {
                    return this._colliders;
                };
                Object.defineProperty(e.prototype, "bottomLayer", {
                    get: function () {
                        return this.m_bottomLayer;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "bottomLayer1", {
                    get: function () {
                        return this.m_bottomLayer1;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "topLayer", {
                    get: function () {
                        return this.m_topLayer;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.getMoveComp = function () {
                    return this._head.getMoveComp();
                };
                e.prototype.hasBuff = function (t) {
                    return this.m_buffComp.hasBuff(t);
                };
                e.prototype.changeSnakePos = function (t, e) {
                    for (var i = 0; i < this._nodes.length; i++) {
                        var n = this._nodes[i];
                        n.x = t.x;
                        if (0 == i) n.y = t.y; else if (i == this._nodes.length - 1) {
                            var a = this.getSnakeSpace().bodyTailSpace;
                            n.setPosition(this._nodes[i - 1].getPosition().add(e.normalize().mul(a)));
                        } else {
                            a = this.getSnakeSpace().bodyBodySpace * i;
                            n.setPosition(t.add(e.normalize().mul(a)));
                        }
                    }
                };
                return r([U], e);
            }(p.default));
        i.default = Y;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/game/PlayerData": "PlayerData",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../data/storage/GameData": "GameData",
        "../../../../frame/effect/RegionEffect": "RegionEffect",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../frame/manager/ReportManager": "ReportManager",
        "../../../../frame/ui/UINum": "UINum",
        "../../../../platform/PlatformManager": "PlatformManager",
        "../../../../util/GameFunc": "GameFunc",
        "../../../../util/Tools": "Tools",
        "../../bullet/FirePoint/FirePointSnake": "FirePointSnake",
        "../../common/EntityBase": "EntityBase",
        "../../manager/battle/BattleManager": "BattleManager",
        "../../manager/battle/BossManager": "BossManager",
        "../../manager/battle/BulletManager": "BulletManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/GameRuleManager": "GameRuleManager",
        "../../manager/battle/MapManager": "MapManager",
        "../../manager/battle/PropManager": "PropManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../comp/SnakeBuffComp": "SnakeBuffComp",
        "../move/SnakeMoveDirComp": "SnakeMoveDirComp",
        "../move/SnakeMoveTargetComp": "SnakeMoveTargetComp",
        "../skill/fireball/SnakeSkillFireBall": "SnakeSkillFireBall",
        "../skill/forst/SnakeSkillForst": "SnakeSkillForst",
        "../skill/thorns/SnakeSkillThorns": "SnakeSkillThorns",
        "../unit/SnakeBody": "SnakeBody",
        "../unit/SnakeHead": "SnakeHead",
        "../unit/SnakeLine": "SnakeLine",
        "../unit/SnakeTail": "SnakeTail",
        "../unit/SnakeUnit": "SnakeUnit"
    }],
    SnakeForstEntityNew: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "a6ff0hpjuJDraa86iRIngkN", "SnakeForstEntityNew");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConfig"), s = t("../../../../../config/GameConst"), c = t("../../../../../frame/ui/FrameAnim"), l = t("../../../common/EntityBase"), h = t("../../../manager/battle/BossManager"), u = t("../../../manager/battle/EnemyManager"), p = t("../../../manager/battle/EntityManager"), d = t("../../../manager/battle/PropManager"), f = cc._decorator, m = f.ccclass, g = (f.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._snakeSkill = null;
                    e._enemyList = [];
                    e._hurtedEnemmyList = [];
                    e._hurtRadius = 0;
                    e._reduceTime = 0;
                    e._reduceFactor = 100;
                    e._isHurt = !1;
                    e.m_atlas = null;
                    e.m_parentFront = null;
                    e.m_parentBack = null;
                    return e;
                }
                e.prototype.init = function (t, e, i, n, a, r) {
                    this._snakeSkill = t;
                    this._hurtRadius = e;
                    this._reduceTime = i;
                    this.m_atlas = n;
                    this.m_parentFront = a;
                    this.m_parentBack = r;
                    this._isHurt = !0;
                    this.createAnim();
                };
                e.prototype.createAnim = function () {
                    var t = this, e = o.GConfig.ActionInterval, i = new cc.Node();
                    i.setPosition(this.node.getPosition());
                    i.parent = this.m_parentBack ? this.m_parentBack : p.EntityMgr.getShadowLayer();
                    var n = i.addComponent(cc.Sprite);
                    n.spriteFrame = this.m_atlas.getSpriteFrame("snake_104_skill_effect_ground");
                    n.dstBlendFactor = cc.macro.BlendFactor.ONE;
                    i.scale = 1.6;
                    i.opacity = 204;
                    cc.tween(i).delay(29 * e).to(6 * e, {
                        opacity: 0
                    }).removeSelf().start();
                    var a = new cc.Node();
                    a.setPosition(this.node.getPosition());
                    a.parent = this.m_parentBack ? this.m_parentBack : p.EntityMgr.getShadowLayer();
                    var r = a.addComponent(cc.Sprite);
                    r.spriteFrame = this.m_atlas.getSpriteFrame("snake_104_skill_effect_ground2");
                    r.dstBlendFactor = cc.macro.BlendFactor.ONE;
                    a.scale = 2;
                    a.opacity = 204;
                    cc.tween(a).delay(20 * e).to(3 * e, {
                        opacity: 0
                    }).removeSelf().start();
                    var l = cc.instantiate(s.GValue.pfFrameAnim), h = l.getComponent(c.default);
                    l.parent = this.node;
                    l.setPosition(cc.v2(0, 0));
                    h.init(this.m_atlas, "snake_104_skill_effect_", 11, 2 * o.GConfig.ActionInterval);
                    h.setDstBlendFactorMode1();
                    h.slowAble = !this.m_parentBack;
                    h.setStopCall(function () {
                        h.node.opacity = 255;
                        cc.tween(h.node).to(4 * e, {
                            opacity: 0,
                            scale: 1.93
                        }).call(function () {
                            t._isHurt = !1;
                            t._snakeSkill.removeFromList(t);
                        }).removeSelf().start();
                    });
                    h.play(1);
                    h.node.scale = 1.6;
                    cc.tween(h.node).to(5 * o.GConfig.ActionInterval, {
                        scale: 1.9
                    }).start();
                    var u = new cc.Node();
                    u.setPosition(this.node.getPosition());
                    u.parent = this.m_parentFront ? this.m_parentFront : p.EntityMgr.getEffectLayer();
                    var d = u.addComponent(cc.Sprite);
                    d.spriteFrame = this.m_atlas.getSpriteFrame("snake_104_skill_effect_circle");
                    d.dstBlendFactor = cc.macro.BlendFactor.ONE;
                    u.color = cc.color(51, 102, 255);
                    u.scale = .8;
                    cc.tween(u).to(5 * e, {
                        scale: 4.7,
                        opacity: 0
                    }).removeSelf().start();
                    var f = new cc.Node();
                    f.setPosition(this.node.getPosition());
                    f.parent = this.m_parentFront ? this.m_parentFront : p.EntityMgr.getEffectLayer();
                    var m = f.addComponent(cc.Sprite);
                    m.spriteFrame = this.m_atlas.getSpriteFrame("snake_104_skill_effect_line");
                    m.dstBlendFactor = cc.macro.BlendFactor.ONE;
                    cc.tween(f).to(3 * e, {
                        scale: 1.85,
                        opacity: 204
                    }).to(6 * e, {
                        scale: 3.3,
                        opacity: 0
                    }).removeSelf().start();
                };
                e.prototype.getEnemyList = function () {
                    var t = u.EnemyMgr.enemys;
                    return (t = t.concat(h.BossMgr.getBosses())).concat(d.PropMgr.atkAbleProps);
                };
                e.prototype.attackEnemy = function () {
                    var t = this._snakeSkill.getAttack(), e = this.node.getPosition();
                    this._enemyList = this.getEnemyList();
                    for (var i = 0; i < this._enemyList.length; i++) {
                        var n = this._enemyList[i];
                        if (n.hurtAble) if (n.getHurtAbleEntity) for (var a = n.getHurtAbleEntity(), r = 0; r < a.length; r++) {
                            var o = (c = a[r]).node.getPosition(), s = 0;
                            c.radius && (s = c.radius);
                            if (cc.Vec2.distance(e, o) <= this._hurtRadius + s && -1 == this._hurtedEnemmyList.indexOf(n)) {
                                c.hurt && c.hurt(t, !1, !0);
                                this._hurtedEnemmyList.push(c);
                            }
                        } else {
                            var c;
                            o = (c = n).node.getPosition(), s = 0;
                            c.radius && (s = c.radius);
                            if (cc.Vec2.distance(e, o) <= this._hurtRadius + s) {
                                if (-1 == this._hurtedEnemmyList.indexOf(n)) {
                                    n.hpChange && n.hpChange(-t, !1, !0);
                                    this._hurtedEnemmyList.push(n);
                                }
                                n.setFrost && n.setFrost(!0, this._reduceTime, this._reduceFactor);
                            }
                        }
                    }
                };
                e.prototype.updateLogic = function () {
                    this.node.active && this._isHurt && this.attackEnemy();
                };
                return r([m], e);
            }(l.default));
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../common/EntityBase": "EntityBase",
        "../../../manager/battle/BossManager": "BossManager",
        "../../../manager/battle/EnemyManager": "EnemyManager",
        "../../../manager/battle/EntityManager": "EntityManager",
        "../../../manager/battle/PropManager": "PropManager"
    }],
    SnakeForstEntity: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "a4c71EpxjtN0Jz8AfVDSLL1", "SnakeForstEntity");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../util/Tools"), s = t("../../../common/EntityBase"), c = t("../../../manager/battle/BossManager"), l = t("../../../manager/battle/EnemyManager"), h = t("../../../manager/battle/PropManager"), u = cc._decorator, p = u.ccclass, d = (u.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._snakeSkill = null;
                    e._node0 = null;
                    e._node1 = null;
                    e._node2 = null;
                    e._enemyList = [];
                    e._hurtedEnemmyList = [];
                    e._reduceTime = 0;
                    e._reduceFactor = 0;
                    e.m_uiParent = null;
                    return e;
                }
                e.prototype.init = function (t, e, i, n, a) {
                    var r = this;
                    this._snakeSkill = t;
                    this._reduceTime = i;
                    this._reduceFactor = n;
                    this._node0 = this.node.children[0];
                    this._node1 = this.node.children[1];
                    this._node2 = this.node.children[2];
                    var o = this._node2.getComponent(cc.Animation);
                    o.node.active = !0;
                    o.play();
                    var s = e - 1, c = a, l = this._node0;
                    this.schedule(function () {
                        var t = cc.instantiate(l);
                        if (r.m_uiParent) {
                            t.width = 40;
                            t.height = 40;
                        }
                        t.active = !0;
                        t.parent = r._node1;
                        t.angle = -r.node.angle;
                        var e = t.getChildByName("thorns_ani").getComponent(cc.Animation);
                        e.play("snake_skill_104_show");
                        r.scheduleOnce(function () {
                            e && e.play("snake_skill_104_hide");
                        }, c);
                    }, .03, s);
                    this.scheduleOnce(function () {
                        r._node1.removeAllChildren();
                        r._node1.height = 0;
                    }, c + .03 * s);
                };
                e.prototype.getEnemyList = function () {
                    var t = l.EnemyMgr.enemys;
                    return (t = t.concat(c.BossMgr.getBosses())).concat(h.PropMgr.atkAbleProps);
                };
                e.prototype.attackEnemy = function () {
                    var t = this._snakeSkill.getAttack(), e = this.node.position, i = this._node1.getContentSize(), n = this.node.angle, a = -Math.sin(n / 180 * Math.PI) * i.height / 2, r = Math.cos(n / 180 * Math.PI) * i.height / 2, s = cc.v2(e.x + a, e.y + r);
                    this._enemyList = this.getEnemyList();
                    for (var c = 0; c < this._enemyList.length; c++) {
                        var l = this._enemyList[c];
                        if (l.hurtAble) if (l.getHurtAbleEntity) for (var h = l.getHurtAbleEntity(), u = 0; u < h.length; u++) {
                            var p = (f = h[u]).node.getPosition(), d = 0;
                            f.radius && (d = f.radius);
                            if (o.DYTools.checkCircleRotateRect(p, d, s, i, n)) {
                                if (-1 == this._hurtedEnemmyList.indexOf(l)) {
                                    f.hurt && f.hurt(t, !1, !0);
                                    this._hurtedEnemmyList.push(f);
                                }
                                l.setFrost && l.setFrost(!0, this._reduceTime, this._reduceFactor);
                            }
                        } else {
                            var f;
                            p = (f = l).node.getPosition(), d = 0;
                            f.radius && (d = f.radius);
                            if (o.DYTools.checkCircleRotateRect(p, d, s, i, n)) {
                                if (-1 == this._hurtedEnemmyList.indexOf(l)) {
                                    l.hpChange && l.hpChange(-t, !1, !0);
                                    this._hurtedEnemmyList.push(l);
                                }
                                l.setFrost && l.setFrost(!0, this._reduceTime, this._reduceFactor);
                            }
                        }
                    }
                };
                e.prototype.updateLogic = function () {
                    (this.node.active = !0) && this.attackEnemy();
                };
                e.prototype.setUIParent = function (t) {
                    this.m_uiParent = t;
                };
                return r([p], e);
            }(s.default));
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../../util/Tools": "Tools",
        "../../../common/EntityBase": "EntityBase",
        "../../../manager/battle/BossManager": "BossManager",
        "../../../manager/battle/EnemyManager": "EnemyManager",
        "../../../manager/battle/PropManager": "PropManager"
    }],
    SnakeHeadParticle: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "0441es623xCIpdBDurShCSd", "SnakeHeadParticle");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = cc._decorator, s = o.ccclass, c = o.property, l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.botParticle = null;
                e.topParticle = null;
                return e;
            }
            e.prototype.play = function () {
                this.botParticle.resetSystem();
                this.topParticle.resetSystem();
            };
            e.prototype.stop = function () {
                this.botParticle.stopSystem();
                this.topParticle.stopSystem();
            };
            r([c(cc.ParticleSystem)], e.prototype, "botParticle", void 0);
            r([c(cc.ParticleSystem)], e.prototype, "topParticle", void 0);
            return r([s], e);
        }(cc.Component);
        i.default = l;
        cc._RF.pop();
    }, {}],
    SnakeHead: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "681eezNxMRJQq+nLqhMRyEL", "SnakeHead");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameEnum"), c = t("../../../../frame/manager/FrameManager"), l = t("../../../../util/Tools"), h = t("../../manager/battle/ShadowManager"), u = t("../../manager/battle/SnakeManager"), p = t("../move/SnakeMoveDirComp"), d = t("./SnakeUnit"), f = cc._decorator.ccclass, m = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._snakeLight = null;
                e.m_skinSpr = null;
                e.m_particle = null;
                e.m_lightNode = null;
                e.m_img = "";
                e.m_imgCD = "";
                e.m_thorns = null;
                return e;
            }
            e.prototype.init = function (e) {
                this._type = s.SnakeUnitType.head;
                t.prototype.init.call(this, e);
                this.initData();
                this.initAnchor();
                this._initHitPoint();
                this.initUI();
                this.initSkin();
                c.FrameMgr.noticeMgr.on(s.EventTypeEnum.OnCircleCDOver, this.onCircleCDOver, this);
                c.FrameMgr.noticeMgr.on(s.EventTypeEnum.OnCircleCD, this.onCircleCD, this);
            };
            e.prototype.initData = function () {
                var t = this._mainEntity.getSnakeConfig().imgSnake;
                this.m_img = t + "_head";
                this.m_imgCD = this.m_img;
            };
            e.prototype.initUI = function () {
                var t = this._mainEntity.getSnakeConfig().imgSnake;
                this.m_lightNode = new cc.Node("light");
                this.m_lightNode.parent = this.node.getChildByName("img");
                this.m_lightNode.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame(t + "_headw");
                this.m_lightNode.opacity = 0;
            };
            e.prototype.initSkin = function () {
                this.m_skinSpr = this.node.getChildByName("img").getChildByName("icon").getComponent(cc.Sprite);
                this.m_skinSpr.spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_img);
            };
            e.prototype.onCircleCDOver = function () {
                this.m_skinSpr.spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_img);
                this.m_particle && this.m_particle.play();
                if (this.m_lightNode) {
                    var t = o.GConfig.ActionInterval;
                    this.m_lightNode.scale = 1;
                    this.m_lightNode.opacity = 255;
                    cc.tween(this.m_lightNode).to(3 * t, {
                        scale: 1.1
                    }).to(3 * t, {
                        scale: 2,
                        opacity: 0
                    }).start();
                }
            };
            e.prototype.onCircleCD = function () {
                this.m_skinSpr.spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_imgCD);
                this.m_particle && this.m_particle.stop();
            };
            e.prototype.headAnim = function (t) {
                var e = new cc.Node("anim");
                e.parent = this.node;
                e.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_img);
                cc.tween(e).delay(4 * o.GConfig.ActionInterval).to(8 * o.GConfig.ActionInterval, {
                    y: 5,
                    scale: 2,
                    opacity: 127.5
                }).call(function () {
                    t && t();
                    e.destroy();
                }).start();
            };
            e.prototype.playHurtAnim = function () {
                var t = this, e = o.GConfig.ActionInterval;
                if (!this._snakeLight) {
                    this._snakeLight = new cc.Node();
                    this._snakeLight.active = !1;
                    this._snakeLight.parent = this.node;
                    this._snakeLight.scale = 1.4;
                    var i = new cc.Node("1");
                    i.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame("anim_snakeLight_red_1");
                    i.parent = this._snakeLight;
                    var n = new cc.Node("2");
                    n.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame("anim_snakeLight_red_2");
                    n.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                    n.parent = this._snakeLight;
                    var a = new cc.Node("3");
                    a.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame("anim_snakeLight_red_3");
                    a.parent = this._snakeLight;
                }
                this._snakeLight.active = !0;
                var r = this._snakeLight.getChildByName("1");
                r.stopAllActions();
                cc.tween(r).to(0, {
                    opacity: 255
                }).delay(1 * e).to(0, {
                    opacity: 0
                }).start();
                var s = this._snakeLight.getChildByName("2");
                s.stopAllActions();
                cc.tween(s).to(0, {
                    scale: 1.5,
                    opacity: 0
                }).delay(1 * e).to(0, {
                    scale: 1.5,
                    opacity: 230
                }).to(4 * e, {
                    scale: 1.1,
                    opacity: 205
                }).to(6 * e, {
                    opacity: 0
                }).call(function () {
                    t._snakeLight.active = !1;
                }).start();
                var c = this._snakeLight.getChildByName("3");
                c.stopAllActions();
                cc.tween(c).to(0, {
                    scale: 1.5,
                    opacity: 0
                }).delay(2 * e).to(0, {
                    scale: 1.5,
                    opacity: 255
                }).to(8 * e, {
                    scale: 1.9,
                    opacity: 0
                }).start();
            };
            e.prototype.playReviveAnim = function () {
                var t = cc.instantiate(this._imgNode);
                t.parent = this._imgNode;
                cc.tween(t).to(.33, {
                    scale: 2.7,
                    opacity: 0
                }).call(function () {
                    t.destroy();
                }).start();
            };
            e.prototype.onCollide = function (t, e) {
                switch (t) {
                    case s.ContactType.Enter:
                        if (0 == this._index && e && e.entity) switch (e.entity.group) {
                            case s.ColliderGroup.Enemy:
                                var i = e.entity;
                                if (i && !i.getIsInSky()) {
                                    var n = i.collideAtk || 0;
                                    this.hurt(n);
                                }
                                break;

                            case s.ColliderGroup.EnemyBullet:
                                var a = e.entity;
                                if (a) {
                                    n = a.getBulletAttack() || 1;
                                    this.hurt(n);
                                }
                                break;

                            case s.ColliderGroup.TrapBall:
                                var r = e.entity;
                                if (r) {
                                    n = r.getAttack() || 1;
                                    this.hurt(n);
                                }
                        }
                }
            };
            e.prototype.hurt = function (t) {
                return this._noHurt || t <= 0 ? 0 : this._mainEntity ? this._mainEntity.cutHp(t) : 0;
            };
            e.prototype.onCollideWall = function (t, e) {
                switch (t) {
                    case s.ContactType.Enter:
                        if (!this.m_preOnCollidePos || null == this.m_preOnCollider || this.m_colWalls.indexOf(this.m_preOnCollider) < 0) {
                            this.m_preOnCollidePos = cc.v3(this.m_prePos);
                            this.m_preOnCollider = e;
                        }
                        this.m_colWalls.push(e);
                        break;

                    case s.ContactType.Stay:
                        break;

                    case s.ContactType.Exit:
                        l.DYTools.arrRemove(this.m_colWalls, e);
                        if (0 == this.m_colWalls.length && 0 == this.m_colBlocks.length) {
                            this.m_preOnCollidePos = void 0;
                            this.m_preOnCollider = null;
                        }
                }
            };
            e.prototype.onCollideBlock = function (t, e) {
                switch (t) {
                    case s.ContactType.Enter:
                        this.m_preOnCollidePos || (this.m_preOnCollidePos = cc.v3(this.m_prePos));
                        this.m_colBlocks.push(e);
                        break;

                    case s.ContactType.Stay:
                        break;

                    case s.ContactType.Exit:
                        l.DYTools.arrRemove(this.m_colBlocks, e);
                        0 == this.m_colWalls.length && 0 == this.m_colBlocks.length && (this.m_preOnCollidePos = void 0);
                }
            };
            e.prototype.colliderStayMove = function (t) {
                var e = t.data.height || 0, i = t.data.width || 0, n = t.data.x + i / 2, a = t.data.y + e / 2;
                if (this.node.y < a - e / 2 || this.node.y > a + e / 2) {
                    var r = this.node.y - a > 0 ? 1 : -1, o = a + (e / 2 + this.m_collideComp.data.radius) * r;
                    this.node.y = cc.misc.lerp(this.node.y, o, .2);
                } else if (this.node.x < n - i / 2 || this.node.x > n + i / 2) {
                    r = this.node.x - n > 0 ? 1 : -1;
                    var s = n + (i / 2 + this.m_collideComp.data.radius) * r;
                    this.node.x = cc.misc.lerp(this.node.x, s, .2);
                }
            };
            e.prototype._initShadowComp = function () {
                var t = this._mainEntity.getSnakeConfig().imgSnake, e = this._mainEntity.getSnakeConfig().shadowScale, i = this._mainEntity.getSnakeConfig().shadowOffset, n = h.ShadowMgr.atlas.getSpriteFrame(t + "_shadow_head");
                this._shadowComp = h.ShadowMgr.addShadow(n, this.node, e, i);
                this._shadowComp.setAngleTarget(this);
            };
            e.prototype._initMoveComp = function () {
                this._moveComp = new p.default();
                this._moveComp.initBase(this, this.node);
            };
            e.prototype._initColliderComp = function () {
                var t = this._mainEntity.getColliderDataByType(this._type);
                this.m_collideComp.init(t, this);
                this.startBattle();
            };
            e.prototype._initHitPoint = function () {
                var t = this._mainEntity.getColliderDataByType(this._type);
                if (u.SnakeMgr.snakeAtlas && t.length > 2) {
                    var e = new cc.Node("hitPoint");
                    e.parent = this._imgNode;
                    e.x = 0;
                    e.y = -10 - this._imgNode.height * this._imgNode.anchorY + this._imgNode.height / 2;
                    e.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame("snake_hitpoint");
                    e.opacity = 0;
                    cc.tween(e).to(.1, {
                        opacity: 127.5
                    }).delay(.1).to(.1, {
                        opacity: 255
                    }).delay(.1).union().repeatForever().start();
                }
            };
            e.prototype.initAnchor = function () { };
            return r([f], e);
        }(d.default);
        i.default = m;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/ShadowManager": "ShadowManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../move/SnakeMoveDirComp": "SnakeMoveDirComp",
        "./SnakeUnit": "SnakeUnit"
    }],
    SnakeItem: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2e042ocRtZJopuAwE5hN0QH", "SnakeItem");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        }, o = this && this.__awaiter || function (t, e, i, n) {
            return new (i || (i = Promise))(function (a, r) {
                function o(t) {
                    try {
                        c(n.next(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function s(t) {
                    try {
                        c(n.throw(t));
                    } catch (t) {
                        r(t);
                    }
                }
                function c(t) {
                    t.done ? a(t.value) : (e = t.value, e instanceof i ? e : new i(function (t) {
                        t(e);
                    })).then(o, s);
                    var e;
                }
                c((n = n.apply(t, e || [])).next());
            });
        }, s = this && this.__generator || function (t, e) {
            var i, n, a, r, o = {
                label: 0,
                sent: function () {
                    if (1 & a[0]) throw a[1];
                    return a[1];
                },
                trys: [],
                ops: []
            };
            return r = {
                next: s(0),
                throw: s(1),
                return: s(2)
            }, "function" == typeof Symbol && (r[Symbol.iterator] = function () {
                return this;
            }), r;
            function s(t) {
                return function (e) {
                    return c([t, e]);
                };
            }
            function c(r) {
                if (i) throw new TypeError("Generator is already executing.");
                for (; o;) try {
                    if (i = 1, n && (a = 2 & r[0] ? n.return : r[0] ? n.throw || ((a = n.return) && a.call(n),
                        0) : n.next) && !(a = a.call(n, r[1])).done) return a;
                    (n = 0, a) && (r = [2 & r[0], a.value]);
                    switch (r[0]) {
                        case 0:
                        case 1:
                            a = r;
                            break;

                        case 4:
                            o.label++;
                            return {
                                value: r[1],
                                done: !1
                            };

                        case 5:
                            o.label++;
                            n = r[1];
                            r = [0];
                            continue;

                        case 7:
                            r = o.ops.pop();
                            o.trys.pop();
                            continue;

                        default:
                            if (!(a = o.trys, a = a.length > 0 && a[a.length - 1]) && (6 === r[0] || 2 === r[0])) {
                                o = 0;
                                continue;
                            }
                            if (3 === r[0] && (!a || r[1] > a[0] && r[1] < a[3])) {
                                o.label = r[1];
                                break;
                            }
                            if (6 === r[0] && o.label < a[1]) {
                                o.label = a[1];
                                a = r;
                                break;
                            }
                            if (a && o.label < a[2]) {
                                o.label = a[2];
                                o.ops.push(r);
                                break;
                            }
                            a[2] && o.ops.pop();
                            o.trys.pop();
                            continue;
                    }
                    r = e.call(t, o);
                } catch (t) {
                    r = [6, t];
                    n = 0;
                } finally {
                        i = a = 0;
                    }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var c = t("../../../../../../config/GameEnum"), l = t("../../../../../../data/storage/GameData"), h = t("../../../../../../frame/manager/FrameManager"), u = t("../../../../../../frame/manager/PopupManager"), p = t("../../../../../../util/GameFunc"), d = t("../../../../../../util/Tools"), f = t("../../../../../battle/manager/battle/SnakeManager"), m = t("./PopupSnakeInfo"), g = cc._decorator, _ = g.ccclass, y = g.property, v = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.btn = null;
                e.bgSpr = null;
                e.kuangSpr = null;
                e.botNode = null;
                e.botBgSpr = null;
                e.lockNode = null;
                e.fullNode = null;
                e.lvNode = null;
                e.proSpr = null;
                e.arrowSpr = null;
                e.useNode = null;
                e.atlas = null;
                e.m_data = null;
                e.m_cardProNum = null;
                e.m_lvNum = null;
                return e;
            }
            e.prototype.create = function (t) {
                this.m_data = t;
                this.bgSpr.spriteFrame = this.atlas.getSpriteFrame("item_" + this.m_data.type);
                this.kuangSpr.spriteFrame = this.atlas.getSpriteFrame("kuang_" + this.m_data.quality);
                this.botBgSpr.spriteFrame = this.atlas.getSpriteFrame("bg_" + this.m_data.quality);
                this.refreshUI();
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                h.FrameMgr.languageMgr.setImage(this.lockNode.getComponent(cc.Sprite), this.atlas, "lock");
                h.FrameMgr.languageMgr.setImage(this.useNode.getComponent(cc.Sprite), this.atlas, "syz");
                h.FrameMgr.languageMgr.setImage(this.fullNode.getComponent(cc.Sprite), this.atlas, "full1");
            };
            e.prototype.refreshUse = function () {
                this.useNode.active = f.SnakeMgr.getCurSnakeType() == this.m_data.type;
            };
            e.prototype.refreshUI = function (t) {
                void 0 === t && (t = !1);
                this.refreshUse();
                t && (this.m_data = f.SnakeMgr.getSnakeConfigDataForType(this.m_data.type));
                if (f.SnakeMgr.isSnakeUnlock(this.m_data.type)) {
                    this.lockNode.active = !1;
                    this.botNode.active = !0;
                    if (f.SnakeMgr.getSnakeConfigDataForId(this.m_data.id + 1)) {
                        this.proSpr.node.parent.active = !0;
                        this.lvNode.active = !0;
                        this.fullNode.active = !1;
                        var e = l.GData.getItemNum(this.m_data.costMaterial.itemId), i = this.m_data.costMaterial.itemNum;
                        this.arrowSpr.spriteFrame = this.atlas.getSpriteFrame("jt" + (e >= i ? 1 : 2));
                        this.proSpr.spriteFrame = this.atlas.getSpriteFrame("jd" + (e >= i ? 2 : 3));
                        this.proSpr.fillRange = Math.min(e / i, 1);
                        if (!this.m_lvNum) {
                            this.m_lvNum = p.GFunc.createUINum({
                                atlas: this.atlas,
                                type: c.NumType.SnakeUI,
                                color: this._getQualityColor(),
                                parent: this.lvNode,
                                distance: 2
                            });
                            this.m_lvNum.node.y = 18;
                        }
                        this.m_lvNum.setString("l" + f.SnakeMgr.getSnakeLv(this.m_data.type));
                        if (!this.m_cardProNum) {
                            this.m_cardProNum = p.GFunc.createUINum({
                                atlas: this.atlas,
                                type: c.NumType.SnakeUI,
                                parent: this.proSpr.node.parent,
                                distance: 2
                            });
                            this.m_cardProNum.node.x = 4;
                            this.m_cardProNum.node.scale = .7;
                        }
                        this.m_cardProNum.setString(e + "/" + i);
                    } else {
                        this.proSpr.node.parent.active = !1;
                        this.lvNode.active = !1;
                        this.fullNode.active = !0;
                    }
                } else {
                    this.lockNode.active = !0;
                    this.botNode.active = !1;
                }
            };
            Object.defineProperty(e.prototype, "data", {
                get: function () {
                    return this.m_data;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.onBtnClicked = function () {
                return o(this, void 0, void 0, function () {
                    return s(this, function (t) {
                        switch (t.label) {
                            case 0:
                                if (!d.DYTools.isBtnClickedAble()) return [2, null];
                                if (this.lockNode.active) {
                                    p.GFunc.showFloatTip({
                                        txt: h.FrameMgr.languageMgr.getTxt(1005),
                                        bgType: 2
                                    });
                                    return [2];
                                }
                                return [4, u.PopupMgr.show({
                                    cls: m.default,
                                    options: {
                                        data: this.m_data,
                                        item: this
                                    }
                                })];

                            case 1:
                                return [2, t.sent()];
                        }
                    });
                });
            };
            e.prototype._getQualityColor = function () {
                switch (this.m_data.quality) {
                    case 1:
                        return cc.color(187, 251, 132);

                    case 2:
                        return cc.color(105, 254, 255);

                    case 3:
                        return cc.color(255, 204, 255);

                    case 4:
                        return cc.color(255, 255, 153);
                }
                return cc.Color.WHITE;
            };
            r([y(cc.Button)], e.prototype, "btn", void 0);
            r([y(cc.Sprite)], e.prototype, "bgSpr", void 0);
            r([y(cc.Sprite)], e.prototype, "kuangSpr", void 0);
            r([y(cc.Node)], e.prototype, "botNode", void 0);
            r([y(cc.Sprite)], e.prototype, "botBgSpr", void 0);
            r([y(cc.Node)], e.prototype, "lockNode", void 0);
            r([y(cc.Node)], e.prototype, "fullNode", void 0);
            r([y(cc.Node)], e.prototype, "lvNode", void 0);
            r([y(cc.Sprite)], e.prototype, "proSpr", void 0);
            r([y(cc.Sprite)], e.prototype, "arrowSpr", void 0);
            r([y(cc.Node)], e.prototype, "useNode", void 0);
            r([y(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([_], e);
        }(cc.Component);
        i.default = v;
        cc._RF.pop();
    }, {
        "../../../../../../config/GameEnum": "GameEnum",
        "../../../../../../data/storage/GameData": "GameData",
        "../../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../../frame/manager/PopupManager": "PopupManager",
        "../../../../../../util/GameFunc": "GameFunc",
        "../../../../../../util/Tools": "Tools",
        "../../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "./PopupSnakeInfo": "PopupSnakeInfo"
    }],
    SnakeLine: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "cc6cesQqilATruCRyttkVAD", "SnakeLine");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("../../../../frame/manager/FrameManager"), c = t("../../manager/battle/SnakeManager"), l = cc._decorator, h = l.ccclass, u = l.property, p = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.iconSpr = null;
                e.m_imgName = "";
                e.m_cdImg = "";
                e.m_skillImg = "";
                e.m_startNode = null;
                e.m_endNode = null;
                return e;
            }
            e.prototype.create = function (t, e, i) {
                this.m_imgName = t;
                this.setTarget(e, i);
                s.FrameMgr.noticeMgr.on(o.EventTypeEnum.OnCircleCDOver, this.onCircleCDOver, this);
                s.FrameMgr.noticeMgr.on(o.EventTypeEnum.OnCircleCD, this.onCircleCD, this);
                this.m_skillImg = this.m_imgName + "_line";
                this.m_cdImg = this.m_skillImg;
                this.initSkin();
            };
            e.prototype.initSkin = function () {
                this.iconSpr.spriteFrame = c.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_skillImg);
            };
            Object.defineProperty(e.prototype, "startNode", {
                get: function () {
                    return this.m_startNode;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "endNode", {
                get: function () {
                    return this.m_endNode;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.setTarget = function (t, e) {
                this.m_startNode = t;
                this.m_endNode = e;
            };
            e.prototype.onCircleCDOver = function () {
                this.iconSpr.spriteFrame = c.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_skillImg);
            };
            e.prototype.onCircleCD = function () {
                this.iconSpr.spriteFrame = c.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_cdImg);
            };
            e.prototype.update = function () {
                if (this.m_startNode && this.m_endNode) {
                    var t = this.m_endNode.position.sub(this.m_startNode.position);
                    if (0 != t.x || 0 != t.y) {
                        var e = cc.v2(0, -1).signAngle(cc.v2(t.x, t.y));
                        this.node.position = this.m_startNode.position;
                        this.node.angle = cc.misc.radiansToDegrees(e);
                    }
                }
            };
            e.prototype.clear = function () {
                s.FrameMgr.noticeMgr.off(o.EventTypeEnum.OnCircleCDOver, this.onCircleCDOver, this);
                s.FrameMgr.noticeMgr.off(o.EventTypeEnum.OnCircleCD, this.onCircleCD, this);
            };
            r([u(cc.Sprite)], e.prototype, "iconSpr", void 0);
            return r([h], e);
        }(cc.Component);
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../manager/battle/SnakeManager": "SnakeManager"
    }],
    SnakeManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "5dde1pP3oRBkJXhZQAIRi9T", "SnakeManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.SnakeMgr = void 0;
        var r = t("../../../../config/GameEnum"), o = t("../../../../data/manager/ConfigDataManager"), s = t("../../../../frame/manager/BattleFlowManager"), c = t("../../../../frame/manager/FrameManager"), l = t("../../player/entity/SnakeEntity"), h = t("./BattleManager"), u = t("./EntityManager"), p = t("./GameRuleManager"), d = t("../../../../data/storage/GameData"), f = t("../../../../util/GameFunc"), m = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.initID = 0;
                e._snakePfb = null;
                e._snakeAtlas = null;
                e._pfSnakeLine = null;
                e.m_skillPf = 0;
                e._snake = null;
                e._dieCount = 0;
                e._reviveCount = 0;
                e._moveAble = !1;
                e.touchRat = 0;
                e.touchSize = 0;
                e.targetSpeed = 0;
                e.headTargetPos = null;
                e.m_speedBuff = null;
                e.m_speedBuffUnit = null;
                e.m_reviveSpine1 = null;
                e.m_reviveSpine2 = null;
                e.liveTime = 0;
                e.updateLiveTime = !1;
                e._fixedInterval = .016;
                e._interval = 0;
                e._dirNormalize = cc.Vec2.ZERO;
                e._joyRat = 0;
                e.m_settleCircle = !1;
                e.m_settleDelBody = !1;
                e.m_funcAble = !1;
                e.m_crazyColor1 = {
                    100: cc.color(8, 247, 223),
                    101: cc.color(8, 247, 223),
                    102: cc.color(8, 247, 22),
                    103: cc.color(247, 175, 8),
                    104: cc.color(8, 89, 247),
                    105: cc.color(233, 8, 247),
                    107: cc.color(242, 87, 190),
                    108: cc.color(241, 216, 61)
                };
                e.m_crazyColor2 = {
                    100: cc.color(8, 204, 247),
                    101: cc.color(8, 204, 247),
                    102: cc.color(89, 247, 8),
                    103: cc.color(247, 147, 8),
                    104: cc.color(8, 89, 247),
                    105: cc.color(147, 8, 247),
                    107: cc.color(242, 87, 190),
                    108: cc.color(241, 216, 61)
                };
                e.m_crazyColor3 = {
                    100: cc.color(117, 241, 244),
                    101: cc.color(117, 241, 244),
                    102: cc.color(177, 255, 0),
                    103: cc.color(255, 219, 0),
                    104: cc.color(0, 255, 199),
                    105: cc.color(239, 98, 254),
                    107: cc.color(242, 87, 190),
                    108: cc.color(241, 216, 61)
                };
                e.m_crazyColor4 = {
                    100: cc.color(88, 143, 249),
                    101: cc.color(88, 143, 249),
                    102: cc.color(181, 249, 88),
                    103: cc.color(252, 76, 0),
                    104: cc.color(88, 201, 249),
                    105: cc.color(214, 88, 249),
                    107: cc.color(242, 87, 190),
                    108: cc.color(241, 216, 61)
                };
                e.m_crazyColor5 = {
                    100: cc.color(10, 166, 150),
                    101: cc.color(10, 166, 150),
                    102: cc.color(4, 183, 14),
                    103: cc.color(183, 130, 6),
                    104: cc.color(7, 74, 205),
                    105: cc.color(179, 5, 190),
                    107: cc.color(242, 87, 190),
                    108: cc.color(241, 216, 61)
                };
                e.m_trySnakeId = 0;
                e.m_fetterMap = new Map();
                return e;
            }
            e.prototype.addLoadingRes = function () {
                return [{
                    itemType: cc.Prefab,
                    itemNames: ["Player", "SnakeLine"],
                    loadType: r.LoadType.All
                }, {
                    itemType: cc.AudioClip,
                    itemNames: ["skill"],
                    loadType: r.LoadType.All
                }, {
                    itemType: sp.SkeletonData,
                    itemNames: ["spine_snake_revive_1", "spine_snake_revive_2"],
                    loadType: r.LoadType.All
                }];
            };
            Object.defineProperty(e.prototype, "snakePfb", {
                get: function () {
                    return this._snakePfb;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "pfSnakeLine", {
                get: function () {
                    return this._pfSnakeLine;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "snakeAtlas", {
                get: function () {
                    return this._snakeAtlas;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "skillPfLoaded", {
                get: function () {
                    return this.m_skillPf > 0;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "snakeData", {
                get: function () {
                    return this._snake ? this._snake.getSnakeData() : null;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.getEnemyShowAtk = function (t) {
                void 0 === t && (t = 0);
                var e = this._snake.getSnakeData();
                return t > e.attack ? e.critAttack : e.attack;
            };
            e.prototype.getSnakeColliders = function () {
                return this._snake ? this._snake.getColliders() : [];
            };
            e.prototype.getSnakeHead = function () {
                return this._snake ? this._snake.getSnakeHead() : null;
            };
            e.prototype.getSnakeRadiusByType = function (t) {
                if (this._snake) {
                    var e = this._snake.getColliderDataByType(t);
                    if (e.length > 2) return e[2];
                }
                return 0;
            };
            e.prototype.getSnakeUnits = function () {
                return this._snake ? this._snake.getUnits() : [];
            };
            e.prototype.getSnakeMaxLength = function () {
                if (!this._snake) return 0;
                var t = this._snake.getSnakeData();
                return t ? t.maxBodyLength : 0;
            };
            e.prototype.getSnakeCurrentLength = function () {
                return this._snake ? this._snake.getSnakeLength() : 0;
            };
            e.prototype.getDir = function () {
                return this._dirNormalize;
            };
            e.prototype.setDir = function (t) {
                this._dirNormalize = t;
            };
            e.prototype.getJoyRat = function () {
                return this._joyRat;
            };
            e.prototype.setJoyRat = function (t) {
                this._joyRat = t;
            };
            e.prototype.getRotateSpeed = function () {
                return this._snake ? this._snake.getRotateSpeed() : 800;
            };
            e.prototype.getMoveSpeed = function () {
                return this._snake ? this._snake.getMoveSpeed() : 800;
            };
            e.prototype.getSnake = function () {
                return this._snake || null;
            };
            e.prototype.getSnakeLong = function () {
                return this._snake ? this._snake.getSnakeLong() : 0;
            };
            Object.defineProperty(e.prototype, "moveAble", {
                set: function (t) {
                    this._moveAble = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "funcAble", {
                get: function () {
                    return this.m_funcAble;
                },
                set: function (t) {
                    this.m_funcAble = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.refreshSnakeData = function () {
                var t = this.getCurSnakeType(), e = this.getSnakeConfigDataForType(t);
                e && e.id > this.getCurSnakeId() && this.setCurSnakeId(e.id);
            };
            e.prototype.getCurSnakeType = function () {
                return this.getSnakeType(d.GData.getCurSnakeId());
            };
            e.prototype.getCurSnakeId = function () {
                return d.GData.getCurSnakeId();
            };
            e.prototype.setCurSnakeId = function (t, e) {
                void 0 === e && (e = !0);
                var i = this.getCurSnakeType();
                d.GData.setCurSnakeId(t);
                if (e) {
                    if (this.snakeAtlas && i != this.getCurSnakeType()) {
                        c.FrameMgr.loadMgr.releaseAsset(this.snakeAtlas);
                        this._snakeAtlas = null;
                        this.m_skillPf = 0;
                    }
                    this._snakeAtlas || this.loadSnakeRes();
                }
                c.FrameMgr.noticeMgr.emit(r.EventTypeEnum.SnakeSelect, t);
            };
            e.prototype.getCurSnakeLv = function () {
                return d.GData.getCurSnakeLv();
            };
            e.prototype.getCurSnakeConfigData = function () {
                return this.getSnakeConfigDataForId(this.getCurSnakeId());
            };
            e.prototype.getCurSnakeSkillData = function () {
                var t = this.getCurSnakeConfigData().skillId;
                return o.ConfigDataMgr.getData("ConfigSnakeSkillData", t);
            };
            e.prototype.getCurSnakeTurretLvupData = function () {
                var t = d.GData.getSnakeTurretLv();
                return o.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", t);
            };
            e.prototype.getSnakeType = function (t) {
                return t >= 1e4 ? Math.floor(t / 100) : t;
            };
            e.prototype.getSnakeId = function (t, e) {
                void 0 === e && (e = -1);
                return t < 1e4 ? 100 * t + (e = -1 == e ? d.GData.getSnakeLv(t) : e) : t;
            };
            e.prototype.getSnakeConfigDataForId = function (t) {
                return o.ConfigDataMgr.getData("ConfigSnakeData", t);
            };
            e.prototype.getSnakeConfigDataForType = function (t, e) {
                void 0 === e && (e = -1);
                return this.getSnakeConfigDataForId(this.getSnakeId(t, e));
            };
            e.prototype.getAllSnakeType = function () {
                var t = [];
                o.ConfigDataMgr.getAllData("ConfigSnakeData").forEach(function (e) {
                    t.includes(e.type) || 100 === e.type || t.push(e.type);
                });
                return t;
            };
            e.prototype.getSnakeMaxStar = function (t, e) {
                var i = 0;
                o.ConfigDataMgr.getAllData("ConfigSnakeData").forEach(function (n) {
                    n.type === t && n.mark.evolutionNum === e && (i = n.mark.starNum);
                });
                return i;
            };
            e.prototype.getSnakeMaxEvolution = function (t) {
                var e = 0;
                o.ConfigDataMgr.getAllData("ConfigSnakeData").forEach(function (i) {
                    i.type === t && (e = i.mark.evolutionNum);
                });
                return e;
            };
            e.prototype.getSnakeMaxLv = function (t) {
                var e = 0;
                o.ConfigDataMgr.getAllData("ConfigSnakeData").forEach(function (i) {
                    i.type === t && (e = i.id % t);
                });
                return e;
            };
            e.prototype.getSnakeLv = function (t) {
                return d.GData.getSnakeLv(t);
            };
            e.prototype.setSnakeLv = function (t, e) {
                return d.GData.setSnakeLv(t, e);
            };
            e.prototype.getAllSnake = function () {
                return d.GData.getAllSnake();
            };
            e.prototype.setSnakeUnlockId = function (t) {
                return d.GData.setSnakeUnlockId(t);
            };
            e.prototype.isSnakeUnlock = function (t) {
                return d.GData.getSnakeUnlockId(t);
            };
            e.prototype.isSnakeLvupAble = function (t, e) {
                return !!this.isSnakeUnlock(t) && (!(!(e = e || this.getSnakeConfigDataForType(t)) || !this.getSnakeConfigDataForId(e.id + 1)) && (f.GFunc.isGoldEnough(e.costGold) && f.GFunc.isItemEnough(e.costMaterial.itemId, e.costMaterial.itemNum)));
            };
            e.prototype.isSnakeLvupAbleForLevel = function (t, e, i) {
                void 0 === e && (e = 1);
                if (!this.isSnakeUnlock(t)) return !1;
                if (i = i || this.getSnakeConfigDataForType(t)) {
                    var n = e - this.getSnakeLv(i.type);
                    if (n <= 0) return !0;
                    for (var a = 0, r = 0, o = 0; o < n; o++) {
                        var s = this.getSnakeConfigDataForId(i.id + 1);
                        if (!s) return !1;
                        a += i.costGold;
                        r += i.costMaterial.itemNum;
                        i = s;
                    }
                    return f.GFunc.isGoldEnough(a) && f.GFunc.isItemEnough(i.costMaterial.itemId, r);
                }
                return !1;
            };
            e.prototype.getInitTime = function () {
                return 50;
            };
            e.prototype.initData = function () {
                this._snakePfb = c.FrameMgr.loadMgr.get("Player", cc.Prefab);
                this._pfSnakeLine = c.FrameMgr.loadMgr.get("SnakeLine", cc.Prefab);
                this._snakeAtlas = c.FrameMgr.loadMgr.get("TP_Snake_" + this.getCurSnakeType(), cc.SpriteAtlas);
            };
            e.prototype.init = function () {
                c.FrameMgr.noticeMgr.on(r.EventTypeEnum.TouchMove, this.onTouchMove.bind(this));
                c.FrameMgr.noticeMgr.on(r.EventTypeEnum.TouchEnd, this.onTouchEnd.bind(this));
            };
            e.prototype.loadSnakeRes = function (t, e) {
                var i = this;
                c.FrameMgr.loadMgr.loadAtlas("TP_Snake_" + this.getCurSnakeType(), function (n) {
                    i._snakeAtlas = n;
                    var a = null;
                    switch (i.getCurSnakeType()) {
                        case 102:
                            a = "SnakeThornsEntity";
                            break;

                        case 103:
                            a = "SnakeMeteorEntity";
                            break;

                        case 104:
                            a = "SnakeForstEntity";
                    }
                    if (a) {
                        t && t(.6);
                        c.FrameMgr.loadMgr.loadPrefab(a, function () {
                            i.m_skillPf = 1;
                            e && e(!0);
                        }, function () {
                            e && e(!1);
                        });
                    } else {
                        i.m_skillPf = 2;
                        e && e(!0);
                    }
                }, function () {
                    e && e(!1);
                });
            };
            e.prototype.clear = function () {
                if (this._snake) {
                    this._snake.clear();
                    this._snake.node.destroy();
                    this._snake = null;
                }
                this._snakePfb = null;
                this._pfSnakeLine = null;
                this._dirNormalize = cc.Vec2.ZERO;
                this.headTargetPos = null;
                this.dieCount = 0;
                this.reviveCount = 0;
                this.liveTime = 0;
                this._joyRat = 0;
                this.updateLiveTime = !1;
                this._moveAble = !1;
                this.m_speedBuff = null;
                this.m_reviveSpine1 = null;
                this.m_reviveSpine2 = null;
                this.m_settleCircle = !1;
                this.m_settleDelBody = !1;
                this.funcAble = !1;
            };
            e.prototype.startBattleReady = function (t) {
                this.refreshFetterData();
                this.createReviveAnim();
                this.createSnake(d.GData.getCurSnakeId());
                this.playSnakeInAnim(function () {
                    if (h.BattleMgr.touchUI) {
                        h.BattleMgr.touchUI.onTouchEnd();
                        h.BattleMgr.touchUI.node.active = !0;
                    }
                    t && t();
                });
            };
            e.prototype.startBattle = function () {
                this.updateLiveTime = !0;
                this._moveAble = !0;
                this.funcAble = !0;
                this.m_trySnakeId = 0;
            };
            e.prototype.playSnakeOutAnim = function (t, e) {
                this._snake && this._snake.playSnakeOutAnim(t, e);
            };
            e.prototype.playSnakeMoveToDoorAnim = function (t) {
                this._snake && this._snake.playSnakeMoveToDoorAnim(t);
            };
            e.prototype.playSnakeInAnim = function (t) {
                this._snake && this._snake.playSnakeInAnim(t);
            };
            e.prototype.createSnake = function (t) {
                var e = new cc.Node("Snake_" + t);
                u.EntityMgr.addPlayer(e, {
                    x: 0,
                    y: 0
                });
                var i = e.addComponent(l.default);
                this._snake = i;
                i.init(t);
            };
            e.prototype.createReviveAnim = function () {
                var t = new cc.Node("revive1");
                t.parent = u.EntityMgr.getPlayerLayer();
                this.m_reviveSpine1 = t.addComponent(sp.Skeleton);
                this.m_reviveSpine1.skeletonData = c.FrameMgr.loadMgr.get("spine_snake_revive_1", sp.SkeletonData);
                this.m_reviveSpine1.premultipliedAlpha = !1;
                var e = new cc.Node("revive2");
                e.parent = u.EntityMgr.getPlayerLayer();
                e.zIndex = 1;
                this.m_reviveSpine2 = e.addComponent(sp.Skeleton);
                this.m_reviveSpine2.skeletonData = c.FrameMgr.loadMgr.get("spine_snake_revive_2", sp.SkeletonData);
                this.m_reviveSpine2.premultipliedAlpha = !1;
                this.m_reviveSpine2.scheduleOnce(function () {
                    t.active = !1;
                    e.active = !1;
                });
            };
            e.prototype.playReviveAnim = function () {
                this.m_reviveSpine1.node.active = !0;
                this.m_reviveSpine1.node.setPosition(this.getSnakePosition());
                this.m_reviveSpine1.setAnimation(0, "play", !1);
                this.m_reviveSpine2.node.active = !0;
                this.m_reviveSpine2.node.setPosition(this.getSnakePosition());
                this.m_reviveSpine2.setAnimation(0, "play", !1);
                this.getSnakeHead().playReviveAnim();
                var t = o.ConfigDataMgr.getGlobalDataNumArr(r.GlobalKey.LootCrazyParam);
                c.FrameMgr.noticeMgr.emit(r.EventTypeEnum.SnakeBuffStart, {
                    type: r.SnakeBuffType.Crazy,
                    data: t
                });
            };
            e.prototype.checkDeath = function () {
                return this._snake && this._snake.checkDeath();
            };
            e.prototype.reLive = function () {
                this._snake && this._snake.reLive();
            };
            Object.defineProperty(e.prototype, "dieCount", {
                get: function () {
                    return this._dieCount;
                },
                set: function (t) {
                    this._dieCount = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "reviveCount", {
                get: function () {
                    return this._reviveCount;
                },
                set: function (t) {
                    this._reviveCount = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.updateLogic = function (t, e) {
                if (this._moveAble) {
                    this._interval += t;
                    var i = this._fixedInterval / e, n = 0;
                    if (this._interval >= i) {
                        this._interval = this._interval - i;
                        this.fixedUpdate(i);
                        for (; this._interval >= 2 * i && n <= 5;) {
                            this._interval = this._interval - i;
                            this.fixedUpdate(i);
                            n++;
                        }
                    }
                    this.updateLiveTime && (this.liveTime += t * e);
                    this._snake && this._snake.updateLogic(t);
                }
            };
            e.prototype.fixedUpdate = function (t) {
                c.FrameMgr.noticeMgr.emit(r.EventTypeEnum.FixedUpdate, t);
                this._snake && this._snake.fixedUpdate(t);
            };
            e.prototype.onTouchMove = function (t) {
                var e = t.dir, i = t.joyRat;
                if (p.GameRuleMgr.isInBattle()) {
                    this._dirNormalize = e;
                    this._joyRat = i;
                }
            };
            e.prototype.onTouchEnd = function () { };
            e.prototype.getDirToPlayer = function (t) {
                var e = this.getSnakeHead().node.position;
                return cc.v2(e.x - t.x, e.y - t.y);
            };
            e.prototype.getPlayerPos = function () {
                return this.getSnakeHead() ? this.getSnakeHead().node.position : cc.Vec3.ZERO;
            };
            e.prototype.getSnakePosition = function () {
                return this.getSnakeHead() ? this.getSnakeHead().node.getPosition() : cc.Vec2.ZERO;
            };
            e.prototype.isSnakeHeadInCircle = function (t, e, i) {
                var n = this.getSnakePosition(), a = t - n.x, r = e - n.y;
                return Math.abs(a) <= i && Math.abs(r) <= i && Math.sqrt(a * a + r * r) <= i;
            };
            e.prototype.snakeHurt = function (t) {
                var e = this.getSnakeHead();
                e && e.hurt(t);
            };
            e.prototype.setSpeedBuff = function (t) {
                this.m_speedBuff = t;
                this.m_speedBuffUnit = t ? t.normalize() : null;
            };
            e.prototype.getSpeedBuff = function () {
                return this.m_speedBuff;
            };
            e.prototype.getSpeedBuffUnit = function () {
                return this.m_speedBuffUnit;
            };
            e.prototype.setTrySnakeId = function (t) {
                this.m_trySnakeId = t;
                this.setCurSnakeId(t);
            };
            e.prototype.getFetterMap = function () {
                return this.m_fetterMap;
            };
            e.prototype.refreshFetterData = function () {
                this.m_fetterMap.clear();
                var t = d.GData.getAllFetter();
                for (var e in t) {
                    var i = t[e], n = o.ConfigDataMgr.getData("ConfigFetterData", parseInt(e));
                    if (n) {
                        var a = n.levelDatas[i];
                        if (a) for (var r = 0, s = a.param; r < s.length; r++) {
                            var c = s[r], l = this.m_fetterMap.get(c.x);
                            l ? this.m_fetterMap.set(c.x, c.y + l) : this.m_fetterMap.set(c.x, c.y);
                        }
                    }
                }
                return this.m_fetterMap;
            };
            e.prototype.hasFetterLvupAble = function () {
                var t = this, e = !1;
                o.ConfigDataMgr.getAllData("ConfigFetterData").forEach(function (i) {
                    (t.isFetterLvupAble(i) || t.isFetterLvupAbleForSnakeLvup(i)) && (e = !0);
                });
                return e;
            };
            e.prototype.isFetterFullLv = function (t) {
                var e = d.GData.getFetterLevel(t.id);
                return !t.levelDatas[e + 1];
            };
            e.prototype.isFetterLvupAble = function (t) {
                var e = !1, i = d.GData.getFetterLevel(t.id), n = t.levelDatas[i + 1];
                if (n) {
                    for (var a = !0, r = 0; r < n.condition.length; r++) {
                        var o = n.condition[r];
                        if (!this.isSnakeUnlock(o.x)) {
                            a = !1;
                            break;
                        }
                        if (this.getSnakeLv(o.x) < o.y) {
                            a = !1;
                            break;
                        }
                    }
                    a && (e = !0);
                }
                return e;
            };
            e.prototype.isFetterLvupAbleForSnakeLvup = function (t) {
                var e = !1, i = d.GData.getFetterLevel(t.id), n = t.levelDatas[i + 1];
                if (n) {
                    for (var a = !0, r = 0, o = 0; o < n.condition.length; o++) {
                        var s = n.condition[o], c = this.getSnakeConfigDataForType(s.x);
                        if (!this.isSnakeLvupAbleForLevel(s.x, s.y, c)) {
                            a = !1;
                            break;
                        }
                        for (var l = this.getSnakeLv(s.x), h = s.y - l, u = 0; u < h; u++) {
                            var p = this.getSnakeConfigDataForId(c.id + 1);
                            if (!p) return !1;
                            r += c.costGold;
                            c = p;
                        }
                    }
                    a && f.GFunc.isGoldEnough(r) && (e = !0);
                }
                return e;
            };
            e.prototype.isFetterHasSnakeLvup = function (t) {
                var e = d.GData.getFetterLevel(t.id), i = t.levelDatas[e + 1];
                if (i) for (var n = 0; n < i.condition.length; n++) {
                    var a = i.condition[n];
                    if (this.isSnakeLvupAble(a.x)) return !0;
                }
                return !1;
            };
            e.instance = new e();
            return e;
        }(s.BattleFlowBase);
        i.SnakeMgr = m.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../data/storage/GameData": "GameData",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/GameFunc": "GameFunc",
        "../../player/entity/SnakeEntity": "SnakeEntity",
        "./BattleManager": "BattleManager",
        "./EntityManager": "EntityManager",
        "./GameRuleManager": "GameRuleManager"
    }],
    SnakeMoveBaseComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1a415JghEdPhINNxvdz7X5s", "SnakeMoveBaseComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../common/CompBase"), o = t("../../manager/battle/SnakeManager"), s = t("../../../../config/GameEnum"), c = t("../../../../util/Tools"), l = t("../../manager/common/GuideManager"), h = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._angle = 0;
                e._speedX = 0;
                e._speedY = 0;
                e._speed = 0;
                e._linePos = [];
                e.snakeUnit = null;
                return e;
            }
            Object.defineProperty(e.prototype, "prePosition", {
                get: function () {
                    return this._prePosition;
                },
                set: function (t) {
                    this._prePosition = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "position", {
                get: function () {
                    return this._position;
                },
                set: function (t) {
                    this._position = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "angle", {
                get: function () {
                    return this._angle;
                },
                set: function (t) {
                    this._angle = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "speedX", {
                get: function () {
                    return this._speedX;
                },
                set: function (t) {
                    this._speedX = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "speedY", {
                get: function () {
                    return this._speedY;
                },
                set: function (t) {
                    this._speedY = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "speed", {
                get: function () {
                    return this._speed;
                },
                set: function (t) {
                    this._speed = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.initBase = function (e, i) {
                t.prototype.initBase.call(this, e, i);
                this.snakeUnit = e;
            };
            e.prototype.getMoveData = function () {
                return {
                    pos: this._position,
                    prePos: this._prePosition,
                    ang: this._angle
                };
            };
            e.prototype.fixedUpdate = function (t) {
                if (this.node) {
                    var e = o.SnakeMgr.getDir();
                    this.onFixedUpdate(t, e);
                }
            };
            e.prototype._collideWall = function (t) {
                var e = this, i = cc.v2(t), n = o.SnakeMgr.getSnakeHead();
                if (n) {
                    var a = n.getWalls(), r = n.getBlocks(), c = n.getPreColliderPos();
                    this._linePos.splice(0);
                    if (c) {
                        a = a.concat(r);
                        for (var l = null, h = null, u = null, p = 0, d = a; p < d.length; p++) {
                            var f = d[p];
                            if (f.enabled) switch (f.type) {
                                case s.ColliderType.Line:
                                    h || (h = []);
                                    h.push(f);
                                    break;

                                default:
                                    u || (u = []);
                                    u.push(f);
                            }
                        }
                        u && u.forEach(function (t) {
                            switch (t.type) {
                                case s.ColliderType.Circle:
                                    i = e._calculateCircleDir(t, i);
                                    break;

                                case s.ColliderType.Rectangle:
                                    var n = t.data, a = e.node.x >= n.x + n.width, r = e.node.x <= n.x, o = e.node.y >= n.y + n.height, h = e.node.y <= n.y;
                                    if (a && (o || h) || r && (o || h)) {
                                        l || (l = []);
                                        l.push(t);
                                    } else i = e._calculateDir(t, c, i);
                            }
                        });
                        l && l.forEach(function (t) {
                            switch (t.type) {
                                case s.ColliderType.Rectangle:
                                    i = e._calculateDirOutWidthOrHeight(t, c, i);
                            }
                        });
                        if (h) if (1 == h.length) i = this._calculateLineCol(h[0], i, t, u).dir; else {
                            var m = h[0], g = h[1], _ = this._calculateLineCol(m, cc.v2(t.x, t.y), t, null), y = this._calculateLineCol(g, cc.v2(t.x, t.y), t, null);
                            if (_.adjust && y.adjust) {
                                i.x = 0;
                                i.y = 0;
                            } else if (_.adjust) {
                                if (this._calculateLineCol(g, cc.v2(_.dir.x, _.dir.y), _.dir, null).adjust) {
                                    i.x = 0;
                                    i.y = 0;
                                } else i = _.dir;
                                this._linePos.pop();
                            } else if (y.adjust) {
                                if (this._calculateLineCol(m, cc.v2(y.dir.x, y.dir.y), y.dir, null).adjust) {
                                    i.x = 0;
                                    i.y = 0;
                                } else i = y.dir;
                                this._linePos.pop();
                            } else i = _.dir;
                        }
                        i = a.length > 0 ? i.normalizeSelf().mul(.8) : i.normalizeSelf();
                    }
                }
                return i;
            };
            e.prototype._calculateLineCol = function (t, e, i, n) {
                var a = this._calculateLineDir(t, i), r = a.dir, c = a.adjust, l = o.SnakeMgr.getSnakeRadiusByType(s.SnakeUnitType.head) - 1, h = t.param, p = h[0], d = h[1], f = t.tag, m = new u();
                m.tag = f;
                m.angle = t.angle;
                this._linePos.push(m);
                switch (f) {
                    case 1:
                        var g = 0;
                        g = null != p ? this.node.x * p + d - l : t.data.start.y - l;
                        m.x = this.node.x;
                        m.y = g + 4;
                        n && (i.y > 1e-6 ? 0 == e.x ? r = e : e = r : 0 == e.y || e.x > 1e-6 ? e.x = r.x : e.y = 0);
                        break;

                    case 2:
                        g = 0;
                        g = null != p ? this.node.x * p + d + l : t.data.start.y + l;
                        m.x = this.node.x;
                        m.y = g - 4;
                        n && (i.y < -1e-6 ? 0 == e.x ? r = e : e = r : 0 == e.y || e.y > 1e-6 ? e.x = r.x : e.y = 0);
                        break;

                    case 3:
                        var _ = 0;
                        _ = null != p ? (this.node.y - d) / p + l : t.data.start.x + l;
                        m.x = _ - 4;
                        m.y = this.node.y;
                        n && (i.x > 1e-6 ? 0 == e.y ? r = e : e = r : 0 == e.x || e.y > 1e-6 ? e.y = r.y : e.x = 0);
                        break;

                    case 4:
                        _ = 0;
                        _ = null != p ? (this.node.y - d) / p - l : t.data.start.x - l;
                        m.x = _ + 4;
                        m.y = this.node.y;
                        n && (i.x < -1e-6 ? 0 == e.y ? r = e : e = r : 0 == e.x || e.y > 1e-6 ? e.y = r.y : e.x = 0);
                }
                n || (e = r);
                return {
                    dir: e,
                    adjust: c
                };
            };
            e.prototype._calculateLineDir = function (t, e) {
                var i = cc.v2(e), n = t.dir, a = t.normalVec, r = a.signAngle(n), o = a.signAngle(cc.v2(-n.x, -n.y));
                r < o && (o = Math.PI - o);
                var s = r > o ? o : r, c = r > o ? r : o, l = a.signAngle(i), h = !1;
                if (l < s || l > c) {
                    h = !0;
                    switch (t.tag) {
                        case 1:
                            if (t.data.start.x > t.data.end.x) if (l >= 0) {
                                i.x = -n.x;
                                i.y = -n.y;
                            } else {
                                i.x = n.x;
                                i.y = n.y;
                            } else if (l >= 0) {
                                i.x = n.x;
                                i.y = n.y;
                            } else {
                                i.x = -n.x;
                                i.y = -n.y;
                            }
                            break;

                        case 2:
                            if (t.data.start.x > t.data.end.x) if (l >= 0) {
                                i.x = n.x;
                                i.y = n.y;
                            } else {
                                i.x = -n.x;
                                i.y = -n.y;
                            } else if (l >= 0) {
                                i.x = -n.x;
                                i.y = -n.y;
                            } else {
                                i.x = n.x;
                                i.y = n.y;
                            }
                            break;

                        case 3:
                            if (t.data.start.y > t.data.end.y) if (l >= 0) {
                                i.x = -n.x;
                                i.y = -n.y;
                            } else {
                                i.x = n.x;
                                i.y = n.y;
                            } else if (l >= 0) {
                                i.x = n.x;
                                i.y = n.y;
                            } else {
                                i.x = -n.x;
                                i.y = -n.y;
                            }
                            break;

                        case 4:
                            if (t.data.start.y > t.data.end.y) if (l >= 0) {
                                i.x = n.x;
                                i.y = n.y;
                            } else {
                                i.x = -n.x;
                                i.y = -n.y;
                            } else if (l >= 0) {
                                i.x = -n.x;
                                i.y = -n.y;
                            } else {
                                i.x = n.x;
                                i.y = n.y;
                            }
                    }
                }
                return {
                    dir: i,
                    adjust: h
                };
            };
            e.prototype._calculateDir = function (t, e, i) {
                var n = cc.v2(i), a = t.data, r = 0, o = 0;
                if (e.y > a.y && e.y < a.y + a.height) {
                    r = e.x < a.x ? 1 : e.x > a.x + a.width ? -1 : this.node.x - e.x > 0 ? 1 : -1;
                    o = 0;
                } else if (e.x > a.x && e.x < a.x + a.width) {
                    o = e.y < a.y ? 1 : e.y > a.y + a.height ? -1 : this.node.y - e.y > 0 ? 1 : -1;
                    r = 0;
                } else {
                    r = 0;
                    o = 0;
                    this.node.x < a.x ? r = 1 : this.node.x > a.x + a.width ? r = -1 : this.node.y < a.y ? o = 1 : this.node.y > a.y + a.height && (o = -1);
                }
                r > 0 && i.x > 0 ? n.x = 0 : r < 0 && i.x < 0 && (n.x = 0);
                o > 0 && i.y > 0 ? n.y = 0 : o < 0 && i.y < 0 && (n.y = 0);
                return n;
            };
            e.prototype._calculateDirOutWidthOrHeight = function (t, e, i) {
                var n = t.data, a = this.node.x >= n.x + n.width, r = this.node.x <= n.x, o = this.node.y >= n.y + n.height, s = this.node.y <= n.y;
                a && o ? i.x < 0 && i.y < 0 && (i.x > i.y ? i.y = 0 : i.x = 0) : r && o ? i.x > 0 && i.y < 0 && (i.x > i.y ? i.y = 0 : i.x = 0) : a && s ? i.x < 0 && i.y > 0 && (i.x > i.y ? i.y = 0 : i.x = 0) : r && s ? i.x > 0 && i.y > 0 && (i.x > i.y ? i.y = 0 : i.x = 0) : c.DYTools.error("err");
                return i;
            };
            e.prototype._calculateCircleDir = function (t, e) {
                var i = t.data, n = i.position.x, a = i.position.y, r = cc.v2(this.node.x + e.x, this.node.y + e.y);
                if (Math.abs(n - this.node.x) + Math.abs(a - this.node.y) < Math.abs(n - r.x) + Math.abs(a - r.y)) return e;
                i.radius;
                var o = cc.v2(n, a).sub(this.node.getPosition()), s = e.cross(o) > 0 ? -1 : 1, c = cc.v2(o).rotateSelf(Math.PI / 2 * s), l = e.cross(c) > 0 ? e : c;
                return (l = l.add(c)).normalizeSelf().mul(e.mag());
            };
            e.prototype.adjustPos = function (t) {
                if (this._linePos.length > 0) for (var e = 0; e < this._linePos.length; e++) {
                    var i = this._linePos[e];
                    switch (i.tag) {
                        case 1:
                            t.y > i.y && (t.y = i.y);
                            break;

                        case 2:
                            t.y < i.y && (t.y = i.y);
                            break;

                        case 3:
                            t.x < i.x && (t.x = i.x);
                            break;

                        case 4:
                            t.x > i.x && (t.x = i.x);
                    }
                }
                l.GuideMgr.getCurGuideLineY() && t.y > l.GuideMgr.getCurGuideLineY() && (t.y = l.GuideMgr.getCurGuideLineY());
                return t;
            };
            e.prototype.updateRotate = function (t, e, i, n) {
                var a = ((t || 0) + 360) % 360, r = e;
                Math.abs(r - a) >= 180 && (r += 360 * (r > a ? -1 : 1));
                if (Math.abs(a - r) <= i * n) a = cc.misc.lerp(a, r, .1); else {
                    var o = cc.v2(Math.sin(cc.misc.degreesToRadians(-a)), Math.cos(cc.misc.degreesToRadians(a))).normalize(), s = cc.v2(Math.sin(cc.misc.degreesToRadians(-r)), Math.cos(cc.misc.degreesToRadians(r))).normalize();
                    a += (o.cross(s) > 0 ? 1 : -1) * i * n;
                }
                return a;
            };
            return e;
        }(r.default);
        i.default = h;
        var u = function () {
            this.tag = 0;
            this.x = 0;
            this.y = 0;
            this.angle = 0;
        };
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../util/Tools": "Tools",
        "../../common/CompBase": "CompBase",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../../manager/common/GuideManager": "GuideManager"
    }],
    SnakeMoveBodyComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "4bb31oj7RBOFrdHUvYK3wMT", "SnakeMoveBodyComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../../config/GameEnum"), o = t("../../../../util/Tools"), s = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._frame = 0;
                return e;
            }
            e.prototype.onFixedUpdate = function () {
                this._normalFixedUpdate();
            };
            e.prototype._normalFixedUpdate = function () {
                var t = this.snakeUnit.getMainEntity().getMoveSpeed();
                this.speed = t;
                var e = this.node.position, i = this.snakeUnit.getImgAngle(), n = ((i || 0) + 360) % 360;
                this.prePosition = this._position || this.node.position;
                var a = this.snakeUnit, r = a.getMainEntity(), s = a.getPreUnit(), c = s.node, l = this.getSpace(a, s, r), h = r.getPreIndex(), u = r.getPlayerPosition(), p = 0;
                if (u.length - 1 - h >= 0) for (var d = u[u.length - 1 - h], f = 0; f < u.length && u.length - 1 - f - h >= 0; f++) {
                    var m = u[u.length - 1 - f - h], g = d.x - m.x, _ = d.y - m.y;
                    d = m;
                    if ((p += Math.sqrt(g * g + _ * _)) >= l) {
                        n = (n = o.DYTools.getAngle(this.node.position, c.position)) == n ? n : i;
                        e = m;
                        var y = f + h;
                        r.setPreIndex(y);
                        r.pushPreIndexList(u.length - 1 - f - h);
                        if (a.index == r.getSnakeLength() - 1) {
                            var v = u.length - 1 - y - 60;
                            v > 1 && u.splice(0, v);
                        }
                        break;
                    }
                }
                this._position = e;
                this._angle = n;
            };
            e.prototype.getSpace = function (t, e, i) {
                return t.type == r.SnakeUnitType.body && e.type == r.SnakeUnitType.body ? i.getSnakeSpace().bodyBodySpace : t.type == r.SnakeUnitType.body && e.type == r.SnakeUnitType.head ? i.getSnakeSpace().headBodySpace : t.type == r.SnakeUnitType.tail && e.type == r.SnakeUnitType.body ? i.getSnakeSpace().bodyTailSpace : i.getSnakeSpace().bodyBodySpace;
            };
            return e;
        }(t("./SnakeMoveBaseComp").default);
        i.default = s;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../util/Tools": "Tools",
        "./SnakeMoveBaseComp": "SnakeMoveBaseComp"
    }],
    SnakeMoveDirComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1d4bchdGs1DR5q7Raq+jv3U", "SnakeMoveDirComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../../util/Tools"), o = t("../../manager/battle/SnakeManager"), s = function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            e.prototype.onFixedUpdate = function (t, e) {
                var i = this.snakeUnit, n = i.getMainEntity();
                if (0 != e.x || 0 != e.y) {
                    var a = o.SnakeMgr.getRotateSpeed(), s = i.getImgAngle(), c = ((s || 0) + 360) % 360, l = r.DYTools.getVecDegree(e);
                    Math.abs(l - c) >= 180 && (l += 360 * (l > c ? -1 : 1));
                    -1 == a ? c = l : Math.abs(c - l) <= a * t ? c = cc.misc.lerp(c, l, .5) : c += (cc.v2(Math.sin(cc.misc.degreesToRadians(-c)), Math.cos(cc.misc.degreesToRadians(c))).normalize().cross(e) > 0 ? 1 : -1) * a * t;
                    var h = cc.Vec3.ZERO, u = o.SnakeMgr.getJoyRat(), p = n.getTargetMoveSpeed() * u, d = this._position || this.node.position;
                    this.prePosition = this._position || this.node.position;
                    var f = cc.v2(Math.sin(cc.misc.degreesToRadians(-c)), Math.cos(cc.misc.degreesToRadians(c))).normalize(), m = (f = this._collideWall(f)).mul(p);
                    if (o.SnakeMgr.getSpeedBuff()) {
                        var g = this._collideWall(o.SnakeMgr.getSpeedBuffUnit());
                        g.equals(o.SnakeMgr.getSpeedBuffUnit()) ? m.addSelf(o.SnakeMgr.getSpeedBuff()) : m.addSelf(g.mul(o.SnakeMgr.getSpeedBuff().mag()));
                    }
                    var _ = m.mul(t);
                    h.x = _.x;
                    h.y = _.y;
                    c = c == c ? c : s;
                    d = d.add(h);
                    d = this.adjustPos(d);
                    this.speedX = (d.x - this.prePosition.x) / t;
                    this.speedY = (d.y - this.prePosition.y) / t;
                    this.speed = cc.v2(this.speedX, this.speedY).mag();
                    n.setMoveSpeed(this.speed);
                    this._position = d;
                    this._angle = c;
                    n.pushSnakePosition(this._position);
                } else o.SnakeMgr.m_settleCircle || n.setMoveSpeed(0);
            };
            return e;
        }(t("./SnakeMoveBaseComp").default);
        i.default = s;
        cc._RF.pop();
    }, {
        "../../../../util/Tools": "Tools",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./SnakeMoveBaseComp": "SnakeMoveBaseComp"
    }],
    SnakeMoveFollowComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "76a84ckIM9KGoZSubnHWcxp", "SnakeMoveFollowComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../../util/Tools"), o = t("../../manager/battle/SnakeManager"), s = function (t) {
            a(e, t);
            function e() {
                return t.call(this) || this;
            }
            e.prototype.onFixedUpdate = function (t, e) {
                var i = o.SnakeMgr.headTargetPos, n = this.snakeUnit;
                if (i) {
                    this._prePosition = cc.v3(this.node.position);
                    var a = cc.v2(this.node.position), s = n.getMainEntity().getTargetMoveSpeed(), c = cc.Vec3.ZERO, l = r.DYTools.getDisForVec(i, a);
                    if (0 == e.mag()) if (l >= 10 * t * s) {
                        var h = i.sub(cc.v2(a)).normalize();
                        h = this._collideWall(h);
                        c.x = a.x + h.x * s * t;
                        c.y = a.y + h.y * s * t;
                        this.speed = s;
                        n.getMainEntity().setMoveSpeed(s);
                        this._angle = r.DYTools.getAngle(a, i);
                    } else {
                        h = i.sub(cc.v2(a));
                        h = this._collideWall(h);
                        c.x = cc.misc.lerp(a.x, a.x + h.x, .1);
                        c.y = cc.misc.lerp(a.y, a.y + h.y, .1);
                        var u = r.DYTools.getDisForVec(c, a) / t;
                        this.speed = u;
                        n.getMainEntity().setMoveSpeed(u);
                        var p = cc.Vec2.distance(cc.Vec2.ZERO, e), d = r.DYTools.getAngle(this._prePosition, c), f = this._angle, m = d, g = Math.abs(f - m);
                        if (f < m) {
                            var _ = m - 360;
                            if ((v = Math.abs(f - _)) < g) {
                                m = _;
                                g = v;
                            }
                        } else if (f > m) {
                            _ = m + 360;
                            if ((v = Math.abs(f - _)) < g) {
                                m = _;
                                g = v;
                            }
                        }
                        if (p > 10) this._angle = m; else if (g < 10); else {
                            var y = 360;
                            g < 60 ? y = 120 * t : g < 120 ? y = 180 * t : g < 180 ? y = 360 * t : g < 360 && (y = 360);
                            f < m ? (f += y) > m && (f = m) : f > m && (f -= y) < m && (f = m);
                            this._angle = f;
                        }
                    } else if (l >= t * s) {
                        h = i.sub(cc.v2(a)).normalize();
                        h = this._collideWall(h);
                        c.x = a.x + h.x * s * t;
                        c.y = a.y + h.y * s * t;
                        this.speed = s;
                        n.getMainEntity().setMoveSpeed(s);
                        this._angle = r.DYTools.getAngle(a, i);
                    } else {
                        h = i.sub(cc.v2(a));
                        h = this._collideWall(h);
                        c.x = a.x + h.x;
                        c.y = a.y + h.y;
                        u = r.DYTools.getDisForVec(c, a) / t;
                        this.speed = u;
                        n.getMainEntity().setMoveSpeed(u);
                        p = cc.Vec2.distance(cc.Vec2.ZERO, e), d = r.DYTools.getAngle(this._prePosition, c),
                            f = this._angle, m = d, g = Math.abs(f - m);
                        if (f < m) {
                            _ = m - 360;
                            if ((v = Math.abs(f - _)) < g) {
                                m = _;
                                g = v;
                            }
                        } else if (f > m) {
                            var v;
                            _ = m + 360;
                            if ((v = Math.abs(f - _)) < g) {
                                m = _;
                                g = v;
                            }
                        }
                        if (p > 10) this._angle = m; else if (g < 10); else {
                            y = 360;
                            g < 60 ? y = 120 * t : g < 120 ? y = 180 * t : g < 180 ? y = 360 * t : g < 360 && (y = 360);
                            f < m ? (f += y) > m && (f = m) : f > m && (f -= y) < m && (f = m);
                            this._angle = f;
                        }
                    }
                    c = this.adjustPos(c);
                    this._position = c;
                    n.getMainEntity().pushSnakePosition(this._position);
                } else {
                    var b = this.adjustPos(this.node.position);
                    this._position = b;
                }
            };
            return e;
        }(t("./SnakeMoveBaseComp").default);
        i.default = s;
        cc._RF.pop();
    }, {
        "../../../../util/Tools": "Tools",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "./SnakeMoveBaseComp": "SnakeMoveBaseComp"
    }],
    SnakeMoveTargetComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1720dDZaNZLa7QRkBrG10bX", "SnakeMoveTargetComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../../../../util/Tools"), o = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e._targetPoints = [];
                e._targetVelocity = [];
                e._time = 1;
                e._interval = 0;
                e._startPoint = null;
                e._startSpeed = null;
                e._moveType = 0;
                return e;
            }
            e.prototype.setStart = function (t, e) {
                this._startPoint = t;
                this._startSpeed = e;
                this.speed = this._startSpeed.mag();
            };
            e.prototype.setTargets = function (t, e) {
                this._targetPoints = t;
                this._targetVelocity = e;
                this._angle = r.DYTools.getAngle(this.node.getPosition(), t[0]);
            };
            e.prototype.setTime = function (t) {
                this._time = t;
            };
            e.prototype.setMoveType = function (t) {
                this._moveType = t;
            };
            e.prototype.setOverCall = function (t) {
                this._overCall = t;
            };
            e.prototype.onFixedUpdate = function (t) {
                if (this._targetPoints.length <= 0) {
                    this._overCall && this._overCall();
                    this._overCall = null;
                } else switch (this._moveType) {
                    case 0:
                        this.updateVariableMotion(t);
                        break;

                    case 1:
                        this.updateUniformMotion(t);
                }
            };
            e.prototype.updateVariableMotion = function (t) {
                var e = this.snakeUnit.getMainEntity(), i = this._targetPoints[0], n = this._targetVelocity[0];
                this._prePosition = this.node.position;
                this._interval += t;
                if (this._interval < this._time) {
                    var a = i.sub(this._startPoint), o = this._time, s = this._startPoint, c = this._startSpeed, l = (3 * a.x - (2 * this._startSpeed.x + n.x) * o) / (o * o), h = (3 * a.y - (2 * this._startSpeed.y + n.y) * o) / (o * o), u = (-2 * a.x + (this._startSpeed.x + n.x) * o) / (o * o * o), p = (-2 * a.y + (this._startSpeed.y + n.y) * o) / (o * o * o), d = this._interval, f = s.x + c.x * d + l * d * d + u * d * d * d, m = s.y + c.y * d + h * d * d + p * d * d * d;
                    this._position = cc.v3(f, m, 0);
                    this._angle = r.DYTools.getAngle(this.prePosition, this._position);
                    this.speedX = (this._position.x - this.prePosition.x) / t;
                    this.speedY = (this._position.y - this.prePosition.y) / t;
                    this.speed = cc.v2(this.speedX, this.speedY).mag();
                    e.setMoveSpeed(this.speed);
                    e.pushSnakePosition(this._position);
                } else {
                    this._startPoint = this._targetPoints[0];
                    this._startSpeed = this._targetVelocity[0];
                    this._interval = 0;
                    this._targetPoints.shift();
                    this._targetVelocity.shift();
                }
            };
            e.prototype.updateUniformMotion = function (t) {
                var e = this.snakeUnit.getMainEntity(), i = this._targetPoints[0];
                this._prePosition = this.node.position;
                var n = this._startSpeed.mul(t);
                this._position = this._prePosition.add(cc.v3(n));
                if (i.sub(cc.v2(this._prePosition)).mag() <= n.mag()) {
                    this._position = cc.v3(i);
                    this._startPoint = this._targetPoints[0];
                    this._startSpeed = this._targetVelocity[0];
                    this._interval = 0;
                    this._targetPoints.shift();
                    this._targetVelocity.shift();
                }
                e.setMoveSpeed(this.speed);
                e.pushSnakePosition(this._position);
            };
            return e;
        }(t("./SnakeMoveBaseComp").default);
        i.default = o;
        cc._RF.pop();
    }, {
        "../../../../util/Tools": "Tools",
        "./SnakeMoveBaseComp": "SnakeMoveBaseComp"
    }],
    SnakeShowUI: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "ee324AhzNVPipDCa3Gw8f6C", "SnakeShowUI");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o, s = t("../../../../../../config/GameConfig"), c = t("../../../../../../config/GameConst"), l = t("../../../../../../config/GameEnum"), h = t("../../../../../../data/manager/ConfigDataManager"), u = t("../../../../../../data/storage/GameData"), p = t("../../../../../../frame/manager/FrameManager"), d = t("../../../../../../frame/ui/FrameAnim"), f = t("../../../../../../frame/ui/UIComponent"), m = t("../../../../../../util/GameFunc"), g = t("../../../../../battle/manager/battle/SnakeManager"), _ = cc._decorator, y = _.ccclass, v = _.property;
        (function (t) {
            t.bot = "bot";
            t.yuan = "yuan";
            t.light = "light";
            t.star = "star";
            t.fire = "fire";
            t.rotate = "rotate";
            t.yuan2 = "yuan2";
        })(o || (o = {}));
        var b = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.circleBottom = null;
                e.bottomLayer = null;
                e.bottomLayer1 = null;
                e.topLayer = null;
                e.circleTop = null;
                e.snakeShadowRoot = null;
                e.snakeLineSpArr = [];
                e.snakeBodySpArr = [];
                e.snakeTurretSpArr = [];
                e.snakeTurretEffectArr = [];
                e.snakeHeadSp = null;
                e.snakeTailSp = null;
                e.snakeAnim = null;
                e.bulletRoot = null;
                e._isFire = !1;
                e._isRanpage = !1;
                e._animFinishCallback = null;
                e._animTarget = null;
                e._curSnakeType = 0;
                e._fireSpeed = 0;
                e._fireSpeedRatio = 1;
                e._fireImage = [];
                e._fireEffectImg = "";
                e._fireEffectNum = 0;
                e._turretDelayTime = [];
                e._turretFireTime = [];
                e._circleNodes = [];
                e._arrPoints = [];
                e.m_color = cc.Color.RED;
                e.m_FirePos = [{
                    pos: cc.v2(15, 10),
                    scale: 5.1
                }, {
                    pos: cc.v2(65, 10),
                    scale: 3.5
                }, {
                    pos: cc.v2(-35, 10),
                    scale: 3.5
                }, {
                    pos: cc.v2(15, 65),
                    scale: 3.5
                }, {
                    pos: cc.v2(15, -5),
                    scale: 3.5
                }];
                e.m_snakeData = null;
                e._rpNodeParent = [];
                e._rpFrameAnimParent = [];
                e._ranpageParam = [];
                e._snakeUnitShadowArr = [];
                e._isShowShadow = !1;
                e._shadowOffsetX = 0;
                e._shadowOffsetY = 0;
                e.m_atlas = null;
                e.m_scale = .9;
                return e;
            }
            e.prototype.initSnake = function (t, e, i, n) {
                var a = this;
                void 0 === n && (n = !1);
                this._curSnakeType = t;
                this._isShowShadow = n;
                this.m_snakeData = g.SnakeMgr.getSnakeConfigDataForType(this._curSnakeType);
                var r = this.m_snakeData.imgSnake + "_head", o = this.m_snakeData.imgSnake + "_body", s = this.m_snakeData.imgSnake + "_line", c = this.m_snakeData.imgSnake + "_tail", d = this.m_snakeData.imgSnake + "_shadow_body", f = u.GData.getSnakeTurretLv(), _ = h.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", f);
                this._ranpageParam = h.ConfigDataMgr.getGlobalDataNumArr(l.GlobalKey.LootCrazyParam);
                m.GFunc.getSnakeTurretId(_.id), u.GData.getTurretNum();
                var y = this.m_snakeData.imgSnake + "_turret", v = this.m_scale, b = this.m_snakeData.space.headBodySpace * v, M = this.m_snakeData.space.bodyBodySpace * v, S = this.m_snakeData.space.bodyTailSpace * v;
                this.snakeShadowRoot.destroyAllChildren();
                this._snakeUnitShadowArr.splice(0);
                var k = p.FrameMgr.loadMgr.get("TP_Shadow", cc.SpriteAtlas);
                p.FrameMgr.loadMgr.loadAtlas("TP_Snake_" + t, function (t) {
                    a.m_atlas = t;
                    for (var e = 0; e < a.snakeLineSpArr.length; e++) {
                        (n = a.snakeLineSpArr[e]).spriteFrame = a.m_atlas.getSpriteFrame(s);
                        n.node.scale = a.m_scale;
                    }
                    for (e = 0; e < a.snakeBodySpArr.length; e++) {
                        (n = a.snakeBodySpArr[e]).spriteFrame = a.m_atlas.getSpriteFrame(o);
                        if (a._isShowShadow) {
                            var i = new cc.Node("snakeBodyShadow");
                            i.scale = v;
                            i.parent = a.snakeShadowRoot;
                            i.addComponent(cc.Sprite).spriteFrame = k ? k.getSpriteFrame(d) : null;
                            a._snakeUnitShadowArr.push({
                                shadowNode: i,
                                parentNode: n.node
                            });
                        }
                        n.node.y = M * (2 - e);
                        n.node.scale = a.m_scale;
                    }
                    for (e = 0; e < a.snakeTurretSpArr.length; e++) {
                        var n;
                        (n = a.snakeTurretSpArr[e]).spriteFrame = a.m_atlas.getSpriteFrame(y);
                    }
                    a.snakeHeadSp.spriteFrame = a.m_atlas.getSpriteFrame(r);
                    a.snakeHeadSp.node.y = 2 * M + b;
                    a.snakeHeadSp.node.scale = a.m_scale;
                    if (a._isShowShadow) {
                        var u = new cc.Node("snakeHeadShadow");
                        u.parent = a.snakeShadowRoot;
                        u.scale = v;
                        u.addComponent(cc.Sprite).spriteFrame = k ? k.getSpriteFrame(a.m_snakeData.imgSnake + "_shadow_head") : null;
                        a._snakeUnitShadowArr.push({
                            shadowNode: u,
                            parentNode: a.snakeHeadSp.node
                        });
                    }
                    a.snakeTailSp.spriteFrame = a.m_atlas.getSpriteFrame(c);
                    a.snakeTailSp.node.y = 2 * -M - S;
                    a.snakeTailSp.node.scale = a.m_scale;
                    if (a._isShowShadow) {
                        var p = new cc.Node("snakeTailShadow");
                        p.parent = a.snakeShadowRoot;
                        p.scale = v;
                        p.setAnchorPoint(cc.v2(a.snakeTailSp.node.anchorX, a.snakeTailSp.node.anchorY));
                        p.addComponent(cc.Sprite).spriteFrame = k ? k.getSpriteFrame(a.m_snakeData.imgSnake + "_shadow_tail") : null;
                        a._snakeUnitShadowArr.push({
                            shadowNode: p,
                            parentNode: a.snakeTailSp.node
                        });
                    }
                    a.snakeShadowRoot.active = a._isShowShadow;
                    var f = h.ConfigDataMgr.getGlobalDataNumArr(l.GlobalKey.SnakeShadowOffset);
                    a._shadowOffsetX = f[0] || 0;
                    a._shadowOffsetY = f[1] || 0;
                    a.initFireData();
                    a.initRanpageAbout();
                });
            };
            e.prototype.initRanpageAbout = function () {
                this.bottomLayer.removeAllChildren();
                this.bottomLayer1.removeAllChildren();
                this.topLayer.removeAllChildren();
                this.m_color = cc.color(255, 148, 0);
                this.initRanpageHead();
                this.initRanpageBody();
                this.initRanpageTail();
            };
            e.prototype.initRanpageHead = function () {
                this.initRanpageCommon(this.snakeHeadSp.node, l.SnakeUnitType.head);
                var t = new cc.Node("light");
                t.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("anim_snake_circle_yuan");
                t.parent = this.topLayer;
                t.color = this.m_color;
                t.active = !1;
                this._rpNodeParent.push({
                    node: t,
                    parent: this.snakeHeadSp.node,
                    type: l.SnakeUnitType.head,
                    animType: o.light
                });
                var e = new cc.Node("star");
                e.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("anim_snake_circle_star");
                e.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                e.parent = this.topLayer;
                e.active = !1;
                this._rpNodeParent.push({
                    node: e,
                    parent: this.snakeHeadSp.node,
                    type: l.SnakeUnitType.head,
                    animType: o.star
                });
                var i = cc.instantiate(c.GValue.pfFrameAnim);
                i.parent = this.topLayer;
                var n = i.getComponent(d.default);
                n.slowAble = !1;
                n.init(this.m_atlas, "anim_snake_circle_fire_", 7, 2 * s.GConfig.ActionInterval);
                n.setDstBlendFactorMode1();
                this._rpFrameAnimParent.push({
                    frameAnim: n,
                    parent: this.snakeHeadSp.node,
                    type: l.SnakeUnitType.head,
                    animType: o.fire
                });
            };
            e.prototype.initRanpageBody = function () {
                for (var t = 0; t < this.snakeBodySpArr.length; t++) {
                    var e = this.snakeBodySpArr[t].node;
                    this.initRanpageCommon(e, l.SnakeUnitType.body);
                    var i = new cc.Node("rotate");
                    i.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("anim_snake_circle_rotate");
                    i.parent = this.topLayer;
                    i.active = !1;
                    i.color = this.m_color;
                    this._rpNodeParent.push({
                        node: i,
                        parent: e,
                        type: l.SnakeUnitType.body,
                        animType: o.rotate
                    });
                    var n = new cc.Node("yuan2");
                    n.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("anim_snake_circle_light");
                    n.parent = this.topLayer;
                    n.active = !1;
                    n.color = this.m_color;
                    this._rpNodeParent.push({
                        node: n,
                        parent: e,
                        type: l.SnakeUnitType.body,
                        animType: o.yuan2
                    });
                    var a = new cc.Node("star");
                    a.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("anim_snake_circle_star");
                    a.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                    a.parent = this.topLayer;
                    a.active = !1;
                    this._rpNodeParent.push({
                        node: a,
                        parent: e,
                        type: l.SnakeUnitType.body,
                        animType: o.star
                    });
                }
            };
            e.prototype.initRanpageTail = function () {
                this.initRanpageCommon(this.snakeTailSp.node, l.SnakeUnitType.tail);
                var t = new cc.Node("rotate");
                t.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("anim_snake_circle_rotate");
                t.parent = this.topLayer;
                t.active = !1;
                t.color = this.m_color;
                this._rpNodeParent.push({
                    node: t,
                    parent: this.snakeTailSp.node,
                    type: l.SnakeUnitType.tail,
                    animType: o.rotate
                });
                var e = new cc.Node("yuan2");
                e.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("anim_snake_circle_light");
                e.parent = this.topLayer;
                e.active = !1;
                e.color = this.m_color;
                this._rpNodeParent.push({
                    node: e,
                    parent: this.snakeTailSp.node,
                    type: l.SnakeUnitType.tail,
                    animType: o.yuan2
                });
                var i = new cc.Node("star");
                i.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("anim_snake_circle_star");
                i.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                i.parent = this.topLayer;
                i.active = !1;
                this._rpNodeParent.push({
                    node: i,
                    parent: this.snakeTailSp.node,
                    type: l.SnakeUnitType.tail,
                    animType: o.star
                });
            };
            e.prototype.initRanpageCommon = function (t, e) {
                var i = cc.instantiate(c.GValue.pfFrameAnim);
                i.parent = this.bottomLayer;
                i.setSiblingIndex(0);
                var n = i.getComponent(d.default);
                n.init(this.m_atlas, "anim_snake_circle_bottom_", 4, 2 * s.GConfig.ActionInterval);
                n.slowAble = !1;
                n.color = this.m_color;
                n.node.scale = this.m_scale;
                e === l.SnakeUnitType.head && (n.node.scale = .8 * this.m_scale);
                this._rpFrameAnimParent.push({
                    frameAnim: n,
                    parent: t,
                    type: e,
                    animType: o.bot
                });
                var a = new cc.Node("yuan");
                a.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("anim_snake_circle_light");
                a.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                a.parent = this.bottomLayer1;
                a.active = !1;
                a.color = this.m_color;
                this._rpNodeParent.push({
                    node: a,
                    parent: t,
                    type: e,
                    animType: o.yuan
                });
            };
            e.prototype.initFireData = function () {
                var t = this.m_snakeData.bulletId;
                this._fireSpeed = .3;
                var e = h.ConfigDataMgr.getData("ConfigBulletData", t);
                this._fireImage = e.image;
                this._fireEffectImg = e.effectImg;
                this._fireEffectNum = e.effectImgCount;
            };
            e.prototype.setIsFire = function (t) {
                if (t) this.refreshTurretDelayTime(); else {
                    this._turretDelayTime = [];
                    this._turretFireTime = [];
                }
                this._isFire = t;
            };
            e.prototype.refreshTurretDelayTime = function () {
                for (var t = h.ConfigDataMgr.getGlobalDataNumArr(l.GlobalKey.SnakeTurretDelay), e = t[0], i = t[1], n = 0; n < this.snakeTurretSpArr.length; n++) {
                    this._turretDelayTime.push(this.getRandomRange(e, i));
                    this._turretFireTime.push({
                        delayTime: 0,
                        fireTime: 0
                    });
                }
            };
            e.prototype.getRandomRange = function (t, e) {
                var i = Math.random() * (e - t);
                return Number(i.toFixed(1));
            };
            e.prototype.setIsRanpage = function (t) {
                if (t) {
                    this._fireSpeedRatio = .4;
                    this.playRanpage();
                } else {
                    this._fireSpeedRatio = 1;
                    this.stopRanpage();
                }
                this._isRanpage = t;
            };
            e.prototype.getCurSnakeType = function () {
                return this._curSnakeType;
            };
            e.prototype.isShowTurret = function () {
                for (var t = 0; t < this.snakeTurretSpArr.length; t++) this.snakeTurretSpArr[t].node.active = !1;
            };
            e.prototype.setAnimEndCallback = function (t, e) {
                var i = this;
                this._animFinishCallback = function () {
                    t && t();
                    i.snakeAnim.off(cc.Animation.EventType.FINISHED, i._animFinishCallback, i._animTarget);
                };
                this._animTarget = e;
                this.snakeAnim.on(cc.Animation.EventType.FINISHED, this._animFinishCallback, this._animTarget);
            };
            e.prototype.playSnakeAnim = function (t) {
                this.snakeAnim.play(t);
            };
            e.prototype.playBattleAnim = function () {
                this.stopSnakeAnim();
                var t = s.GConfig.ActionInterval;
                cc.tween(this.snakeHeadSp.node).to(3 * t, {
                    x: 19,
                    angle: 0
                }).start();
                cc.tween(this.snakeTailSp.node).to(3 * t, {
                    x: 19,
                    angle: 0
                }).start();
                for (var e = 0; e < this.snakeBodySpArr.length; e++) cc.tween(this.snakeBodySpArr[e].node).to(3 * t, {
                    x: 19,
                    angle: 0
                }).start();
            };
            e.prototype.stopSnakeAnim = function () {
                this.snakeAnim.off(cc.Animation.EventType.FINISHED, this._animFinishCallback, this._animTarget);
                this._animFinishCallback = null;
                this._animTarget = null;
                this.snakeAnim.clear();
                this.bulletRoot.removeAllChildren();
                this.circleTop.removeAllChildren();
                this.circleBottom.removeAllChildren();
                this.snakeAnim.stop();
            };
            e.prototype.update = function (t) {
                this.updateLine();
                this._isShowShadow && this.updateShadow();
                this._isFire && this.playFireAnim(t);
                if (this._isRanpage) {
                    this.updateCompArr();
                    this.updateNodeArr();
                }
            };
            e.prototype.updateLine = function () {
                for (var t = this.snakeLineSpArr.length, e = 0; e < t; e++) {
                    var i = this.snakeLineSpArr[e].node, n = 0 === e ? this.snakeHeadSp.node : this.snakeBodySpArr[e - 1].node, a = e === t - 1 ? this.snakeTailSp.node : this.snakeBodySpArr[e].node;
                    if (n && a) {
                        var r = a.position.sub(n.position);
                        if (0 !== r.x || 0 !== r.y) {
                            var o = cc.v2(0, -1).signAngle(cc.v2(r.x, r.y));
                            i.position = n.position;
                            i.angle = cc.misc.radiansToDegrees(o);
                        }
                    }
                }
            };
            e.prototype.updateShadow = function () {
                for (var t = 0; t < this._snakeUnitShadowArr.length; t++) {
                    var e = this._snakeUnitShadowArr[t], i = e.parentNode, n = e.shadowNode;
                    n.angle = i.angle;
                    n.position = cc.v3(i.position.add(cc.v3(this._shadowOffsetX, this._shadowOffsetY)));
                }
            };
            e.prototype.playFireAnim = function (t) {
                for (var e = this, i = function (i) {
                    var a = n._turretDelayTime[i], r = n._turretFireTime[i];
                    r.delayTime += t;
                    r.fireTime += t;
                    if (r.delayTime >= a && r.fireTime >= n._fireSpeed * n._fireSpeedRatio) {
                        n._turretFireTime[i].fireTime = 0;
                        (function () {
                            var t = e.snakeBodySpArr[i].node;
                            e.addEffectNode(i);
                            var n = e.addBulletNode(t.getPosition(), t.angle);
                            n.scale = t.scale;
                            n.opacity = 0;
                            var a = 4 * s.GConfig.ActionInterval, r = cc.fadeTo(a, 255), o = 20 * s.GConfig.ActionInterval, c = e.getMag(t.angle, 1e3), l = cc.moveTo(o, c), h = cc.spawn(r, l), u = cc.callFunc(function () {
                                n.destroy();
                            }), p = cc.sequence(h, u);
                            n.runAction(p);
                        })();
                        cc.tween(n.snakeTurretSpArr[i].node).to(2 * s.GConfig.ActionInterval, {
                            y: -1.25
                        }).to(3 * s.GConfig.ActionInterval, {
                            y: 35.7
                        }).to(2 * s.GConfig.ActionInterval, {
                            y: 20
                        }).start();
                    }
                }, n = this, a = 0; a < this.snakeTurretSpArr.length; a++) i(a);
            };
            e.prototype.addEffectNode = function (t) {
                this.snakeTurretEffectArr[t].y = 75;
                var e = cc.instantiate(c.GValue.pfFrameAnim);
                e.parent = this.snakeTurretEffectArr[t];
                var i = e.getComponent(d.default);
                i.init(this.m_atlas, this._fireEffectImg, this._fireEffectNum, s.GConfig.ActionInterval, null, function () {
                    e.destroy();
                });
                i.slowAble = !1;
                i.play(1);
            };
            e.prototype.playRanpage = function () {
                for (var t = s.GConfig.ActionInterval, e = 0; e < this._rpFrameAnimParent.length; e++) {
                    var i = this._rpFrameAnimParent[e], n = i.frameAnim, a = i.type, r = i.animType;
                    switch (a) {
                        case l.SnakeUnitType.head:
                            switch (r) {
                                case o.bot:
                                    n.isPlaying() || n.play();
                                    break;

                                case o.fire:
                                    if (!n.isPlaying()) {
                                        n.node.active = !0;
                                        n.play(1);
                                        cc.tween(n.node).to(0, {
                                            scale: 1.6,
                                            opacity: 255
                                        }).to(5 * t, {
                                            scaleX: 3.4,
                                            scaleY: 3.55,
                                            opacity: 229
                                        }).to(8 * t, {
                                            scaleX: 3.75,
                                            scaleY: 4.75,
                                            opacity: 0
                                        }).start();
                                    }
                            }
                            break;

                        case l.SnakeUnitType.body:
                            switch (r) {
                                case o.bot:
                                    n.isPlaying() || n.play();
                            }

                        case l.SnakeUnitType.tail:
                            switch (r) {
                                case o.bot:
                                    n.isPlaying() || n.play();
                            }
                    }
                }
                for (var c = function (e) {
                    var i = h._rpNodeParent[e], n = i.node, a = i.type, r = i.animType;
                    switch (a) {
                        case l.SnakeUnitType.head:
                            switch (r) {
                                case o.yuan:
                                    n.active = !0;
                                    break;

                                case o.star:
                                    n.active = !0;
                                    cc.tween(n).to(0, {
                                        scale: 2,
                                        angle: 0,
                                        opacity: 255
                                    }).to(12 * t, {
                                        scale: 3.48,
                                        angle: 100,
                                        opacity: 0
                                    }).call(function () {
                                        n.active = !1;
                                    }).start();
                                    break;

                                case o.light:
                                    n.active = !0;
                                    cc.tween(n).to(0, {
                                        scale: 1.4,
                                        opacity: 255
                                    }).to(5 * t, {
                                        scale: 3.88,
                                        opacity: 0
                                    }).call(function () {
                                        n.active = !1;
                                    }).start();
                            }
                            break;

                        case l.SnakeUnitType.body:
                            switch (r) {
                                case o.rotate:
                                    n.active = !0;
                                    cc.tween(n).to(3 * t, {
                                        scale: 2.15,
                                        angle: -43,
                                        opacity: 204
                                    }).to(6 * t, {
                                        scale: 3.3,
                                        angle: -87,
                                        opacity: 0
                                    }).call(function () {
                                        n.active = !1;
                                    }).start();
                                    break;

                                case o.yuan2:
                                    n.active = !0;
                                    cc.tween(n).delay(2 * t).call(function () {
                                        n.active = !1;
                                    }).start();
                                    break;

                                case o.star:
                                    n.active = !0;
                                    cc.tween(n).to(0, {
                                        scale: .88,
                                        angle: 0,
                                        opacity: 255
                                    }).to(12 * t, {
                                        scale: 1.46,
                                        angle: 100,
                                        opacity: 0
                                    }).call(function () {
                                        n.active = !1;
                                    }).start();
                                    break;

                                case o.yuan:
                                    n.active = !0;
                            }
                            break;

                        case l.SnakeUnitType.tail:
                            switch (r) {
                                case o.yuan:
                                    n.active = !0;
                            }
                    }
                }, h = this, u = 0; u < this._rpNodeParent.length; u++) c(u);
            };
            e.prototype.stopRanpage = function () {
                for (var t = 0; t < this._rpFrameAnimParent.length; t++) {
                    var e = this._rpFrameAnimParent[t], i = e.frameAnim;
                    i && i.stop();
                    e.animType !== o.bot && this._stopAction(i.node);
                }
                for (t = 0; t < this._rpNodeParent.length; t++) {
                    var n = this._rpNodeParent[t].node;
                    this._stopAction(n);
                }
            };
            e.prototype.addBulletNode = function (t, e) {
                var i = new cc.Node();
                i.parent = this.bulletRoot;
                i.angle = e;
                i.setPosition(t);
                i.setAnchorPoint(cc.v2(.5, 1));
                var n = i.addComponent(cc.Layout);
                n.type = cc.Layout.Type.VERTICAL;
                n.resizeMode = cc.Layout.ResizeMode.CONTAINER;
                n.verticalDirection = cc.Layout.VerticalDirection.TOP_TO_BOTTOM;
                for (var a = 0; a < this._fireImage.length; a++) {
                    var r = this._fireImage[a], o = new cc.Node();
                    o.parent = i;
                    o.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame(r);
                }
                return i;
            };
            e.prototype.getMag = function (t, e) {
                var i = Math.sin(Math.PI / 180 * -t) * e, n = Math.cos(Math.PI / 180 * -t) * e;
                return cc.v2(i, n);
            };
            e.prototype._stopAction = function (t) {
                if (t) {
                    t.stopAllActions();
                    t.active = !1;
                }
            };
            e.prototype.updateCompArr = function () {
                for (var t = 0; t < this._rpFrameAnimParent.length; t++) {
                    var e = this._rpFrameAnimParent[t];
                    this.updateComp(e.frameAnim, e.parent);
                }
            };
            e.prototype.updateNodeArr = function () {
                for (var t = 0; t < this._rpNodeParent.length; t++) {
                    var e = this._rpNodeParent[t];
                    this.updateNode(e.node, e.parent);
                }
            };
            e.prototype.updateComp = function (t, e) {
                t && this.updateNode(t.node, e);
            };
            e.prototype.updateNode = function (t, e) {
                if (t) {
                    t.angle = e.angle;
                    t.position = e.position;
                }
            };
            e.prototype.onCircle = function () {
                var t = this;
                this._circleNodes = [];
                this._circleNodes.push(this.snakeHeadSp.node);
                for (var e = function (e) {
                    var n = i.snakeBodySpArr[e].node;
                    setTimeout(function () {
                        var e = t.createSnakeShine();
                        n.addChild(e);
                    }, e * s.GConfig.ActionInterval);
                    i._circleNodes.push(n);
                }, i = this, n = 0; n < this.snakeBodySpArr.length; n++) e(n);
                this._circleNodes.push(this.snakeTailSp.node);
                this._arrPoints = [];
                for (n = 0; n < this._circleNodes.length; n++) this._arrPoints.push(this._circleNodes[n].getPosition());
                var a = this._arrPoints.length;
                for (n = 0; n < a; n++) {
                    var r = this._arrPoints[n];
                    this.createCircleTopEffect(r);
                    this.circleBottom.active = !0;
                    this.circleBottom.opacity = 255;
                }
                for (n = 0; n < this.m_FirePos.length; n++) {
                    this.circleTop.opacity = 255;
                    this.createCircleFireTopEffect(this.m_FirePos[n].pos, this.m_FirePos[n].scale);
                }
            };
            e.prototype.isPointInAllRegion = function (t) {
                var e = this.circleBottom.x - this.circleBottom.width / 2, i = this.circleBottom.y - this.circleBottom.height / 2;
                return new cc.Rect(e, i, this.circleBottom.width, this.circleBottom.height).contains(t);
            };
            e.prototype.createCircleTopEffect = function (t) {
                var e = cc.instantiate(c.GValue.pfFrameAnim);
                e.scale = 1.4;
                var i = e.getComponent(d.default);
                i.node.setPosition(t);
                this.circleTop.addChild(e, 100);
                i.init(this.m_atlas, "anim_effect_regiontop_", 1, 1 * s.GConfig.ActionInterval);
                i.slowAble = !1;
                i.play(0);
            };
            e.prototype.createCircleFireTopEffect = function (t, e) {
                var i = cc.instantiate(c.GValue.pfFrameAnim);
                i.scale = e;
                var n = i.getComponent(d.default);
                i.setPosition(t);
                this.circleTop.addChild(i, 101);
                n.init(this.m_atlas, "anim_fire_", 16, s.GConfig.ActionInterval);
                n.slowAble = !1;
                n.play(0);
                n.setDstBlendFactorMode1();
                i.opacity = 80;
            };
            e.prototype.removeEffect = function () {
                var t = this, e = s.GConfig.ActionInterval;
                cc.tween(this.circleTop).to(12 * e, {
                    opacity: 0
                }).call(function () {
                    t.circleTop.removeAllChildren();
                }).start();
                cc.tween(this.circleBottom).to(12 * e, {
                    opacity: 0
                }).call(function () {
                    t.circleBottom.removeAllChildren();
                }).start();
            };
            e.prototype.createSnakeShine = function () {
                var t = new cc.Node(), e = t.addComponent(sp.Skeleton);
                p.FrameMgr.loadMgr.loadSpine("spine_snake_effect_bodyshine", function (i) {
                    e.skeletonData = i;
                    e.premultipliedAlpha = !1;
                    e.setAnimation(0, "show", !1);
                    e.setCompleteListener(function (e) {
                        "show" == (e.animation ? e.animation.name : "") && t.destroy();
                    });
                });
                return t;
            };
            r([v({
                type: cc.Node,
                displayName: "围圈特效bottom节点"
            })], e.prototype, "circleBottom", void 0);
            r([v({
                type: cc.Node,
                displayName: "bottom层级节点"
            })], e.prototype, "bottomLayer", void 0);
            r([v({
                type: cc.Node,
                displayName: "bottom1层级节点"
            })], e.prototype, "bottomLayer1", void 0);
            r([v({
                type: cc.Node,
                displayName: "top层级节点"
            })], e.prototype, "topLayer", void 0);
            r([v({
                type: cc.Node,
                displayName: "围圈特效top节点"
            })], e.prototype, "circleTop", void 0);
            r([v({
                type: cc.Node,
                displayName: "影子根节点"
            })], e.prototype, "snakeShadowRoot", void 0);
            r([v({
                type: cc.Sprite,
                displayName: "蛇连接线精灵"
            })], e.prototype, "snakeLineSpArr", void 0);
            r([v({
                type: cc.Sprite,
                displayName: "蛇节精灵"
            })], e.prototype, "snakeBodySpArr", void 0);
            r([v({
                type: cc.Sprite,
                displayName: "蛇炮塔精灵"
            })], e.prototype, "snakeTurretSpArr", void 0);
            r([v({
                type: cc.Node,
                displayName: "蛇发炮特效父节点"
            })], e.prototype, "snakeTurretEffectArr", void 0);
            r([v({
                type: cc.Sprite,
                displayName: "蛇头精灵"
            })], e.prototype, "snakeHeadSp", void 0);
            r([v({
                type: cc.Sprite,
                displayName: "蛇尾精灵"
            })], e.prototype, "snakeTailSp", void 0);
            r([v({
                type: cc.Animation,
                displayName: "蛇动画"
            })], e.prototype, "snakeAnim", void 0);
            r([v({
                type: cc.Node,
                displayName: "子弹根节点"
            })], e.prototype, "bulletRoot", void 0);
            return r([y], e);
        }(f.default);
        i.default = b;
        cc._RF.pop();
    }, {
        "../../../../../../config/GameConfig": "GameConfig",
        "../../../../../../config/GameConst": "GameConst",
        "../../../../../../config/GameEnum": "GameEnum",
        "../../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../../data/storage/GameData": "GameData",
        "../../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../../util/GameFunc": "GameFunc",
        "../../../../../battle/manager/battle/SnakeManager": "SnakeManager"
    }],
    SnakeSkillBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "48474Yj2thBQalmK9UdkHGC", "SnakeSkillBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.SkillBase = void 0;
        var o = t("../../../../config/GameEnum"), s = t("../../../../frame/manager/FrameManager"), c = t("../../../../util/Tools"), l = t("../../manager/battle/BossManager"), h = t("../../manager/battle/EnemyManager"), u = t("../../manager/battle/PropManager"), p = t("../../manager/battle/SnakeManager"), d = cc._decorator, f = d.ccclass, m = (d.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._creator = null;
                    e._firer = null;
                    e._skillPara = [];
                    e._skillCD = 0;
                    e._skillAtk = 0;
                    e.m_skillCritProb = 0;
                    e.m_skillCritAtkRatio = 1;
                    e._offsetX = 0;
                    e._offsetY = 0;
                    e.m_cdtime = 0;
                    e._curAtkDisTime = 0;
                    e._target = null;
                    e.m_attackAble = !1;
                    e.m_group = o.ColliderGroup.PlayerSkill;
                    return e;
                }
                i = e;
                e.prototype.create = function () {
                    this.node.active = !0;
                };
                e.prototype.init = function () {
                    var t = p.SnakeMgr.getSnake().getSnakeData();
                    if (t) {
                        this._skillCD = t.skillCD;
                        this._skillAtk = t.skillAtk;
                        this.m_skillCritProb = t.skillCritProb;
                        this.m_skillCritAtkRatio = t.skillCritAtkRatio;
                        this.initParam(t.skillParam);
                    }
                    this.setSkillCD(1);
                    this._curAtkDisTime = 0;
                };
                e.prototype.setSkillCD = function (t) {
                    this.m_cdtime = t;
                };
                e.prototype.updateSkillCD = function (t) {
                    if (this.m_cdtime > 0) {
                        this.m_cdtime -= t;
                        return this.m_cdtime <= 0;
                    }
                    return !0;
                };
                e.prototype.setAtkDisTime = function (t) {
                    this._curAtkDisTime = t;
                };
                e.prototype.updateAtkDisTime = function (t) {
                    if (this._curAtkDisTime > 0) {
                        this._curAtkDisTime -= t;
                        return this._curAtkDisTime <= 0;
                    }
                    return !0;
                };
                e.prototype.findEnemyInRadius = function (t, e, i) {
                    var n = -1, a = 99999;
                    this._target = null;
                    i || (i = (i = (i = h.EnemyMgr.enemys).concat(l.BossMgr.getBosses())).concat(u.PropMgr.atkAbleProps));
                    for (var r = 0; r < i.length; r++) {
                        var o = i[r];
                        if (o.hurtAble) if (o.getHurtAbleEntity) for (var s = o.getHurtAbleEntity(), c = 0; c < s.length; c++) {
                            var p = s[c];
                            (d = p.node.getPosition().sub(t.node.getPosition())).x = Math.abs(d.x);
                            d.y = Math.abs(d.y);
                            if (p.radius) {
                                d.x -= p.radius;
                                d.y -= p.radius;
                            }
                            if (d.x <= e && d.y <= e && (f = Math.sqrt(d.x * d.x + d.y * d.y)) <= e && f < a) {
                                a = f;
                                n = c;
                                this._target = p;
                            }
                        } else {
                            var d;
                            (d = o.node.getPosition().sub(t.node.getPosition())).x = Math.abs(d.x);
                            d.y = Math.abs(d.y);
                            if (o.radius) {
                                d.x -= o.radius;
                                d.y -= o.radius;
                            }
                            if (d.x <= e && d.y <= e) {
                                var f;
                                if ((f = Math.sqrt(d.x * d.x + d.y * d.y)) <= e && f < a) {
                                    a = f;
                                    n = r;
                                    this._target = o;
                                }
                            }
                        }
                    }
                    if (!this._target) return !1;
                    this._target = i[n];
                    return !0;
                };
                e.prototype.onMagicFire = function () { };
                e.prototype.updateLogic = function () { };
                e.prototype.onSkillStart = function () {
                    s.FrameMgr.noticeMgr.emit(o.EventTypeEnum.SnakeBuffStart, {
                        type: o.SnakeBuffType.SkillAtkAdd,
                        data: [p.SnakeMgr.getSnake().getSnakeData().skillAddNormalAtk]
                    });
                };
                e.prototype.getAttack = function (t) {
                    var e = t || this._skillAtk;
                    this.m_skillCritProb > 0 && c.DYTools.random_int(0, 99) < this.m_skillCritProb && (e *= this.m_skillCritAtkRatio);
                    return e;
                };
                e.prototype.initParam = function (t) {
                    this._skillPara = t;
                };
                e.prototype.playSkill = function () {
                    return 0;
                };
                e.prototype.updateUI = function () { };
                e.prototype.release = function () { };
                var i;
                e.instance = new i();
                return r([f], e);
            }(cc.Component));
        i.default = m;
        i.SkillBase = m.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../util/Tools": "Tools",
        "../../manager/battle/BossManager": "BossManager",
        "../../manager/battle/EnemyManager": "EnemyManager",
        "../../manager/battle/PropManager": "PropManager",
        "../../manager/battle/SnakeManager": "SnakeManager"
    }],
    SnakeSkillEvent: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c7c8ckFz+RIBpGY9CKB6QZK", "SnakeSkillEvent");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../../data/manager/ConfigDataManager"), s = t("../../../../../../frame/manager/FrameManager"), c = cc._decorator, l = c.ccclass, h = c.property, u = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.anim = null;
                e.bodySpr = [];
                e.lineSpr = [];
                e.tailSpr = null;
                e.headSpr = null;
                e.m_snakeId = 0;
                e.m_popup = null;
                e.m_uiFinish = !1;
                return e;
            }
            e.prototype.init = function (t, e) {
                var i = this;
                this.m_snakeId = e;
                this.m_popup = t;
                this.refreshSnake();
                this.schedule(function () {
                    i.refreshSnake();
                }, .5);
                this.anim.on("lastframe", this.onAnimStart.bind(this), this);
            };
            e.prototype.refreshSnake = function () {
                if (!this.m_uiFinish) {
                    var t = o.ConfigDataMgr.getData("ConfigSnakeData", this.m_snakeId);
                    if (t) {
                        var e = s.FrameMgr.loadMgr.get("TP_Snake_" + t.type, cc.SpriteAtlas);
                        if (e) {
                            for (var i = t.imgSnake + "_head", n = t.imgSnake + "_body", a = t.imgSnake + "_line", r = t.imgSnake + "_tail", c = 0, l = this.bodySpr; c < l.length; c++) l[c].spriteFrame = e.getSpriteFrame(n);
                            for (var h = 0, u = this.lineSpr; h < u.length; h++) u[h].spriteFrame = e.getSpriteFrame(a);
                            this.headSpr.spriteFrame = e.getSpriteFrame(i);
                            this.tailSpr.spriteFrame = e.getSpriteFrame(r);
                        }
                        this.m_uiFinish = !0;
                        this.unscheduleAllCallbacks();
                    }
                }
            };
            e.prototype.onAnimStart = function () {
                this.m_popup && this.m_popup.onSkillStart();
            };
            e.prototype.onSkill = function () {
                this.m_popup && this.m_popup.onSkill();
            };
            r([h(cc.Animation)], e.prototype, "anim", void 0);
            r([h(cc.Sprite)], e.prototype, "bodySpr", void 0);
            r([h(cc.Sprite)], e.prototype, "lineSpr", void 0);
            r([h(cc.Sprite)], e.prototype, "tailSpr", void 0);
            r([h(cc.Sprite)], e.prototype, "headSpr", void 0);
            return r([l], e);
        }(cc.Component);
        i.default = u;
        cc._RF.pop();
    }, {
        "../../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../../frame/manager/FrameManager": "FrameManager"
    }],
    SnakeSkillFireBall: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "100443sEkZPE6r25rTW8zW4", "SnakeSkillFireBall");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../util/Tools"), s = t("../../../manager/battle/BossManager"), c = t("../../../manager/battle/EnemyManager"), l = t("../../../manager/battle/EntityManager"), h = t("../../../manager/battle/PropManager"), u = t("../../../manager/battle/SnakeManager"), p = t("../SnakeSkillBase"), d = t("../../../../../frame/manager/FrameManager"), f = t("../../../../../frame/ui/FrameAnim"), m = t("../../../../../config/GameConst"), g = t("../../../../../config/GameConfig"), _ = cc._decorator, y = _.ccclass, v = (_.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._snakeHead = null;
                    e._fireBallParent = null;
                    e._fireBallTarget = [];
                    e._fireBallList = [];
                    e._fireBallCount = 0;
                    e._angleSpeed = 0;
                    e._fireBallDisTime = 0;
                    e._fireBallHurtDisTime = 0;
                    e._burnTime = 0;
                    e._burnAtkFactor = 0;
                    e._burnDisTime = 0;
                    e._lastTime = 0;
                    e._playNum = 1;
                    e._curAngle = 0;
                    e._collideAtk = 0;
                    e._burnAtk = 0;
                    e._atlas = null;
                    e.spineFireballName = "spine_snake_skill_fireball";
                    return e;
                }
                e.prototype.create = function () {
                    this.node.active = !0;
                };
                e.prototype.init = function () {
                    t.prototype.init.call(this);
                    this.m_attackAble = !0;
                    d.FrameMgr.loadMgr.loadSpine(this.spineFireballName);
                };
                e.prototype.updateLogic = function (t) {
                    this.updateFireBalls(t);
                    this.m_attackAble && this.updateSkillCD(t) && this.onSkillStart();
                };
                e.prototype.endFireBall = function () {
                    for (var t = 0; t < this._fireBallList.length; t++) {
                        var e = this._fireBallList[t].getComponent(sp.Skeleton);
                        e && e.setAnimation(0, "hide", !1);
                    }
                    this._fireBallList = [];
                };
                e.prototype.update = function () {
                    u.SnakeMgr.funcAble || this.endFireBall();
                };
                e.prototype.updateFireBalls = function (t) {
                    if (this._fireBallParent && this._snakeHead) {
                        this._fireBallParent.setPosition(this._snakeHead.getPosition());
                        this._curAngle += this._angleSpeed * t;
                        this._fireBallParent.angle = this._curAngle;
                    }
                    for (var e = 0; e < this._fireBallList.length; e++) {
                        var i = this._fireBallList[e].getComponent(sp.Skeleton);
                        if (i) {
                            var n = i.findBone("huo");
                            if (n) {
                                var a = n.worldX + this.node.x, r = n.worldY + this.node.y, o = i.node.getChildByName("fire");
                                if (o) {
                                    o.setPosition(cc.v2(a, r));
                                    if (this._snakeHead) {
                                        var s = i.node.parent.angle + this._fireBallParent.angle, c = this._snakeHead.getPosition(), l = this._snakeHead.parent.convertToNodeSpaceAR(o.convertToWorldSpaceAR(cc.Vec2.ZERO));
                                        this.attackEnemy(c, l, s - 90, this._collideAtk, !1);
                                    }
                                }
                            }
                        }
                    }
                    if (!(this._lastTime <= 0)) {
                        this._lastTime -= t;
                        this._lastTime <= 0 && this.endFireBall();
                    }
                };
                e.prototype.getEnemyList = function () {
                    var t = c.EnemyMgr.enemys;
                    return (t = t.concat(s.BossMgr.getBosses())).concat(h.PropMgr.atkAbleProps);
                };
                e.prototype.attackEnemy = function (t, e, i, n) {
                    var a = cc.Vec2.ZERO;
                    a.x = .5 * (t.x + e.x);
                    a.y = .5 * (t.y + e.y);
                    for (var r = cc.size(100, cc.Vec2.distance(t, e)), s = this.getEnemyList(), c = 0; c < s.length; c++) {
                        var l = s[c];
                        if (l.hurtAble) if (l.getHurtAbleEntity) for (var h = l.getHurtAbleEntity(), u = 0; u < h.length; u++) {
                            var p = (f = h[u]).node.getPosition(), d = 0;
                            f.radius && (d = f.radius);
                            o.DYTools.checkCircleRotateRect(p, d, a, r, i) && f.checkBurnInstantHurtDis && f.checkBurnInstantHurtDis(this._fireBallHurtDisTime) && f.hurt && f.hurt(n, !1, !0);
                        } else {
                            var f;
                            p = (f = l).node.getPosition(), d = 0;
                            f.radius && (d = f.radius);
                            o.DYTools.checkCircleRotateRect(p, d, a, r, i) && l.setBurn && l.setBurn(!0, n, this._fireBallHurtDisTime, this._burnAtk, this._burnTime, this._burnDisTime, i);
                        }
                    }
                };
                e.prototype.onSkillStart = function () {
                    t.prototype.onSkillStart.call(this);
                    this.createFireBalls();
                    this.setSkillCD(this._skillCD);
                };
                e.prototype.createFireBalls = function (t, e, i, n) {
                    var a = this;
                    void 0 === t && (t = !0);
                    t && d.FrameMgr.audioMgr.playEffect("skill_103");
                    this._snakeHead = e || u.SnakeMgr.getSnakeHead().node;
                    this._atlas = i || u.SnakeMgr.snakeAtlas;
                    if (!(this._skillPara.length < 7)) {
                        this._fireBallCount = this._skillPara[0];
                        this._angleSpeed = this._skillPara[1];
                        this._fireBallHurtDisTime = this._skillPara[2];
                        this._burnTime = this._skillPara[3];
                        this._burnAtkFactor = this._skillPara[4];
                        this._burnDisTime = this._skillPara[5];
                        this._lastTime = this._skillPara[6];
                        if (!(this._fireBallCount <= 0)) {
                            if (this._fireBallParent) {
                                this._fireBallParent.destroy();
                                this._fireBallParent = null;
                            }
                            this._fireBallParent = new cc.Node();
                            this._fireBallParent.parent = n ? this._snakeHead.parent : l.EntityMgr.getPlayerBulletLayer();
                            this._fireBallParent.setPosition(this._snakeHead.getPosition());
                            this._curAngle = 0;
                            this._fireBallParent.angle = this._curAngle;
                            this._collideAtk = this.getAttack();
                            this._burnAtk = this._collideAtk * this._burnAtkFactor;
                            this._fireBallTarget = [];
                            this._fireBallList = [];
                            for (var r = 360 / this._fireBallCount, o = function (t) {
                                var e = new cc.Node();
                                e.setPosition(cc.Vec2.ZERO);
                                e.parent = s._fireBallParent;
                                e.angle = r * t;
                                s._fireBallTarget.push(e);
                                var i = new cc.Node();
                                i.setPosition(0, 0);
                                e.addChild(i);
                                var n = i.addComponent(sp.Skeleton);
                                n.skeletonData = d.FrameMgr.loadMgr.get(s.spineFireballName, sp.SkeletonData);
                                n.premultipliedAlpha = !1;
                                n.setAnimation(0, "show", !1);
                                n.setCompleteListener(function (t) {
                                    switch (t.animation ? t.animation.name : "") {
                                        case "show":
                                            n.setAnimation(0, "idle", !0);
                                            break;

                                        case "hide":
                                            a.scheduleOnce(function () {
                                                i && i.destroy();
                                            });
                                    }
                                });
                                s._fireBallList.push(i);
                                new cc.Node("fire").parent = i;
                            }, s = this, c = 0; c < this._fireBallCount; c++) o(c);
                            var h = cc.instantiate(m.GValue.pfFrameAnim), p = h.getComponent(f.default);
                            h.parent = this._snakeHead;
                            p.init(this._atlas, "SnakeSkillStart_", 6, 2 * g.GConfig.ActionInterval);
                            p.slowAble = !1;
                            p.setDstBlendFactorMode1();
                            p.setStopCall(function () {
                                p.node.destroy();
                            });
                            p.play(1);
                        }
                    }
                };
                e.prototype.playSkill = function (t) {
                    var e = this;
                    d.FrameMgr.loadMgr.loadSpine(this.spineFireballName);
                    this.createFireBalls(t.audio, t.snakeHead, t.atlas, t.parent, t.back, cc.v3(t.snakePos));
                    this.scheduleOnce(function () {
                        e.release();
                    }, 1);
                    return .1;
                };
                e.prototype.updateUI = function (t) {
                    this.updateFireBalls(t);
                };
                e.prototype.release = function () {
                    if (this._fireBallParent) {
                        this._fireBallParent.destroy();
                        this._fireBallParent = null;
                        this._fireBallList = [];
                        this._fireBallTarget = [];
                    }
                };
                return r([y], e);
            }(p.default));
        i.default = v;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../util/Tools": "Tools",
        "../../../manager/battle/BossManager": "BossManager",
        "../../../manager/battle/EnemyManager": "EnemyManager",
        "../../../manager/battle/EntityManager": "EntityManager",
        "../../../manager/battle/PropManager": "PropManager",
        "../../../manager/battle/SnakeManager": "SnakeManager",
        "../SnakeSkillBase": "SnakeSkillBase"
    }],
    SnakeSkillForst: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "885f0nLqFxD0LrT/o6ozcWN", "SnakeSkillForst");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../frame/manager/FrameManager"), s = t("../../../manager/battle/SnakeManager"), c = t("../SnakeSkillBase"), l = t("./SnakeForstEntityNew"), h = t("../../../manager/battle/EntityManager"), u = cc._decorator, p = u.ccclass, d = (u.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._frostList = [];
                    e._frostPool = [];
                    return e;
                }
                e.prototype.create = function () {
                    this.node.active = !0;
                };
                e.prototype.init = function () {
                    t.prototype.init.call(this);
                    this.m_attackAble = !0;
                };
                e.prototype.updateLogic = function (t) {
                    this.updateForsts(t);
                    this.m_attackAble && this.updateSkillCD(t) && this.onSkillStart();
                };
                e.prototype.updateForsts = function (t) {
                    for (var e = 0; e < this._frostList.length; e++) this._frostList[e].updateLogic(t);
                };
                e.prototype.onSkillStart = function () {
                    t.prototype.onSkillStart.call(this);
                    this.createFrosts();
                    this.setSkillCD(this._skillCD);
                };
                e.prototype.createFrosts = function (t, e, i, n, a) {
                    void 0 === t && (t = !0);
                    t && o.FrameMgr.audioMgr.playEffect("skill_104");
                    if (2 == this._skillPara.length) {
                        var r = this._skillPara[0], c = this._skillPara[1], u = new cc.Node();
                        u.position = a || s.SnakeMgr.getPlayerPos();
                        u.parent = n || h.EntityMgr.getShadowLayer();
                        var p = u.addComponent(l.default);
                        p.init(this, r, c, e || s.SnakeMgr.snakeAtlas, i, n);
                        this._frostList.push(p);
                    }
                };
                e.prototype.removeFromList = function (t) {
                    if (this._frostList) for (var e = this._frostList.length - 1; e >= 0; e--) if (t == this._frostList[e]) {
                        this._frostList.splice(e, 1);
                        this._frostPool.push(t);
                        break;
                    }
                };
                e.prototype.playSkill = function (t) {
                    this.createFrosts(t.audio, t.atlas, t.parent, t.back, cc.v3(t.snakePos));
                    return .1;
                };
                e.prototype.updateUI = function (t) {
                    this.updateForsts(t);
                };
                e.prototype.release = function () { };
                return r([p], e);
            }(c.default));
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../manager/battle/EntityManager": "EntityManager",
        "../../../manager/battle/SnakeManager": "SnakeManager",
        "../SnakeSkillBase": "SnakeSkillBase",
        "./SnakeForstEntityNew": "SnakeForstEntityNew"
    }],
    SnakeSkillMeteorEntity: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "21ebaqZACROxJBUcC4vWbA1", "SnakeSkillMeteorEntity");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConfig"), s = t("../../../../../config/GameConst"), c = t("../../../../../config/GameEnum"), l = t("../../../../../frame/manager/FrameManager"), h = t("../../../../../frame/ui/FrameAnim"), u = t("../../../../../util/Tools"), p = t("../../../common/EntityBase"), d = t("../../../manager/battle/BossManager"), f = t("../../../manager/battle/EnemyManager"), m = t("../../../manager/battle/EntityManager"), g = t("../../../manager/battle/PropManager"), _ = cc._decorator, y = _.ccclass, v = (_.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._snakeSkill = null;
                    e._skillFireStayTime = 0;
                    e._skillHurtRadius = 0;
                    e._skillFireHurtDisTime = 0;
                    e._curFireHurtDisTime = 0;
                    e._skillFireHurt = 0;
                    e._skillMeteorHurt = 0;
                    e._skillMeteorTime = 0;
                    e._skillMeteorY = 0;
                    e._skillMeteorMinX = 0;
                    e._skillMeteorMaxX = 0;
                    e._isCanhurt = !1;
                    e.m_speedX = 0;
                    e.m_speedY = 0;
                    e.m_posEnd = cc.Vec2.ZERO;
                    e.m_fireAnim = null;
                    e.m_fireStay = null;
                    e.m_atlas = null;
                    e._diffEffectPos = cc.v2(0, -80);
                    e.m_uiParent = null;
                    return e;
                }
                e.prototype.init = function (t, e, i, n, a, r, o, s, c, l) {
                    this._snakeSkill = t;
                    this._skillFireStayTime = i;
                    this._skillHurtRadius = e;
                    this._skillFireHurtDisTime = n;
                    this._skillFireHurt = a;
                    this._skillMeteorHurt = r;
                    this._skillMeteorTime = o;
                    this._skillMeteorY = s;
                    this._skillMeteorMinX = c;
                    this._skillMeteorMaxX = l;
                    this._curFireHurtDisTime = this._skillFireHurtDisTime;
                    this._isCanhurt = !1;
                    this.m_atlas = this._snakeSkill.m_atlas;
                    this.createUI();
                };
                e.prototype.createUI = function () {
                    var t = cc.v2(u.DYTools.random_int(this._skillMeteorMinX, this._skillMeteorMaxX), this._skillMeteorY);
                    this.m_uiParent && (t = t.mul(.5));
                    var e = cc.v2(0, -1), i = this.m_posEnd.sub(t), n = cc.v2(i).signAngle(e), a = -cc.misc.radiansToDegrees(n), r = this._skillMeteorTime;
                    this.m_speedX = (this.m_posEnd.x - t.x) / r;
                    this.m_speedY = (this.m_posEnd.y - t.y) / r;
                    if (this.m_fireAnim) this.m_fireAnim.node.active = !0; else {
                        var c = cc.instantiate(s.GValue.pfFrameAnim);
                        c.name = "nodeFireAnim";
                        this.m_fireAnim = c.getComponent(h.default);
                        this.node.addChild(c);
                        var l = new cc.Node("top");
                        this.m_fireAnim.node.addChild(l);
                        l.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("SnakeMeteor");
                        l.setAnchorPoint(cc.v2(.5, 0));
                        l.setPosition(cc.v2(0, 0));
                    }
                    this.m_fireAnim.node.setPosition(t);
                    this.m_fireAnim.init(this.m_atlas, "SnakeMeteor_", 7, o.GConfig.ActionInterval);
                    this.m_fireAnim.setAnchor(cc.v2(.5, 0));
                    this.m_fireAnim.play(0);
                    this.m_uiParent && (this.m_fireAnim.slowAble = !1);
                    this.m_fireAnim.node.angle = a;
                    this.m_fireAnim.node.scale = 1.2;
                };
                e.prototype.createBombEffect = function () {
                    var t = new cc.Node("ground");
                    t.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("SnakeMeteorGround");
                    if (this.m_uiParent) {
                        t.scale = .71;
                        this.m_uiParent.addChild(t);
                    } else {
                        t.scale = 1.42;
                        m.EntityMgr.addShadow(t);
                    }
                    t.setPosition(this.node.getPosition().add(this._diffEffectPos));
                    cc.tween(t).delay(12 * o.GConfig.ActionInterval).to(13 * o.GConfig.ActionInterval, {
                        opacity: 0
                    }).call(function () {
                        t.destroy();
                    }).start();
                    var e = new cc.Node("shine"), i = e.addComponent(cc.Sprite);
                    i.spriteFrame = this.m_atlas.getSpriteFrame("SnakeMeteorGroundShine");
                    if (this.m_uiParent) {
                        e.scale = .71;
                        this.m_uiParent.addChild(e);
                    } else {
                        e.scale = 1.42;
                        m.EntityMgr.addShadow(e);
                    }
                    e.setPosition(this.node.getPosition().add(this._diffEffectPos));
                    i.dstBlendFactor = cc.macro.BlendFactor.ONE;
                    cc.tween(e).delay(37 * o.GConfig.ActionInterval).to(11 * o.GConfig.ActionInterval, {
                        opacity: 0
                    }).call(function () {
                        e.destroy();
                    }).start();
                    var n = cc.instantiate(s.GValue.pfFrameAnim);
                    n.name = "nodeBombAnim";
                    var a = n.getComponent(h.default);
                    a.node.setPosition(this.node.getPosition());
                    if (this.m_uiParent) {
                        n.scale = .71;
                        this.m_uiParent.addChild(n);
                    } else {
                        n.scale = 1.42;
                        m.EntityMgr.addShadow(n);
                    }
                    a.init(this.m_atlas, "SnakeMeteorBomb_", 8, 2 * o.GConfig.ActionInterval);
                    a.setStopCall(function () {
                        n.destroy();
                    });
                    a.play(1);
                    this.m_uiParent && (a.slowAble = !1);
                    if (this._skillFireStayTime > 0) {
                        this.m_fireStay = new cc.Node("fireStay");
                        this.m_fireStay.addComponent(cc.Sprite).spriteFrame = this.m_atlas.getSpriteFrame("SnakeMeteorGroundFire");
                        if (this.m_uiParent) {
                            this.m_uiParent.addChild(this.m_fireStay);
                            this.m_fireStay.scale = .5;
                        } else {
                            m.EntityMgr.addShadow(this.m_fireStay);
                            this.m_fireStay.scale = 1;
                        }
                        this.m_fireStay.setPosition(this.node.getPosition().add(this._diffEffectPos));
                        var r = cc.instantiate(s.GValue.pfFrameAnim);
                        r.name = "nodeDrop";
                        var c = r.getComponent(h.default);
                        r.parent = this.m_fireStay;
                        r.setPosition(cc.v2(20, 60));
                        c.init(this.m_atlas, "SnakeMeteorGroundFire_", 10, 2 * o.GConfig.ActionInterval);
                        c.play(0);
                        if (this.m_uiParent) {
                            r.scale = .5;
                            c.slowAble = !1;
                        }
                    }
                };
                e.prototype.updatePos = function (t) {
                    var e = this.m_fireAnim.node.getPosition(), i = !1, n = !1;
                    if (this.m_speedX > 0) {
                        e.x += this.m_speedX * t;
                        if (e.x > this.m_posEnd.x) {
                            e.x = this.m_posEnd.x;
                            i = !0;
                        }
                    } else if (this.m_speedX < 0) {
                        e.x += this.m_speedX * t;
                        if (e.x < this.m_posEnd.x) {
                            e.x = this.m_posEnd.x;
                            i = !0;
                        }
                    } else i = !0;
                    if (this.m_speedY > 0) {
                        e.y += this.m_speedY * t;
                        if (e.y > this.m_posEnd.y) {
                            e.y = this.m_posEnd.y;
                            n = !0;
                        }
                    } else if (this.m_speedY < 0) {
                        e.y += this.m_speedY * t;
                        if (e.y < this.m_posEnd.y) {
                            e.y = this.m_posEnd.y;
                            n = !0;
                        }
                    } else n = !0;
                    this.m_fireAnim.node.setPosition(e);
                    return !(!i || !n);
                };
                e.prototype.updateFireStay = function (t) {
                    var e = this;
                    this._skillFireStayTime -= t;
                    if (this._skillFireStayTime <= 0) {
                        this.m_fireStay && cc.tween(this.m_fireStay).delay(37 * o.GConfig.ActionInterval).to(11 * o.GConfig.ActionInterval, {
                            opacity: 0
                        }).call(function () {
                            e.m_fireStay.destroy();
                            e.m_fireStay = null;
                        }).start();
                        this._snakeSkill.removeFromMeteorList(this);
                    } else {
                        this._curFireHurtDisTime -= t;
                        if (this._curFireHurtDisTime <= 0) {
                            this._curFireHurtDisTime = this._skillFireHurtDisTime;
                            this.triggetHurt(this._skillHurtRadius, this._skillFireHurt);
                        }
                    }
                };
                e.prototype.updateLogic = function (t) {
                    if (this._isCanhurt) this.updateFireStay(t); else if (this.updatePos(t)) {
                        this._isCanhurt = !0;
                        this.m_fireAnim.node.active = !1;
                        this.triggetHurt(this._skillHurtRadius, this._snakeSkill.getAttack(this._skillMeteorHurt));
                        this.createBombEffect();
                        l.FrameMgr.noticeMgr.emit(c.EventTypeEnum.ScreenShake, {
                            level: 2
                        });
                    }
                };
                e.prototype.triggetHurt = function (t, e) {
                    for (var i = this.node.getPosition(), n = f.EnemyMgr.enemys, a = n.length - 1; a >= 0; a--) {
                        var r = n[a];
                        r && u.DYTools.checkCircleCircle(i, t, r.node.getPosition(), r.radius) && r.hpChange(-e, !1, !0);
                    }
                    var o = d.BossMgr.getBosses();
                    for (a = o.length - 1; a >= 0; a--) {
                        var s = o[a];
                        s && u.DYTools.checkCircleCircle(i, t, s.node.getPosition(), 100) && s.hurt(e, !1, !0);
                    }
                    var c = g.PropMgr.atkAbleProps;
                    for (a = c.length - 1; a >= 0; a--) {
                        var l = c[a];
                        l && u.DYTools.checkCircleCircle(i, t, l.node.getPosition(), l.getRadius()) && l.hpChange(-e);
                    }
                };
                e.prototype.setUIParent = function (t) {
                    this.m_uiParent = t;
                };
                return r([y], e);
            }(p.default));
        i.default = v;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../util/Tools": "Tools",
        "../../../common/EntityBase": "EntityBase",
        "../../../manager/battle/BossManager": "BossManager",
        "../../../manager/battle/EnemyManager": "EnemyManager",
        "../../../manager/battle/EntityManager": "EntityManager",
        "../../../manager/battle/PropManager": "PropManager"
    }],
    SnakeSkillMeteor: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "615902NI7hAH5diztnx4Zl3", "SnakeSkillMeteor");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../util/Tools"), c = t("../../../manager/battle/BossManager"), l = t("../../../manager/battle/EnemyManager"), h = t("../../../manager/battle/EntityManager"), u = t("../../../manager/battle/PropManager"), p = t("../../../manager/battle/SnakeManager"), d = t("./SnakeSkillMeteorEntity"), f = t("../SnakeSkillBase"), m = t("../../../../../frame/manager/FrameManager"), g = t("../../../../../frame/ui/FrameAnim"), _ = t("../../../../../config/GameConst"), y = t("../../../../../config/GameConfig"), v = cc._decorator, b = v.ccclass, M = (v.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._creator = null;
                    e._firer = null;
                    e.m_group = o.ColliderGroup.PlayerSkill;
                    e._skillRange = 0;
                    e._skillHurtRadius = 0;
                    e._skillAttackTimes = 0;
                    e._curAttackTimes = 0;
                    e._skillAtkDisTime = 0;
                    e._skillFireStayTime = 0;
                    e._skillFireHurtDisTime = 0;
                    e._skillFireHurtFactor = 0;
                    e._skillFireHurt = 0;
                    e._skillMeteorHurtFactor = 0;
                    e._skillMeteorHurt = 0;
                    e._skillMeteorTime = 0;
                    e._skillMeteorY = 0;
                    e._skillMeteorMinX = 0;
                    e._skillMeteorMaxX = 0;
                    e._enemyList = [];
                    e._priorEnemyList = [];
                    e._meteorList = [];
                    e._meteorPool = [];
                    e.m_atlas = null;
                    return e;
                }
                e.prototype.create = function () {
                    this.node.active = !0;
                };
                e.prototype.init = function () {
                    t.prototype.init.call(this);
                    this.m_atlas = p.SnakeMgr.snakeAtlas;
                    this.initParam(this._skillPara);
                };
                e.prototype.updateLogic = function (t) {
                    this.updateMeteors(t);
                    if (this.m_attackAble && this.updateSkillCD(t) && this.updateAtkDisTime(t)) {
                        var e = l.EnemyMgr.enemys;
                        e = (e = e.concat(c.BossMgr.getBosses())).concat(u.PropMgr.atkAbleProps);
                        this._enemyList = e;
                        for (var i = 0; i < this._priorEnemyList.length; i++) s.DYTools.arrRemove(this._enemyList, this._priorEnemyList[i]);
                        var n = this.findEnemyInRadius(p.SnakeMgr.getSnakeHead(), this._skillRange);
                        n || (n = this.findEnemyInRadius(p.SnakeMgr.getSnakeHead(), this._skillRange, this._priorEnemyList));
                        (n || 0 != this._curAttackTimes) && this.onSkillStart();
                    }
                };
                e.prototype.updateMeteors = function (t) {
                    for (var e = this._meteorList.length - 1; e >= 0; e--) this._meteorList[e].updateLogic(t);
                };
                e.prototype.onSkillStart = function () {
                    t.prototype.onSkillStart.call(this);
                    var e = cc.Vec2.ZERO;
                    if (this._target) {
                        this._priorEnemyList.push(this._target);
                        e = this._target.node.getPosition();
                        var i = this._target.getCollider();
                        if (i) {
                            var n = i.getOffset();
                            n && (e = e.add(n));
                        }
                    } else {
                        var a = -this._skillRange + Math.random() * this._skillRange * 2, r = -this._skillRange + Math.random() * this._skillRange * 2;
                        e = p.SnakeMgr.getSnakePosition().add(cc.v2(a, r));
                    }
                    this.createMeteor(e);
                    this.setAtkDisTime(this._skillAtkDisTime);
                    this._curAttackTimes += 1;
                    if (this._curAttackTimes >= this._skillAttackTimes) {
                        this.setSkillCD(this._skillCD);
                        this._curAttackTimes = 0;
                        this._priorEnemyList = [];
                    }
                    var o = cc.instantiate(_.GValue.pfFrameAnim), s = o.getComponent(g.default);
                    s.node.setPosition(cc.v2(0, -60));
                    p.SnakeMgr.getSnakeHead().node.addChild(o);
                    s.init(this.m_atlas, "skill_head_", 6, 2 * y.GConfig.ActionInterval);
                    s.setAnchor(cc.v2(.5, 0));
                    s.setStopCall(function () {
                        o.destroy();
                    });
                    s.play(1);
                };
                e.prototype.createMeteor = function (t, e, i) {
                    void 0 === e && (e = !0);
                    var n = this._meteorPool.pop();
                    if (!n) {
                        var a = m.FrameMgr.loadMgr.get("SnakeMeteorEntity", cc.Prefab);
                        n = cc.instantiate(a).getComponent(d.default);
                    }
                    var r = n.node;
                    r.scale = i ? .5 : 1;
                    r.parent = i || h.EntityMgr.getPlayerBulletLayer();
                    n.setUIParent(i);
                    r.setPosition(t);
                    n.init(this, this._skillHurtRadius, this._skillFireStayTime, this._skillFireHurtDisTime, this._skillFireHurt, this._skillMeteorHurt, this._skillMeteorTime, this._skillMeteorY, this._skillMeteorMinX, this._skillMeteorMaxX);
                    this._meteorList.push(n);
                    e && m.FrameMgr.audioMgr.playEffect("boss_fire_meteor");
                };
                e.prototype.removeFromMeteorList = function (t) {
                    if (this._meteorList) for (var e = this._meteorList.length - 1; e >= 0; e--) if (t == this._meteorList[e]) {
                        this._meteorList.splice(e, 1);
                        this._meteorPool.push(t);
                        break;
                    }
                };
                e.prototype.initParam = function (t) {
                    this._skillPara = t;
                    if (12 == this._skillPara.length) {
                        this._skillRange = this._skillPara[0];
                        this._skillHurtRadius = this._skillPara[1];
                        this._skillAttackTimes = this._skillPara[2];
                        this._skillAtkDisTime = this._skillPara[3];
                        this._skillFireStayTime = this._skillPara[4];
                        this._skillFireHurtDisTime = this._skillPara[5];
                        this._skillFireHurtFactor = this._skillPara[6];
                        this._skillMeteorHurtFactor = this._skillPara[7];
                        this._skillMeteorTime = this._skillPara[8];
                        this._skillMeteorY = this._skillPara[9];
                        this._skillMeteorMinX = this._skillPara[10];
                        this._skillMeteorMaxX = this._skillPara[11];
                        this._skillFireHurt = this._skillAtk * this._skillFireHurtFactor;
                        this._skillMeteorHurt = this._skillAtk * this._skillMeteorHurtFactor;
                        this.m_attackAble = !0;
                    } else this.m_attackAble = !1;
                };
                e.prototype.playSkill = function (t) {
                    this.m_atlas = m.FrameMgr.loadMgr.get("TP_Snake_103", cc.SpriteAtlas);
                    this.createMeteor(t.targetPos.add(cc.v2(0, 50)), t.audio, t.parent);
                    if (t.snakeHead) {
                        var e = cc.instantiate(_.GValue.pfFrameAnim);
                        e.name = "nodeBurningAnim";
                        e.scale = .5;
                        var i = e.getComponent(g.default);
                        i.node.setPosition(cc.v2(0, -60));
                        t.snakeHead.addChild(e);
                        i.init(this.m_atlas, "skill_head_", 6, 2 * y.GConfig.ActionInterval);
                        i.setAnchor(cc.v2(.5, 0));
                        i.setStopCall(function () {
                            e.destroy();
                        });
                        i.play(1);
                        i.slowAble = !1;
                    }
                    return .4;
                };
                e.prototype.updateUI = function (t) {
                    this.updateMeteors(t);
                };
                e.prototype.release = function () { };
                return r([b], e);
            }(f.default));
        i.default = M;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../util/Tools": "Tools",
        "../../../manager/battle/BossManager": "BossManager",
        "../../../manager/battle/EnemyManager": "EnemyManager",
        "../../../manager/battle/EntityManager": "EntityManager",
        "../../../manager/battle/PropManager": "PropManager",
        "../../../manager/battle/SnakeManager": "SnakeManager",
        "../SnakeSkillBase": "SnakeSkillBase",
        "./SnakeSkillMeteorEntity": "SnakeSkillMeteorEntity"
    }],
    SnakeSkillThorns: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1e151/5Ii9IBLy9RYdZ1vpe", "SnakeSkillThorns");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../frame/manager/FrameManager"), s = t("../../../../../util/Tools"), c = t("../../../manager/battle/MapManager"), l = t("../../../manager/battle/SnakeManager"), h = t("../SnakeSkillBase"), u = t("./SnakeThornsEntity"), p = cc._decorator, d = p.ccclass, f = (p.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._creator = null;
                    e._firer = null;
                    e._offsetX = 0;
                    e._offsetY = 0;
                    e._skillRange = 0;
                    e._thornsList = [];
                    e._thornsPool = [];
                    return e;
                }
                e.prototype.create = function () {
                    this.node.active = !0;
                };
                e.prototype.init = function () {
                    t.prototype.init.call(this);
                    this.m_attackAble = !0;
                    this._skillRange = this._skillPara[0];
                };
                e.prototype.magicFinish = function (t) {
                    var e = this, i = t.children[0];
                    this.schedule(function () {
                        var e = cc.instantiate(i);
                        e.active = !0;
                        e.parent = t.children[1];
                        e.angle = -t.angle;
                    }, .03, this._skillPara[1]);
                    this.scheduleOnce(function () {
                        t.children[1].removeAllChildren();
                        t.children[1].height = 0;
                        t.active = !1;
                        var i = t.getComponent(u.default);
                        s.DYTools.arrRemove(e._thornsList, i);
                        e._thornsPool.push(i);
                    }, 1.45 + .03 * this._skillPara[1]);
                };
                e.prototype.updateLogic = function (t) {
                    this.updateSkillCD(t) && this.findEnemyInRadius(l.SnakeMgr.getSnakeHead(), this._skillRange) && this.onSkillStart();
                };
                e.prototype.onSkillStart = function () {
                    t.prototype.onSkillStart.call(this);
                    this.fireMagic(l.SnakeMgr.getSnakeHead(), this._target, this.magicFinish.bind(this));
                    this.setSkillCD(this._skillCD);
                };
                e.prototype.fireMagic = function (t, e, i) {
                    o.FrameMgr.audioMgr.playEffect("skill_102");
                    var n = 0;
                    if (e) {
                        s.DYTools.getDisForVec(t.node, e.node);
                        n = s.DYTools.getAngle(t.node.position, e.node.position);
                    } else n = t.angle;
                    for (var a = n, r = 1, h = 0; h < this._skillPara[2]; h++) {
                        r = h % 2 ? -1 : 1;
                        var p = this._thornsPool.pop();
                        if (!p) {
                            var d = o.FrameMgr.loadMgr.get("SnakeThornsEntity", cc.Prefab);
                            if (d) {
                                var f = cc.instantiate(d);
                                p = f.getComponent(u.default);
                                f.parent = c.MapMgr.blockLayer;
                            }
                        }
                        if (p) {
                            p.create(this, 48.75 * this._skillPara[1]);
                            var m = p.node;
                            m.scale = .75;
                            if (m.children[0]) {
                                m.children[0].width = 48.75;
                                m.children[0].height = 48.75;
                            }
                            this._thornsList.push(p);
                            m.position = l.SnakeMgr.getPlayerPos();
                            m.angle = a + r * this._skillPara[3] * Math.ceil(h / 2);
                            if (0 == h) {
                                var g = m.children[2].getComponent(cc.Animation);
                                g.node.active = !0;
                                g.play();
                            }
                            i && i(m);
                        }
                    }
                };
                e.prototype.playSkill = function (t) {
                    t.audio && o.FrameMgr.audioMgr.playEffect("skill_102");
                    for (var e = s.DYTools.getAngle(t.snakePos, t.targetPos), i = 1, n = 0; n < this._skillPara[2]; n++) {
                        i = n % 2 ? -1 : 1;
                        var a = this._thornsPool.pop();
                        if (!a) {
                            var r = o.FrameMgr.loadMgr.get("SnakeThornsEntity", cc.Prefab);
                            if (r) {
                                var c = cc.instantiate(r);
                                a = c.getComponent(u.default);
                                c.parent = t.parent;
                            }
                        }
                        if (a) {
                            a.create(this, 48.75 * this._skillPara[1]);
                            var l = a.node;
                            l.scale = .75;
                            if (l.children[0]) {
                                l.children[0].width = 48.75;
                                l.children[0].height = 48.75;
                            }
                            this._thornsList.push(a);
                            l.setPosition(t.snakePos);
                            l.angle = e + i * this._skillPara[3] * Math.ceil(n / 2);
                            if (0 == n) {
                                var h = l.children[2].getComponent(cc.Animation);
                                h.node.active = !0;
                                h.play();
                            }
                            this.magicFinish(l);
                        }
                    }
                    return .1;
                };
                e.prototype.release = function () { };
                return r([d], e);
            }(h.default));
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../util/Tools": "Tools",
        "../../../manager/battle/MapManager": "MapManager",
        "../../../manager/battle/SnakeManager": "SnakeManager",
        "../SnakeSkillBase": "SnakeSkillBase",
        "./SnakeThornsEntity": "SnakeThornsEntity"
    }],
    SnakeTail: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "4a809PLzSJLsLA/v5chqH0r", "SnakeTail");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("../../../../frame/manager/FrameManager"), c = t("../../manager/battle/ShadowManager"), l = t("../../manager/battle/SnakeManager"), h = t("../move/SnakeMoveBodyComp"), u = t("./SnakeUnit"), p = cc._decorator, d = p.ccclass, f = (p.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_skinSpr = null;
                    e.m_img = "";
                    e.m_imgCD = "";
                    return e;
                }
                e.prototype._initColliderComp = function () {
                    var t = this._mainEntity.getColliderDataByType(this._type);
                    this.m_collideComp.init(t, this);
                    this.startBattle();
                };
                e.prototype._initMoveComp = function () {
                    this._moveComp = new h.default();
                    this._moveComp.initBase(this, this.node);
                };
                e.prototype._initShadowComp = function () {
                    var t = this._mainEntity.getSnakeConfig().imgSnake, e = this._mainEntity.getSnakeConfig().shadowScale, i = this._mainEntity.getSnakeConfig().shadowOffset, n = c.ShadowMgr.atlas.getSpriteFrame(t + "_shadow_tail");
                    this._shadowComp = c.ShadowMgr.addShadow(n, this.node, e, i);
                    this._shadowComp.setAngleTarget(this);
                };
                e.prototype.initSkillImg = function () {
                    this.m_skinSpr = this.node.getChildByName("img").getChildByName("icon").getComponent(cc.Sprite);
                    this.m_skinSpr.spriteFrame = l.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_img);
                };
                e.prototype.onCircleCDOver = function () {
                    this.m_skinSpr.spriteFrame = l.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_img);
                };
                e.prototype.onCircleCD = function () {
                    this.m_skinSpr.spriteFrame = l.SnakeMgr.snakeAtlas.getSpriteFrame(this.m_imgCD);
                };
                e.prototype.init = function (e) {
                    this._type = o.SnakeUnitType.tail;
                    t.prototype.init.call(this, e);
                    this.initData();
                    this.initSkillImg();
                    s.FrameMgr.noticeMgr.on(o.EventTypeEnum.OnCircleCDOver, this.onCircleCDOver, this);
                    s.FrameMgr.noticeMgr.on(o.EventTypeEnum.OnCircleCD, this.onCircleCD, this);
                };
                e.prototype.initData = function () {
                    var t = this._mainEntity.getSnakeConfig().imgSnake;
                    this.m_img = t + "_tail";
                    this.m_imgCD = this.m_img;
                };
                e.prototype.updateLogic = function (e) {
                    t.prototype.updateLogic.call(this, e);
                };
                return r([d], e);
            }(u.default));
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/FrameManager": "FrameManager",
        "../../manager/battle/ShadowManager": "ShadowManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../move/SnakeMoveBodyComp": "SnakeMoveBodyComp",
        "./SnakeUnit": "SnakeUnit"
    }],
    SnakeThornsEntity: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "5524dPnXaJLv7N7hntkSyzx", "SnakeThornsEntity");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../util/Tools"), s = t("../../../common/EntityBase"), c = t("../../../manager/battle/BossManager"), l = t("../../../manager/battle/EnemyManager"), h = t("../../../manager/battle/PropManager"), u = cc._decorator, p = u.ccclass, d = (u.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._creator = null;
                    e._firer = null;
                    e.m_height = 0;
                    e._snakeSkill = null;
                    e._enemyList = [];
                    e._hurtedEnemmyList = [];
                    return e;
                }
                e.prototype.create = function (t, e) {
                    this._snakeSkill = t;
                    this.m_height = e;
                    this.node.active = !0;
                    this._hurtedEnemmyList.splice(0);
                };
                e.prototype.getEnemyList = function () {
                    var t = l.EnemyMgr.enemys;
                    return (t = t.concat(c.BossMgr.getBosses())).concat(h.PropMgr.atkAbleProps);
                };
                e.prototype.attackEnemy = function () {
                    var t = this._snakeSkill.getAttack();
                    this._enemyList = this.getEnemyList();
                    for (var e = 0; e < this._enemyList.length; e++) {
                        var i = this._enemyList[e];
                        if (-1 == this._hurtedEnemmyList.indexOf(i) && i.hurtAble) if (i.getHurtAbleEntity) for (var n = i.getHurtAbleEntity(), a = 0; a < n.length; a++) {
                            var r = (f = n[a]).node.getPosition(), s = 0;
                            f.radius && (s = f.radius);
                            var c = this.node.position, l = this.node.getChildByName("layout_node").getContentSize(), h = this.node.angle, u = -Math.sin(h / 180 * Math.PI) * l.height / 2, p = Math.cos(h / 180 * Math.PI) * l.height / 2, d = cc.v2(c.x + u, c.y + p);
                            if (o.DYTools.checkCircleRotateRect(r, s, d, l, h)) {
                                f.hurt && f.hurt(t, !1, !0);
                                this._hurtedEnemmyList.push(f);
                            }
                        } else {
                            var f;
                            r = (f = i).node.getPosition(), s = 0;
                            f.radius && (s = f.radius);
                            c = this.node.position, l = this.node.getChildByName("layout_node").getContentSize(),
                                h = this.node.angle, u = -Math.sin(h / 180 * Math.PI) * l.height / 2, p = Math.cos(h / 180 * Math.PI) * l.height / 2,
                                d = cc.v2(c.x + u, c.y + p);
                            if (o.DYTools.checkCircleRotateRect(r, s, d, l, h) && 0 != l.height) {
                                i.hpChange && i.hpChange(-t, !1, !0);
                                this._hurtedEnemmyList.push(i);
                            }
                        }
                    }
                };
                e.prototype.update = function () {
                    this.node.active && this.attackEnemy();
                };
                return r([p], e);
            }(s.default));
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../../util/Tools": "Tools",
        "../../../common/EntityBase": "EntityBase",
        "../../../manager/battle/BossManager": "BossManager",
        "../../../manager/battle/EnemyManager": "EnemyManager",
        "../../../manager/battle/PropManager": "PropManager"
    }],
    SnakeUI: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "0cb0bTVGsVGkqW/b1Al9W1n", "SnakeUI");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.SnakeAnimName = void 0;
        var o = t("../../../../../config/GameConfig"), s = t("../../../../../config/GameConst"), c = t("../../../../../config/GameEnum"), l = t("../../../../../frame/manager/FrameManager"), h = t("../../../../../frame/ui/UIComponent"), u = t("../../../../../util/GameFunc"), p = t("../../../../../util/Tools"), d = t("../../../../battle/manager/battle/SnakeManager"), f = t("../../../../battle/manager/common/GuideManager"), m = t("./snake/SnakeItem"), g = cc._decorator, _ = g.ccclass, y = g.property;
        (function (t) {
            t.Normal = "anim_snakeUI_normal";
            t.Circle = "anim_snakeUI_circle";
        })(i.SnakeAnimName || (i.SnakeAnimName = {}));
        var v = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.topNode = null;
                e.scrollView = null;
                e.concent = null;
                e.item = null;
                e.atlas = null;
                e.titleSpr = null;
                e.m_itemArr = [];
                return e;
            }
            e.prototype.create = function () {
                var t = this;
                u.GFunc.adjustTopUI(this.topNode);
                u.GFunc.adjustTopUI(this.scrollView.node.parent);
                this.createList();
                this.on(c.EventTypeEnum.SnakeSelect, function () {
                    p.DYTools.removeChildByName(t.concent, "finger");
                    t.refreshUse();
                });
                this.on(c.EventTypeEnum.SnakeLvup, function () {
                    p.DYTools.removeChildByName(t.concent, "finger");
                });
                this.scrollView.scrollToTop();
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                l.FrameMgr.languageMgr.setImage(this.titleSpr, this.atlas, "title");
                for (var t = 0, e = this.m_itemArr; t < e.length; t++) e[t].refreshLanguage();
            };
            e.prototype.refresh = function () {
                var t = this;
                this.item.parent = this.node;
                this.concent.destroyAllChildren();
                this.item.parent = this.concent;
                this.createList();
                this.scheduleOnce(function () {
                    t.checkGuide();
                });
                this.playEnterAnim();
                this.refreshLanguage();
            };
            e.prototype.getSnakeItemForType = function (t) {
                for (var e = 0, i = this.m_itemArr; e < i.length; e++) {
                    var n = i[e];
                    if (n.data.type == t) return n;
                }
                return null;
            };
            e.prototype.refreshUse = function () {
                for (var t = 0, e = this.m_itemArr; t < e.length; t++) e[t].refreshUse();
            };
            e.prototype.createList = function () {
                this.m_itemArr.splice(0);
                this.scrollView.node.height = s.GValue.ViewHeight - 340 - s.GValue.SafeOffsetY;
                this.scrollView.node.children[0].height = this.scrollView.node.height;
                for (var t = [], e = 0, i = d.SnakeMgr.getAllSnakeType(); e < i.length; e++) {
                    var n = i[e];
                    t.push(d.SnakeMgr.getSnakeConfigDataForType(n));
                }
                t.sort(function (t, e) {
                    var i = d.SnakeMgr.isSnakeUnlock(t.type), n = d.SnakeMgr.isSnakeUnlock(e.type);
                    return i && n ? e.quality - t.quality : i || n ? i ? -1 : 1 : e.quality - t.quality;
                });
                for (var a = 0, r = t.length; a < r; a++) {
                    var o = t[a], c = null;
                    a == r - 1 ? c = this.item : (c = cc.instantiate(this.item)).parent = this.concent;
                    var l = c.getComponent(m.default);
                    l.create(o);
                    c.x = a % 3 * 222 - 222;
                    c.y = -160 - 296 * Math.floor(a / 3);
                    this.m_itemArr.push(l);
                }
                this.concent.height = 296 * Math.ceil(t.length / 3) + 40;
            };
            e.prototype.checkGuide = function () {
                if (s.GValue.MainSceneGuide > 0) p.DYTools.removeChildByName(this.concent, "finger"); else {
                    var t = f.GuideMgr.guideAble(c.GuideType.SnakeLvup), e = f.GuideMgr.guideAble(c.GuideType.SnakeChange) && d.SnakeMgr.isSnakeUnlock(103) && 103 != d.SnakeMgr.getCurSnakeType();
                    if (t || e) {
                        var i = 0;
                        if (t) for (var n = d.SnakeMgr.getAllSnake(), a = 0; a < n.length; a++) {
                            var r = d.SnakeMgr.getSnakeConfigDataForType(n[a]);
                            if (r && d.SnakeMgr.getSnakeConfigDataForId(r.id + 1) && u.GFunc.isGoldEnough(r.costGold) && u.GFunc.isItemEnough(r.costMaterial.itemId, r.costMaterial.itemNum)) {
                                i = r.type;
                                break;
                            }
                        } else i = 103;
                        if (i > 0) {
                            for (var o = null, l = 0, h = this.m_itemArr; l < h.length; l++) {
                                var m = h[l];
                                if (m.data.type == i) {
                                    o = m;
                                    break;
                                }
                            }
                            if (o) {
                                var g = this.concent.getChildByName("finger");
                                g || (g = u.GFunc.createfinger(this.concent, "finger", 0));
                                g.active = !0;
                                g.setPosition(o.node.getPosition().add(cc.v2(20, -20)));
                            }
                        }
                    }
                }
            };
            e.prototype.playEnterAnim = function () {
                l.FrameMgr.noticeMgr.emit(c.EventTypeEnum.HomeShield, !0);
                var t = o.GConfig.ActionInterval, e = this.topNode.getChildByName("content");
                if (e) {
                    var i = e.y;
                    e.y = i - 11;
                    e.opacity = 0;
                    cc.tween(e).to(4 * t, {
                        y: i,
                        opacity: 255
                    }).start();
                }
                var n = this.scrollView.node;
                i = n.y;
                n.y = i - 86;
                n.opacity = 0;
                cc.tween(n).delay(3 * t).to(5 * t, {
                    y: i + 8,
                    opacity: 255
                }).to(6 * t, {
                    y: i - 3
                }).to(4 * t, {
                    y: i
                }).call(function () {
                    l.FrameMgr.noticeMgr.emit(c.EventTypeEnum.HomeShield, !1);
                }).start();
            };
            r([y(cc.Node)], e.prototype, "topNode", void 0);
            r([y(cc.ScrollView)], e.prototype, "scrollView", void 0);
            r([y(cc.Node)], e.prototype, "concent", void 0);
            r([y(cc.Node)], e.prototype, "item", void 0);
            r([y(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            r([y(cc.Sprite)], e.prototype, "titleSpr", void 0);
            return r([_], e);
        }(h.default);
        i.default = v;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../util/GameFunc": "GameFunc",
        "../../../../../util/Tools": "Tools",
        "../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "../../../../battle/manager/common/GuideManager": "GuideManager",
        "./snake/SnakeItem": "SnakeItem"
    }],
    SnakeUnitCrazyComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "4fd3d/KLy9IlK9y1rEPgldb", "SnakeUnitCrazyComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameConfig"), s = t("../../../../config/GameConst"), c = t("../../../../config/GameEnum"), l = t("../../../../frame/ui/FrameAnim"), h = t("../../common/CompBase"), u = t("../../manager/battle/SnakeManager"), p = cc._decorator, d = p.ccclass, f = (p.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_type = c.SnakeUnitType.body;
                    e.m_crazying = !1;
                    e.m_botAnim = null;
                    e.m_yuanNode = null;
                    e.m_rotateNode = null;
                    e.m_yuanNode2 = null;
                    e.m_starNode = null;
                    e.m_lightNode = null;
                    e.m_fireAnim = null;
                    e.m_color1 = cc.Color.RED;
                    e.m_color2 = cc.Color.RED;
                    e.m_color3 = cc.Color.RED;
                    e.m_color4 = cc.Color.RED;
                    e.m_overColor = cc.Color.RED;
                    return e;
                }
                e.prototype.create = function (t, e) {
                    this.initBase(t);
                    this.m_type = e;
                    var i = u.SnakeMgr.getCurSnakeType();
                    this.m_color1 = u.SnakeMgr.m_crazyColor1[i] || cc.Color.WHITE;
                    this.m_color2 = u.SnakeMgr.m_crazyColor2[i] || cc.Color.WHITE;
                    this.m_color3 = u.SnakeMgr.m_crazyColor3[i] || cc.Color.WHITE;
                    this.m_color4 = u.SnakeMgr.m_crazyColor4[i] || cc.Color.WHITE;
                    this.m_overColor = u.SnakeMgr.m_crazyColor5[i] || cc.Color.WHITE;
                    this.initUI();
                };
                e.prototype.initUI = function () {
                    (t = cc.instantiate(s.GValue.pfFrameAnim)).parent = u.SnakeMgr.getSnake().bottomLayer;
                    t.setSiblingIndex(0);
                    this.m_botAnim = t.getComponent(l.default);
                    this.m_botAnim.init(u.SnakeMgr.snakeAtlas, "anim_snake_circle_bottom_", 4, 2 * o.GConfig.ActionInterval);
                    this.m_botAnim.color = this.m_color1;
                    this.m_yuanNode = new cc.Node("yuan");
                    this.m_yuanNode.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame("anim_snake_circle_light");
                    this.m_yuanNode.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                    this.m_yuanNode.parent = u.SnakeMgr.getSnake().bottomLayer1;
                    this.m_yuanNode.color = this.m_color1;
                    this.m_yuanNode.active = !1;
                    switch (this.m_type) {
                        case c.SnakeUnitType.head:
                            this.m_lightNode = new cc.Node("light");
                            this.m_lightNode.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame("anim_snake_circle_yuan");
                            this.m_lightNode.parent = u.SnakeMgr.getSnake().topLayer;
                            this.m_lightNode.color = this.m_color2;
                            this.m_lightNode.active = !1;
                            this.m_starNode = new cc.Node("star");
                            this.m_starNode.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame("anim_snake_circle_star");
                            this.m_starNode.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                            this.m_starNode.parent = u.SnakeMgr.getSnake().topLayer;
                            this.m_starNode.color = this.m_color3;
                            this.m_starNode.active = !1;
                            var t;
                            (t = cc.instantiate(s.GValue.pfFrameAnim)).parent = u.SnakeMgr.getSnake().topLayer;
                            this.m_fireAnim = t.getComponent(l.default);
                            this.m_fireAnim.init(u.SnakeMgr.snakeAtlas, "anim_snake_circle_fire_", 7, 2 * o.GConfig.ActionInterval);
                            this.m_fireAnim.setDstBlendFactorMode1();
                            t.color = this.m_color4;
                            t.anchorY = .6;
                            break;

                        case c.SnakeUnitType.body:
                        case c.SnakeUnitType.tail:
                            if (c.SnakeUnitType.body == this.m_type) {
                                this.m_rotateNode = new cc.Node("rotate");
                                this.m_rotateNode.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame("anim_snake_circle_rotate");
                                this.m_rotateNode.parent = u.SnakeMgr.getSnake().topLayer;
                                this.m_rotateNode.active = !1;
                                this.m_rotateNode.color = this.m_color1;
                                this.m_yuanNode2 = new cc.Node("yuan2");
                                this.m_yuanNode2.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame("anim_snake_circle_light");
                                this.m_yuanNode2.parent = u.SnakeMgr.getSnake().topLayer;
                                this.m_yuanNode2.active = !1;
                                this.m_yuanNode2.color = this.m_color2;
                                this.m_starNode = new cc.Node("star");
                                this.m_starNode.addComponent(cc.Sprite).spriteFrame = u.SnakeMgr.snakeAtlas.getSpriteFrame("anim_snake_circle_star");
                                this.m_starNode.getComponent(cc.Sprite).dstBlendFactor = cc.macro.BlendFactor.ONE;
                                this.m_starNode.parent = u.SnakeMgr.getSnake().topLayer;
                                this.m_starNode.color = this.m_color3;
                                this.m_starNode.active = !1;
                            } else {
                                this.m_botAnim.node.scale = .8;
                                this.m_yuanNode.scale = .8;
                            }
                    }
                };
                e.prototype.updateLogic = function () {
                    if (this.m_crazying) {
                        this.updateComp(this.m_botAnim);
                        this.updateComp(this.m_fireAnim);
                        this.updateNode(this.m_yuanNode2);
                        this.updateNode(this.m_yuanNode);
                        this.updateNode(this.m_starNode);
                        this.updateNode(this.m_rotateNode);
                        this.updateNode(this.m_lightNode);
                    }
                };
                e.prototype.onCrazyStart = function () {
                    this.m_crazying = !0;
                    this.playCircleAnim();
                };
                e.prototype.onCrazyOver = function () {
                    this.stopCircleAnim();
                };
                e.prototype.playCircleAnim = function () {
                    var t = this, e = o.GConfig.ActionInterval;
                    this.m_botAnim.color = this.m_color1;
                    switch (this.m_type) {
                        case c.SnakeUnitType.head:
                            this.m_botAnim.node.scale = .9;
                            this.m_botAnim.isPlaying() || this.m_botAnim.play();
                            this.m_yuanNode.active = !0;
                            if (!this.m_starNode.active) {
                                this.m_starNode.active = !0;
                                this.m_starNode.scale = 2;
                                this.m_starNode.angle = 0;
                                this.m_starNode.opacity = 255;
                                this.m_starNode.color = this.m_color3;
                                cc.tween(this.m_starNode).to(12 * e, {
                                    scale: 3.48,
                                    angle: 100,
                                    opacity: 0
                                }).call(function () {
                                    t.m_starNode.active = !1;
                                }).start();
                            }
                            if (!this.m_lightNode.active) {
                                this.m_lightNode.active = !0;
                                this.m_lightNode.color = this.m_color2;
                                cc.tween(this.m_lightNode).to(0, {
                                    scale: 1.4,
                                    opacity: 255
                                }).to(5 * e, {
                                    scale: 3.88,
                                    opacity: 0
                                }).call(function () {
                                    t.m_lightNode.active = !1;
                                }).start();
                            }
                            if (!this.m_fireAnim.isPlaying()) {
                                this.m_fireAnim.node.active = !0;
                                this.m_fireAnim.play(1);
                                cc.tween(this.m_fireAnim.node).to(0, {
                                    scale: 1.6,
                                    opacity: 255
                                }).to(5 * e, {
                                    scaleX: 3.4,
                                    scaleY: 3.55,
                                    opacity: 229
                                }).to(8 * e, {
                                    scaleX: 3.75,
                                    scaleY: 4.75,
                                    opacity: 0
                                }).start();
                            }
                            break;

                        case c.SnakeUnitType.body:
                            this.m_botAnim.node.scale = 1;
                            if (!this.m_rotateNode.active) {
                                this.m_rotateNode.active = !0;
                                cc.tween(this.m_rotateNode).to(3 * e, {
                                    scale: 2.15,
                                    angle: -43,
                                    opacity: 204
                                }).to(6 * e, {
                                    scale: 3.3,
                                    angle: -87,
                                    opacity: 0
                                }).call(function () {
                                    t.m_rotateNode.active = !1;
                                }).start();
                            }
                            if (!this.m_yuanNode2) {
                                this.m_yuanNode2.active = !0;
                                cc.tween(this.m_yuanNode2).delay(2 * e).call(function () {
                                    t.m_yuanNode2.active = !1;
                                }).start();
                            }
                            if (!this.m_starNode.active) {
                                this.m_starNode.active = !0;
                                this.m_starNode.scale = .88;
                                this.m_starNode.angle = 0;
                                this.m_starNode.opacity = 255;
                                this.m_starNode.color = this.m_color3;
                                cc.tween(this.m_starNode).to(12 * e, {
                                    scale: 1.46,
                                    angle: 100,
                                    opacity: 0
                                }).call(function () {
                                    t.m_starNode.active = !1;
                                }).start();
                            }

                        case c.SnakeUnitType.tail:
                            this.m_botAnim.node.scale = .8;
                            this.m_botAnim.isPlaying() || this.m_botAnim.play();
                            this.m_yuanNode.active = !0;
                    }
                };
                e.prototype.playOverAnim = function () {
                    var t = this, e = o.GConfig.ActionInterval;
                    this.m_botAnim && cc.tween(this.m_botAnim.node).to(4 * e, {
                        scale: 1.7
                    }).to(5 * e, {
                        scale: 2.4,
                        opacity: 0,
                        color: this.m_overColor
                    }).call(function () {
                        t.m_botAnim.stop();
                        t.m_botAnim.node.scale = 1;
                        t.m_crazying = !1;
                    }).start();
                    if (this.m_starNode) {
                        this.m_starNode.active = !0;
                        this.m_starNode.stopAllActions();
                        this.m_starNode.opacity = 255;
                        this.m_starNode.scale = 1;
                        cc.tween(this.m_starNode).to(8 * e, {
                            scale: 2,
                            opacity: 0,
                            color: this.m_overColor
                        }).call(function () {
                            t.m_starNode.scale = 1;
                            t.m_starNode.active = !1;
                            t.m_starNode.opacity = 255;
                        }).start();
                    }
                };
                e.prototype.stopCircleAnim = function () {
                    this.playOverAnim();
                    if (this.m_fireAnim) {
                        this.m_fireAnim.stop();
                        this._stopAction(this.m_fireAnim.node);
                    }
                    this._stopAction(this.m_rotateNode);
                    this._stopAction(this.m_lightNode);
                    this._stopAction(this.m_yuanNode);
                    this._stopAction(this.m_yuanNode2);
                };
                e.prototype._stopAction = function (t) {
                    if (t) {
                        t.stopAllActions();
                        t.active = !1;
                    }
                };
                e.prototype.updateComp = function (t) {
                    t && this.updateNode(t.node);
                };
                e.prototype.updateNode = function (t) {
                    if (t) {
                        t.angle = this.entity.angle;
                        t.position = this.node.position;
                    }
                };
                return r([d], e);
            }(h.default));
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../../config/GameConfig": "GameConfig",
        "../../../../config/GameConst": "GameConst",
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../common/CompBase": "CompBase",
        "../../manager/battle/SnakeManager": "SnakeManager"
    }],
    SnakeUnit: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "f5ba5SiAj9Fprw2u226S20b", "SnakeUnit");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("../../collide/CircleColliderComp"), c = t("../../common/EntityBase"), l = t("../../manager/battle/ShadowManager"), h = t("../../manager/battle/SnakeManager"), u = t("../comp/SnakeUnitCrazyComp"), p = cc._decorator.ccclass, d = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.m_group = o.ColliderGroup.Player;
                e._noHurt = !1;
                e.bodyShineSpine = null;
                e.m_collideComp = null;
                e.m_colWalls = [];
                e.m_colBlocks = [];
                e.m_prePos = cc.Vec3.ZERO;
                e.m_preOnCollider = null;
                e.m_preOnCollidePos = void 0;
                e._skillShine = null;
                e.m_crazyComp = null;
                e._snakeOutCall = null;
                return e;
            }
            Object.defineProperty(e.prototype, "index", {
                get: function () {
                    return this._index;
                },
                set: function (t) {
                    this._index = t;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "type", {
                get: function () {
                    return this._type;
                },
                enumerable: !1,
                configurable: !0
            });
            Object.defineProperty(e.prototype, "angle", {
                get: function () {
                    return this._imgNode.angle;
                },
                set: function (t) {
                    this._imgNode.angle = t;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.init = function (t) {
                this._mainEntity = t;
                this.m_collideComp = new s.default();
                this._initImgNode();
                this._initShineSpine();
                this._initColliderComp();
                this._initMoveComp();
                this._initShadowComp();
                this.initCrazyComp();
            };
            e.prototype.initCrazyComp = function () {
                this.m_crazyComp = new u.default();
                this.m_crazyComp.create(this, this._type);
            };
            e.prototype.onCrazyStart = function () {
                this.m_crazyComp.onCrazyStart();
            };
            e.prototype.onCrazyOver = function () {
                this.m_crazyComp.onCrazyOver();
            };
            e.prototype.clear = function () { };
            e.prototype.startBattle = function () {
                var t = this;
                this.scheduleOnce(function () {
                    t.m_collideComp.enabled = !0;
                }, .5);
            };
            e.prototype.changeMoveComp = function (t) {
                var e = new t();
                this._moveComp = e;
                this._moveComp.initBase(this, this.node);
                return e;
            };
            e.prototype.removeShadow = function () {
                l.ShadowMgr.removeShadow(this._shadowComp);
            };
            e.prototype.clearCol = function () {
                this.m_colWalls.splice(0);
                this.m_colBlocks.splice(0);
            };
            e.prototype.getMainEntity = function () {
                return this._mainEntity;
            };
            e.prototype.getMoveComp = function () {
                return this._moveComp;
            };
            e.prototype.getImgAngle = function () {
                return this._imgNode.angle;
            };
            e.prototype.getColliderAtk = function () {
                return this._mainEntity ? this._mainEntity.getColliderAtk() : 0;
            };
            e.prototype.getColliders = function () {
                return this.m_collideComp;
            };
            e.prototype.getWalls = function () {
                return this.m_colWalls;
            };
            e.prototype.getBlocks = function () {
                return this.m_colBlocks;
            };
            e.prototype.getPreColliderPos = function () {
                return this.m_preOnCollidePos;
            };
            e.prototype.getPreUnit = function () {
                var t = this._mainEntity.getUnits(), e = this.index - 1;
                return e >= 0 && t.length, t[e];
            };
            e.prototype.setNoHurt = function (t) {
                var e = this;
                this._noHurt = !0;
                this.scheduleOnce(function () {
                    e._noHurt = !1;
                }, t);
            };
            Object.defineProperty(e.prototype, "hurtAble", {
                get: function () {
                    return !this._noHurt;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.fixedUpdate = function (t) {
                this._moveComp && this._moveComp.fixedUpdate(t);
            };
            e.prototype.updateLogic = function (t) {
                this.updateMove(t);
                this.m_crazyComp.updateLogic(t);
                this.m_collideComp && this.m_collideComp.updateLogic(t);
                this._snakeOutCall && this._snakeOutCall(this);
            };
            e.prototype.updateMove = function (t) {
                this.m_prePos.x = this.node.x;
                this.m_prePos.y = this.node.y;
                if (-1 != this._index && this._moveComp) {
                    var e = this._moveComp.getMoveData(), i = e.pos ? e.pos.x : this.node.x, n = e.pos ? e.pos.y : this.node.y;
                    if (h.SnakeMgr.m_settleDelBody) {
                        this.node.x = i;
                        this.node.y = n;
                    } else {
                        var a = 1.5 * this._moveComp.speed, r = i - this.node.x, o = n - this.node.y, s = Math.sqrt(r * r + o * o), c = t * a;
                        if (s < c) {
                            this.node.x = i;
                            this.node.y = n;
                        } else {
                            var l = (0 == s ? 0 : 1 / s) * c;
                            this.node.x += r * l;
                            this.node.y += o * l;
                        }
                    }
                    this._imgNode && (this._imgNode.angle = e.ang || 0);
                    this._skillShine && (this._skillShine.angle = this._imgNode.angle);
                }
            };
            e.prototype._initImgNode = function () {
                var t = this.node.getChildByName("img");
                t && (this._imgNode = t);
            };
            e.prototype._initShineSpine = function () {
                var t = this, e = this.node.getChildByName("anim");
                if (e && !this.bodyShineSpine) {
                    var i = e.getChildByName("shine");
                    if (i) {
                        i.opacity = 0;
                        this.bodyShineSpine = i.getComponent(sp.Skeleton);
                        this.bodyShineSpine.setCompleteListener(function () {
                            t.bodyShineSpine.node.opacity = 0;
                        });
                    } else this.bodyShineSpine = null;
                }
            };
            return r([p], e);
        }(c.default);
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../collide/CircleColliderComp": "CircleColliderComp",
        "../../common/EntityBase": "EntityBase",
        "../../manager/battle/ShadowManager": "ShadowManager",
        "../../manager/battle/SnakeManager": "SnakeManager",
        "../comp/SnakeUnitCrazyComp": "SnakeUnitCrazyComp"
    }],
    StageDataContainer: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "d67dbyAMotJmKZM/HSbGMo6", "StageDataContainer");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("./BaseDataContainer"), o = t("../config/ConfigStageWaveData"), s = t("../config/ConfigStageWaveData"), c = function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            e.prototype.initData = function (t) {
                if (t) for (var e = 0; e < t.length; e++) {
                    var i = new s.WavePointData();
                    i.loadJson(t[e]);
                    var n = this.dataMap.get(i.stage);
                    if (!n) {
                        (n = new o.ConfigAllStageWaveData()).id = i.stage;
                        this.dataMap.set(n.id, n);
                    }
                    var a = n.waves[i.waveId];
                    if (!a) {
                        (a = new o.default()).waveId = i.waveId;
                        a.id = i.waveId;
                        n.waves[a.id] = a;
                    }
                    null != i.delayTime && (a.delayTime = i.delayTime);
                    if (i.prop && "" != i.prop) {
                        a.prop = i.prop;
                        a.propStopWave = i.propStopWave;
                    }
                    a.pointData.push(i);
                }
            };
            return e;
        }(r.default);
        i.default = c;
        cc._RF.pop();
    }, {
        "../config/ConfigStageWaveData": "ConfigStageWaveData",
        "./BaseDataContainer": "BaseDataContainer"
    }],
    StageItem: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c91b3enPOJJ+oeInYD5chkg", "StageItem");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../../config/GameConfig"), s = t("../../../../../../config/GameConst"), c = t("../../../../../../config/GameEnum"), l = t("../../../../../../data/manager/ConfigDataManager"), h = t("../../../../../../data/storage/GameData"), u = t("../../../../../../frame/manager/FrameManager"), p = t("../../../../../../frame/ui/FrameAnim"), d = t("../../../../../../util/GameFunc"), f = t("../../../../../../util/Tools"), m = t("../../../../../battle/manager/battle/SnakeManager"), g = cc._decorator, _ = g.ccclass, y = g.property, v = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.uiNode = null;
                e.stageNode = null;
                e.stageBgSpr = null;
                e.stageDiSpr = null;
                e.stageGuanSpr = null;
                e.rewardNode = null;
                e.rewardBg = null;
                e.rewardList = null;
                e.finishNode = null;
                e.atlas = null;
                e.m_stageNum = null;
                e.m_rewardNum = null;
                e.m_data = null;
                e.m_numList = [];
                e.m_state = 0;
                e.m_stageUI = null;
                e.m_animDelay = 0;
                return e;
            }
            e.prototype.create = function (t, e) {
                this.m_data = t;
                this.m_stageUI = e;
                this.initUI();
                this.checkState();
            };
            e.prototype.refreshLanguage = function () {
                u.FrameMgr.languageMgr.setImage(this.stageDiSpr, this.atlas, "txt3");
                2 == u.FrameMgr.languageMgr.language ? this.stageGuanSpr.node.active = !1 : this.stageGuanSpr.node.active = !0;
            };
            e.prototype.setState = function (t) {
                this.m_state = t;
                this.refreshUI();
            };
            e.prototype.checkState = function () {
                1 == this.m_data.id ? this.setState(2) : this.m_data.id <= h.GData.getFinishStage() ? h.GData.stageRewardGeted(this.m_data.id) ? this.setState(2) : this.setState(1) : this.setState(0);
            };
            e.prototype.initUI = function () {
                var t = u.FrameMgr.loadMgr.get("TP_Item", cc.SpriteAtlas);
                if (this.m_data.extraReward.length > 0) for (var e = 0; e < this.m_data.extraReward.length; e++) {
                    var i = this.m_data.extraReward[e], n = i.x, a = l.ConfigDataMgr.getData("ConfigItemData", n);
                    if (a) {
                        var r = new cc.Node("reward");
                        r.parent = this.rewardList;
                        r.width = 100;
                        var o = new cc.Node("icon");
                        o.parent = r;
                        o.addComponent(cc.Sprite).spriteFrame = t.getSpriteFrame(a.image);
                        if (n >= 100 && n < 200) {
                            o.scale = .5;
                            r.y = -this.rewardList.y;
                            var s = m.SnakeMgr.getSnakeConfigDataForType(n);
                            if (s) {
                                var h = new cc.Node("kuang");
                                h.addComponent(cc.Sprite).spriteFrame = t.getSpriteFrame("kuang_" + s.quality);
                                h.parent = r;
                                h.scale = o.scale;
                            }
                        }
                        if (i.y > 1) {
                            var p = d.GFunc.createUINum({
                                atlas: this.atlas,
                                type: c.NumType.SnakeUI,
                                parent: r,
                                txt: f.DYTools.numberToString(i.y)
                            });
                            p.node.y = -46;
                            p.node.scale = .8;
                            this.m_numList.push(p);
                        }
                    }
                }
            };
            e.prototype.refreshUI = function () {
                this.stopAnim();
                var t = 255, e = "";
                2 == this.m_data.extraReward.length ? e = "b" : 3 == this.m_data.extraReward.length && (e = "c");
                switch (this.m_state) {
                    case 0:
                        t = 128;
                        this.rewardBg.spriteFrame = this.atlas.getSpriteFrame("ban1" + e);
                        this.rewardList.opacity = 128;
                        this.finishNode.active = !1;
                        this.stageBgSpr.spriteFrame = this.atlas.getSpriteFrame("tiao");
                        this.stageBgSpr.node.y = 0;
                        this.stageDiSpr.node.parent.x = 60;
                        break;

                    case 1:
                        this.rewardBg.spriteFrame = this.atlas.getSpriteFrame("ban3" + e);
                        this.rewardList.opacity = 255;
                        this.finishNode.active = !1;
                        for (var i = 0, n = this.m_numList; i < n.length; i++) n[i].color = cc.Color.YELLOW;
                        var a = this;
                        (function () {
                            var t = o.GConfig.ActionInterval, e = a.rewardNode.getChildByName("star");
                            if (!e) {
                                e = new cc.Node("star");
                                a.rewardNode.addChild(e, 3);
                                e.x = 110 * -(a.m_data.extraReward.length - 1) / 2;
                                for (var i = 0; i < a.m_data.extraReward.length; i++) {
                                    (c = cc.instantiate(s.GValue.pfFrameAnim)).name = "star";
                                    e.addChild(c);
                                    c.scale = 2;
                                    c.x = 110 * i;
                                    (r = c.getComponent(p.default)).init(a.atlas, "star_", 11, 2 * t);
                                    r.slowAble = !1;
                                    r.play();
                                }
                            }
                            var n = a.rewardNode.getChildByName("particle");
                            if (!n) {
                                n = new cc.Node("particle");
                                a.rewardNode.addChild(n, -1);
                                n.x = 110 * -(a.m_data.extraReward.length - 1) / 2;
                                n.y = 110;
                                for (i = 0; i < a.m_data.extraReward.length; i++) {
                                    var r, c = cc.instantiate(s.GValue.pfFrameAnim);
                                    n.addChild(c);
                                    c.scale = 2;
                                    c.x = 110 * i;
                                    (r = c.getComponent(p.default)).init(a.atlas, "anim_fetter_particle_", 25, 2 * t);
                                    r.slowAble = !1;
                                    r.play();
                                }
                            }
                            var l = a.rewardNode.getChildByName("light");
                            if (!l) {
                                (l = cc.instantiate(s.GValue.pfFrameAnim)).name = "light";
                                a.rewardNode.addChild(l, 1);
                                l.scale = 2;
                                if (1 == a.m_data.extraReward.length) {
                                    l.scaleX = 1.2;
                                    l.scaleY = 2;
                                } else if (3 == a.m_data.extraReward.length) {
                                    l.scaleX = 2.74;
                                    l.scaleY = 2;
                                }
                                var h = l.getComponent(p.default);
                                h.init(a.atlas, "anim_fetter_btn_light_", 7, 2 * t);
                                h.setDstBlendFactorMode1();
                                h.slowAble = !1;
                                a.scheduleOnce(function () {
                                    h.play(1);
                                }, f.DYTools.random_int(0, 10) / 10);
                                h.setStopCall(function () {
                                    h.scheduleOnce(function () {
                                        h.play(1);
                                    }, f.DYTools.random_int(10, 20) / 10);
                                });
                            }
                            var u = a.rewardNode.getChildByName("shine");
                            if (!u) {
                                u = new cc.Node("shine");
                                if (1 == a.m_data.extraReward.length) {
                                    u.scaleX = 1.68;
                                    u.scaleY = 2;
                                } else if (2 == a.m_data.extraReward.length) {
                                    u.scaleX = 2.8;
                                    u.scaleY = 2;
                                } else if (3 == a.m_data.extraReward.length) {
                                    u.scale = 3.74;
                                    u.scaleY = 2.08;
                                }
                                u.addComponent(cc.Sprite).spriteFrame = a.atlas.getSpriteFrame("button_shine");
                                a.rewardNode.addChild(u, -2);
                                u.opacity = 0;
                                a.scheduleOnce(function () {
                                    cc.tween(u).to(10 * t, {
                                        opacity: 255
                                    }).to(10 * t, {
                                        opacity: 0
                                    }).union().repeatForever().start();
                                }, f.DYTools.random_int(0, 5) / 10);
                            }
                        })();
                        break;

                    case 2:
                        this.rewardBg.spriteFrame = this.atlas.getSpriteFrame("ban2" + e);
                        this.rewardList.opacity = 255;
                        this.finishNode.active = !0;
                        this.stageBgSpr.spriteFrame = this.atlas.getSpriteFrame("tiao");
                        this.stageDiSpr.node.parent.x = 60;
                        for (var r = 0, l = this.m_numList; r < l.length; r++) l[r].color = cc.Color.WHITE;
                }
                this.rewardNode.width = this.rewardBg.node.width;
                var h = this.uiNode.getChildByName("yz");
                h && (h.width = 1 == this.m_data.extraReward.length ? 121 : 2 == this.m_data.extraReward.length ? 227 : 317);
                this.finishNode.active && (this.finishNode.x = 1 == this.m_data.extraReward.length ? 72 : 2 == this.m_data.extraReward.length ? 130 : 176);
                if (this.m_stageNum) {
                    this.m_stageNum.node.destroy();
                    this.m_stageNum = null;
                }
                var u = this.stageNode.getChildByName("num").getChildByName("num");
                this.m_stageNum = d.GFunc.createUINum({
                    atlas: this.atlas,
                    type: c.NumType.SnakeUI,
                    parent: u,
                    txt: this.m_data.id.toString()
                });
                u.width = this.m_stageNum.getSize().width;
                u.parent.opacity = t;
            };
            e.prototype.stopAnim = function () {
                cc.Tween.stopAllByTarget(this.uiNode);
                this.uiNode.setPosition(cc.Vec2.ZERO);
                this.uiNode.angle = 0;
                if (this.m_rewardNum) {
                    cc.Tween.stopAllByTarget(this.m_rewardNum.node);
                    this.m_rewardNum.node.scale = 1;
                }
                f.DYTools.removeChildByName(this.rewardNode, "shadow");
                f.DYTools.removeChildByName(this.rewardNode, "star1");
                f.DYTools.removeChildByName(this.rewardNode, "star2");
            };
            e.prototype.onBtnGetClicked = function () {
                if (1 != this.m_state) return !1;
                if (!f.DYTools.isBtnClickedAble()) return !1;
                h.GData.setStageReward(this.m_data.id);
                d.GFunc.onGetReward(this.m_data.extraReward, !0);
                this.setState(2);
                u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.StageRefresh);
                f.DYTools.removeChildByName(this.rewardNode, "star");
                f.DYTools.removeChildByName(this.rewardNode, "particle");
                f.DYTools.removeChildByName(this.rewardNode, "light");
                f.DYTools.removeChildByName(this.rewardNode, "shine");
                var t = o.GConfig.ActionInterval, e = this.rewardNode.getChildByName("topLight");
                if (!e) {
                    e = new cc.Node("topLight");
                    this.rewardNode.addChild(e, 1);
                    e.addComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame("bg_light");
                    e.opacity = 0;
                    if (1 == this.m_data.extraReward.length) {
                        e.scaleX = 1.16;
                        e.scaleY = 2;
                    } else if (2 == this.m_data.extraReward.length) {
                        e.scaleX = 2;
                        e.scaleY = 2;
                    } else if (3 == this.m_data.extraReward.length) {
                        e.scaleX = 2.68;
                        e.scaleY = 2;
                    }
                    cc.tween(e).to(4 * t, {
                        opacity: 255
                    }).to(10 * t, {
                        opacity: 0
                    }).start();
                }
                var i = this.rewardNode.getChildByName("yellow");
                if (!i) {
                    i = new cc.Node("yellow");
                    this.rewardNode.addChild(i, 1);
                    i.addComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame("light_0");
                    i.opacity = 0;
                    i.scale = 0;
                    if (1 == this.m_data.extraReward.length) {
                        i.scaleX = 2.4;
                        i.scaleY = 2;
                    } else if (3 == this.m_data.extraReward.length) {
                        i.scaleX = 2.8;
                        i.scaleY = 2;
                    }
                    cc.tween(i).to(4 * t, {
                        scaleX: 1.44,
                        scaleY: 1.44,
                        opacity: 128
                    }).to(4 * t, {
                        scaleX: 2.84,
                        scaleY: 2.84,
                        opacity: 0
                    }).start();
                }
                this.finishNode.opacity = 0;
                this.finishNode.scale = 0;
                this.finishNode.zIndex = 2;
                cc.tween(this.finishNode).delay(4 * t).to(8 * t, {
                    opacity: 255,
                    scale: 1.2
                }).to(5 * t, {
                    scale: 1
                }).start();
                return !0;
            };
            e.prototype.getState = function () {
                return this.m_state;
            };
            Object.defineProperty(e.prototype, "data", {
                get: function () {
                    return this.m_data;
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.setStageShow = function (t) {
                this.stageNode.active = t;
            };
            e.prototype.playRewardShowAnim = function (t) {
                var e = o.GConfig.ActionInterval;
                this.rewardNode.scale = .9;
                this.rewardNode.opacity = 0;
                cc.tween(this.rewardNode).delay(t).to(5 * e, {
                    scale: 1.15,
                    opacity: 255
                }).to(5 * e, {
                    scale: 1
                }).start();
            };
            r([y({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "uiNode", void 0);
            r([y({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "stageNode", void 0);
            r([y(cc.Sprite)], e.prototype, "stageBgSpr", void 0);
            r([y(cc.Sprite)], e.prototype, "stageDiSpr", void 0);
            r([y(cc.Sprite)], e.prototype, "stageGuanSpr", void 0);
            r([y({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "rewardNode", void 0);
            r([y({
                type: cc.Sprite,
                tooltip: !1
            })], e.prototype, "rewardBg", void 0);
            r([y({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "rewardList", void 0);
            r([y({
                type: cc.Node,
                tooltip: !1
            })], e.prototype, "finishNode", void 0);
            r([y(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([_], e);
        }(cc.Component);
        i.default = v;
        cc._RF.pop();
    }, {
        "../../../../../../config/GameConfig": "GameConfig",
        "../../../../../../config/GameConst": "GameConst",
        "../../../../../../config/GameEnum": "GameEnum",
        "../../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../../data/storage/GameData": "GameData",
        "../../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../../util/GameFunc": "GameFunc",
        "../../../../../../util/Tools": "Tools",
        "../../../../../battle/manager/battle/SnakeManager": "SnakeManager"
    }],
    StageUI: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c9d873eHA1BoJN93Ctt0S24", "StageUI");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../../config/GameConfig"), s = t("../../../../../../config/GameConst"), c = t("../../../../../../config/GameEnum"), l = t("../../../../../../data/manager/ConfigDataManager"), h = t("../../../../../../data/storage/GameData"), u = t("../../../../../../frame/manager/FrameManager"), p = t("../../../../../../frame/ui/UIComponent"), d = t("../../../../../../util/GameFunc"), f = t("../../../../../../util/Tools"), m = t("./StageItem"), g = cc._decorator, _ = g.ccclass, y = g.property, v = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.titleNode = null;
                e.titleSpr = null;
                e.closeNode = null;
                e.scrollView = null;
                e.listNode = null;
                e.proNode = null;
                e.proBg = null;
                e.pro = null;
                e.cursor = null;
                e.itemNode = null;
                e.shield = null;
                e.atlas = null;
                e.m_itemStartY = 260;
                e.m_diffY = 250;
                e.m_itemArr = [];
                e.m_curItem = null;
                e.m_newItem = null;
                e.m_stageNum = null;
                return e;
            }
            e.prototype.refresh = function () {
                s.GValue.NewStageReward && (s.GValue.NewStageReward = !1);
                this.m_curItem && this.scrollView.scrollToOffset(cc.v2(0, this.listNode.height - this.m_curItem.node.y - this.scrollView.node.height / 2));
                this.playEnterAnim();
                this.refreshLanguage();
            };
            e.prototype.create = function () {
                d.GFunc.adjustTopUI(this.closeNode);
                d.GFunc.adjustTopUI(this.titleNode);
                d.GFunc.adjustTopUI(this.scrollView.node);
                this.scrollView.node.height = s.GValue.ViewHeight - this.scrollView.node.getComponent(cc.Widget).top;
                this.createStages();
                this.initStage();
                this.proNode.zIndex = 1;
                this.m_curItem && this.scrollView.scrollToOffset(cc.v2(0, this.listNode.height - this.m_curItem.node.y - this.scrollView.node.height / 2));
            };
            e.prototype.refreshLanguage = function () {
                u.FrameMgr.languageMgr.setImage(this.titleSpr, this.atlas, "title");
                var t = this.cursor.getChildByName("num");
                2 == u.FrameMgr.languageMgr.language ? t.getChildByName("guan").active = !1 : t.getChildByName("guan").active = !0;
                u.FrameMgr.languageMgr.setImage(t.children[0].getComponent(cc.Sprite), this.atlas, "txt1");
                for (var e = 0, i = this.m_itemArr; e < i.length; e++) i[e].refreshLanguage();
            };
            e.prototype.hasReward = function () {
                for (var t = 0, e = this.m_itemArr; t < e.length; t++) if (1 == e[t].getState()) return !0;
                return !1;
            };
            e.prototype.initStage = function () {
                if (this.m_stageNum) {
                    this.m_stageNum.node.destroy();
                    this.m_stageNum = null;
                }
                var t = this.cursor.getChildByName("num").getChildByName("num");
                this.m_stageNum = d.GFunc.createUINum({
                    atlas: this.atlas,
                    type: c.NumType.SnakeUI,
                    parent: t,
                    color: cc.Color.YELLOW,
                    txt: h.GData.getFinishStage().toString()
                });
                t.width = this.m_stageNum.getSize().width;
            };
            e.prototype.createStages = function () {
                var t = h.GData.getFinishStage(), e = null, i = [];
                l.ConfigDataMgr.getAllData("ConfigStageInfoData").forEach(function (t) {
                    t.extraReward.length > 0 && i.push(t);
                });
                i.sort(function (t, e) {
                    return t.id > e.id ? 1 : -1;
                });
                for (var n = null, a = null, r = this.m_itemStartY, o = 0, c = i.length; o < c; o++) {
                    var u = i[o], p = null;
                    (p = o == c - 1 ? this.itemNode : cc.instantiate(this.itemNode)).parent = this.listNode;
                    p.setPosition(-210, r);
                    var d = p.getComponent(m.default);
                    d.create(u, this);
                    this.m_itemArr.push(d);
                    e = p;
                    if (d.getState() > 0) {
                        n = d;
                        this.m_curItem = d;
                    } else a || (a = d);
                    t == u.id && (this.m_newItem = d);
                    var f = new cc.Node("biao");
                    f.addComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame("biao");
                    f.parent = this.listNode;
                    f.setPosition(this.proNode.x, r);
                    r += this.m_diffY;
                }
                this.listNode.height = Math.max(e.y + 100, this.listNode.height);
                this.proNode.y = -s.GValue.ViewHeight;
                this.proBg.width = this.listNode.height + 3 * this.scrollView.node.height;
                var g = s.GValue.ViewHeight + this.m_itemStartY - this.m_diffY, _ = 0;
                n && (_ += n.node.y - (this.m_itemStartY - this.m_diffY));
                var y = n ? n.data.id : 0;
                if (a) {
                    var v = a.data.id, b = t - y;
                    _ += this.m_diffY * (b / (v - y));
                }
                this.pro.width = g + _;
                this.cursor.y = _ - this.proNode.y;
                t - y == 0 && n && n.setStageShow(!1);
                this.scrollView.scrollToBottom();
            };
            e.prototype.onBtnBackClicked = function () {
                f.DYTools.isBtnClickedAble() && u.FrameMgr.noticeMgr.emit(c.EventTypeEnum.MainChange, c.MainSceneTag.Main);
            };
            e.prototype.playEnterAnim = function () {
                var t = this, e = o.GConfig.ActionInterval;
                this.shield.active = !0;
                var i = this.titleNode.getChildByName("content");
                if (i) {
                    i.y = 280;
                    i.opacity = 0;
                    cc.tween(i).to(7 * e, {
                        y: -23,
                        opacity: 255
                    }).to(5 * e, {
                        y: -3
                    }).to(4 * e, {
                        y: 0
                    }).start();
                }
                var n = this.closeNode.getChildByName("btn");
                if (n) {
                    var a = 0;
                    n.y = a + 280;
                    n.opacity = 0;
                    cc.tween(n).to(7 * e, {
                        y: a - 23,
                        opacity: 255
                    }).to(5 * e, {
                        y: a - 3
                    }).to(4 * e, {
                        y: a
                    }).start();
                }
                a = -s.GValue.ViewCenter.y;
                this.scrollView.node.y = a - 50;
                cc.tween(this.scrollView.node).to(7 * e, {
                    y: a + 5,
                    opacity: 255
                }).to(5 * e, {
                    y: a
                }).start();
                cc.Tween.stopAllByTarget(this.cursor);
                this.cursor.scale = 0;
                this.cursor.angle = -5;
                cc.tween(this.cursor).delay(15 * e).to(5 * e, {
                    scale: 1.15,
                    angle: -16
                }).to(5 * e, {
                    scale: 1,
                    angle: 9
                }).to(2 * e, {
                    angle: -5
                }).to(3 * e, {
                    angle: 5
                }).to(3 * e, {
                    angle: -5
                }).to(3 * e, {
                    angle: 0
                }).call(function () {
                    cc.tween(t.cursor).delay(40 * e).to(3 * e, {
                        angle: -5
                    }).to(3 * e, {
                        angle: 5
                    }).to(3 * e, {
                        angle: -5
                    }).to(3 * e, {
                        angle: 5
                    }).to(3 * e, {
                        angle: 0
                    }).union().repeatForever().start();
                }).start();
                for (var r = [], c = 0, l = this.m_itemArr; c < l.length; c++) (a = (d = l[c]).node.y + this.listNode.y) > -100 && a < this.scrollView.node.height + 100 && r.push(d);
                for (var h = 2 * e, u = 5 * e, p = 0; p < r.length; p++) {
                    var d;
                    (d = r[p]).playRewardShowAnim(u + p * h);
                }
                this.scheduleOnce(function () {
                    t.shield.active = !1;
                }, .5);
            };
            r([y(cc.Node)], e.prototype, "titleNode", void 0);
            r([y(cc.Sprite)], e.prototype, "titleSpr", void 0);
            r([y(cc.Node)], e.prototype, "closeNode", void 0);
            r([y(cc.ScrollView)], e.prototype, "scrollView", void 0);
            r([y(cc.Node)], e.prototype, "listNode", void 0);
            r([y(cc.Node)], e.prototype, "proNode", void 0);
            r([y(cc.Node)], e.prototype, "proBg", void 0);
            r([y(cc.Node)], e.prototype, "pro", void 0);
            r([y(cc.Node)], e.prototype, "cursor", void 0);
            r([y(cc.Node)], e.prototype, "itemNode", void 0);
            r([y(cc.Node)], e.prototype, "shield", void 0);
            r([y(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([_], e);
        }(p.default);
        i.default = v;
        cc._RF.pop();
    }, {
        "../../../../../../config/GameConfig": "GameConfig",
        "../../../../../../config/GameConst": "GameConst",
        "../../../../../../config/GameEnum": "GameEnum",
        "../../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../../data/storage/GameData": "GameData",
        "../../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../../util/GameFunc": "GameFunc",
        "../../../../../../util/Tools": "Tools",
        "./StageItem": "StageItem"
    }],
    Tools: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "a6cc12Sx+9H+JS4FBoJHSeg", "Tools");
        var n = this && this.__spreadArrays || function () {
            for (var t = 0, e = 0, i = arguments.length; e < i; e++) t += arguments[e].length;
            var n = Array(t), a = 0;
            for (e = 0; e < i; e++) for (var r = arguments[e], o = 0, s = r.length; o < s; o++,
                a++) n[a] = r[o];
            return n;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.DYTools = i.Tools = void 0;
        var a = t("../config/GameConfig"), r = t("../data/storage/GameData"), o = t("../encrypt/AES/aes"), s = t("../frame/manager/FrameManager"), c = function () {
            function t() {
                this._btnAble = !0;
                this.charArr = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"];
                this._aesKey1 = "mdy8155zs2619lfm";
                this._aesKey2 = "s9mnbdk1giu2e3wn";
                this._mapAesKey1 = "ALf023F1fj3Feh23";
                this._mapAesKey2 = "LF318njkFGIY8959";
            }
            t.prototype.sleep = function (t) {
                return new Promise(function (e) {
                    setTimeout(function () {
                        e(1);
                    }, t);
                });
            };
            t.prototype.isBtnClickedAble = function (t, e) {
                var i = this;
                void 0 === t && (t = !0);
                void 0 === e && (e = 200);
                if (this._btnAble) {
                    this._btnAble = !1;
                    setTimeout(function () {
                        i._btnAble = !0;
                    }, e);
                    t && s.FrameMgr.audioMgr.playEffect("ui_click");
                    return !0;
                }
                return !1;
            };
            t.prototype.getPhoneTimestamp = function () {
                var t = new Date();
                return Date.parse(t.toString());
            };
            t.prototype.getCurTimestamp = function () {
                return Math.floor(r.GData.timestamp);
            };
            t.prototype.isLaterDay = function (t) {
                var e = !1, i = new Date(t), n = i.getFullYear(), a = i.getMonth(), r = i.getDate(), o = new Date(this.getCurTimestamp()), s = o.getFullYear(), c = o.getMonth(), l = o.getDate();
                n != s ? n < s && (e = !0) : a != c ? a < c && (e = !0) : r < l && (e = !0);
                return e;
            };
            t.prototype.isLaterDayRefresh = function (t, e) {
                var i = !1, n = this.getCurTimestamp() - t;
                if (n > 0) if (Math.floor(n / 36e5) > 24) i = !0; else {
                    var a = new Date(t), r = a.getDate(), o = a.getHours(), s = new Date(this.getCurTimestamp()), c = a.getDate(), l = s.getHours();
                    e > 0 ? r < c ? l >= e && (i = !0) : r == c && l >= e && o < e && (i = !0) : r < c && (i = !0);
                }
                return i;
            };
            t.prototype.isNextDay = function (t) {
                var e = !1, i = new Date(t), n = i.getHours(), a = i.getMinutes(), r = i.getSeconds(), o = 3600 * (n = 23 - n) + 60 * (a = 59 - a) + (r = 60 - r), s = o + 86400;
                o = t + 1e3 * o;
                s = t + 1e3 * s;
                var c = this.getCurTimestamp();
                o <= c && s > c && (e = !0);
                return e;
            };
            t.prototype.log = function (t) {
                for (var e = [], i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
                a.GConfig.logAble && console.log.apply(console, n([t], e));
            };
            t.prototype.error = function (t) {
                for (var e = [], i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
                console.error.apply(console, n([t], e));
            };
            t.prototype.warn = function (t) {
                for (var e = [], i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
                console.warn.apply(console, n([t], e));
            };
            t.prototype.random_int = function (t, e) {
                if (t > e) {
                    var i = e;
                    e = t;
                    t = i;
                }
                var n = t + (e - t + 1) * Math.random(), a = Math.floor(n);
                a < t ? a = t : a > e && (a = e);
                return a;
            };
            t.prototype.getRandomVec2 = function (t, e) {
                var i = this.random_int(t.x, t.y), n = this.random_int(e.x, e.y);
                return cc.v2(i, n);
            };
            t.prototype.getDictLength = function (t) {
                var e = 0;
                if (t) for (var i in t) null != t[i] && e++;
                return e;
            };
            t.prototype.getStringDivideForIndex = function (t, e, i) {
                var n = t.split(e);
                return i >= 0 && n.length > i ? n[i] : null;
            };
            t.prototype.stringToPoint = function (t, e) {
                void 0 === e && (e = "*");
                var i = cc.Vec2.ZERO;
                if ("" != t) {
                    var n = t.split(e);
                    n.length > 1 && (i = cc.v2(Number(n[0]), Number(n[1])));
                }
                return i;
            };
            t.prototype.stringToSize = function (t, e) {
                void 0 === e && (e = "*");
                var i = cc.Size.ZERO;
                if ("" != t) {
                    var n = t.split(e);
                    n.length > 1 && (i = cc.size(Number(n[0]), Number(n[1])));
                }
                return i;
            };
            t.prototype.stringToNumber = function (t, e) {
                void 0 === e && (e = "*");
                for (var i = [], n = (t = t.toString()).split(e), a = 0; a < n.length; a++) {
                    var r = n[a];
                    "" != r && i.push(Number(r));
                }
                return i;
            };
            t.prototype.getDisForVec2 = function (t, e) {
                return t.sub(e).mag();
            };
            t.prototype.getDisForVec = function (t, e) {
                var i = t.x - e.x, n = t.y - e.y;
                return Math.sqrt(i * i + n * n);
            };
            t.prototype.getDisFromPointToLine = function (t, e, i) {
                var n = cc.v2(t.x, t.y).sub(e), a = i.sub(e), r = n.signAngle(a);
                return n.mag() * Math.sin(r);
            };
            t.prototype.getPointToLineY = function (t, e, i) {
                var n = (e.y - i.y) / (e.x - i.x), a = e.y - n * e.x;
                return n * t.x + a - t.y;
            };
            t.prototype.isLineLine = function (t, e, i, n) {
                var a = (n.y - i.y) * (e.x - t.x) - (n.x - i.x) * (e.y - t.y);
                if (0 !== a) do {
                    var r = ((n.x - i.x) * (t.y - i.y) - (n.y - i.y) * (t.x - i.x)) / a;
                    if (0 > r || r > 1) break;
                    var o = ((e.x - t.x) * (t.y - i.y) - (e.y - t.y) * (t.x - i.x)) / a;
                    if (0 <= o && o <= 1) return !0;
                } while (0);
                return !1;
            };
            t.prototype.getLineCrossPoint = function (t, e, i, n) {
                var a = (t.x - i.x) * (e.y - i.y) - (t.y - i.y) * (e.x - i.x), r = (t.x - n.x) * (e.y - n.y) - (t.y - n.y) * (e.x - n.x);
                if (a * r >= 0) return null;
                var o = (i.x - t.x) * (n.y - t.y) - (i.y - t.y) * (n.x - t.x);
                if (o * (o + a - r) >= 0) return null;
                var s = o / (r - a), c = s * (e.x - t.x), l = s * (e.y - t.y);
                return cc.v2(t.x + c, t.y + l);
            };
            t.prototype.getLimitStr = function (t, e) {
                return this.getStringCharacterLength(t) > e ? this.subStrByCharacter(t, e) + "..." : t;
            };
            t.prototype.getStringCharacterLength = function (t) {
                var e = 0, i = -1;
                if (t) for (var n = 0; n < t.length; n++) e += (i = t.charCodeAt(n)) >= 0 && i <= 128 ? 1 : 2;
                return e;
            };
            t.prototype.subStrByCharacter = function (t, e) {
                for (var i = 0, n = 0, a = -1, r = 0; r < t.length && !((n += (a = t.charCodeAt(r)) >= 0 && a <= 128 ? 1 : 2) > e); r++) i += 1;
                return t.substring(0, i);
            };
            t.prototype.numberDiffAbs = function (t, e) {
                return Math.abs(t - e);
            };
            t.prototype.numberDiff = function (t, e) {
                return t - e;
            };
            t.prototype.isNumberDiffRange = function (t, e, i) {
                return this.numberDiffAbs(t, e) <= i;
            };
            t.prototype.isAbsNumDiffRange = function (t, e, i) {
                var n = Math.abs(t), a = Math.abs(t);
                return Math.abs(n - a) <= i;
            };
            t.prototype.isVec2DiffRange = function (t, e, i) {
                var n = t.sub(e);
                return Math.abs(n.x) <= i && Math.abs(n.y) <= i;
            };
            t.prototype.numberToString2 = function (t) {
                var e = "", i = "";
                if ((t = Math.floor(t)) < 1e3) e = t.toString(); else {
                    var n = 0, a = 0;
                    if (t >= 1e6) {
                        n = Math.floor(t / 1e6);
                        a = Math.floor(t % 1e6 / 1e5);
                        i = "m";
                    } else if (t >= 1e3) {
                        n = Math.floor(t / 1e3);
                        a = Math.floor(t % 1e3 / 100);
                        i = "k";
                    }
                    e = n > 99 ? n.toString() : a > 0 ? n + "." + a : n.toString();
                }
                return e + i;
            };
            t.prototype.numberToString = function (t) {
                var e = "", i = "";
                if (t < 1e3) e = t.toString(); else {
                    var n = 0, a = 0, r = 0;
                    if (t >= 1e6) {
                        n = Math.floor(t / 1e6);
                        a = Math.floor(t % 1e6 / 1e5);
                        r = Math.floor(t % 1e5 / 1e4);
                        i = "m";
                    } else if (t >= 1e3) {
                        n = Math.floor(t / 1e3);
                        a = Math.floor(t % 1e3 / 100);
                        r = Math.floor(t % 100 / 10);
                        i = "k";
                    }
                    e = n > 99 ? n.toString() : n > 9 ? 0 == a ? n.toString() : n + "." + a : 0 == r ? 0 == a ? n.toString() : n + "." + a : n + "." + a + r;
                }
                return e + i;
            };
            t.prototype.getTime = function (t) {
                var e = [], i = Math.floor(t / 3600), n = Math.floor((t - 3600 * i) / 60), a = Math.floor(t % 60);
                e.push(i);
                e.push(n);
                e.push(a);
                return e;
            };
            t.prototype.getTimeStrForMS = function (t) {
                var e = "00:00";
                if (t < 60) e = "00:" + this.getTimeStrDouble(t); else if (t < 3600) {
                    var i = Math.floor(t / 60), n = Math.floor(t % 60);
                    e = this.getTimeStrDouble(i) + ":" + this.getTimeStrDouble(n);
                } else if (t < 216e3) {
                    var a = Math.floor(t / 3600), r = Math.floor(t % 3600);
                    i = Math.floor(r / 60), n = Math.floor(r % 60);
                    e = this.getTimeStrDouble(a) + ":" + this.getTimeStrDouble(i) + ":" + this.getTimeStrDouble(n);
                }
                return e;
            };
            t.prototype.getTimeStrForHMS = function (t) {
                var e = "00:00:00";
                if (t < 60) e = "00:00:" + this.getTimeStrDouble(t); else if (t < 3600) {
                    var i = Math.floor(t / 60), n = Math.floor(t % 60);
                    e = "00:" + this.getTimeStrDouble(i) + ":" + this.getTimeStrDouble(n);
                } else if (t < 216e3) {
                    var a = Math.floor(t / 3600), r = Math.floor(t % 3600);
                    i = Math.floor(r / 60), n = Math.floor(r % 60);
                    e = this.getTimeStrDouble(a) + ":" + this.getTimeStrDouble(i) + ":" + this.getTimeStrDouble(n);
                }
                return e;
            };
            t.prototype.getTimeStrForSFM = function (t) {
                var e = "";
                if ((t = Math.ceil(t)) < 60) e = t + "m"; else if (t < 3600) {
                    e = (i = Math.floor(t / 60)) + "f";
                    (n = Math.floor(t % 60)) > 0 && (e = e + n + "m");
                } else if (t < 86400) {
                    var i, n, a = Math.floor(t / 3600), r = Math.floor(t % 3600);
                    e = a + "s";
                    (i = Math.floor(r / 60)) > 0 && (e = e + i + "f");
                    (n = Math.floor(r % 60)) > 0 && (e = e + n + "m");
                }
                return e;
            };
            t.prototype.getTimeStrForSFM2 = function (t) {
                var e = "";
                if ((t = Math.ceil(t)) < 60) e = t + "m"; else if (t < 3600) {
                    e = (a = Math.floor(t / 60)) + "f";
                    (r = Math.floor(t % 60)) > 0 && (e = e + r + "m");
                } else if (t < 86400) {
                    var i = Math.floor(t / 3600), n = Math.floor(t % 3600), a = Math.floor(n / 60), r = Math.floor(n % 60);
                    e = i + "s";
                    a > 0 && (e = e + a + "f");
                }
                return e;
            };
            t.prototype.getTimeStrForDSFM2 = function (t) {
                var e = "";
                if ((t = Math.ceil(t)) < 3600) e = Math.floor(t / 60) + "m" + Math.floor(t % 60) + "s"; else if (t < 86400) {
                    var i = Math.floor(t / 3600), n = Math.floor(t % 3600);
                    e = i + "h" + Math.floor(n / 60) + "m";
                } else {
                    var a = Math.floor(t / 86400), r = Math.floor(t % 86400);
                    e = a + "d" + (i = Math.ceil(r / 3600)) + "h";
                }
                return e;
            };
            t.prototype.getTimeStrDouble = function (t) {
                var e = "00";
                (t = parseInt(t.toFixed(0))) < 10 ? e = "0" + t : t < 60 && (e = t + "");
                return e;
            };
            t.prototype.arrRemove = function (t, e) {
                for (var i = 0; i < t.length; i++) if (t[i] == e) {
                    t.splice(i, 1);
                    return !0;
                }
                return !1;
            };
            t.prototype.arrContain = function (t, e) {
                return !(!t || null == e || null == e) && t.indexOf(e) >= 0;
            };
            t.prototype.arrContainPos = function (t, e) {
                for (var i = 0; i < t.length; i++) if (t[i].equals(e)) return !0;
            };
            t.prototype.arrMove = function (t, e, i) {
                void 0 === i && (i = !1);
                i && (t = this.copyArray(t));
                var n = t.length;
                (e %= n) < 0 && (e = n - Math.abs(e));
                t = this.reverse(t, 0, n - e - 1);
                t = this.reverse(t, n - e, n - 1);
                return this.reverse(t, 0, n - 1);
            };
            t.prototype.reverse = function (t, e, i) {
                for (; e < i; e++, i--) {
                    var n = t[e];
                    t[e] = t[i];
                    t[i] = n;
                }
                return t;
            };
            t.prototype.getRandomInArray = function (t, e) {
                void 0 === e && (e = !1);
                var i = t.length, n = i > 0 ? this.random_int(0, i - 1) : -1;
                if (n >= 0) {
                    var a = t[n];
                    e && t.splice(n, 1);
                    return a;
                }
                return null;
            };
            t.prototype.getRandomCountInArray = function (t, e, i) {
                void 0 === i && (i = !1);
                for (var n = [], a = this.copyArray(t), r = 0; r < e; r++) {
                    var o = a.length, s = o > 0 ? this.random_int(0, o - 1) : -1;
                    if (!(s >= 0)) break;
                    n.push(a[s]);
                    a.splice(s, 1);
                }
                if (i) for (var c = 0, l = n; c < l.length; c++) {
                    var h = l[c];
                    this.arrRemove(t, h);
                }
                return n;
            };
            t.prototype.copyArray = function (t) {
                for (var e = [], i = 0, n = t; i < n.length; i++) {
                    var a = n[i];
                    e.push(a);
                }
                return e;
            };
            t.prototype.arrayInsert = function (t, e, i) {
                if (t.length > e) {
                    var n = t.splice(e, t.length);
                    t.push(i);
                    t = t.concat(n);
                } else t.push(i);
                return t;
            };
            t.prototype.arrayInsertRandom = function (t, e) {
                var n = -1, a = t.length;
                a > 0 && (n = i.DYTools.random_int(0, a));
                if (n >= 0 && a > n) {
                    var r = t.splice(n, a);
                    t.push(e);
                    t = t.concat(r);
                } else t.push(e);
                return t;
            };
            t.prototype.addScript = function (t, e) {
                if (t && e) {
                    var i = t.getComponent(e);
                    i || (i = t.addComponent(e));
                    return i;
                }
                return null;
            };
            t.prototype.removeChildByName = function (t, e) {
                if (t) {
                    var i = t.getChildByName(e);
                    i && i.destroy();
                }
            };
            t.prototype.clearArrayForComp = function (t) {
                if (t) {
                    t.forEach(function (t) {
                        t && t.node && t.node.destroy();
                    });
                    t.splice(0);
                }
            };
            t.prototype.clearArrayForNode = function (t) {
                if (t) {
                    t.forEach(function (t) {
                        cc.isValid(t) && t.destroy();
                    });
                    t.splice(0);
                }
            };
            t.prototype.clearMapForNode = function (t) {
                if (t) {
                    t.forEach(function (t) {
                        t && cc.isValid(t) && t.destroy();
                    });
                    t.clear();
                }
            };
            t.prototype.clearMapForNodeArr = function (t) {
                if (t) {
                    t.forEach(function (t) {
                        t.forEach(function (t) {
                            t && t.destroy();
                        });
                    });
                    t.clear();
                }
            };
            t.prototype.clearMapForComp = function (t) {
                if (t) {
                    t.forEach(function (t) {
                        t && t.node && t.node.destroy();
                    });
                    t.clear();
                }
            };
            t.prototype.clearMapForCompArr = function (t) {
                if (t) {
                    t.forEach(function (t) {
                        t.forEach(function (t) {
                            t && t.node && t.node.destroy();
                        });
                    });
                    t.clear();
                }
            };
            t.prototype.clearNodePool = function (t) {
                if (t) {
                    for (; t.size() > 0;) {
                        var e = t.get();
                        e && e.destroy();
                    }
                    t.clear();
                }
            };
            t.prototype.getLineDegrees = function (t, e, i, n) {
                var a = cc.v2(i, n).sub(cc.v2(t, e)), r = cc.v2(0, -1), o = a.signAngle(r);
                return cc.misc.radiansToDegrees(o);
            };
            t.prototype.getDegreeForDir = function (t) {
                var e = 0, i = cc.v2(0, -1);
                if (t.equals(i) || t.equals(cc.Vec2.ZERO)) return e;
                var n = t.signAngle(i);
                return cc.misc.radiansToDegrees(n);
            };
            t.prototype.getDir = function (t, e, i, n) {
                return cc.v2(i, n).sub(cc.v2(t, e)).normalize();
            };
            t.prototype.getVecDegree = function (t) {
                var e = Math.sqrt(t.x * t.x + t.y * t.y);
                if (0 == e) return 0;
                var i = cc.misc.radiansToDegrees(Math.asin(t.x / e));
                t.y < 0 && (i = 180 - i);
                (i = -i) > 360 ? i -= 360 : i < 0 && (i += 360);
                return i;
            };
            t.prototype.getAngle = function (t, e) {
                var i = e.x - t.x, n = e.y - t.y, a = Math.sqrt(i * i + n * n);
                if (0 == a) return 0;
                var r = cc.misc.radiansToDegrees(Math.asin(i / a));
                n < 0 && (r = 180 - r);
                (r = -r) > 180 ? r -= 360 : r < -180 && (r += 360);
                return r;
            };
            t.prototype.getPositionByAngle = function (t, e) {
                var i = Math.sqrt(t.x * t.x + t.y * t.y), n = (Math.atan2(t.y, t.x) / Math.PI * 180 + e) / 180 * Math.PI;
                return {
                    x: Math.cos(n) * i,
                    y: Math.sin(n) * i
                };
            };
            t.prototype.getResetDegree = function (t) {
                t > 0 ? t -= 360 * Math.floor(t / 360) : t < 0 && (t += 360 * Math.ceil(Math.abs(t / 360)));
                return t;
            };
            t.prototype.getSingedResetAngle = function (t) {
                t > 180 ? t -= 360 * Math.ceil(t / 360) : t < -180 && (t += 360 * Math.ceil(Math.abs(t / 360)));
                return t;
            };
            t.prototype.getRandomUserId = function () {
                for (var t = this.charArr.length - 1, e = "", i = 0; i < 32; i++) {
                    var n = this.random_int(0, t);
                    e += this.charArr[n];
                }
                return e;
            };
            t.prototype.getRandomAdId = function () {
                for (var t = this.charArr.length - 1, e = "", i = 0; i < 64; i++) {
                    var n = this.random_int(0, t);
                    e += this.charArr[n];
                }
                return e;
            };
            t.prototype.checkCircleCircle = function (t, e, i, n) {
                var a = t.sub(i), r = e + n;
                return !(a.x > r || a.y > r) && a.magSqr() <= r * r;
            };
            t.prototype.checkCircleRect = function (t, e, i, n) {
                return Math.abs(i.x - t.x) <= n.width / 2 + e && Math.abs(i.y - t.y) <= n.height / 2 + e;
            };
            t.prototype.checkRectRect = function (t, e, i, n) {
                var a = Math.abs(t.x - i.x), r = Math.abs(t.y - i.y), o = (e.width + n.width) / 2, s = (e.height + n.height) / 2;
                return a <= o && r <= s;
            };
            t.prototype.checkCircleRotateRect = function (t, e, i, n, a) {
                var r = this.getAngle(i, t) - a, o = Math.sqrt(Math.abs(t.x - i.x) * Math.abs(t.x - i.x) + Math.abs(t.y - i.y) * Math.abs(t.y - i.y)), s = -Math.sin(r / 180 * Math.PI) * o, c = Math.cos(r / 180 * Math.PI) * o;
                return Math.abs(s) <= n.width / 2 + e && Math.abs(c) <= n.height / 2 + e;
            };
            t.prototype.setNumberDict = function (t, e, i) {
                void 0 === i && (i = {});
                if (t.hasOwnProperty(e)) {
                    var n = t[e];
                    if ("" != n) {
                        var a = {};
                        for (var r in n) {
                            var o = parseInt(r), s = parseInt(n[o]);
                            a[o] = s;
                        }
                        return a;
                    }
                    return i;
                }
                return i;
            };
            t.prototype.setInt = function (t, e, i) {
                void 0 === i && (i = 0);
                if (t.hasOwnProperty(e)) {
                    var n = t[e];
                    if ("" != n) {
                        var a = parseInt(n);
                        return a != a ? i : a;
                    }
                    return i;
                }
                return i;
            };
            t.prototype.setIntArr = function (t, e, i) {
                void 0 === i && (i = "*");
                if (t.hasOwnProperty(e)) {
                    var n = t[e], a = null;
                    if (i) {
                        a = [];
                        for (var r = String(n).split(i), o = 0; o < r.length; o++) {
                            var s = r[o];
                            "" != s && a.push(parseInt(s));
                        }
                    } else a = n;
                    return a;
                }
                return [];
            };
            t.prototype.setIntDict = function (t, e) {
                if (t.hasOwnProperty(e)) {
                    var i = {}, n = t[e];
                    for (var a in n) {
                        var r = parseInt(a), o = parseInt(i[r]);
                        i[r] = o;
                    }
                    return i;
                }
                return {};
            };
            t.prototype.setNum = function (t, e, i) {
                void 0 === i && (i = 0);
                if (t.hasOwnProperty(e)) {
                    var n = t[e], a = Number(n);
                    return a != a ? i : a;
                }
                return i;
            };
            t.prototype.setNumArr = function (t, e, n, a) {
                void 0 === a && (a = "*");
                if (t.hasOwnProperty(e)) {
                    var r, o = t[e];
                    (r = a ? i.DYTools.stringToNumber(o, a) : o).length;
                    n && r.length;
                    return r;
                }
                return [];
            };
            t.prototype.setNumDict = function (t, e) {
                if (t.hasOwnProperty(e)) {
                    var i = {}, n = t[e];
                    for (var a in n) {
                        var r = Number(a), o = Number(i[r]);
                        i[r] = o;
                    }
                    return i;
                }
                return {};
            };
            t.prototype.setVec2 = function (t, e, n) {
                void 0 === n && (n = "*");
                if (t.hasOwnProperty(e)) {
                    var a = t[e];
                    return i.DYTools.stringToPoint(a, n);
                }
                return cc.Vec2.ZERO;
            };
            t.prototype.setVec2Arr = function (t, e) {
                if (t.hasOwnProperty(e)) {
                    var n = t[e], a = [];
                    if ("" != n) for (var r = n.split("#"), o = 0; o < r.length; o++) {
                        var s = i.DYTools.stringToPoint(r[o], "*");
                        a.push(s);
                    }
                    return a;
                }
                return [];
            };
            t.prototype.setString = function (t, e) {
                if (t.hasOwnProperty(e)) {
                    var i = t[e];
                    return String(i);
                }
                return "";
            };
            t.prototype.setStringArr = function (t, e, i, n) {
                void 0 === i && (i = "*");
                if (t.hasOwnProperty(e)) {
                    var a = t[e], r = String(a);
                    if ("" == r) return [];
                    var o = r.split(i);
                    o.length;
                    n && o.length;
                    return o;
                }
                return [];
            };
            t.prototype.setJsonData = function (t, e, i) {
                if (t.hasOwnProperty(e)) {
                    var n = t[e], a = new i();
                    a.loadJson(n);
                    return a;
                }
                return null;
            };
            t.prototype.setJsonDataArr = function (t, e, i) {
                var n = [];
                if (t.hasOwnProperty(e)) for (var a = t[e], r = 0; r < a.length; r++) {
                    var o = new i();
                    o.loadJson(a[r]);
                    n.push(o);
                }
                return n;
            };
            t.prototype.initAES = function () {
                this._aesKey1 = "mdy8155zs2619lfm";
                this._aesKey2 = "s9mnbdk1giu2e3wn";
            };
            t.prototype.AESEncode = function (t) {
                var e = o.CryptoJS.enc.Latin1.parse(this._aesKey1), i = o.CryptoJS.enc.Latin1.parse(this._aesKey2);
                return o.CryptoJS.AES.encrypt(t, e, {
                    iv: i,
                    mode: o.CryptoJS.mode.CBC,
                    padding: o.CryptoJS.pad.ZeroPadding
                }).toString();
            };
            t.prototype.AESDecode = function (t) {
                var e = o.CryptoJS.enc.Latin1.parse(this._aesKey1), i = o.CryptoJS.enc.Latin1.parse(this._aesKey2), n = o.CryptoJS.AES.decrypt(t, e, {
                    iv: i,
                    mode: o.CryptoJS.mode.CBC,
                    padding: o.CryptoJS.pad.ZeroPadding
                });
                return o.CryptoJS.enc.Utf8.stringify(n);
            };
            t.prototype.MapAESEncode = function (t) {
                var e = o.CryptoJS.enc.Latin1.parse(this._mapAesKey1), i = o.CryptoJS.enc.Latin1.parse(this._mapAesKey2);
                return o.CryptoJS.AES.encrypt(t, e, {
                    iv: i,
                    mode: o.CryptoJS.mode.CBC,
                    padding: o.CryptoJS.pad.ZeroPadding
                }).toString();
            };
            t.prototype.MAPAESDecode = function (t) {
                var e = o.CryptoJS.enc.Latin1.parse(this._mapAesKey1), i = o.CryptoJS.enc.Latin1.parse(this._mapAesKey2), n = o.CryptoJS.AES.decrypt(t, e, {
                    iv: i,
                    mode: o.CryptoJS.mode.CBC,
                    padding: o.CryptoJS.pad.ZeroPadding
                });
                return o.CryptoJS.enc.Utf8.stringify(n);
            };
            t.instance = new t();
            return t;
        }();
        i.Tools = c;
        i.DYTools = c.instance;
        cc._RF.pop();
    }, {
        "../config/GameConfig": "GameConfig",
        "../data/storage/GameData": "GameData",
        "../encrypt/AES/aes": "aes",
        "../frame/manager/FrameManager": "FrameManager"
    }],
    TouchNode: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "17404Wx4RlDSLfhtTzS2zI3", "TouchNode");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConst"), s = t("../../../../../config/GameEnum"), c = t("../../../../../data/manager/ConfigDataManager"), l = t("../../../../../frame/manager/FrameManager"), h = t("../../../../battle/manager/battle/BattleManager"), u = t("../../../../battle/manager/battle/GameRuleManager"), p = t("../../../../battle/manager/common/GuideManager"), d = t("../../../../battle/manager/battle/SnakeManager"), f = t("../../../../../data/storage/GameData"), m = cc._decorator, g = m.ccclass, _ = m.property, y = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.bgNode = null;
                e.touchBg = null;
                e.touchPoint = null;
                e.touchLight = null;
                e.showBack = null;
                e.showPoint = null;
                e.showLight = null;
                e.fontNode = null;
                e.fontBg = null;
                e.normalFontNode = null;
                e.guideFontNode = null;
                e.arrowNode = null;
                e.atlas = null;
                e.touchRange = 100;
                e.touchPos = cc.Vec2.ZERO;
                e.winSize = cc.Size.ZERO;
                e.dirNormalize = cc.Vec2.ZERO;
                e._firstTouchId = -1;
                e.hideTime = 1.5;
                e.joyRat = 0;
                e.touchMoveCall = null;
                e._responseRadius = 0;
                e._stopRadius = 0;
                e._responseAble = !0;
                return e;
            }
            e.prototype.setInitBgPos = function () {
                var t = 275 - o.GValue.ViewCenter.y;
                this.touchBg.y = t;
                this.touchBg.x = 0;
                this.showBack.y = t;
                this.showBack.x = 0;
                this.showPoint.y = t;
                this.showPoint.x = 0;
                this.fontNode.y = 510 - o.GValue.ViewCenter.y;
                this.showLight.angle = 0;
                this.touchLight.angle = 0;
            };
            e.prototype._disPlayShow = function (t) {
                this.showBack.active = t;
                this.showPoint.active = t;
                this.showBack.opacity = 255;
                this.showPoint.opacity = 255;
            };
            e.prototype._disPlayLogic = function (t) {
                this.touchBg.active = t;
                this.touchPoint.active = t;
            };
            e.prototype.onTouchStart = function (t) {
                -1 == this._firstTouchId && (this._firstTouchId = t.getID());
                if (this._firstTouchId == t.getID() && u.GameRuleMgr.isInBattle()) {
                    this.touchStart2(t);
                    p.GuideMgr.guideAble(s.GuideType.FirstBattle) ? l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Touch) : 2 == h.BattleMgr.stage && l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage2Start);
                }
            };
            e.prototype.touchStart2 = function (t) {
                if (2 == f.GData.getTouchType()) {
                    this._disPlayLogic(!0);
                    this._disPlayShow(!1);
                } else this._disPlayShow(!0);
                this._hideBackGround();
                this.touchBg.x = t.getLocationX() - this.winSize.width / 2;
                this.touchBg.y = t.getLocationY() - this.winSize.height / 2;
                this.touchPoint.position = this.touchBg.position;
                this.touchPos = cc.v2(this.touchBg.x, this.touchBg.y);
                this.scheduleOnce(this._hide, this.hideTime);
                l.FrameMgr.noticeMgr.emit(s.EventTypeEnum.TouchStart);
                this.touchMoveCall = this._moveResponse.bind(this);
                1 == f.GData.getTouchType() && (this.showBack.position = this.touchBg.position);
                this.showPoint.position = this.showBack.position;
            };
            e.prototype._hide = function () {
                cc.tween(this.touchBg).to(.3, {
                    opacity: 76.5
                }).start();
                cc.tween(this.touchPoint).to(.3, {
                    opacity: 76.5
                }).start();
                cc.tween(this.showBack).to(.3, {
                    opacity: 76.5
                }).start();
                cc.tween(this.showPoint).to(.3, {
                    opacity: 76.5
                }).start();
            };
            e.prototype.onTouchMove = function (t) {
                this._firstTouchId == t.getID() && this._responseAble && this.touchMoveCall && this.touchMoveCall(t);
            };
            e.prototype._moveResponse = function (t) {
                var e = cc.Vec2.ZERO;
                e.x = t.getLocationX() - this.winSize.width / 2;
                e.y = t.getLocationY() - this.winSize.height / 2;
                var i = cc.Vec2.distance(e, this.touchPos);
                i > this._responseRadius && (this.touchMoveCall = this._move.bind(this));
                var n = e.sub(this.touchPos).normalize().mul(Math.min(i, this.touchRange));
                this.showPoint.x = n.x + this.showBack.x;
                this.showPoint.y = n.y + this.showBack.y;
            };
            e.prototype._move = function (t) {
                var e = cc.Vec2.ZERO;
                e.x = t.getLocationX() - this.winSize.width / 2;
                e.y = t.getLocationY() - this.winSize.height / 2;
                var i = e.sub(this.touchPos), n = cc.Vec2.distance(e, this.touchPos);
                this.joyRat = n / this.touchRange;
                this.joyRat = Math.min(1, this.joyRat);
                this.joyRat = Math.pow(this.joyRat, 1 / 3);
                this.touchPoint.x = e.x;
                this.touchPoint.y = e.y;
                this.dirNormalize = i.normalize();
                n <= this._stopRadius && (this.dirNormalize = cc.Vec2.ZERO);
                if (n > this.touchRange) {
                    var a = e.sub(this.dirNormalize.mul(this.touchRange));
                    this.setBgNodePos(a);
                }
                l.FrameMgr.noticeMgr.emit(s.EventTypeEnum.TouchMove, {
                    dir: this.dirNormalize,
                    joyRat: this.joyRat
                });
                var r = this.dirNormalize.mul(Math.min(n, this.touchRange));
                this.showPoint.x = r.x + this.showBack.x;
                this.showPoint.y = r.y + this.showBack.y;
                if (!r.equals(cc.Vec2.ZERO)) {
                    this.showLight.angle = cc.misc.radiansToDegrees(cc.v2(0, 1).signAngle(r));
                    this.touchLight.angle = this.showLight.angle;
                }
            };
            e.prototype.setBgNodePos = function (t) {
                this.touchBg.x = t.x;
                this.touchBg.y = t.y;
                this.touchPos.x = t.x;
                this.touchPos.y = t.y;
            };
            e.prototype.onTouchEnd = function (t) {
                if (t) this._firstTouchId == t.getID() && this._responseAble && u.GameRuleMgr.isInBattle() && this.touchEnd2(); else {
                    this._firstTouchId = -1;
                    this.touchEnd2();
                }
            };
            e.prototype.touchEnd2 = function () {
                if (this._responseAble) {
                    l.FrameMgr.noticeMgr.emit(s.EventTypeEnum.TouchEnd);
                    this.setInitBgPos();
                    this._showBackGround();
                    this._disPlayLogic(!1);
                    this._disPlayShow(h.BattleMgr.slowAble);
                    this.unschedule(this._hide);
                    this.touchPos = cc.Vec2.ZERO;
                    this.showPoint.x = this.showBack.x;
                    this.showPoint.y = this.showBack.y;
                    h.BattleMgr.slowAble || l.FrameMgr.noticeMgr.emit(s.EventTypeEnum.TouchMove, {
                        dir: cc.Vec2.ZERO,
                        joyRat: 0
                    });
                    this.touchMoveCall = null;
                }
            };
            e.prototype._showBackGround = function () {
                if (h.BattleMgr.slowAble) {
                    if (p.GuideMgr.getDestOver() && !this.normalFontNode.active) {
                        this.normalFontNode.active = !0;
                        this.guideFontNode.active = !1;
                    }
                    this.bgNode.active = !0;
                    this.fontNode.active = !0;
                    var t = c.ConfigDataMgr.getGlobalDataNumArr(s.GlobalKey.Slow);
                    this.bgNode.stopAllActions();
                    this.bgNode.opacity = 0;
                    this.fontNode.opacity = 0;
                    cc.tween(this.bgNode).delay(t[0]).to(1, {
                        opacity: 178.5
                    }).start();
                    this.fontNode.stopAllActions();
                    cc.tween(this.fontNode).delay(t[0]).to(1, {
                        opacity: 255
                    }).start();
                }
            };
            e.prototype._hideBackGround = function () {
                this.bgNode.stopAllActions();
                this.fontNode.stopAllActions();
                this.bgNode.active = !1;
                this.fontNode.active = !1;
                if (p.GuideMgr.getDestOver() && !this.normalFontNode.active) {
                    this.normalFontNode.active = !0;
                    this.guideFontNode.active = !1;
                }
            };
            e.prototype._hideAll = function () {
                this.bgNode.stopAllActions();
                this.fontNode.stopAllActions();
                this.bgNode.active = !1;
                this.fontNode.active = !1;
                this._disPlayShow(!1);
                this._disPlayLogic(!1);
            };
            e.prototype.onTouchCancel = function (t) {
                this._firstTouchId == t.getID() && u.GameRuleMgr.isInBattle() && this.touchEnd2();
            };
            e.prototype.onEnable = function () {
                this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
                this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
                this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
                this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.GameStateChange, this.onGameStateChange, this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.BossEnter, this.onGuideBegin, this);
                l.FrameMgr.noticeMgr.on(s.EventTypeEnum.BossBattle, this.onGuideOver, this);
            };
            e.prototype.onDisable = function () {
                this.node.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
                this.node.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
                this.node.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
                this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);
                l.FrameMgr.noticeMgr.off(s.EventTypeEnum.GameStateChange, this.onGameStateChange, this);
                l.FrameMgr.noticeMgr.off(s.EventTypeEnum.BossEnter, this.onGuideBegin, this);
                l.FrameMgr.noticeMgr.off(s.EventTypeEnum.BossBattle, this.onGuideOver, this);
            };
            e.prototype.start = function () {
                this.setInitBgPos();
                this.touchPoint.position = this.touchBg.position;
                this.winSize = o.GValue.ViewSize;
                o.GValue.IPADWidth > 0 && (this.winSize.width = o.GValue.IPADWidth);
                this.node.width = this.winSize.width;
                this.node.height = this.winSize.height;
                var t = c.ConfigDataMgr.getGlobalDataNumArr(s.GlobalKey.Joystick);
                if (t.length >= 3) {
                    var e = 2 * (d.SnakeMgr.touchSize ? d.SnakeMgr.touchSize : t[0]);
                    this.initBgWidth(e);
                    this._responseRadius = 10;
                    this._stopRadius = t[2];
                }
                this.checkGuide();
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                l.FrameMgr.languageMgr.setImage(this.normalFontNode.getComponent(cc.Sprite), this.atlas, "touch_guide_zi");
                this.guideFontNode && l.FrameMgr.languageMgr.setImage(this.guideFontNode.getComponent(cc.Sprite), this.atlas, "touch_guide_zi");
            };
            e.prototype.checkGuide = function () {
                if (p.GuideMgr.guideAble(s.GuideType.FirstBattle)) {
                    this.normalFontNode.active = !1;
                    this.fontBg.active = !1;
                    this.guideFontNode.active = !0;
                    this.fontNode.opacity = 255;
                } else {
                    this.guideFontNode.destroy();
                    this.guideFontNode = null;
                }
                switch (h.BattleMgr.stage) {
                    case 1:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage1);
                        break;

                    case 2:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage2);
                        break;

                    case 3:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage3);
                        break;

                    case 4:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage4);
                        break;

                    case 5:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage5);
                        break;

                    case 6:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage6);
                        break;

                    case 7:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage7);
                        break;

                    case 8:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage8);
                        break;

                    case 9:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage9);
                        break;

                    case 10:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage10);
                        break;

                    case 11:
                        l.FrameMgr.reportMgr.sendReportLoading(s.LoadingStep.Stage11);
                }
            };
            e.prototype.onGameStateChange = function (t) {
                switch (t) {
                    case s.GameState.Over:
                    case s.GameState.WillOver:
                    case s.GameState.SnakeDie:
                        this._hideAll();
                        l.FrameMgr.noticeMgr.emit(s.EventTypeEnum.TouchStart);
                        break;

                    case s.GameState.SnakeRelive:
                        this.setInitBgPos();
                        this._showBackGround();
                        this._disPlayShow(!0);
                        this.unschedule(this._hide);
                        this.touchPos = cc.Vec2.ZERO;
                        this.showPoint.x = this.showBack.x;
                        this.showPoint.y = this.showBack.y;
                        l.FrameMgr.noticeMgr.emit(s.EventTypeEnum.TouchEnd);
                        this.touchMoveCall = null;
                }
            };
            e.prototype.initBgWidth = function (t) {
                this.touchRange = 60;
                this.touchBg.width = t;
                this.touchBg.height = t;
                this.touchLight.scaleX = t / this.showBack.width;
                this.touchLight.scaleY = t / this.showBack.height;
                this.showBack.width = t;
                this.showBack.height = t;
                this.showLight.scaleX = this.touchLight.scaleX;
                this.showLight.scaleY = this.touchLight.scaleY;
            };
            e.prototype.onGuideBegin = function () {
                this.onTouchEnd();
                this._responseAble = !1;
                this.bgNode.active = !0;
                this.bgNode.opacity = 170;
                this.node.opacity = 1;
            };
            e.prototype.onGuideOver = function () {
                this.node.opacity = 255;
                this._responseAble = !0;
            };
            r([_(cc.Node)], e.prototype, "bgNode", void 0);
            r([_(cc.Node)], e.prototype, "touchBg", void 0);
            r([_(cc.Node)], e.prototype, "touchPoint", void 0);
            r([_(cc.Node)], e.prototype, "touchLight", void 0);
            r([_(cc.Node)], e.prototype, "showBack", void 0);
            r([_(cc.Node)], e.prototype, "showPoint", void 0);
            r([_(cc.Node)], e.prototype, "showLight", void 0);
            r([_(cc.Node)], e.prototype, "fontNode", void 0);
            r([_(cc.Node)], e.prototype, "fontBg", void 0);
            r([_(cc.Node)], e.prototype, "normalFontNode", void 0);
            r([_(cc.Node)], e.prototype, "guideFontNode", void 0);
            r([_(cc.Node)], e.prototype, "arrowNode", void 0);
            r([_(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([g], e);
        }(cc.Component);
        i.default = y;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../battle/manager/battle/BattleManager": "BattleManager",
        "../../../../battle/manager/battle/GameRuleManager": "GameRuleManager",
        "../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "../../../../battle/manager/common/GuideManager": "GuideManager"
    }],
    TrapBallBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "8aaa2Euj61LtYucK+vFv40p", "TrapBallBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("../../common/EntityBase"), c = cc._decorator, l = c.ccclass, h = (c.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_group = o.ColliderGroup.TrapBall;
                    e.m_attack = 0;
                    return e;
                }
                e.prototype.getAttack = function () {
                    return this.m_attack;
                };
                return r([l], e);
            }(s.default));
        i.default = h;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../common/EntityBase": "EntityBase"
    }],
    TrapBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "98c78nnDVFDGoKV8jYIhjQe", "TrapBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../config/GameEnum"), s = t("../MapEntityBase"), c = cc._decorator, l = c.ccclass, h = (c.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_type = o.TrapType.None;
                    e.m_data = null;
                    e.m_trapCD = 0;
                    e.m_cdTime = 0;
                    return e;
                }
                Object.defineProperty(e.prototype, "type", {
                    get: function () {
                        return this.m_type;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.reset = function () {
                    this.m_cdTime = 0;
                };
                e.prototype.updateLogic = function () { };
                e.prototype.updateCD = function (t) {
                    this.m_cdTime += t;
                    if (this.m_cdTime > this.m_trapCD) {
                        this.m_cdTime = 0;
                        return !0;
                    }
                    return !1;
                };
                return r([l], e);
            }(s.default));
        i.default = h;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../MapEntityBase": "MapEntityBase"
    }],
    TrapQuicksandEntity: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "56a49O/t4hLKKkW0PpEx2DD", "TrapQuicksandEntity");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../util/Tools"), c = t("../../../manager/battle/SnakeManager"), l = t("../TrapBase"), h = cc._decorator, u = h.ccclass, p = h.property, d = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.anim1 = null;
                e.anim2 = null;
                e.m_dirTag = 0;
                e.m_scaleX = 1;
                e.m_scaleY = 1;
                e.m_stayDuration = 0;
                e.m_velocity = 0;
                e.m_width = 0;
                e.m_height = 0;
                e.m_stayTime = 0;
                e.m_state = 0;
                e.m_speed2 = null;
                e.m_animVelocity = 300;
                e.m_hasTarget = !1;
                e.m_curAnim = null;
                e.m_animState = null;
                return e;
            }
            e.prototype.init = function (t, e) {
                this.m_type = o.TrapType.Quicksand;
                this.m_data = e;
                this.node.x = t.x;
                this.node.y = t.y;
                this.initData();
                this.initUI(t.ui);
                this.m_cdTime = this.m_trapCD - e.delay;
            };
            e.prototype.initData = function () {
                this.m_dirTag = this.m_data.param[0];
                this.m_scaleX = this.m_data.param[1];
                this.m_scaleY = this.m_data.param[2];
                this.m_stayDuration = this.m_data.param[3];
                this.m_trapCD = this.m_data.param[4];
                this.m_velocity = this.m_data.param[5];
                if (this.m_dirTag > 0) {
                    switch (this.m_dirTag) {
                        case 1:
                            this.m_speed2 = cc.v2(0, 1).mul(this.m_velocity);
                            this.m_width = 80 * this.m_scaleX;
                            this.m_height = 140 * this.m_scaleY;
                            break;

                        case 2:
                            this.node.angle = 180;
                            this.m_speed2 = cc.v2(0, -1).mul(this.m_velocity);
                            this.m_width = 80 * this.m_scaleX;
                            this.m_height = 140 * this.m_scaleY;
                            break;

                        case 3:
                            this.m_speed2 = cc.v2(-1, 0).mul(this.m_velocity);
                            this.node.angle = 90;
                            this.m_width = 140 * this.m_scaleY;
                            this.m_height = 80 * this.m_scaleX;
                            break;

                        case 4:
                            this.m_speed2 = cc.v2(1, 0).mul(this.m_velocity);
                            this.node.angle = -90;
                            this.m_width = 140 * this.m_scaleY;
                            this.m_height = 80 * this.m_scaleX;
                    }
                    this.m_curAnim = this.anim2;
                    this.anim1.node.destroy();
                } else {
                    this.m_curAnim = this.anim1;
                    this.m_width = 280 * this.m_scaleX;
                    this.m_height = 200 * this.m_scaleY;
                    this.anim2.node.destroy();
                }
            };
            e.prototype.initUI = function () {
                this.node.scaleX = this.m_scaleX;
                this.node.scaleY = this.m_scaleY;
            };
            e.prototype.updateLogic = function (t) {
                switch (this.m_state) {
                    case 0:
                        this.checkCD(t);
                        break;

                    case 1:
                        this.updateActive(t);
                }
            };
            e.prototype.checkCD = function (t) {
                if (this.updateCD(t)) {
                    this.onTrapStart();
                    this.m_stayTime = 0;
                }
            };
            e.prototype.updateActive = function (t) {
                this.m_stayTime += t;
                this.m_stayTime > this.m_stayDuration ? this.onTrapOver() : this.checkAttack();
            };
            e.prototype.checkAttack = function () {
                var t = c.SnakeMgr.getSnakeHead();
                if (0 == this.m_dirTag) {
                    var e = this.node.getPosition(), i = t.node.getPosition();
                    if (s.DYTools.isNumberDiffRange(this.node.x, t.node.x, this.m_width / 2) && s.DYTools.isNumberDiffRange(this.node.y, t.node.y, this.m_height / 2)) {
                        var n = e.sub(i).normalize().mul(this.m_velocity);
                        c.SnakeMgr.setSpeedBuff(n);
                        this.m_hasTarget = !0;
                    } else this.removeTarget();
                } else if (s.DYTools.isNumberDiffRange(this.node.x, t.node.x, this.m_width / 2) && s.DYTools.isNumberDiffRange(this.node.y, t.node.y, this.m_height / 2)) {
                    c.SnakeMgr.setSpeedBuff(this.m_speed2);
                    this.m_hasTarget = !0;
                } else this.removeTarget();
            };
            e.prototype.removeTarget = function () {
                if (this.m_hasTarget) {
                    this.m_hasTarget = !1;
                    c.SnakeMgr.setSpeedBuff(null);
                }
            };
            e.prototype.onTrapStart = function () {
                this.m_state = 1;
                this.node.color = cc.Color.RED;
                if (this.m_animState) this.m_curAnim.resume(); else {
                    this.m_animState = this.m_curAnim.play();
                    this.m_animState.speed = this.m_velocity / this.m_animVelocity;
                }
            };
            e.prototype.onTrapOver = function () {
                this.m_state = 0;
                this.node.color = cc.Color.WHITE;
                this.removeTarget();
                this.m_curAnim.pause();
            };
            r([p(cc.Animation)], e.prototype, "anim1", void 0);
            r([p(cc.Animation)], e.prototype, "anim2", void 0);
            return r([u], e);
        }(l.default);
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../util/Tools": "Tools",
        "../../../manager/battle/SnakeManager": "SnakeManager",
        "../TrapBase": "TrapBase"
    }],
    TrapSnowBallUnit: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e7e15t7asZLzLNlLdfvjVtx", "TrapSnowBallUnit");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../frame/manager/FrameManager"), c = t("../../../collide/CircleColliderComp"), l = t("../../../manager/battle/SnakeManager"), h = t("../TrapBallBase"), u = cc._decorator, p = u.ccclass, d = u.property, f = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.anim = null;
                e.shadow = null;
                e.traceAnim = null;
                e.m_colComp = null;
                e._velocity = 0;
                e._acc = 0;
                e._accStartTime = 0;
                e._accTime = 0;
                e.m_time = 0;
                e.m_state = 0;
                e.m_dir = cc.Vec2.ZERO;
                e.m_isDead = !1;
                e.m_removeCall = null;
                e.m_birthCall = null;
                e.moveAuId = -1;
                return e;
            }
            e.prototype.create = function (t, e, i, n, a, r, o) {
                this.m_attack = e;
                this._velocity = i;
                this._acc = n;
                this._accStartTime = a;
                this._accTime = r;
                this.m_removeCall = o;
                this.m_colComp || (this.m_colComp = new c.default());
                this.m_colComp.init([0, 0, 30 * this.node.scale], this);
                this.setDir(t);
                this.m_isDead = !1;
                this.m_time = 0;
                this.setState(0);
                this.shadow.angle = -this.node.angle;
                this.traceAnim.node.opacity = 0;
                this.anim.off("finished");
                this.anim.on("finished", this.onAnimFinished.bind(this), this);
            };
            e.prototype.setDir = function (t) {
                this.m_dir = t;
                this.m_dir && (this.node.angle = cc.misc.radiansToDegrees(cc.v2(0, -1).signAngle(this.m_dir)));
            };
            e.prototype.startCreate = function (t, e) {
                this.m_birthCall = e;
                var i = this.playAnimation("birth");
                i && (i.speed = t);
                s.FrameMgr.audioMgr.playEffect("trap_snow_ball_show");
            };
            e.prototype.updateLogic = function (t) {
                if (!this.m_isDead) {
                    this.m_colComp.updateLogic(t);
                    switch (this.m_state) {
                        case 0:
                            return;

                        case 1:
                            this.m_time += t;
                            this.m_time > this._accStartTime && this.setState(2);
                            break;

                        case 2:
                            this._velocity += this._acc * t;
                            this.m_time > this._accTime && this.setState(3);
                    }
                    this.updatePos(t);
                }
            };
            e.prototype.setRadius = function (t) {
                this.m_colComp.radius = t;
            };
            e.prototype.updatePos = function (t) {
                var e = this.m_dir.mul(t * this._velocity);
                this.node.x += e.x;
                this.node.y += e.y;
            };
            e.prototype.setState = function (t) {
                this.m_state = t;
                switch (this.m_state) {
                    case 1:
                        this.m_dir || (this.m_dir = l.SnakeMgr.getSnakePosition().sub(this.node.getPosition()).normalize());
                        this.m_time = 0;
                        this.m_colComp.enabled = !0;
                        this.playAnimation("move");
                        this.playMoveAudio();
                        this.traceAnim.node.opacity = 255;
                        this.traceAnim.play();
                        break;

                    case 2:
                        this.m_time = 0;
                }
            };
            e.prototype.remove = function (t) {
                void 0 === t && (t = !1);
                if (!this.m_isDead) {
                    t && s.FrameMgr.audioMgr.playEffect("trap_snow_ball_blast");
                    this.stoMoveAudio();
                    this.m_isDead = !0;
                    this.m_colComp.enabled = !1;
                    this.playAnimation("blast");
                    this.traceAnim.node.opacity = 0;
                    this.traceAnim.stop();
                }
            };
            e.prototype.playMoveAudio = function () {
                this.moveAuId = s.FrameMgr.audioMgr.playEffectSync("trap_snow_ball_move", !0);
                (0 == this.m_state || this.m_isDead) && this.stoMoveAudio();
            };
            e.prototype.stoMoveAudio = function () {
                if (this.moveAuId >= 0) {
                    s.FrameMgr.audioMgr.stopEffect(this.moveAuId);
                    this.moveAuId = -1;
                }
            };
            e.prototype.getColliders = function () {
                return this.m_colComp;
            };
            e.prototype.onCollide = function (t) {
                switch (t) {
                    case o.ContactType.Enter:
                        this.remove(!0);
                }
            };
            e.prototype.onCollideWall = function (t) {
                switch (t) {
                    case o.ContactType.Enter:
                        this.remove(!0);
                }
            };
            e.prototype.onCollideBlock = function (t) {
                switch (t) {
                    case o.ContactType.Enter:
                        this.remove(!0);
                }
            };
            e.prototype.playAnimation = function (t) {
                return this.anim.play(t);
            };
            e.prototype.onAnimFinished = function (t, e) {
                if (e) if ("birth" == e.name) {
                    if (this.m_birthCall) {
                        this.m_birthCall();
                        this.m_birthCall = null;
                    }
                    this.setState(1);
                } else if ("blast" == e.name) {
                    this.node.opacity = 0;
                    if (this.m_removeCall) {
                        this.m_removeCall(this);
                        this.m_removeCall = null;
                    }
                }
            };
            r([d(cc.Animation)], e.prototype, "anim", void 0);
            r([d(cc.Node)], e.prototype, "shadow", void 0);
            r([d(cc.Animation)], e.prototype, "traceAnim", void 0);
            return r([p], e);
        }(h.default);
        i.default = f;
        cc._RF.pop();
    }, {
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../collide/CircleColliderComp": "CircleColliderComp",
        "../../../manager/battle/SnakeManager": "SnakeManager",
        "../TrapBallBase": "TrapBallBase"
    }],
    TrapSnowBall: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "f4adfWL9T5NU5K8f6u4bAbq", "TrapSnowBall");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../frame/manager/FrameManager"), c = t("../../../../../util/Tools"), l = t("../../../manager/battle/MapManager"), h = t("../../../manager/battle/SnakeManager"), u = t("../TrapBase"), p = t("./TrapSnowBallUnit"), d = cc._decorator, f = d.ccclass, m = d.property, g = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.anim = null;
                e.m_smokeAnim = null;
                e.m_state = 0;
                e._aimSnake = !1;
                e._ballBirthSpeed = 0;
                e._ballNum = 0;
                e._ballTime = 0;
                e._ballScale = 1;
                e._initAngle = 0;
                e._angleAdd = 0;
                e._initVel = 0;
                e._velAcc = 0;
                e._accStartTime = 0;
                e._accTime = 0;
                e._attack = 0;
                e.m_time = 0;
                e.m_ballCount = 0;
                e.m_angle = 0;
                e.m_ballPool = [];
                e.m_ballArr = [];
                return e;
            }
            e.prototype.init = function (t, e) {
                this.m_type = o.TrapType.SnowBall;
                this.m_data = e;
                this.node.x = t.x;
                this.node.y = t.y;
                this.initData();
                this.initUI(t.ui);
                this.m_cdTime = this.m_trapCD - e.delay;
                this.playAnimation("idle");
                this.anim.on("finished", this.onAnimFinished.bind(this), this);
            };
            e.prototype.initData = function () {
                this.m_trapCD = this.m_data.param[0];
                this._aimSnake = 1 == this.m_data.param[1];
                this._ballBirthSpeed = this.m_data.param[2];
                this._ballNum = this.m_data.param[3];
                this._ballTime = this.m_data.param[4];
                this._ballScale = this.m_data.param[5];
                this._initAngle = this.m_data.param[6];
                this._angleAdd = this.m_data.param[7];
                this._initVel = this.m_data.param[8];
                this._velAcc = this.m_data.param[9];
                this._accStartTime = this.m_data.param[10];
                this._accTime = this.m_data.param[11];
                this._attack = this.m_data.param[12];
            };
            e.prototype.initUI = function () {
                var t = s.FrameMgr.loadMgr.get("TrapSnowBallSmoke", cc.Prefab);
                if (t) {
                    var e = cc.instantiate(t);
                    l.MapMgr.blockLayer.addChild(e, 1);
                    e.position = this.node.position.add(cc.v3(0, 40));
                    this.m_smokeAnim = e.getComponent(cc.Animation);
                    e.opacity = 0;
                    this.m_smokeAnim.on("finished", this.onAnimFinished.bind(this), this);
                }
            };
            e.prototype.updateLogic = function (t) {
                switch (this.m_state) {
                    case 0:
                        this.checkCD(t);
                        break;

                    case 1:
                        break;

                    case 2:
                        this.m_time += t;
                        if (this.m_time > this._ballTime) {
                            this.m_time = 0;
                            this.setState(1);
                        }
                }
                for (var e = 0, i = this.m_ballArr; e < i.length; e++) i[e].updateLogic(t);
            };
            e.prototype.checkCD = function (t) {
                if (this.updateCD(t)) {
                    this.m_angle = this._initAngle;
                    this.m_ballCount = 0;
                    this.setState(1);
                }
            };
            e.prototype.setState = function (t) {
                this.m_state = t;
                switch (this.m_state) {
                    case 0:
                        this.m_time = 0;
                        break;

                    case 1:
                        this.playAnimation("ball");
                        break;

                    case 2:
                        this.m_time = 0;
                }
            };
            e.prototype.addBall = function () {
                var t = this;
                this.m_ballCount++;
                var e = this.m_ballPool.pop();
                if (!e) {
                    var i = s.FrameMgr.loadMgr.get("SnowBall", cc.Prefab);
                    if (i) {
                        var n = cc.instantiate(i);
                        e = n.getComponent(p.default);
                        n.parent = this.node.parent;
                    }
                }
                if (e) {
                    e.node.opacity = 255;
                    e.node.position = this.node.position;
                    e.node.angle = this.m_angle;
                    e.node.scale = this._ballScale;
                    var a = null;
                    if (!this._aimSnake) {
                        a = cc.v2(0, -1).rotate(cc.misc.degreesToRadians(this.m_angle));
                        this.m_angle += this._angleAdd;
                    }
                    e.create(a, this._attack, this._initVel, this._velAcc, this._accStartTime, this._accTime, function (e) {
                        t.removeBall(e);
                    });
                    l.MapMgr.addTrapBall(e);
                    e.startCreate(this._ballBirthSpeed, function () {
                        if (t._aimSnake) {
                            a = h.SnakeMgr.getSnakePosition().sub(e.node.getPosition()).normalize();
                            e.setDir(a);
                        }
                    });
                    this.m_ballArr.push(e);
                    this.checkBallCount();
                }
            };
            e.prototype.checkBallCount = function () {
                this.m_ballCount >= this._ballNum ? this.setState(0) : this.setState(2);
            };
            e.prototype.removeBall = function (t) {
                c.DYTools.arrRemove(this.m_ballArr, t);
                this.m_ballPool.push(t);
                l.MapMgr.removeTrapBall(t);
            };
            e.prototype.playAnimation = function (t) {
                this.anim.play(t);
            };
            e.prototype.onAnimCreateBall = function () {
                this.addBall();
            };
            e.prototype.onAnimShowSmoke = function () {
                if (this.m_smokeAnim) {
                    this.m_smokeAnim.node.opacity = 255;
                    var t = this.m_smokeAnim.play();
                    t && (t.speed = this._ballBirthSpeed);
                }
            };
            e.prototype.onAnimFinished = function (t, e) {
                e && "ball" == e.name && this.playAnimation("idle");
            };
            e.prototype.onSmokeAnimFinished = function () {
                this.m_smokeAnim.node.opacity = 0;
            };
            r([m(cc.Animation)], e.prototype, "anim", void 0);
            return r([f], e);
        }(u.default);
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../util/Tools": "Tools",
        "../../../manager/battle/MapManager": "MapManager",
        "../../../manager/battle/SnakeManager": "SnakeManager",
        "../TrapBase": "TrapBase",
        "./TrapSnowBallUnit": "TrapSnowBallUnit"
    }],
    TrapSunkensComp: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "96807aK3aNKgIgs51FJlpQy", "TrapSunkensComp");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConfig"), s = t("../../../manager/battle/MapManager"), c = cc._decorator, l = c.ccclass, h = (c.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_sunkens = null;
                    e.m_warn1 = null;
                    e.m_warn2 = null;
                    return e;
                }
                e.prototype.create = function () {
                    this.m_sunkens = new cc.Node("ci");
                    this.m_sunkens.parent = this.node;
                    this.m_sunkens.addComponent(cc.Sprite).spriteFrame = s.MapMgr.floorAtlas.getSpriteFrame("dc_3");
                    this.m_sunkens.scaleY = 0;
                    this.m_warn1 = new cc.Node("warn1");
                    this.m_warn1.parent = this.node;
                    this.m_warn1.addComponent(cc.Sprite).spriteFrame = s.MapMgr.floorAtlas.getSpriteFrame("dc_warn_1");
                    this.m_warn1.active = !1;
                    this.m_warn2 = new cc.Node("warn2");
                    this.m_warn2.anchorY = 0;
                    this.m_warn2.y = -5;
                    this.m_warn2.parent = this.node;
                    this.m_warn2.addComponent(cc.Sprite).spriteFrame = s.MapMgr.floorAtlas.getSpriteFrame("dc_warn_2");
                    this.m_warn2.active = !1;
                };
                e.prototype.showWarn = function () {
                    var t = o.GConfig.ActionInterval;
                    this.m_warn1.active = !0;
                    this.m_warn1.scale = 1;
                    cc.tween(this.m_warn1).to(6 * t, {
                        scale: .8
                    }).to(8 * t, {
                        scale: 1
                    }).union().repeatForever().start();
                    this.m_warn2.active = !0;
                    this.m_warn2.scale = 1;
                    cc.tween(this.m_warn2).to(6 * t, {
                        scaleY: .62
                    }).to(t, {
                        scaleY: 1
                    }).union().repeatForever().start();
                };
                e.prototype.hideWarn = function () {
                    var t = this;
                    this.m_warn1.stopAllActions();
                    this.m_warn1.active = !1;
                    this.m_warn2.stopAllActions();
                    cc.tween(this.m_warn2).to(.1666667, {
                        scaleX: 1.45,
                        scaleY: .85,
                        opacity: 0
                    }).call(function () {
                        t.m_warn2.active = !1;
                        t.m_warn2.opacity = 255;
                    }).start();
                };
                e.prototype.show = function () {
                    var t = this, e = o.GConfig.ActionInterval;
                    this.m_sunkens.scaleY = .45;
                    cc.tween(this.m_sunkens).to(3 * e, {
                        scaleY: 1.1
                    }).to(2 * e, {
                        scaleY: 1
                    }).call(function () {
                        t.hideWarn();
                    }).start();
                };
                e.prototype.hide = function () {
                    cc.tween(this.m_sunkens).to(.2, {
                        scaleY: 0
                    }).start();
                };
                return r([l], e);
            }(cc.Component));
        i.default = h;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../manager/battle/MapManager": "MapManager"
    }],
    TrapSunkensEntity: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "afe051HOj9LTYBpTgG8N4kw", "TrapSunkensEntity");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../frame/manager/FrameManager"), c = t("../../../../../util/Tools"), l = t("../../../manager/battle/EnemyManager"), h = t("../../../manager/battle/MapManager"), u = t("../../../manager/battle/SnakeManager"), p = t("../TrapBase"), d = t("./TrapSunkensComp"), f = cc._decorator, m = f.ccclass, g = (f.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_uiNode = null;
                    e.m_sunkensArr = [];
                    e.m_trapNum = 0;
                    e.m_trapStay = 0;
                    e.m_trapDuration = 0;
                    e.m_attack = 0;
                    e.m_enemy = !1;
                    e.m_warnDuration = 0;
                    e.m_state = 0;
                    e.m_time = 0;
                    e.m_stayTime = 0;
                    e.m_trapCount = 0;
                    e.m_rect = null;
                    e.m_attackMap = new Map();
                    e.m_widthHalf = 50;
                    e.m_heightHalf = 50;
                    return e;
                }
                e.prototype.init = function (t, e) {
                    this.m_type = o.TrapType.Sunkens;
                    this.m_data = e;
                    this.m_rect = t.rect;
                    this.node.x = t.x;
                    this.node.y = t.y;
                    this.initUI(t.ui);
                    this.initData(t.rect);
                    switch (t.ui) {
                        case 1:
                            this.m_widthHalf = 70;
                            this.m_heightHalf = 55;
                            break;

                        case 2:
                            this.m_widthHalf = 27;
                            this.m_heightHalf = 20;
                    }
                    this.m_cdTime = this.m_trapCD - e.delay;
                };
                e.prototype.reset = function () {
                    t.prototype.reset.call(this);
                    this.m_trapCount = 0;
                    this.m_time = 0;
                    this.m_rect = null;
                };
                e.prototype.initData = function (t) {
                    this.m_trapNum = this.m_data.param[0];
                    this.m_trapStay = this.m_data.param[1];
                    this.m_trapDuration = this.m_data.param[2];
                    this.m_trapCD = this.m_data.param[3];
                    this.m_attack = this.m_data.param[4];
                    this.m_enemy = 1 == this.m_data.param[5];
                    this.m_warnDuration = this.m_data.param[6] || 0;
                    this.m_rect = t;
                };
                e.prototype.initUI = function (t) {
                    this.node.addComponent(cc.Sprite).spriteFrame = h.MapMgr.floorAtlas.getSpriteFrame("dc_" + t);
                    for (var e = 1 == t ? 11 : 2, i = 0; i < e; i++) {
                        var n = this._createSunkens();
                        n.node.setPosition(this._getSunkensPos(t, i));
                        this.m_sunkensArr.push(n);
                    }
                };
                e.prototype._createSunkens = function () {
                    var t = new cc.Node("sunkens");
                    t.parent = this.node;
                    var e = t.addComponent(d.default);
                    e.create();
                    return e;
                };
                e.prototype._getSunkensPos = function (t, e) {
                    switch (e) {
                        case 0:
                            return 2 == t ? cc.v2(-15, 0) : cc.v2(-54, 32);

                        case 1:
                            return 2 == t ? cc.v2(15, 0) : cc.v2(-23, 32);

                        case 2:
                            return cc.v2(23, 32);

                        case 3:
                            return cc.v2(54, 32);

                        case 4:
                            return cc.v2(-38.5, 2);

                        case 5:
                            return cc.v2(0, 2);

                        case 6:
                            return cc.v2(38.5, 2);

                        case 7:
                            return cc.v2(-54, -32);

                        case 8:
                            return cc.v2(-23, -32);

                        case 9:
                            return cc.v2(23, -32);

                        case 10:
                            return cc.v2(54, -32);
                    }
                };
                e.prototype.updateLogic = function (t) {
                    switch (this.m_state) {
                        case 0:
                            this.m_rect ? this.checkTrigger(t) : this.checkCD(t);
                            break;

                        case 1:
                            this.updateWarn(t);
                            break;

                        case 2:
                            this.updateTrapCD(t);
                            break;

                        case 3:
                            this.updateTrapStay(t);
                    }
                };
                e.prototype.checkCD = function (t) {
                    this.updateCD(t) && this.excuteTrap();
                };
                e.prototype.checkTrigger = function (t) {
                    this.m_cdTime += t;
                    this.m_cdTime > this.m_trapCD && this.m_rect.contains(u.SnakeMgr.getSnakePosition()) && this.showWarn();
                };
                e.prototype.showWarn = function () {
                    this.m_state = 1;
                    this.m_cdTime = 0;
                };
                e.prototype.updateWarn = function (t) {
                    this.m_cdTime += t;
                    if (this.m_cdTime > this.m_warnDuration) {
                        this.excuteTrap();
                        this.m_cdTime = 0;
                    }
                };
                e.prototype.excuteTrap = function () {
                    this.m_state = 2;
                    this.m_time = this.m_trapDuration;
                };
                e.prototype.updateTrapCD = function (t) {
                    this.m_time += t;
                    if (this.m_time > this.m_trapDuration) {
                        this.triggerTrap();
                        this.m_time = 0;
                    }
                };
                e.prototype.updateTrapStay = function (t) {
                    this.m_stayTime += t;
                    if (this.m_stayTime > this.m_trapStay) {
                        this.trapOver();
                        this.m_stayTime = 0;
                    } else this.checkAttack(t);
                };
                e.prototype.checkAttack = function () {
                    var t = u.SnakeMgr.getSnakeHead();
                    if (t.hurtAble && !this.m_attackMap.get(t.onlyId) && c.DYTools.isNumberDiffRange(this.node.x, t.node.x, this.m_widthHalf) && c.DYTools.isNumberDiffRange(this.node.y, t.node.y + 8, this.m_heightHalf)) {
                        this.m_attackMap.set(t.onlyId, 1);
                        t.hurt(this.m_attack);
                    }
                    if (this.m_enemy) for (var e = l.EnemyMgr.enemys, i = 0; i < e.length; i++) {
                        var n = e[i];
                        if (!this.m_attackMap.get(n.onlyId) && n.hurtAble) if (n.getHurtAbleEntity) for (var a = n.getHurtAbleEntity(), r = 0; r < a.length; r++) {
                            var o = a[r];
                            if (!this.m_attackMap.get(o.onlyId)) {
                                (s = o.node.getPosition().sub(this.node.getPosition())).x -= 8;
                                s.x = Math.abs(s.x);
                                s.y = Math.abs(s.y);
                                if (o.radius) {
                                    s.x -= o.radius;
                                    s.y -= o.radius;
                                }
                                if (s.x <= this.m_widthHalf && s.y <= this.m_heightHalf) {
                                    o.hurt && o.hurt(this.m_attack, !1, !0);
                                    this.m_attackMap.set(o.onlyId, 1);
                                }
                            }
                        } else {
                            var s;
                            (s = n.node.getPosition().sub(this.node.getPosition())).x -= 8;
                            s.x = Math.abs(s.x);
                            s.y = Math.abs(s.y);
                            if (n.radius) {
                                s.x -= n.radius;
                                s.y -= n.radius;
                            }
                            if (s.x <= this.m_widthHalf && s.y <= this.m_heightHalf) {
                                n.hpChange && n.hpChange(this.m_attack);
                                this.m_attackMap.set(n.onlyId, 1);
                            }
                        }
                    }
                };
                e.prototype.triggerTrap = function () {
                    this.m_state = 3;
                    this.m_stayTime = 0;
                    this.m_trapCount++;
                    this.onTrapStart();
                };
                e.prototype.trapOver = function () {
                    this.m_attackMap.clear();
                    if (this.m_trapCount >= this.m_trapNum) {
                        this.m_state = 0;
                        this.m_trapCount = 0;
                        this.m_cdTime = 0;
                    } else {
                        this.m_rect ? this.showWarn() : this.m_state = 2;
                        this.m_time = 0;
                    }
                    this.onTrapOver();
                };
                e.prototype.onWarnShow = function () {
                    for (var t = 0, e = this.m_sunkensArr; t < e.length; t++) e[t].showWarn();
                };
                e.prototype.onTrapStart = function () {
                    s.FrameMgr.audioMgr.playEffectForCD("trap_sunkens_show", .1);
                    for (var t = 0, e = this.m_sunkensArr; t < e.length; t++) e[t].show();
                };
                e.prototype.onTrapOver = function () {
                    for (var t = 0, e = this.m_sunkensArr; t < e.length; t++) e[t].hide();
                };
                return r([m], e);
            }(p.default));
        i.default = g;
        cc._RF.pop();
    }, {
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../util/Tools": "Tools",
        "../../../manager/battle/EnemyManager": "EnemyManager",
        "../../../manager/battle/MapManager": "MapManager",
        "../../../manager/battle/SnakeManager": "SnakeManager",
        "../TrapBase": "TrapBase",
        "./TrapSunkensComp": "TrapSunkensComp"
    }],
    TrapThorns: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "7eb2advUxVDta6jfkIDmWh1", "TrapThorns");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameEnum"), s = t("../../../../../frame/manager/FrameManager"), c = t("../../../../../util/Tools"), l = t("../../../manager/battle/MapManager"), h = t("../../../manager/battle/SnakeManager"), u = t("../TrapBase"), p = cc._decorator, d = p.ccclass, f = p.property, m = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.anim = null;
                e.m_width = 35;
                e.m_height = 35;
                e.m_atkNum = 0;
                e.m_attack = 0;
                e.m_atkCount = 0;
                return e;
            }
            e.prototype.init = function (t, e) {
                this.m_type = o.TrapType.Thorns;
                this.m_data = e;
                this.node.x = t.x;
                this.node.y = t.y;
                this.initData();
                this.initUI(t.ui);
                this.m_cdTime = this.m_trapCD - e.delay;
            };
            e.prototype.initData = function () {
                this.m_atkNum = this.m_data.param[0];
                this.m_attack = this.m_data.param[1];
            };
            e.prototype.initUI = function () {
                this.anim.play();
            };
            e.prototype.updateLogic = function () {
                this.checkAttack();
            };
            e.prototype.checkAttack = function () {
                var t = h.SnakeMgr.getSnakeHead();
                if (t.hurtAble) {
                    var e = this.node.getPosition(), i = t.node.getPosition();
                    if (c.DYTools.isNumberDiffRange(e.x - 3, i.x, this.m_width) && c.DYTools.isNumberDiffRange(e.y + 40, i.y, this.m_height) && t.hurt(this.m_attack) < 0) {
                        this.m_atkCount++;
                        if (this.m_atkNum > 0 && this.m_atkCount >= this.m_atkCount) {
                            l.MapMgr.removeTrap(this);
                            this.node.destroy();
                        }
                    }
                }
            };
            e.prototype.onTrapStart = function () {
                s.FrameMgr.audioMgr.playEffectForCD("trap_sunkens_show", .1);
                this.node.color = cc.Color.RED;
            };
            e.prototype.onTrapOver = function () {
                this.node.color = cc.Color.WHITE;
            };
            r([f(cc.Animation)], e.prototype, "anim", void 0);
            return r([d], e);
        }(u.default);
        i.default = m;
        cc._RF.pop();
    }, {
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../util/Tools": "Tools",
        "../../../manager/battle/MapManager": "MapManager",
        "../../../manager/battle/SnakeManager": "SnakeManager",
        "../TrapBase": "TrapBase"
    }],
    TurretLvItem: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1e38dbp33BKBIH6hFoJNY2V", "TurretLvItem");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.PtState = void 0;
        var o, s = t("../../../../../../config/GameConfig"), c = t("../../../../../../config/GameConst"), l = t("../../../../../../config/GameEnum"), h = t("../../../../../../data/storage/GameData"), u = t("../../../../../../frame/ui/UINum"), p = cc._decorator, d = p.ccclass, f = p.property;
        (function (t) {
            t[t.Lock = 0] = "Lock";
            t[t.Unlock = 1] = "Unlock";
            t[t.CurrLv = 2] = "CurrLv";
        })(o = i.PtState || (i.PtState = {}));
        var m = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.ptSp = null;
                e.ptShadowSp = null;
                e.ptShadowNode = null;
                e.ptUnlokeNode = null;
                e.bodyNode = null;
                e.turretNode = null;
                e.bodyShadowNode = null;
                e.turretShadowNode = null;
                e.ptLvNumNode = null;
                e.maxNode = null;
                e.lvUpEffect = null;
                e.selectNode = null;
                e.selectTip = null;
                e._lvNum = null;
                e._state = o.Lock;
                e._atlas = null;
                e._lv = 0;
                e._turretId = 0;
                e._index = 0;
                e._isUnLock = !0;
                e._adjustPos = cc.v2(0, 0);
                return e;
            }
            e.prototype.init = function (t, e, i, n) {
                this._atlas = n;
                this._index = t;
                this._lv = e;
                this._turretId = i;
                this.maxNode.opacity = 0;
                var a = "turret_" + i + "_" + h.GData.getTurretNum() + "_big";
                this.ptSp.spriteFrame = this._atlas.getSpriteFrame(a);
                this.ptShadowSp.spriteFrame = this._atlas.getSpriteFrame(a);
                this.initLvNum();
                this.initLvupEffect();
                this.initSelectUI();
            };
            e.prototype.refreshUI = function (t) {
                this._state = t;
                this.maxNode.scale = this._state === o.CurrLv ? 1 : .8;
                this.ptLvNumNode.y = this._state === o.Lock ? -45 : -40;
                this.ptLvNumNode.x = 4;
                this.maxNode.y = this._state === o.Lock ? -55 : -50;
                var e = this._state === o.Lock ? cc.color(204, 204, 204) : this._state === o.CurrLv ? cc.color(255, 255, 102) : cc.color(255, 255, 255);
                this._lvNum.setColor(e);
                this._lvNum.node.scale = this._state === o.CurrLv ? .6 : .5;
                this.maxNode.color = e;
                this.turretNode.color = t === o.Lock ? cc.color(81, 81, 81) : cc.Color.WHITE;
                this.bodyNode.color = t === o.Lock ? cc.color(81, 81, 81) : cc.Color.WHITE;
                this.turretShadowNode.color = t === o.Lock ? cc.color(81, 81, 81) : cc.Color.WHITE;
                this.bodyShadowNode.color = t === o.Lock ? cc.color(81, 81, 81) : cc.Color.WHITE;
            };
            e.prototype.setSelectIndex = function (t) {
                var e = !1;
                t == this._index && (e = !0);
                this.setSelect(e);
            };
            e.prototype.touchSelectNode = function (t, e) {
                var i = s.GConfig.ActionInterval;
                this.selectNode.stopAllActions();
                t ? cc.tween(this.selectNode).delay(e).to(3 * i, {
                    opacity: 255
                }).start() : cc.tween(this.selectNode).delay(e).to(3 * i, {
                    opacity: 0
                }).start();
            };
            e.prototype.setPosition = function () { };
            e.prototype.setMax = function () {
                this._lvNum.node.opacity = 0;
                this.maxNode.opacity = 255;
            };
            e.prototype.setScale = function (t) {
                this.ptUnlokeNode.scale = t;
            };
            e.prototype.initLvNum = function () {
                var t = cc.instantiate(c.GValue.pfNum);
                t.parent = this.ptLvNumNode;
                this._lvNum = t.getComponent(u.default);
                this._lvNum.init();
                this._lvNum.setAtlas(this._atlas);
                this._lvNum.setType(l.NumType.ShopBox);
                this._lvNum.setDiffY(".", -12);
                this._lvNum.setDiffY("m", -6);
                this._lvNum.setDiffY("b", -6);
                this._lvNum.setString("l" + this._lv);
            };
            e.prototype.getLv = function () {
                return this._lv;
            };
            e.prototype.getTurretNode = function () {
                return this.turretNode;
            };
            e.prototype.getBodyNode = function () {
                return this.bodyNode;
            };
            e.prototype.getLvNode = function (t) {
                return t === this._lv ? this.maxNode : this.ptLvNumNode;
            };
            e.prototype.getUnlockNode = function () {
                return this.ptUnlokeNode;
            };
            e.prototype.getShadowNode = function () {
                return this.ptShadowNode;
            };
            e.prototype.getPtState = function () {
                return this._state;
            };
            e.prototype.getAdjustPos = function () {
                return this._adjustPos;
            };
            e.prototype.setIsUnlock = function (t) {
                this._isUnLock = t;
            };
            e.prototype.initLvupEffect = function () {
                var t = this;
                this.lvUpEffect.setCompleteListener(function (e) {
                    switch (e.animation ? e.animation.name : "") {
                        case "show":
                            t.scheduleOnce(function () {
                                t.lvUpEffect.setAnimation(0, "lvup2", !1);
                            });
                            break;

                        case "lvup1":
                        case "lvup2":
                            t.scheduleOnce(function () {
                                t.lvUpEffect.node.opacity = 0;
                            });
                    }
                });
            };
            e.prototype.playLvup1 = function () {
                this.lvUpEffect.node.opacity = 255;
                this.lvUpEffect.setAnimation(0, "lvup1", !1);
            };
            e.prototype.playLvup2 = function () {
                this.lvUpEffect.node.opacity = 255;
                this.lvUpEffect.setAnimation(0, "show", !1);
            };
            e.prototype.initSelectUI = function () {
                this.selectTip.opacity = 0;
                cc.tween(this.selectTip).to(6 * s.GConfig.ActionInterval, {
                    scale: .95
                }).to(13 * s.GConfig.ActionInterval, {
                    scale: 1
                }).union().repeatForever().start();
            };
            e.prototype.setSelect = function (t) {
                this.selectTip.opacity = t ? 255 : 0;
            };
            r([f({
                type: cc.Sprite,
                displayName: "炮塔精灵"
            })], e.prototype, "ptSp", void 0);
            r([f({
                type: cc.Sprite,
                displayName: "炮塔虚影精灵"
            })], e.prototype, "ptShadowSp", void 0);
            r([f({
                type: cc.Node,
                displayName: "蛇节幻影节点"
            })], e.prototype, "ptShadowNode", void 0);
            r([f({
                type: cc.Node,
                displayName: "蛇节解锁节点"
            })], e.prototype, "ptUnlokeNode", void 0);
            r([f({
                type: cc.Node,
                displayName: "蛇节节点"
            })], e.prototype, "bodyNode", void 0);
            r([f({
                type: cc.Node,
                displayName: "炮口"
            })], e.prototype, "turretNode", void 0);
            r([f({
                type: cc.Node,
                displayName: "蛇节虚影节点"
            })], e.prototype, "bodyShadowNode", void 0);
            r([f({
                type: cc.Node,
                displayName: "炮口虚影"
            })], e.prototype, "turretShadowNode", void 0);
            r([f({
                type: cc.Node,
                displayName: "蛇等级数字节点"
            })], e.prototype, "ptLvNumNode", void 0);
            r([f({
                type: cc.Node,
                displayName: "满级节点"
            })], e.prototype, "maxNode", void 0);
            r([f({
                type: sp.Skeleton,
                displayName: "升级特效"
            })], e.prototype, "lvUpEffect", void 0);
            r([f({
                type: cc.Node,
                displayName: "选中框节点"
            })], e.prototype, "selectNode", void 0);
            r([f({
                type: cc.Node,
                displayName: "选中框图"
            })], e.prototype, "selectTip", void 0);
            return r([d], e);
        }(cc.Component);
        i.default = m;
        cc._RF.pop();
    }, {
        "../../../../../../config/GameConfig": "GameConfig",
        "../../../../../../config/GameConst": "GameConst",
        "../../../../../../config/GameEnum": "GameEnum",
        "../../../../../../data/storage/GameData": "GameData",
        "../../../../../../frame/ui/UINum": "UINum"
    }],
    TurretProgressBgItem: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "98326PEHzVOS7mnzwGNrhyG", "TurretProgressBgItem");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = cc._decorator, s = o.ccclass, c = o.property, l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.bg = null;
                return e;
            }
            e.prototype.initUI = function (t, e) {
                this.bg.spriteFrame = e.getSpriteFrame("ban" + t);
            };
            e.prototype.turnSprite = function () {
                this.bg.node.scaleX *= -1;
            };
            r([c(cc.Sprite)], e.prototype, "bg", void 0);
            return r([s], e);
        }(cc.Component);
        i.default = l;
        cc._RF.pop();
    }, {}],
    TurretProgressItem: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "57a2bXcrbZH04UJlYmljktO", "TurretProgressItem");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../../data/storage/GameData"), s = cc._decorator, c = s.ccclass, l = s.property, h = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.bar = null;
                e.progressNode = null;
                e.bgNormal = null;
                e.bgSelect = null;
                e.bgLock = null;
                e._lv = 0;
                e._index = 0;
                e._isEnd = !1;
                e._isUnLock = !1;
                e._turretLvItem = null;
                return e;
            }
            e.prototype.initUI = function (t, e, i) {
                this._index = t;
                this._lv = e;
                this._turretLvItem = i;
                this.bar.node.parent.width = this.bar.node.width;
                this._isEnd = !1;
                this.refreshIsUnlock();
            };
            e.prototype.setIsEnd = function (t) {
                this._isEnd = t;
                this._isEnd ? this.progressNode.opacity = 0 : this.progressNode.opacity = 255;
            };
            e.prototype.refreshProgress = function (t) {
                1 === t && (t = 1.01);
                this.bar.fillRange = t;
            };
            e.prototype.refreshIsUnlock = function () {
                var t = o.GData.getSnakeTurretLv();
                this._isUnLock = t >= this._lv;
                this._turretLvItem.setIsUnlock(this._isUnLock);
            };
            e.prototype.setSelectIndex = function (t) {
                this.bgSelect.active = !1;
                this.bgLock.active = !1;
                this.bgNormal.active = !1;
                t == this._index ? this._isUnLock ? this.bgSelect.active = !0 : this.bgLock.active = !0 : this._isUnLock ? this.bgNormal.active = !0 : this.bgLock.active = !0;
            };
            r([l(cc.Sprite)], e.prototype, "bar", void 0);
            r([l(cc.Node)], e.prototype, "progressNode", void 0);
            r([l(cc.Node)], e.prototype, "bgNormal", void 0);
            r([l(cc.Node)], e.prototype, "bgSelect", void 0);
            r([l(cc.Node)], e.prototype, "bgLock", void 0);
            return r([c], e);
        }(cc.Component);
        i.default = h;
        cc._RF.pop();
    }, {
        "../../../../../../data/storage/GameData": "GameData"
    }],
    UIBtn: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6e7c4ThY0BJ2JJmI947viNU", "UIBtn");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = cc._decorator, s = o.ccclass, c = o.property, l = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.clickNode = null;
                e.grayNode = null;
                e.enable = !0;
                return e;
            }
            e.prototype.setEnable = function (t) {
                this.enable = t;
                if (this.grayNode) {
                    this.grayNode.active = !t;
                    this.clickNode.active = t;
                }
            };
            e.prototype.getEnable = function () {
                return this.enable;
            };
            e.prototype.setClickCallback = function (t) {
                this.clickNode.on(cc.Node.EventType.TOUCH_START, function () {
                    t && t();
                }.bind(this), this);
                this.grayNode && this.grayNode.on(cc.Node.EventType.TOUCH_START, function () {
                    t && t();
                }.bind(this), this);
            };
            e.prototype.actionClick = function () { };
            r([c(cc.Node)], e.prototype, "clickNode", void 0);
            r([c(cc.Node)], e.prototype, "grayNode", void 0);
            return r([s], e);
        }(cc.Component);
        i.default = l;
        cc._RF.pop();
    }, {}],
    UIComponent: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "a8ec6FcymNBGrBqH/CMaEmk", "UIComponent");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = t("../manager/FrameManager"), o = function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            e.prototype.on = function (t, e) {
                null == this.m_listener && (this.m_listener = new Map());
                if (this.m_listener.get(t)) throw "add a same event";
                this.m_listener.set(t, e);
                r.FrameMgr.noticeMgr.on(t, e, this);
            };
            e.prototype.off = function (t) {
                if (null != this.m_listener) {
                    var e = this.m_listener.get(t);
                    if (null != e) {
                        r.FrameMgr.noticeMgr.off(t, e, this);
                        this.m_listener.delete(t);
                    }
                }
            };
            e.prototype.once = function (t, e) {
                var i = this;
                null == this.m_listener && (this.m_listener = new Map());
                if (this.m_listener.get(t)) throw "add a same event";
                var n = function (n) {
                    e.call(i, n);
                    i.m_listener.delete(t);
                };
                this.m_listener.set(t, n);
                r.FrameMgr.noticeMgr.once(t, n);
            };
            e.prototype.onDisable = function () { };
            e.prototype.onEnable = function () { };
            e.prototype.onDestroy = function () {
                this.clearNotice();
            };
            e.prototype.clearNotice = function () {
                var t = this;
                this.m_listener && this.m_listener.forEach(function (e, i) {
                    t.off(i);
                });
            };
            return e;
        }(cc.Component);
        i.default = o;
        cc._RF.pop();
    }, {
        "../manager/FrameManager": "FrameManager"
    }],
    UIManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "afef6MsIvZGxr2faPmdhTi8", "UIManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var n = function () {
            function t() {
                this._nodeMap = new Map();
            }
            t.prototype.clear = function () {
                this._nodeMap.clear();
            };
            t.prototype.createUI = function () { };
            return t;
        }();
        i.default = n;
        cc._RF.pop();
    }, {}],
    UINum: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "5303f9xXjRMspJPeyY/OBFq", "UINum");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../config/GameConst"), s = t("../../config/GameEnum"), c = cc._decorator, l = c.ccclass, h = c.property, u = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.nodeUI = null;
                e.atlas = null;
                e.type = 1;
                e.numNameMap = null;
                e.anchor = cc.v2(.5, .5);
                e.distance = 0;
                e.width = 0;
                e.height = 0;
                e.value = 0;
                e.dic_diffY = {};
                e.m_color = cc.color(255, 255, 255);
                return e;
            }
            i = e;
            e.prototype.init = function () {
                this.atlas = null;
                this.type = 1;
                this.numNameMap = null;
                this.anchor = cc.v2(.5, .5);
                this.distance = 0;
                this.width = 0;
                this.height = 0;
                this.value = 0;
                this.dic_diffY = {};
                this.m_color = cc.color(255, 255, 255);
            };
            e.prototype.setAtlas = function (t) {
                this.atlas = t;
            };
            e.prototype.setType = function (t) {
                this.type = t;
                this.numNameMap = i.getNumMap(this.type);
            };
            e.prototype.setAnchor = function (t) {
                this.anchor = t;
            };
            e.prototype.setDistance = function (t) {
                this.distance = t;
            };
            e.prototype.setDiffY = function (t, e) {
                this.dic_diffY[t] = e;
            };
            e.prototype.setString = function (t, e) {
                void 0 === e && (e = 0);
                for (var n = 0, a = this.nodeUI.children; n < a.length; n++) a[n].opacity = 0;
                this.width = 0;
                this.height = 0;
                this.value = e;
                this.atlas || (this.atlas = o.GValue.CommonAtlas);
                null == this.numNameMap && (this.numNameMap = i.getNumMap(this.type));
                for (var r = 0; r < t.length; r++) {
                    var s = t[r], c = this.getSrc(s);
                    if ("" != c) {
                        var l = this.nodeUI.children[r];
                        if (l) {
                            l.opacity = 255;
                            l.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(c);
                        } else {
                            l = i.getSpriteNode(this.atlas, c);
                            this.nodeUI.addChild(l);
                        }
                        l.setAnchorPoint(0, .5);
                        r > 0 && (this.width = this.width + this.distance);
                        var h = l.getContentSize();
                        l.x = this.width;
                        l.y = this.dic_diffY[s];
                        l.y || (l.y = 0);
                        this.width = this.width + h.width;
                        this.height = h.height > this.height ? h.height : this.height;
                    }
                }
                var u = -this.width * this.anchor.x, p = -this.height * (this.anchor.y - .5);
                this.node.width = this.width * this.node.scaleX;
                this.node.height = this.height * this.node.scaleY;
                this.nodeUI.setPosition(u, p);
                this.setColor(this.m_color);
            };
            Object.defineProperty(e.prototype, "string", {
                get: function () {
                    return "";
                },
                set: function (t) {
                    this.setString(t);
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.getSrc = function (t) {
                var e = this.numNameMap[t];
                null == e && (e = "");
                return e;
            };
            e.prototype.setColor = function (t) {
                this.m_color = t;
                for (var e = this.nodeUI.children, i = 0; i < e.length; i++) e[i].color = t;
            };
            Object.defineProperty(e.prototype, "color", {
                get: function () {
                    return this.m_color;
                },
                set: function (t) {
                    this.m_color = t;
                    this.setColor(t);
                },
                enumerable: !1,
                configurable: !0
            });
            e.prototype.getSize = function () {
                return cc.size(this.width * this.node.scaleX, this.height * this.node.scaleY);
            };
            e.prototype.getValue = function () {
                return this.value;
            };
            e.prototype.removeSelf = function () {
                i.clearSpriteNode(this.nodeUI);
                this.node.destroy();
            };
            e.initNumMap = function () {
                i.numMap = new Map();
                for (var t in s.NumType) {
                    var e = s.NumType[t], n = "num_" + e + "_", a = new Map();
                    i.numMap[e] = a;
                    a[1] = n + "1";
                    a[2] = n + "2";
                    a[3] = n + "3";
                    a[4] = n + "4";
                    a[5] = n + "5";
                    a[6] = n + "6";
                    a[7] = n + "7";
                    a[8] = n + "8";
                    a[9] = n + "9";
                    a[0] = n + "0";
                    a["."] = n + "dot";
                    a["+"] = n + "+";
                    a["-"] = n + "-";
                    a.x = n + "x";
                    a["/"] = n + "div";
                    a[":"] = n + "mh";
                    a.k = n + "k";
                    a.m = n + "m";
                    a.b = n + "b";
                    a["%"] = n + "%";
                    a.l = n + "lv";
                }
            };
            e.getNumMap = function (t) {
                null == i.numMap && i.initNumMap();
                return i.numMap[t];
            };
            e.getSpriteNode = function (t, e) {
                if (i.arrSpriteNode.length > 0) {
                    (n = i.arrSpriteNode.pop()).getComponent(cc.Sprite).spriteFrame = t.getSpriteFrame(e);
                    return n;
                }
                var n;
                (n = new cc.Node()).addComponent(cc.Sprite).spriteFrame = t.getSpriteFrame(e);
                return n;
            };
            e.clearSpriteNode = function (t) {
                var e = t.children;
                if (e) for (var n = e.length - 1; n >= 0; n--) {
                    var a = e[n];
                    a.removeFromParent(!0);
                    i.arrSpriteNode.push(a);
                }
            };
            var i;
            e.arrSpriteNode = [];
            e.numMap = null;
            r([h(cc.Node)], e.prototype, "nodeUI", void 0);
            return i = r([l], e);
        }(cc.Component);
        i.default = u;
        cc._RF.pop();
    }, {
        "../../config/GameConst": "GameConst",
        "../../config/GameEnum": "GameEnum"
    }],
    VeinCell: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b2b944AhWpESZwfOnp1FcEo", "VeinCell");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../common/EntityBase"), s = t("../../../config/GameEnum"), c = t("../manager/battle/VeinManager"), l = t("../collide/RectColliderComp"), h = cc._decorator, u = h.ccclass, p = (h.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_group = s.ColliderGroup.VeinCell;
                    e._veinEntity = null;
                    e._veinId = 0;
                    e._veinType = 0;
                    e._index = 0;
                    e._data = null;
                    e._isActive = !1;
                    e._enabled = !0;
                    e._collideComp = null;
                    return e;
                }
                e.prototype.init = function (t, e, i, n, a) {
                    this._veinEntity = t;
                    this._veinId = e;
                    this._veinType = i;
                    this._index = n;
                    this._data = a;
                    this.setNodeByData(this.node, a);
                    this.initComp();
                    this.isActive = !1;
                };
                e.prototype.initComp = function () {
                    this._collideComp = new l.default();
                    var t = [this.node.parent.x, this.node.parent.y, this._data.wt * this.node.scaleX, this._data.ht * this.node.scaleY];
                    this._collideComp.init(t, this, this.node);
                    this._collideComp.enabled = !0;
                };
                e.prototype.updateLogic = function (t) {
                    this._collideComp.updateLogic(t);
                };
                e.prototype.onCollide = function (t, e) {
                    if (e && e.entity) switch (e.entity.group) {
                        case s.ColliderGroup.Player:
                            if (e.entity && !this.isActive) {
                                this.isActive = !0;
                                this._veinEntity.cellStateChange(!0);
                            }
                    }
                };
                e.prototype.offCollide = function (t) {
                    if (t && t.entity) switch (t.entity.group) {
                        case s.ColliderGroup.Player:
                            if (t.entity && this._collideComp.other.length <= 1) {
                                this.isActive = !1;
                                this._veinEntity.cellStateChange(!1);
                            }
                    }
                };
                Object.defineProperty(e.prototype, "isActive", {
                    get: function () {
                        return this._isActive;
                    },
                    set: function (t) {
                        this._isActive = t;
                        this.isEnabled ? this._isActive ? this.node.opacity = 255 : this.node.opacity = 130 : this.node.opacity = 40;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "isEnabled", {
                    get: function () {
                        return this._enabled;
                    },
                    set: function (t) {
                        this._enabled = t;
                        this._collideComp.enabled = !0;
                        this._enabled || (this.node.opacity = 40);
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "col", {
                    get: function () {
                        return this._collideComp;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.setNodeByData = function (t, e) {
                    t.x = e.x;
                    t.y = e.y;
                    var i = t.getComponent(cc.Sprite);
                    i || (i = t.addComponent(cc.Sprite));
                    i.spriteFrame = c.VeinMgr.atlas.getSpriteFrame(e.res);
                    e.wt && (t.width = e.wt);
                    e.ht && (t.height = e.ht);
                    e.sx && (t.scaleX = e.sx);
                    e.sy && (t.scaleY = e.sy);
                    e.ag && (t.angle = e.ag);
                };
                return r([u], e);
            }(o.default));
        i.default = p;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../collide/RectColliderComp": "RectColliderComp",
        "../common/EntityBase": "EntityBase",
        "../manager/battle/VeinManager": "VeinManager"
    }],
    VeinEntity: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "a6647JQsYJO+5rdxlztRla+", "VeinEntity");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("./VeinCell"), s = t("../common/EntityBase"), c = t("../../../config/GameEnum"), l = cc._decorator, h = l.ccclass, u = (l.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e.m_group = c.ColliderGroup.VeinSkill;
                    e._onlyId = 0;
                    e._type = 0;
                    e._cd = 0;
                    e._veinCell = [];
                    e._activeLen = 0;
                    e._time = 0;
                    e._enable = !0;
                    return e;
                }
                e.prototype.init = function (t) {
                    this._onlyId = t.id;
                    this._type = t.type;
                    for (var e = 0, i = t.veins.length; e < i; e++) {
                        var n = new cc.Node();
                        n.parent = this.node;
                        var a = n.addComponent(o.default);
                        a.init(this, this._onlyId, this._type, e, t.veins[e]);
                        this._veinCell.push(a);
                    }
                };
                e.prototype.cellStateChange = function (t) {
                    if (t) {
                        this._activeLen++;
                        this.checkSkillActive();
                    } else this._activeLen--;
                };
                e.prototype.updateLogic = function (t) {
                    if (this._enable) this._veinCell.forEach(function (e) {
                        e.updateLogic(t);
                    }); else {
                        this._time += t;
                        if (this._time > this._cd) {
                            this._time = 0;
                            this._enable = !0;
                            this._veinCell.forEach(function (t) {
                                t.isEnabled = !0;
                            });
                            this.checkSkillActive();
                        }
                    }
                };
                e.prototype.checkSkillActive = function () {
                    if (this._enable && this._activeLen >= this._veinCell.length) {
                        this.createVeinSkill();
                        this._enable = !1;
                        this._veinCell.forEach(function (t) {
                            t.isEnabled = !1;
                        });
                    }
                };
                e.prototype.createVeinSkill = function () {
                    this._type;
                };
                Object.defineProperty(e.prototype, "veinCellCols", {
                    get: function () {
                        var t = [];
                        this._veinCell.forEach(function (e) {
                            t.push(e.col);
                        });
                        return t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                return r([h], e);
            }(s.default));
        i.default = u;
        cc._RF.pop();
    }, {
        "../../../config/GameEnum": "GameEnum",
        "../common/EntityBase": "EntityBase",
        "./VeinCell": "VeinCell"
    }],
    VeinManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "459faAq4J9GcoA3SwwYVmfB", "VeinManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.VeinMgr = void 0;
        var o = t("./MapManager"), s = t("../../map/VeinEntity"), c = t("../../../../frame/manager/BattleFlowManager"), l = cc._decorator, h = l.ccclass, u = (l.property,
            function (t) {
                a(e, t);
                function e() {
                    var e = null !== t && t.apply(this, arguments) || this;
                    e._atlas = null;
                    e._veinDataMap = new Map();
                    e._veins = [];
                    return e;
                }
                i = e;
                e.prototype.addLoadingRes = function () {
                    return [];
                };
                e.prototype.initData = function () { };
                e.prototype.init = function () {
                    for (var t = o.MapMgr.getVeinData(), e = 0, i = t.length; e < i; e++) {
                        this._veinDataMap.set(t[e].id, t[e]);
                        this.createVein(t[e]);
                    }
                };
                e.prototype.updateLogic = function (t) {
                    for (var e = 0; e < this._veins.length; e++) this._veins[e].updateLogic(t);
                };
                e.prototype.createVein = function (t) {
                    var e = new cc.Node();
                    e.parent = o.MapMgr.getVeinLayer();
                    var i = e.addComponent(s.default);
                    i.init(t);
                    this._veins.push(i);
                };
                Object.defineProperty(e.prototype, "atlas", {
                    get: function () {
                        return this._atlas;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                Object.defineProperty(e.prototype, "veinCellCols", {
                    get: function () {
                        for (var t = [], e = 0, i = this._veins.length; e < i; e++) t = t.concat(this._veins[e].veinCellCols);
                        return t;
                    },
                    enumerable: !1,
                    configurable: !0
                });
                e.prototype.clear = function () {
                    this._atlas = null;
                    this._veinDataMap.clear();
                    for (var t = this._veins.length - 1; t >= 0; t--) this._veins[t].node.destroy();
                    this._veins.splice(0);
                };
                var i;
                e.instance = new i();
                return r([h], e);
            }(c.BattleFlowBase));
        i.default = u;
        i.VeinMgr = u.instance;
        cc._RF.pop();
    }, {
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../map/VeinEntity": "VeinEntity",
        "./MapManager": "MapManager"
    }],
    WXPlatform: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e1599eRHhpAQIfq9sGptUrl", "WXPlatform");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var r = function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            e.prototype.init = function () { };
            e.prototype.virbrate = function () { };
            e.prototype.playRewardAd = function () { };
            e.prototype.onRewardPlay = function () { };
            e.prototype.showBanner = function () { };
            e.prototype.hideBanner = function () { };
            e.prototype.playInterstitialAd = function () { };
            e.prototype.playSplashAd = function () { };
            e.prototype.hideAdLoadingForTimeOut = function () { };
            return e;
        }(t("./PlatformBase").default);
        i.default = r;
        cc._RF.pop();
    }, {
        "./PlatformBase": "PlatformBase"
    }],
    WarnLineBase: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "9eec70/VLBMlL9yH2qdUdZh", "WarnLineBase");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../common/EntityBase"), s = cc._decorator, c = s.ccclass, l = s.property, h = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.lineNode = null;
                e._image = null;
                return e;
            }
            e.prototype.init = function (t, e) {
                void 0 === t && (t = "warn_line");
                void 0 === e && (e = 0);
            };
            e.prototype.updateAngle = function (t) {
                this.node.angle = t;
            };
            e.prototype.updateHeight = function (t) {
                this.lineNode.height = t;
            };
            e.prototype.updatePos = function (t) {
                this.node.position = t;
            };
            r([l(cc.Node)], e.prototype, "lineNode", void 0);
            return r([c], e);
        }(o.default);
        i.default = h;
        cc._RF.pop();
    }, {
        "../common/EntityBase": "EntityBase"
    }],
    WarnLineManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "e1da54ZmJhPUqg0sp21qrWs", "WarnLineManager");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        });
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.WarnLineMgr = void 0;
        var r = t("../../../../config/GameEnum"), o = t("../../../../frame/manager/BattleFlowManager"), s = t("../../../../frame/manager/PoolManager"), c = t("../../common/EntityBase"), l = t("../../warnline/WarnLineBase"), h = t("./EntityManager"), u = function (t) {
            a(e, t);
            function e() {
                return null !== t && t.apply(this, arguments) || this;
            }
            e.prototype.getWarnLine = function () {
                return s.PoolMgr.get("BulletWarnLine", l.default);
            };
            e.prototype.putWarnLine = function (t) {
                s.PoolMgr.put("BulletWarnLine", t);
            };
            e.prototype.getWarnJump = function () {
                return s.PoolMgr.get("BulletWarnJump", c.default, h.EntityMgr.getLootLayer());
            };
            e.prototype.putWarnJump = function (t) {
                s.PoolMgr.put("BulletWarnJump", t);
            };
            e.prototype.addLoadingRes = function () {
                return [{
                    itemNames: ["BulletWarnLine"],
                    itemType: cc.Prefab,
                    loadType: r.LoadType.All
                }, {
                    itemNames: ["BulletWarnJump"],
                    itemType: cc.Prefab,
                    loadType: r.LoadType.All
                }];
            };
            e.prototype.initData = function () {
                s.PoolMgr.initPoolWithLoaded("BulletWarnLine");
                s.PoolMgr.initPoolWithLoaded("BulletWarnJump");
            };
            e.prototype.init = function () { };
            e.prototype.clear = function () {
                s.PoolMgr.clearPool("BulletWarnLine");
                s.PoolMgr.clearPool("BulletWarnJump");
            };
            e.instance = new e();
            return e;
        }(o.BattleFlowBase);
        i.WarnLineMgr = u.instance;
        cc._RF.pop();
    }, {
        "../../../../config/GameEnum": "GameEnum",
        "../../../../frame/manager/BattleFlowManager": "BattleFlowManager",
        "../../../../frame/manager/PoolManager": "PoolManager",
        "../../common/EntityBase": "EntityBase",
        "../../warnline/WarnLineBase": "WarnLineBase",
        "./EntityManager": "EntityManager"
    }],
    WarnUI: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "9fe46LvocNHUr5Owco9XFoX", "WarnUI");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        var o = t("../../../../../config/GameConfig"), s = t("../../../../../util/GameFunc"), c = t("../../../../../frame/manager/FrameManager"), l = t("../../../../../frame/ui/UIComponent"), h = cc._decorator, u = h.ccclass, p = h.property, d = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.touchLayer = null;
                e.warnNode = null;
                e.warnBgSpr = null;
                e.warnFontSpr = null;
                e.tipNode = null;
                e.tipBg = null;
                e.tipFontSpr = null;
                e.atlas = null;
                e._touchAble = !1;
                e._touchCall = null;
                return e;
            }
            e.prototype.onLoad = function () {
                this.touchLayer.on(cc.Node.EventType.TOUCH_END, this.onTouch.bind(this));
                this.refreshLanguage();
            };
            e.prototype.refreshLanguage = function () {
                c.FrameMgr.languageMgr.setImage(this.warnFontSpr, this.atlas, "title");
            };
            e.prototype.showWarn = function (t) {
                var e = this;
                this.warnNode.active = !0;
                c.FrameMgr.audioMgr.playEffect("warn_bossComing");
                var i = o.GConfig.ActionInterval, n = this.warnFontSpr.node;
                (function () {
                    n.opacity = 0;
                    n.scale = 2.7;
                    var t = cc.tween(n).to(4 * i, {
                        scale: .8,
                        opacity: 255
                    }).to(3 * i, {
                        scale: 1
                    }).call(function () {
                        var t = cc.instantiate(n);
                        t.parent = e.warnNode;
                        cc.tween(t).to(5 * i, {
                            scale: 1.5,
                            opacity: 0
                        }).removeSelf().start();
                    }).delay(5 * i).call(function () {
                        t.stop();
                        cc.tween(n).to(3 * i, {
                            scale: 1.08
                        }).to(8 * i, {
                            scale: 1,
                            opacity: 204
                        }).to(4 * i, {
                            opacity: 255
                        }).union().repeat(2).start();
                    }).start();
                })();
                var a = this.warnBgSpr.node;
                this.scheduleOnce(function () {
                    a.active = !0;
                    a.scaleY = 1.75;
                    var t = cc.tween(a).to(3 * i, {
                        scaleY: 1
                    }).call(function () {
                        t.stop();
                        cc.tween(a).to(0, {
                            x: 0,
                            y: 0
                        }).by(4 * i, {
                            x: 70
                        }).union().repeatForever().start();
                    }).start();
                }, 2 * i);
                this.scheduleOnce(function () {
                    n.stopAllActions();
                    cc.tween(n).to(3 * i, {
                        scale: 1.54
                    }).to(2 * i, {
                        scale: 1.8
                    }).to(3 * i, {
                        scale: .75
                    }).to(i, {
                        opacity: 0
                    }).start();
                }, 42 * i);
                this.scheduleOnce(function () {
                    a.stopAllActions();
                    cc.tween(a).to(4 * i, {
                        scaleX: 1,
                        scaleY: .18,
                        opacity: 51
                    }).to(i, {
                        opacity: 0
                    }).call(function () {
                        e.warnNode.active = !1;
                    }).start();
                }, 49 * i);
                this.scheduleOnce(function () {
                    t && t();
                    c.FrameMgr.audioMgr.playbg("bgm_boss", !0);
                }, 60 * i);
            };
            e.prototype.showTip = function (t, e) {
                var i = this;
                s.GFunc.addLog("boss showTip");
                this._touchAble = !0;
                c.FrameMgr.languageMgr.setImage(this.tipFontSpr, this.atlas, "boss_" + t);
                this._touchCall = e;
                this.tipNode.active = !0;
                var n = o.GConfig.ActionInterval;
                cc.tween(this.tipBg).to(0, {
                    scaleY: .19
                }).to(3 * n, {
                    scaleY: 1.1
                }).to(3 * n, {
                    scaleY: 1
                }).start();
                this.tipFontSpr.node.scale = 0;
                cc.tween(this.tipFontSpr.node).to(0, {
                    scale: 0
                }).delay(3 * n).to(0, {
                    scale: .54
                }).to(2 * n, {
                    scale: 1
                }).start();
                this.scheduleOnce(function () {
                    i.onTouch();
                }, 3);
            };
            e.prototype.onTouch = function () {
                var t = this;
                if (this._touchAble) {
                    this._touchAble = !1;
                    var e = o.GConfig.ActionInterval;
                    cc.tween(this.tipBg).to(4 * e, {
                        scaleY: .19
                    }).delay(e).to(0, {
                        scale: 0
                    }).call(function () {
                        s.GFunc.addLog("boss tip onTouch");
                        if (t._touchCall) {
                            s.GFunc.addLog("boss tip touchCall");
                            t._touchCall();
                        }
                        t.node.destroy();
                    }).start();
                    cc.tween(this.tipFontSpr.node).to(4 * e, {
                        scale: 1.6,
                        opacity: 0
                    }).start();
                }
            };
            r([p(cc.Node)], e.prototype, "touchLayer", void 0);
            r([p(cc.Node)], e.prototype, "warnNode", void 0);
            r([p(cc.Sprite)], e.prototype, "warnBgSpr", void 0);
            r([p(cc.Sprite)], e.prototype, "warnFontSpr", void 0);
            r([p(cc.Node)], e.prototype, "tipNode", void 0);
            r([p(cc.Node)], e.prototype, "tipBg", void 0);
            r([p(cc.Sprite)], e.prototype, "tipFontSpr", void 0);
            r([p(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            return r([u], e);
        }(l.default);
        i.default = d;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../util/GameFunc": "GameFunc"
    }],
    WaveManager: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "75e1aX9oXtAdZydQP2FIxUn", "WaveManager");
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.WaveMgr = void 0;
        var n = function () {
            function t() { }
            t.instance = new t();
            return t;
        }();
        i.default = n;
        i.WaveMgr = n.instance;
        cc._RF.pop();
    }, {}],
    WeaponUI: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b3f96Fa1DlPl7rI8aDQXhev", "WeaponUI");
        var n, a = this && this.__extends || (n = function (t, e) {
            return (n = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function (t, e) {
                t.__proto__ = e;
            } || function (t, e) {
                for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
            })(t, e);
        }, function (t, e) {
            n(t, e);
            function i() {
                this.constructor = t;
            }
            t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
        }), r = this && this.__decorate || function (t, e, i, n) {
            var a, r = arguments.length, o = r < 3 ? e : null === n ? n = Object.getOwnPropertyDescriptor(e, i) : n;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(t, e, i, n); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (o = (r < 3 ? a(o) : r > 3 ? a(e, i, o) : a(e, i)) || o);
            return r > 3 && o && Object.defineProperty(e, i, o), o;
        };
        Object.defineProperty(i, "__esModule", {
            value: !0
        });
        i.BtnState = void 0;
        var o, s = t("../../../../../config/GameConfig"), c = t("../../../../../config/GameConst"), l = t("../../../../../config/GameEnum"), h = t("../../../../../data/manager/ConfigDataManager"), u = t("../../../../../data/storage/GameData"), p = t("../../../../../frame/manager/FrameManager"), d = t("../../../../../frame/ui/FrameAnim"), f = t("../../../../../frame/ui/UIComponent"), m = t("../../../../../frame/ui/UINum"), g = t("../../../../../util/GameFunc"), _ = t("../../../../../util/Tools"), y = t("../../../../battle/manager/battle/SnakeManager"), v = t("./weapon/TurretLvItem"), b = t("./weapon/TurretProgressItem"), M = cc._decorator, S = M.ccclass, k = M.property;
        (function (t) {
            t[t.None = 0] = "None";
            t[t.LVUpNone = 1] = "LVUpNone";
            t[t.LVUp = 2] = "LVUp";
            t[t.AdvancedNone = 3] = "AdvancedNone";
            t[t.Advance = 4] = "Advance";
        })(o = i.BtnState || (i.BtnState = {}));
        var C = function (t) {
            a(e, t);
            function e() {
                var e = null !== t && t.apply(this, arguments) || this;
                e.animTitleNode = null;
                e.animProgressNode = null;
                e.animSnakeNode = null;
                e.animMasterInNode = null;
                e.animMasterScaleNode = null;
                e.animMasterNode = null;
                e.animBgLight = null;
                e.turretLvRoot = null;
                e.turretProgressRoot = null;
                e.turretProgressBgRoot = null;
                e.bulletRoot = null;
                e.masterNode = null;
                e.masterHpNode = null;
                e.explosionNode = null;
                e.tapNode = null;
                e.turretLvItem = null;
                e.turretProgressItem = null;
                e.turretProgressBgItem = null;
                e.snakeHead = null;
                e.snakeTail = null;
                e.snakeLine = [];
                e.snakeBody = [];
                e.snakeTurret = [];
                e.turretEffectNode = null;
                e.atlas = null;
                e.infoBoard = null;
                e.infoLine = null;
                e.infoLvArrow = null;
                e.curLvNum = null;
                e.curAtkNum = null;
                e.curAtkNumShadow = null;
                e.curAtkLvEffect = null;
                e.nextLvNum = null;
                e.nextAtkNum = null;
                e.nextLvNode = null;
                e.nextLvMax = null;
                e.CLNode = null;
                e.lvUpGoldNum = null;
                e.lvUpMaterialNum = null;
                e.lvUpMaterialTotalNum = null;
                e.lvUpNode = null;
                e.lvUpBtnClick = null;
                e.lvUpBtnClickMoveLight = null;
                e.lvUpBtnClickLight = null;
                e.lvUpBtnGrey = null;
                e.curLvFont = null;
                e.curAtkFont = null;
                e.nextAtkFont = null;
                e.nextLvMaxFont = null;
                e._turretSPNodeArr = [];
                e._turretLvArr = [];
                e._turretProgressArr = [];
                e._turretProgressBgArr = [];
                e._bulletPrefab = null;
                e._bulletTime = [0, 0, 0, 0, 0, 0, 0];
                e.isPlayBullet = !1;
                e._reviewAtk = 0;
                e._curretIndex = 0;
                e._reviewIndex = 0;
                e._progressIndex = 0;
                e._currentBtnState = o.None;
                e._maxLevel = 0;
                e._isInMove = !1;
                e._isNeedReset = !1;
                e._bulletFireTime = 0;
                e._isLeft = !1;
                e._currentMoveProgress = 0;
                e._currentMoveCurProgress = 0;
                e._currentMoveLength = 0;
                e._isChangeReviewTurret = !1;
                e._isReplayAnim = !1;
                e._isInAnim = !1;
                e._btnInter = null;
                e.infoNumScale = .8;
                return e;
            }
            e.prototype.onEnable = function () {
                this.tapNode.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
                this.tapNode.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
                this.tapNode.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
                this.tapNode.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
                this._isReplayAnim = !0;
            };
            e.prototype.onDisable = function () {
                this.tapNode.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);
                this.tapNode.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);
                this.tapNode.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);
                this.tapNode.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchEnd, this);
                this.stopAllAction();
                this.stopPlayBulletAction();
            };
            e.prototype.onLoad = function () {
                g.GFunc.adjustTopUI(this.animTitleNode);
                this.initNum();
                this.initProgressUI();
                this.touchSelectNode(!0);
                this.refreshLanguage();
            };
            e.prototype.initNum = function () {
                this.curLvNum.init();
                this.curLvNum.setAtlas(this.atlas);
                this.curLvNum.setType(l.NumType.ShopBox);
                this.curLvNum.setAnchor(cc.v2(.5, .5));
                this.curLvNum.setColor(cc.color(255, 255, 102));
                this.curLvNum.setDistance(2);
                this.curLvNum.setDiffY(".", -12);
                this.curLvNum.node.parent.scale = .7 * this.infoNumScale;
                this.curAtkNum.init();
                this.curAtkNum.setAtlas(this.atlas);
                this.curAtkNum.setType(l.NumType.ShopBox);
                this.curAtkNum.setAnchor(cc.v2(.5, .5));
                this.curAtkNum.setColor(cc.color(255, 255, 102));
                this.curAtkNum.setDistance(2);
                this.curAtkNum.setDiffY(".", -12);
                this.curAtkNum.node.parent.scale = this.infoNumScale;
                this.curAtkNumShadow.init();
                this.curAtkNumShadow.setAtlas(this.atlas);
                this.curAtkNumShadow.setType(l.NumType.ShopBox);
                this.curAtkNumShadow.setAnchor(cc.v2(.5, .5));
                this.curAtkNumShadow.setColor(cc.color(255, 255, 255));
                this.curAtkNumShadow.setDistance(2);
                this.curAtkNumShadow.setDiffY(".", -12);
                this.curAtkNumShadow.node.opacity = 0;
                this.curAtkNumShadow.node.parent.scale = this.infoNumScale;
                this.nextLvNum.init();
                this.nextLvNum.setAtlas(this.atlas);
                this.nextLvNum.setType(l.NumType.Weapon2);
                this.nextLvNum.setAnchor(cc.v2(.5, .5));
                this.nextLvNum.setColor(cc.color(99, 106, 132));
                this.nextLvNum.setDistance(2);
                this.nextLvNum.setDiffY(".", -12);
                this.nextLvNum.node.parent.scale = .7 * this.infoNumScale;
                this.nextAtkNum.init();
                this.nextAtkNum.setAtlas(this.atlas);
                this.nextAtkNum.setType(l.NumType.Weapon2);
                this.nextAtkNum.setAnchor(cc.v2(.5, .5));
                this.nextAtkNum.setColor(cc.color(99, 106, 132));
                this.nextAtkNum.setDistance(2);
                this.nextAtkNum.setDiffY(".", -12);
                this.nextAtkNum.node.parent.scale = this.infoNumScale;
                this.lvUpGoldNum.init();
                this.lvUpGoldNum.setAtlas(this.atlas);
                this.lvUpGoldNum.setType(l.NumType.ShopBox);
                this.lvUpGoldNum.setAnchor(cc.v2(.5, .5));
                this.lvUpGoldNum.setDistance(2);
                this.lvUpGoldNum.setDiffY(".", -12);
                this.lvUpGoldNum.node.scale = .45;
                this.lvUpMaterialNum.init();
                this.lvUpMaterialNum.setAtlas(this.atlas);
                this.lvUpMaterialNum.setType(l.NumType.ShopBox);
                this.lvUpMaterialNum.setAnchor(cc.v2(0, .5));
                this.lvUpMaterialNum.setDistance(2);
                this.lvUpMaterialNum.setDiffY(".", -12);
                this.lvUpMaterialNum.node.scale = .4;
                this.lvUpMaterialTotalNum.init();
                this.lvUpMaterialTotalNum.setAtlas(this.atlas);
                this.lvUpMaterialTotalNum.setType(l.NumType.ShopBox);
                this.lvUpMaterialTotalNum.setAnchor(cc.v2(0, .5));
                this.lvUpMaterialTotalNum.setDistance(1);
                this.lvUpMaterialTotalNum.setDiffY(".", -12);
                this.lvUpMaterialTotalNum.node.scale = .4;
            };
            e.prototype.setCurLvNumValue = function (t) {
                this.curLvNum.setString(t);
                this.curLvNum.node.x = .5 * this.curLvNum.getSize().width;
            };
            e.prototype.setCurAtkNumValue = function (t) {
                this.curAtkNum.setString(t);
                this.curAtkNum.node.x = .5 * this.curAtkNum.getSize().width;
                this.curAtkNumShadow.setString(t);
                this.curAtkNumShadow.node.x = this.curAtkNum.node.x;
            };
            e.prototype.setNextLvNumValue = function (t) {
                this.nextLvNum.setString(t);
                this.nextLvNum.node.x = .5 * this.nextLvNum.getSize().width;
            };
            e.prototype.setNextAtkNumValue = function (t) {
                this.nextAtkNum.setString(t);
                this.nextAtkNum.node.x = .5 * this.nextAtkNum.getSize().width;
            };
            e.prototype.initProgressUI = function () {
                var t = this;
                this.turretLvRoot.removeAllChildren();
                this.turretProgressRoot.removeAllChildren();
                this.turretProgressBgRoot.removeAllChildren();
                this._turretLvArr = [];
                this._turretProgressArr = [];
                var e = h.ConfigDataMgr.getAllData("ConfigSnakeTurretLvupData"), i = 0;
                if (e) {
                    e.forEach(function (e) {
                        if (0 !== e.turretId) {
                            var n = cc.instantiate(t.turretLvItem);
                            n.parent = t.turretLvRoot;
                            var a = n.getComponent(v.default);
                            a.init(i, e.level, e.turretId, t.atlas);
                            a.setScale(1);
                            t._turretLvArr.push(a);
                            var r = cc.instantiate(t.turretProgressItem);
                            r.parent = t.turretProgressRoot;
                            var o = r.getComponent(b.default);
                            t._maxLevel = e.level;
                            o.initUI(i, e.level, a);
                            t._turretProgressArr.push(o);
                            i++;
                        }
                    });
                    this._turretProgressArr[this._turretProgressArr.length - 1].setIsEnd(!0);
                    this._turretLvArr[this._turretLvArr.length - 1].setMax();
                }
            };
            e.prototype.refresh = function () {
                this.refreshCurPtIndex();
                this.refreshProgressUI();
                this.refreshCurLvContent();
                this.refreshMaterial();
                this.refreshSnakeAbout();
                this.scollProgressUI();
                this.playBulletAction(this._isReplayAnim);
                this.refreshSelectState();
                this._isReplayAnim && this.playInAnim();
                this._isReplayAnim = !1;
            };
            e.prototype.refreshLanguage = function () {
                p.FrameMgr.languageMgr.setImage(this.animTitleNode.getChildByName("layer").getChildByName("title").getComponent(cc.Sprite), this.atlas, "title");
                p.FrameMgr.languageMgr.setImage(this.lvUpBtnGrey.getComponent(cc.Sprite), this.atlas, "btn2");
                p.FrameMgr.languageMgr.setImage(this.lvUpBtnClick.getComponent(cc.Sprite), this.atlas, "btn1");
                p.FrameMgr.languageMgr.setImage(this.curLvFont, this.atlas, "txt1");
                p.FrameMgr.languageMgr.setImage(this.curAtkFont, this.atlas, "txt2");
                p.FrameMgr.languageMgr.setImage(this.nextAtkFont, this.atlas, "txt2");
                p.FrameMgr.languageMgr.setImage(this.nextLvMaxFont, this.atlas, "txt3");
            };
            e.prototype.onTouchStart = function () {
                if (!this._isInAnim) {
                    this._isInMove = !0;
                    this.touchSelectNode(!1);
                }
            };
            e.prototype.onTouchMove = function (t) {
                if (!this._isInAnim && !this._isNeedReset) {
                    this._currentMoveProgress += t.getDeltaX() * (1 / 155);
                    this._currentMoveCurProgress = t.getDeltaX() * (1 / 155);
                    this._currentMoveLength += t.getDeltaX();
                    if (0 === this._progressIndex && this._currentMoveProgress > 0) {
                        this._currentMoveProgress = 0;
                        return;
                    }
                    if (this._progressIndex === this._turretLvArr.length - 1 && this._currentMoveProgress < 0) {
                        this._currentMoveProgress = 0;
                        return;
                    }
                    if (this._currentMoveProgress >= 1) {
                        this._currentMoveProgress = this._currentMoveProgress - 1;
                        this._reviewIndex >= this._curretIndex && (this._isChangeReviewTurret = !0);
                        this._reviewIndex = this.getPreIndex(this._reviewIndex, this._curretIndex);
                        this._progressIndex = this.getPreIndex(this._progressIndex, 0);
                        this._progressIndex <= 0 && (this._currentMoveProgress = 0);
                    } else if (this._currentMoveProgress <= -1) {
                        this._currentMoveProgress = this._currentMoveProgress + 1;
                        if (this._progressIndex >= this._reviewIndex) {
                            this._reviewIndex = this.getNextIndex(this._reviewIndex, this._turretLvArr.length - 1);
                            this._isChangeReviewTurret = !0;
                        }
                        this._progressIndex = this.getNextIndex(this._progressIndex, this._turretLvArr.length - 1);
                        this._progressIndex >= this._turretLvArr.length - 1 && (this._currentMoveProgress = 0);
                    }
                    this.refreshNodeList();
                }
            };
            e.prototype.onTouchEnd = function () {
                if (!this._isInAnim) {
                    this._isInMove = !1;
                    if (0 != this._currentMoveProgress) {
                        this._currentMoveProgress > 0 && this._currentMoveProgress <= .5 ? this._isLeft = !1 : this._currentMoveProgress > .5 ? this._isLeft = !0 : this._currentMoveProgress < 0 && this._currentMoveProgress >= -.5 ? this._isLeft = !0 : this._isLeft = !1;
                        this._isNeedReset = !0;
                    } else {
                        var t = this._turretLvArr[this._reviewIndex].getLv();
                        this._reviewIndex === this._curretIndex && (t = u.GData.getSnakeTurretLv() + 1);
                        this.refreshNextLvContent(t);
                        if (this._isChangeReviewTurret) {
                            this._isChangeReviewTurret = !1;
                            console.log("播放音效");
                            p.FrameMgr.audioMgr.playEffect("a_turretUI_select");
                            this.refreshSnakeAbout();
                        }
                    }
                    this.touchSelectNode(!0, .2);
                }
            };
            e.prototype.refreshTurretX = function (t) {
                var e = t >= -360 ? -360 : t <= 360 - this.turretLvRoot.width ? 360 - this.turretLvRoot.width : t;
                this.turretLvRoot.x = e;
                this.turretProgressRoot.x = this.turretLvRoot.x - 10;
                this.turretProgressBgRoot.x = this.turretLvRoot.x;
            };
            e.prototype.getPreIndex = function (t, e) {
                return t === e ? e : t - 1;
            };
            e.prototype.getNextIndex = function (t, e) {
                return t === e ? e : t + 1;
            };
            e.prototype.refreshCurPtIndex = function () {
                for (var t = u.GData.getSnakeTurretLv(), e = 0; e < this._turretLvArr.length; e++) if (t >= this._turretLvArr[e].getLv()) {
                    this._curretIndex = e;
                    this._reviewIndex = e;
                    this._progressIndex = e;
                }
            };
            e.prototype.refreshProgressUI = function () {
                for (var t = u.GData.getSnakeTurretLv(), e = this._turretLvArr[this._curretIndex], i = 0; i < this._turretLvArr.length; i++) {
                    var n = this._turretLvArr[i], a = i < this._curretIndex ? v.PtState.Unlock : i === this._curretIndex ? v.PtState.CurrLv : v.PtState.Lock;
                    n.refreshUI(a);
                }
                for (var r = 0; r < this._turretProgressArr.length; r++) {
                    var o = 0, s = this._turretProgressArr[r];
                    if (r + 1 < this._turretProgressArr.length) {
                        var c = this._turretProgressArr[r + 1]._turretLvItem.getLv(), l = s._turretLvItem.getLv();
                        o = t >= c ? 1 : t <= l ? 0 : (t - l) / (c - l);
                    } else o = 0;
                    s.refreshIsUnlock();
                    s.setSelectIndex(this._curretIndex);
                    s.refreshProgress(o);
                }
                this.turretLvRoot.getComponent(cc.Layout).updateLayout();
                e.setScale(1.4);
                this.refreshLightRing(e.getPtState(), e.getAdjustPos());
            };
            e.prototype.refreshSelectState = function () {
                for (var t = 0; t < this._turretLvArr.length; t++) this._turretLvArr[t].setSelectIndex(this._progressIndex);
            };
            e.prototype.touchSelectNode = function (t, e) {
                void 0 === e && (e = 0);
                for (var i = 0; i < this._turretLvArr.length; i++) this._turretLvArr[i].touchSelectNode(t, e);
            };
            e.prototype.scollProgressUI = function () {
                u.GData.getSnakeTurretLv();
                var t = -this._turretLvArr[this._curretIndex].node.x;
                this.refreshTurretX(t);
            };
            e.prototype.refreshSnakeAbout = function () {
                var t = y.SnakeMgr.getCurSnakeType(), e = y.SnakeMgr.getSnakeLv(t), i = Math.floor(e / 5), n = "snake_" + t + "_" + i + "_head", a = "snake_" + t + "_" + i + "_body", r = "snake_" + t + "_" + i + "_tail", o = "snake_" + t + "_" + i + "_line";
                this.snakeHead.spriteFrame = this.atlas.getSpriteFrame(n);
                this.snakeTail.spriteFrame = this.atlas.getSpriteFrame(r);
                for (var s = 0; s < this.snakeLine.length; s++) this.snakeLine[s].spriteFrame = this.atlas.getSpriteFrame(o);
                for (s = 0; s < this.snakeBody.length; s++) this.snakeBody[s].spriteFrame = this.atlas.getSpriteFrame(a);
                var c = u.GData.getTurretNum(), l = this._turretLvArr[this._curretIndex].getLv(), p = "turret_" + h.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", l).turretId + "_" + c;
                for (s = 0; s < this.snakeTurret.length; s++) this.snakeTurret[s].spriteFrame = this.atlas.getSpriteFrame(p);
            };
            e.prototype.playBulletAction = function () {
                this.isPlayBullet = !0;
            };
            e.prototype.stopPlayBulletAction = function () {
                this.masterNode.stopAllActions();
                this.isPlayBullet = !1;
                this.bulletRoot.removeAllChildren();
                this.explosionNode.removeAllChildren();
                this.masterHpNode.removeAllChildren();
            };
            e.prototype.addBulletNode = function (t, e) {
                var i = null;
                (i = new cc.Node()).parent = this.bulletRoot;
                i.angle = -90;
                i.anchorY = 1;
                i.opacity = 0;
                var n = i.addComponent(cc.Layout);
                n.type = cc.Layout.Type.VERTICAL;
                n.resizeMode = cc.Layout.ResizeMode.CONTAINER;
                n.verticalDirection = cc.Layout.VerticalDirection.TOP_TO_BOTTOM;
                for (var a = 0; a < e.length; a++) {
                    var r = e[a], o = new cc.Node();
                    o.parent = i;
                    o.addComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(r);
                }
                return i;
            };
            e.prototype.addEffectNode = function (t) {
                var e = cc.instantiate(c.GValue.pfFrameAnim);
                e.parent = this.turretEffectNode;
                e.angle = -90;
                var i = e.getComponent(d.default);
                i.init(this.atlas, t.effectImg, t.effectImgCount, s.GConfig.ActionInterval, null, function () {
                    e.destroy();
                });
                i.slowAble = !1;
                i.play(1);
            };
            e.prototype.update = function (t) {
                if (!this._isInAnim) {
                    this.isPlayBullet && this.bulletAction(t);
                    this.recoverProgress(t);
                }
            };
            e.prototype.bulletAction = function (t) {
                var e = this, i = y.SnakeMgr.getCurSnakeType(), n = y.SnakeMgr.getSnakeConfigDataForType(i), a = n.bulletId, r = h.ConfigDataMgr.getData("ConfigBulletData", a);
                this._bulletFireTime += t;
                var o = r.fireSpeed;
                if (this._bulletFireTime >= o) {
                    this._bulletFireTime = 0;
                    (function () {
                        if (n) {
                            var t = h.ConfigDataMgr.getData("ConfigBulletData", a);
                            e.addEffectNode(r);
                            var o = e.addBulletNode(i, t.image), u = t.bulletSpeed, f = cc.v2(355, 0), g = (f.x - o.x) / u, _ = cc.moveTo(g, f), y = cc.fadeTo(g, 255), v = cc.callFunc(function () {
                                p.FrameMgr.audioMgr.playEffect("a_turretUI_fire");
                            }), b = cc.spawn(_, y, v), M = cc.callFunc(function () {
                                o.destroy();
                            }), S = cc.callFunc(function () {
                                var t = cc.instantiate(c.GValue.pfFrameAnim);
                                t.scale = 1;
                                t.parent = e.explosionNode;
                                var i = t.getComponent(d.default);
                                i.init(e.atlas, "master_", 5, 2 * s.GConfig.ActionInterval, null, function () {
                                    t.destroy();
                                });
                                i.slowAble = !1;
                                i.play(1);
                            }), k = cc.callFunc(function () {
                                (function () {
                                    var t = cc.instantiate(c.GValue.pfNum);
                                    t.parent = e.masterHpNode;
                                    t.scale = 1.5;
                                    t.setPosition(cc.v2(-22, 50));
                                    var i = t.getComponent(m.default);
                                    i.init();
                                    i.setAtlas(e.atlas);
                                    i.setType(l.NumType.WeaponAtk);
                                    i.setAnchor(cc.v2(.5, .5));
                                    i.setDistance(3);
                                    i.setDiffY(".", -12);
                                    i.setDiffY("m", -6);
                                    i.setDiffY("b", -6);
                                    i.setString("-" + e._reviewAtk);
                                    var n = 10 * s.GConfig.ActionInterval, a = cc.moveTo(n, cc.v2(-22, 90)), r = cc.fadeTo(n, 0), o = cc.spawn(a, r), h = cc.callFunc(function () {
                                        t.destroy();
                                    }), u = cc.sequence(o, h);
                                    t.runAction(u);
                                })();
                            }), C = cc.sequence(b, M, S, k);
                            o.runAction(C);
                        }
                    })();
                    cc.tween(this.snakeTurret[2].node).to(2 * s.GConfig.ActionInterval, {
                        x: -34
                    }).to(3 * s.GConfig.ActionInterval, {
                        x: 5
                    }).to(2 * s.GConfig.ActionInterval, {
                        x: -9
                    }).start();
                }
            };
            e.prototype.refreshNodeList = function () {
                var t = this._progressIndex, e = this._turretLvArr[t];
                e.setScale(1.4 - .4 * Math.abs(this._currentMoveProgress));
                var i = e.node.width * this._currentMoveCurProgress, n = this.turretLvRoot.x + i;
                this.refreshTurretX(n);
                var a = e.getPtState(), r = e.getAdjustPos();
                e.node;
                if (0 != t) {
                    var o = t - 1, s = this._turretLvArr[o];
                    if (this._currentMoveProgress > 0) {
                        s.setScale(1 + .4 * this._currentMoveProgress);
                        if (this._currentMoveProgress > .5) {
                            a = s.getPtState();
                            r = s.getAdjustPos();
                            s.node;
                        }
                    } else s.setScale(1);
                }
                if (t != this._turretLvArr.length - 1) {
                    var c = t + 1, l = this._turretLvArr[c];
                    if (this._currentMoveProgress < 0) {
                        l.setScale(1 + .4 * -this._currentMoveProgress);
                        if (this._currentMoveProgress < -.5) {
                            r = l.getAdjustPos();
                            a = l.getPtState();
                            l.node;
                        }
                    } else l.node.scale = 1;
                }
                this.refreshLightRing(a, r);
                this.refreshProgressUI();
                this.refreshSelectState();
            };
            e.prototype.refreshLightRing = function () { };
            e.prototype.recoverProgress = function (t) {
                if (this._isNeedReset) {
                    this._currentMoveCurProgress = 2 * t;
                    if (this._isLeft) if (this._currentMoveProgress > .5) if ((e = this._currentMoveProgress + this._currentMoveCurProgress) >= 1) {
                        this._currentMoveCurProgress = 1 - this._currentMoveProgress;
                        this._currentMoveProgress = 0;
                        this._reviewIndex !== this._curretIndex && (this._isChangeReviewTurret = !0);
                        this._reviewIndex = this.getPreIndex(this._reviewIndex, this._curretIndex);
                        this._progressIndex = this.getPreIndex(this._progressIndex, 0);
                    } else this._currentMoveProgress = e; else if ((e = this._currentMoveProgress + this._currentMoveCurProgress) >= 0) {
                        this._currentMoveCurProgress = 0 - this._currentMoveProgress;
                        this._currentMoveProgress = 0;
                    } else this._currentMoveProgress = e; else {
                        this._currentMoveCurProgress = -this._currentMoveCurProgress;
                        if (this._currentMoveProgress < -.5) if ((e = this._currentMoveProgress + this._currentMoveCurProgress) <= -1) {
                            this._currentMoveCurProgress = -(1 + this._currentMoveProgress);
                            this._currentMoveProgress = 0;
                            this._isChangeReviewTurret = !0;
                            this._reviewIndex = this.getNextIndex(this._reviewIndex, this._turretLvArr.length - 1);
                            this._progressIndex = this.getNextIndex(this._progressIndex, this._turretLvArr.length - 1);
                        } else this._currentMoveProgress = e; else {
                            var e;
                            if ((e = this._currentMoveProgress + this._currentMoveCurProgress) <= 0) {
                                this._currentMoveCurProgress = -this._currentMoveProgress;
                                this._currentMoveProgress = 0;
                            } else this._currentMoveProgress = e;
                        }
                    }
                    if (0 === this._currentMoveProgress) {
                        this._isNeedReset = !1;
                        var i = this._turretLvArr[this._reviewIndex].getLv();
                        this._reviewIndex === this._curretIndex && (i = u.GData.getSnakeTurretLv() + 1);
                        this.refreshNextLvContent(i);
                        if (this._isChangeReviewTurret) {
                            this._isChangeReviewTurret = !1;
                            p.FrameMgr.audioMgr.playEffect("a_turretUI_select");
                            this.refreshSnakeAbout();
                        }
                    }
                    this.refreshNodeList();
                }
            };
            e.prototype.onBtnWeaponBackClick = function () { };
            e.prototype.refreshCurLvContent = function () {
                var t = u.GData.getSnakeTurretLv();
                this.setCurLvNumValue("l" + t);
                var e = h.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", t);
                if (e) {
                    this.setCurAtkNumValue(_.DYTools.numberToString(Math.floor(e.normalAtk)));
                    this._reviewAtk = e.normalAtk;
                } else this.setCurAtkNumValue("0");
                if (this._maxLevel != t) {
                    this.nextLvNode.active = !0;
                    this.nextLvMax.active = !1;
                    this.refreshNextLvContent(t + 1);
                } else {
                    this.nextLvNode.active = !1;
                    this.nextLvMax.active = !0;
                }
            };
            e.prototype.refreshNextLvContent = function (t) {
                this.setNextLvNumValue("l" + t);
                var e = h.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", t);
                if (e) {
                    this._reviewAtk = e.normalAtk;
                    if (this._reviewIndex == this._curretIndex) {
                        var i = h.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", t - 1);
                        this._reviewAtk = i.normalAtk;
                    }
                    this.setNextAtkNumValue(_.DYTools.numberToString(Math.floor(e.normalAtk)));
                } else this.setNextAtkNumValue("0");
            };
            e.prototype.refreshMaterial = function () {
                var t = u.GData.getSnakeTurretLv(), e = h.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", t);
                if (e) {
                    this._currentBtnState = o.LVUp;
                    var i = !0, n = !0, a = cc.color(221, 77, 65), r = cc.color(255, 255, 255);
                    if (e.gold > 0) {
                        var s = u.GData.getGold();
                        this.lvUpGoldNum.setString(_.DYTools.numberToString(e.gold));
                        if (e.gold > s) {
                            this.lvUpGoldNum.setColor(a);
                            this._currentBtnState = o.LVUpNone;
                        } else this.lvUpGoldNum.setColor(r);
                        this.lvUpGoldNum.node.parent.active = !0;
                    } else {
                        this.lvUpGoldNum.node.parent.active = !1;
                        i = !1;
                    }
                    if (e.itemNum > 0) {
                        var c = e.itemNum, l = u.GData.getItemNum(301);
                        this.lvUpMaterialTotalNum.setString(_.DYTools.numberToString(l));
                        this.lvUpMaterialNum.setString("/" + _.DYTools.numberToString(c));
                        var p = this.lvUpMaterialTotalNum.getSize().width + 1 + this.lvUpMaterialNum.getSize().width;
                        this.lvUpMaterialTotalNum.node.x = .5 * -p + 5;
                        this.lvUpMaterialNum.node.x = this.lvUpMaterialTotalNum.node.x + 1 + this.lvUpMaterialTotalNum.getSize().width;
                        if (c > l) {
                            this.lvUpMaterialTotalNum.setColor(a);
                            this._currentBtnState = o.LVUpNone;
                        } else this.lvUpMaterialTotalNum.setColor(r);
                        this.lvUpMaterialNum.node.parent.active = !0;
                    } else {
                        this.lvUpMaterialNum.node.parent.active = !1;
                        n = !1;
                    }
                    if (i && n) {
                        this.lvUpGoldNum.node.parent.x = -80;
                        this.lvUpMaterialNum.node.parent.x = 80;
                    } else i ? this.lvUpGoldNum.node.parent.x = 0 : n && (this.lvUpMaterialNum.node.parent.x = 0);
                    if (this._currentBtnState == o.LVUp) {
                        this.lvUpBtnClick.active = !0;
                        this.lvUpBtnGrey.active = !1;
                        this.lvUpBtnClickLight.active = !0;
                        this.lvUpBtnClickMoveLight.node.active = !0;
                    } else {
                        this.lvUpBtnClick.active = !1;
                        this.lvUpBtnGrey.active = !0;
                        this.lvUpBtnClickLight.active = !1;
                        this.lvUpBtnClickMoveLight.node.active = !1;
                    }
                }
            };
            e.prototype.onBtnLvUpClick = function () {
                var t = this;
                if (!this._isInAnim && _.DYTools.isBtnClickedAble(!1)) switch (this._currentBtnState) {
                    case o.LVUpNone:
                        g.GFunc.showFloatTip({
                            txt: p.FrameMgr.languageMgr.getTxt(1003),
                            bgType: 2
                        });
                        break;

                    case o.LVUp:
                        var e = u.GData.getSnakeTurretLv(), i = h.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", e), n = h.ConfigDataMgr.getData("ConfigSnakeTurretLvupData", e + 1);
                        if (i) {
                            var a = function () {
                                g.GFunc.goldChange(-i.gold);
                                g.GFunc.itemChange(301, -i.itemNum);
                                p.FrameMgr.noticeMgr.emit(l.EventTypeEnum.CoinRefresh);
                                u.GData.setSnakeTurretLv(e + 1);
                                t.refreshCurPtIndex();
                                t.refreshProgressUI();
                                t.refreshCurLvContent();
                                t.refreshMaterial();
                                t.refreshSnakeAbout();
                                t.scollProgressUI();
                                t.refreshSelectState();
                            };
                            0 !== n.turretId ? this.playEvalutionAction(a) : this.playLvUpAction(a);
                        }
                }
            };
            e.prototype.stopAllAction = function () {
                this.animTitleNode.stopAllActions();
                this.animProgressNode.stopAllActions();
                this.animMasterInNode.stopAllActions();
                this.animMasterScaleNode.stopAllActions();
                this.animMasterNode.stopAllActions();
                this.animBgLight.stopAllActions();
            };
            e.prototype.playInAnim = function () {
                var t = this;
                this._isInAnim = !0;
                var e = s.GConfig.ActionInterval;
                this.animTitleNode.stopAllActions();
                this.animTitleNode.opacity = 0;
                cc.tween(this.animTitleNode).to(6 * e, {
                    opacity: 255
                }).start();
                this.animProgressNode.stopAllActions();
                this.animProgressNode.opacity = 0;
                this.animProgressNode.x = 440;
                cc.tween(this.animProgressNode).delay(3 * e).to(8 * e, {
                    opacity: 255,
                    x: -3
                }).to(5 * e, {
                    x: 0
                }).start();
                this.infoBoard.stopAllActions();
                this.infoBoard.opacity = 0;
                this.infoBoard.scale = .9;
                this.infoBoard.x = 500;
                cc.tween(this.infoBoard).delay(9 * e).to(6 * e, {
                    opacity: 255,
                    scale: 1,
                    x: -15
                }).to(3 * e, {
                    x: 5
                }).to(3 * e, {
                    x: 0
                }).start();
                this.animBgLight.stopAllActions();
                this.animBgLight.opacity = 0;
                cc.tween(this.animBgLight).to(5 * e, {
                    opacity: 255
                }).start();
                this.animSnakeNode.stopAllActions();
                this.animSnakeNode.opacity = 0;
                this.animSnakeNode.x = -370;
                cc.tween(this.animSnakeNode).delay(11 * e).to(6 * e, {
                    opacity: 255,
                    x: -167
                }).to(4 * e, {
                    x: -170
                }).start();
                this.animMasterInNode.active = !0;
                this.animMasterInNode.stopAllActions();
                this.animMasterScaleNode.stopAllActions();
                this.animMasterNode.stopAllActions();
                this.animMasterInNode.y = 550;
                this.animMasterInNode.scaleX = 1;
                this.animMasterInNode.scaleY = 1;
                this.animMasterScaleNode.active = !1;
                this.animMasterNode.active = !1;
                cc.tween(this.animMasterInNode).delay(11 * e).to(2 * e, {
                    y: 200,
                    scaleX: 1.28,
                    scaleY: 3.5
                }).to(3 * e, {
                    y: 0,
                    scaleX: 3.1,
                    scaleY: 1.32
                }).call(function () {
                    t.animMasterInNode.active = !1;
                    t.animMasterNode.active = !1;
                    t.animMasterScaleNode.scaleX = -1.4;
                    t.animMasterScaleNode.scaleY = .9;
                    t.animMasterScaleNode.active = !0;
                    cc.tween(t.animMasterScaleNode).to(3 * e, {
                        scaleX: -.95,
                        scaleY: 1.4
                    }).to(3 * e, {
                        scaleX: -1,
                        scaleY: 1
                    }).call(function () {
                        t.animMasterInNode.active = !1;
                        t.animMasterNode.active = !0;
                        t.animMasterScaleNode.active = !1;
                        t.animMasterNode.getComponent(cc.Animation).play("anim_weaponUI_move");
                    }).start();
                }).start();
                this.lvUpNode.stopAllActions();
                this.lvUpNode.opacity = 0;
                this.lvUpNode.scale = .7;
                this.lvUpBtnClickLight.stopAllActions();
                this.lvUpBtnClickLight.opacity = 0;
                this.lvUpBtnClickLight.scale = 1;
                this.lvUpBtnClickMoveLight.node.stopAllActions();
                this.lvUpBtnClickMoveLight.node.opacity = 0;
                this.lvUpBtnClick.stopAllActions();
                this.lvUpBtnClick.scale = 1;
                this.lvUpBtnClick.angle = 0;
                cc.tween(this.lvUpNode).delay(21 * e).to(3 * e, {
                    scale: 1.05,
                    opacity: 255
                }).to(3 * e, {
                    scale: .98
                }).to(3 * e, {
                    scale: 1
                }).call(function () {
                    t.lvUpBtnClickMoveLight.node.opacity = 255;
                    t.lvUpBtnClickMoveLight.init(t.atlas, "weapon_lvup_movelight_", 9, 2 * e);
                    t.lvUpBtnClickMoveLight.setDstBlendFactorMode1();
                    t.lvUpBtnClickMoveLight.node.scaleX = 2.2;
                    t.lvUpBtnClickMoveLight.node.scaleY = 1.7;
                    t.lvUpBtnClickMoveLight.slowAble = !1;
                    cc.tween(t.lvUpBtnClickMoveLight.node).delay(13 * e).call(function () {
                        t.lvUpBtnClickMoveLight.play(1);
                    }).delay(2).union().repeatForever().start();
                    cc.tween(t.lvUpBtnClick).to(3 * e, {
                        scale: .95,
                        angle: 1
                    }).to(3 * e, {
                        scale: 1.05,
                        angle: -1
                    }).to(3 * e, {
                        scale: .98,
                        angle: 0
                    }).to(4 * e, {
                        scale: 1,
                        angle: 0
                    }).delay(2).union().repeatForever().start();
                    cc.tween(t.lvUpBtnClickLight).to(13 * e, {
                        scaleX: 2.1,
                        scaleY: 1,
                        opacity: 0
                    }).delay(2).to(0, {
                        scaleX: 1,
                        scaleY: 1,
                        opacity: 255
                    }).union().repeatForever().start();
                }).start();
                this._isInAnim = !1;
            };
            e.prototype.playInfoLvUpAction = function () {
                var t = this, e = s.GConfig.ActionInterval;
                this.infoLine.stopAllActions();
                this.infoLine.opacity = 229.5;
                cc.tween(this.infoLine).to(9 * e, {
                    opacity: 0
                }).start();
                this.infoLvArrow.stopAllActions();
                this.infoLvArrow.scale = 2;
                this.infoLvArrow.x = 0;
                this.infoLvArrow.opacity = 229.5;
                cc.tween(this.infoLvArrow).to(9 * e, {
                    scale: 1.3,
                    opacity: 0,
                    x: 100
                }).start();
                this.curLvNum.node.stopAllActions();
                this.curLvNum.node.scale = .7;
                cc.tween(this.curLvNum.node).to(3 * e, {
                    scale: 1.1
                }).to(4 * e, {
                    scale: 1
                }).start();
                this.curAtkNum.node.stopAllActions();
                this.curAtkNum.node.scale = .7;
                cc.tween(this.curAtkNum.node).to(3 * e, {
                    scale: 1.1
                }).to(4 * e, {
                    scale: 1
                }).start();
                this.curAtkNumShadow.node.stopAllActions();
                this.curAtkNumShadow.node.opacity = 255;
                this.curAtkNumShadow.node.scale = .7;
                cc.tween(this.curAtkNumShadow.node).to(3 * e, {
                    opacity: 229.5,
                    scale: 1.1
                }).to(8 * e, {
                    opacity: 0,
                    scale: 2.6
                }).start();
                this.nextLvNum.node.stopAllActions();
                this.nextLvNum.node.scale = .9;
                cc.tween(this.nextLvNum.node).to(6 * e, {
                    scale: 1.15
                }).to(4 * e, {
                    scale: 1
                }).start();
                this.nextAtkNum.node.stopAllActions();
                this.nextAtkNum.node.scale = .9;
                cc.tween(this.nextAtkNum.node).to(6 * e, {
                    scale: 1.15
                }).to(4 * e, {
                    scale: 1
                }).start();
                this.curAtkLvEffect.node.stopAllActions();
                this.curAtkLvEffect.node.opacity = 0;
                cc.tween(this.curAtkLvEffect.node).delay(8 * e).to(0, {
                    opacity: 255
                }).call(function () {
                    t.curAtkLvEffect.setAnimation(0, "shine", !1);
                }).start();
            };
            e.prototype.playLvUpAction = function (t) {
                t();
                this.playInfoLvUpAction();
                s.GConfig.ActionInterval;
                var e = this._turretLvArr[this._curretIndex];
                e.getUnlockNode(), e.getShadowNode();
                e.playLvup1();
                p.FrameMgr.audioMgr.playEffect("a_turretUI_lvup");
            };
            e.prototype.playEvalutionAction = function (t) {
                var e = this;
                this._isInAnim = !0;
                var i = this._curretIndex;
                this._turretProgressArr[i].refreshProgress(1);
                var n = s.GConfig.ActionInterval;
                p.FrameMgr.audioMgr.playEffect("a_turretUI_spotlight");
                var a = i + 1, r = this._turretLvArr[a], o = r.getUnlockNode(), c = r.getLvNode(this._maxLevel), l = this.turretLvRoot.x;
                cc.tween(this.turretLvRoot).to(7 * n, {
                    x: l - 151
                }).start();
                cc.tween(this.turretProgressBgRoot).to(7 * n, {
                    x: l - 151
                }).start();
                cc.tween(this.turretProgressRoot).to(7 * n, {
                    x: l - 151
                }).call(function () {
                    t();
                    r.playLvup2();
                    c.stopAllActions();
                    c.scale = .8;
                    cc.tween(c).to(3 * s.GConfig.ActionInterval, {
                        scale: 1.4
                    }).to(4 * s.GConfig.ActionInterval, {
                        scale: .95
                    }).to(4 * s.GConfig.ActionInterval, {
                        scale: 1
                    }).start();
                    var i = o.scale;
                    cc.tween(o).to(1 * n, {
                        scale: i
                    }).to(3 * n, {
                        scale: .89
                    }).to(4 * n, {
                        scale: i
                    }).union().repeat(4).call(function () {
                        e.playInfoLvUpAction();
                        p.FrameMgr.audioMgr.playEffect("a_turretUI_lvup");
                    }).delay(7 * n).call(function () {
                        e._isInAnim = !1;
                    }).start();
                }).start();
            };
            r([k({
                type: cc.Node,
                displayName: "动画标题"
            })], e.prototype, "animTitleNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "动画进度条"
            })], e.prototype, "animProgressNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "动画蛇"
            })], e.prototype, "animSnakeNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "动画怪物入场图"
            })], e.prototype, "animMasterInNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "动画形变怪物"
            })], e.prototype, "animMasterScaleNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "动画怪物"
            })], e.prototype, "animMasterNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "动画蛇和怪底层光"
            })], e.prototype, "animBgLight", void 0);
            r([k({
                type: cc.Node,
                displayName: "进度条炮台父节点"
            })], e.prototype, "turretLvRoot", void 0);
            r([k({
                type: cc.Node,
                displayName: "进度条连接线父节点"
            })], e.prototype, "turretProgressRoot", void 0);
            r([k({
                type: cc.Node,
                displayName: "进度条背景板父节点"
            })], e.prototype, "turretProgressBgRoot", void 0);
            r([k({
                type: cc.Node,
                displayName: "子弹父节点"
            })], e.prototype, "bulletRoot", void 0);
            r([k({
                type: cc.Node,
                displayName: "怪物节点"
            })], e.prototype, "masterNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "怪物扣血节点"
            })], e.prototype, "masterHpNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "爆炸节点"
            })], e.prototype, "explosionNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "滑动触碰节点"
            })], e.prototype, "tapNode", void 0);
            r([k({
                type: cc.Prefab,
                displayName: "进度条炮台预制件"
            })], e.prototype, "turretLvItem", void 0);
            r([k({
                type: cc.Prefab,
                displayName: "进度条连接线预制件"
            })], e.prototype, "turretProgressItem", void 0);
            r([k({
                type: cc.Prefab,
                displayName: "进度条背景板预制体"
            })], e.prototype, "turretProgressBgItem", void 0);
            r([k({
                type: cc.Sprite,
                displayName: "蛇头精灵"
            })], e.prototype, "snakeHead", void 0);
            r([k({
                type: cc.Sprite,
                displayName: "蛇尾精灵"
            })], e.prototype, "snakeTail", void 0);
            r([k({
                type: cc.Sprite,
                displayName: "蛇连接线精灵组"
            })], e.prototype, "snakeLine", void 0);
            r([k({
                type: cc.Sprite,
                displayName: "蛇节精灵组"
            })], e.prototype, "snakeBody", void 0);
            r([k({
                type: cc.Sprite,
                displayName: "蛇节炮塔精灵组"
            })], e.prototype, "snakeTurret", void 0);
            r([k({
                type: cc.Node,
                displayName: "炮口特效节点"
            })], e.prototype, "turretEffectNode", void 0);
            r([k(cc.SpriteAtlas)], e.prototype, "atlas", void 0);
            r([k({
                type: cc.Node,
                displayName: "信息面板"
            })], e.prototype, "infoBoard", void 0);
            r([k({
                type: cc.Node,
                displayName: "信息面板信息条"
            })], e.prototype, "infoLine", void 0);
            r([k({
                type: cc.Node,
                displayName: "信息面板升级箭头"
            })], e.prototype, "infoLvArrow", void 0);
            r([k({
                type: m.default,
                displayName: "当前等级"
            })], e.prototype, "curLvNum", void 0);
            r([k({
                type: m.default,
                displayName: "当前攻击"
            })], e.prototype, "curAtkNum", void 0);
            r([k({
                type: m.default,
                displayName: "当前攻击幻影"
            })], e.prototype, "curAtkNumShadow", void 0);
            r([k({
                type: sp.Skeleton,
                displayName: "当前攻击升级动画"
            })], e.prototype, "curAtkLvEffect", void 0);
            r([k({
                type: m.default,
                displayName: "下一级等级"
            })], e.prototype, "nextLvNum", void 0);
            r([k({
                type: m.default,
                displayName: "下一级攻击"
            })], e.prototype, "nextAtkNum", void 0);
            r([k({
                type: cc.Node,
                displayName: "下一级节点"
            })], e.prototype, "nextLvNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "下一级已满级"
            })], e.prototype, "nextLvMax", void 0);
            r([k({
                type: cc.Node,
                displayName: "材料节点"
            })], e.prototype, "CLNode", void 0);
            r([k({
                type: m.default,
                displayName: "金币消耗"
            })], e.prototype, "lvUpGoldNum", void 0);
            r([k({
                type: m.default,
                displayName: "材料消耗"
            })], e.prototype, "lvUpMaterialNum", void 0);
            r([k({
                type: m.default,
                displayName: "材料总量"
            })], e.prototype, "lvUpMaterialTotalNum", void 0);
            r([k({
                type: cc.Node,
                displayName: "升级按钮"
            })], e.prototype, "lvUpNode", void 0);
            r([k({
                type: cc.Node,
                displayName: "可升级按钮"
            })], e.prototype, "lvUpBtnClick", void 0);
            r([k({
                type: d.default,
                displayName: "可升级按钮走光"
            })], e.prototype, "lvUpBtnClickMoveLight", void 0);
            r([k({
                type: cc.Node,
                displayName: "可升级按钮光"
            })], e.prototype, "lvUpBtnClickLight", void 0);
            r([k({
                type: cc.Node,
                displayName: "不可升级按钮"
            })], e.prototype, "lvUpBtnGrey", void 0);
            r([k(cc.Sprite)], e.prototype, "curLvFont", void 0);
            r([k(cc.Sprite)], e.prototype, "curAtkFont", void 0);
            r([k(cc.Sprite)], e.prototype, "nextAtkFont", void 0);
            r([k(cc.Sprite)], e.prototype, "nextLvMaxFont", void 0);
            return r([S], e);
        }(f.default);
        i.default = C;
        cc._RF.pop();
    }, {
        "../../../../../config/GameConfig": "GameConfig",
        "../../../../../config/GameConst": "GameConst",
        "../../../../../config/GameEnum": "GameEnum",
        "../../../../../data/manager/ConfigDataManager": "ConfigDataManager",
        "../../../../../data/storage/GameData": "GameData",
        "../../../../../frame/manager/FrameManager": "FrameManager",
        "../../../../../frame/ui/FrameAnim": "FrameAnim",
        "../../../../../frame/ui/UIComponent": "UIComponent",
        "../../../../../frame/ui/UINum": "UINum",
        "../../../../../util/GameFunc": "GameFunc",
        "../../../../../util/Tools": "Tools",
        "../../../../battle/manager/battle/SnakeManager": "SnakeManager",
        "./weapon/TurretLvItem": "TurretLvItem",
        "./weapon/TurretProgressItem": "TurretProgressItem"
    }],
    aesa: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "3a13dmMgV9KmqSpIEwCJLZ+", "aesa");
        n = function (t) {
            (function () {
                var e = t, i = e.lib.BlockCipher, n = e.algo, a = [], r = [], o = [], s = [], c = [], l = [], h = [], u = [], p = [], d = [];
                (function () {
                    for (var t = [], e = 0; e < 256; e++) t[e] = e < 128 ? e << 1 : e << 1 ^ 283;
                    var i = 0, n = 0;
                    for (e = 0; e < 256; e++) {
                        var f = n ^ n << 1 ^ n << 2 ^ n << 3 ^ n << 4;
                        f = f >>> 8 ^ 255 & f ^ 99;
                        a[i] = f;
                        r[f] = i;
                        var m = t[i], g = t[m], _ = t[g], y = 257 * t[f] ^ 16843008 * f;
                        o[i] = y << 24 | y >>> 8;
                        s[i] = y << 16 | y >>> 16;
                        c[i] = y << 8 | y >>> 24;
                        l[i] = y;
                        y = 16843009 * _ ^ 65537 * g ^ 257 * m ^ 16843008 * i;
                        h[f] = y << 24 | y >>> 8;
                        u[f] = y << 16 | y >>> 16;
                        p[f] = y << 8 | y >>> 24;
                        d[f] = y;
                        if (i) {
                            i = m ^ t[t[t[_ ^ m]]];
                            n ^= t[t[n]];
                        } else i = n = 1;
                    }
                })();
                var f = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], m = n.AES = i.extend({
                    _doReset: function () {
                        if (!this._nRounds || this._keyPriorReset !== this._key) {
                            for (var t = this._keyPriorReset = this._key, e = t.words, i = t.sigBytes / 4, n = 4 * ((this._nRounds = i + 6) + 1), r = this._keySchedule = [], o = 0; o < n; o++) if (o < i) r[o] = e[o]; else {
                                l = r[o - 1];
                                if (o % i) i > 6 && o % i == 4 && (l = a[l >>> 24] << 24 | a[l >>> 16 & 255] << 16 | a[l >>> 8 & 255] << 8 | a[255 & l]); else {
                                    l = a[(l = l << 8 | l >>> 24) >>> 24] << 24 | a[l >>> 16 & 255] << 16 | a[l >>> 8 & 255] << 8 | a[255 & l];
                                    l ^= f[o / i | 0] << 24;
                                }
                                r[o] = r[o - i] ^ l;
                            }
                            for (var s = this._invKeySchedule = [], c = 0; c < n; c++) {
                                o = n - c;
                                if (c % 4) var l = r[o]; else l = r[o - 4];
                                s[c] = c < 4 || o <= 4 ? l : h[a[l >>> 24]] ^ u[a[l >>> 16 & 255]] ^ p[a[l >>> 8 & 255]] ^ d[a[255 & l]];
                            }
                        }
                    },
                    encryptBlock: function (t, e) {
                        this._doCryptBlock(t, e, this._keySchedule, o, s, c, l, a);
                    },
                    decryptBlock: function (t, e) {
                        var i = t[e + 1];
                        t[e + 1] = t[e + 3];
                        t[e + 3] = i;
                        this._doCryptBlock(t, e, this._invKeySchedule, h, u, p, d, r);
                        i = t[e + 1];
                        t[e + 1] = t[e + 3];
                        t[e + 3] = i;
                    },
                    _doCryptBlock: function (t, e, i, n, a, r, o, s) {
                        for (var c = this._nRounds, l = t[e] ^ i[0], h = t[e + 1] ^ i[1], u = t[e + 2] ^ i[2], p = t[e + 3] ^ i[3], d = 4, f = 1; f < c; f++) {
                            var m = n[l >>> 24] ^ a[h >>> 16 & 255] ^ r[u >>> 8 & 255] ^ o[255 & p] ^ i[d++], g = n[h >>> 24] ^ a[u >>> 16 & 255] ^ r[p >>> 8 & 255] ^ o[255 & l] ^ i[d++], _ = n[u >>> 24] ^ a[p >>> 16 & 255] ^ r[l >>> 8 & 255] ^ o[255 & h] ^ i[d++], y = n[p >>> 24] ^ a[l >>> 16 & 255] ^ r[h >>> 8 & 255] ^ o[255 & u] ^ i[d++];
                            l = m;
                            h = g;
                            u = _;
                            p = y;
                        }
                        m = (s[l >>> 24] << 24 | s[h >>> 16 & 255] << 16 | s[u >>> 8 & 255] << 8 | s[255 & p]) ^ i[d++],
                            g = (s[h >>> 24] << 24 | s[u >>> 16 & 255] << 16 | s[p >>> 8 & 255] << 8 | s[255 & l]) ^ i[d++],
                            _ = (s[u >>> 24] << 24 | s[p >>> 16 & 255] << 16 | s[l >>> 8 & 255] << 8 | s[255 & h]) ^ i[d++],
                            y = (s[p >>> 24] << 24 | s[l >>> 16 & 255] << 16 | s[h >>> 8 & 255] << 8 | s[255 & u]) ^ i[d++];
                        t[e] = m;
                        t[e + 1] = g;
                        t[e + 2] = _;
                        t[e + 3] = y;
                    },
                    keySize: 8
                });
                e.AES = i._createHelper(m);
            })();
            return t.AES;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./enc-base64"), t("./md5"), t("./evpkdf"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core",
        "./enc-base64": "enc-base64",
        "./evpkdf": "evpkdf",
        "./md5": "md5"
    }],
    aes: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "96a73Hq+p1HU5en1dj+P3PG", "aes");
        i.__esModule = !0;
        i.CryptoJS = void 0;
        var n, a, r = r || function (t) {
            var e = {}, i = e.lib = {}, n = function () { }, a = i.Base = {
                extend: function (t) {
                    n.prototype = this;
                    var e = new n();
                    t && e.mixIn(t);
                    e.hasOwnProperty("init") || (e.init = function () {
                        e.$super.init.apply(this, arguments);
                    });
                    e.init.prototype = e;
                    e.$super = this;
                    return e;
                },
                create: function () {
                    var t = this.extend();
                    t.init.apply(t, arguments);
                    return t;
                },
                init: function () { },
                mixIn: function (t) {
                    for (var e in t) t.hasOwnProperty(e) && (this[e] = t[e]);
                    t.hasOwnProperty("toString") && (this.toString = t.toString);
                },
                clone: function () {
                    return this.init.prototype.extend(this);
                }
            }, r = i.WordArray = a.extend({
                init: function (t, e) {
                    t = this.words = t || [];
                    this.sigBytes = null != e ? e : 4 * t.length;
                },
                toString: function (t) {
                    return (t || s).stringify(this);
                },
                concat: function (t) {
                    var e = this.words, i = t.words, n = this.sigBytes;
                    t = t.sigBytes;
                    this.clamp();
                    if (n % 4) for (var a = 0; a < t; a++) e[n + a >>> 2] |= (i[a >>> 2] >>> 24 - a % 4 * 8 & 255) << 24 - (n + a) % 4 * 8; else if (65535 < i.length) for (a = 0; a < t; a += 4) e[n + a >>> 2] = i[a >>> 2]; else e.push.apply(e, i);
                    this.sigBytes += t;
                    return this;
                },
                clamp: function () {
                    var e = this.words, i = this.sigBytes;
                    e[i >>> 2] &= 4294967295 << 32 - i % 4 * 8;
                    e.length = t.ceil(i / 4);
                },
                clone: function () {
                    var t = a.clone.call(this);
                    t.words = this.words.slice(0);
                    return t;
                },
                random: function (e) {
                    for (var i = [], n = 0; n < e; n += 4) i.push(4294967296 * t.random() | 0);
                    return new r.init(i, e);
                }
            }), o = e.enc = {}, s = o.Hex = {
                stringify: function (t) {
                    var e = t.words;
                    t = t.sigBytes;
                    for (var i = [], n = 0; n < t; n++) {
                        var a = e[n >>> 2] >>> 24 - n % 4 * 8 & 255;
                        i.push((a >>> 4).toString(16));
                        i.push((15 & a).toString(16));
                    }
                    return i.join("");
                },
                parse: function (t) {
                    for (var e = t.length, i = [], n = 0; n < e; n += 2) i[n >>> 3] |= parseInt(t.substr(n, 2), 16) << 24 - n % 8 * 4;
                    return new r.init(i, e / 2);
                }
            }, c = o.Latin1 = {
                stringify: function (t) {
                    var e = t.words;
                    t = t.sigBytes;
                    for (var i = [], n = 0; n < t; n++) i.push(String.fromCharCode(e[n >>> 2] >>> 24 - n % 4 * 8 & 255));
                    return i.join("");
                },
                parse: function (t) {
                    for (var e = t.length, i = [], n = 0; n < e; n++) i[n >>> 2] |= (255 & t.charCodeAt(n)) << 24 - n % 4 * 8;
                    return new r.init(i, e);
                }
            }, l = o.Utf8 = {
                stringify: function (t) {
                    try {
                        return decodeURIComponent(escape(c.stringify(t)));
                    } catch (t) {
                        throw Error("Malformed UTF-8 data===" + t);
                    }
                },
                parse: function (t) {
                    return c.parse(unescape(encodeURIComponent(t)));
                }
            }, h = i.BufferedBlockAlgorithm = a.extend({
                reset: function () {
                    this._data = new r.init();
                    this._nDataBytes = 0;
                },
                _append: function (t) {
                    "string" == typeof t && (t = l.parse(t));
                    this._data.concat(t);
                    this._nDataBytes += t.sigBytes;
                },
                _process: function (e) {
                    var i = this._data, n = i.words, a = i.sigBytes, o = this.blockSize, s = a / (4 * o);
                    e = (s = e ? t.ceil(s) : t.max((0 | s) - this._minBufferSize, 0)) * o;
                    a = t.min(4 * e, a);
                    if (e) {
                        for (var c = 0; c < e; c += o) this._doProcessBlock(n, c);
                        c = n.splice(0, e);
                        i.sigBytes -= a;
                    }
                    return new r.init(c, a);
                },
                clone: function () {
                    var t = a.clone.call(this);
                    t._data = this._data.clone();
                    return t;
                },
                _minBufferSize: 0
            });
            i.Hasher = h.extend({
                cfg: a.extend(),
                init: function (t) {
                    this.cfg = this.cfg.extend(t);
                    this.reset();
                },
                reset: function () {
                    h.reset.call(this);
                    this._doReset();
                },
                update: function (t) {
                    this._append(t);
                    this._process();
                    return this;
                },
                finalize: function (t) {
                    t && this._append(t);
                    return this._doFinalize();
                },
                blockSize: 16,
                _createHelper: function (t) {
                    return function (e, i) {
                        return new t.init(i).finalize(e);
                    };
                },
                _createHmacHelper: function (t) {
                    return function (e, i) {
                        return new u.HMAC.init(t, i).finalize(e);
                    };
                }
            });
            var u = e.algo = {};
            return e;
        }(Math);
        i.CryptoJS = r;
        a = (n = r).lib.WordArray, n.enc.Base64 = {
            stringify: function (t) {
                var e = t.words, i = t.sigBytes, n = this._map;
                t.clamp();
                t = [];
                for (var a = 0; a < i; a += 3) for (var r = (e[a >>> 2] >>> 24 - a % 4 * 8 & 255) << 16 | (e[a + 1 >>> 2] >>> 24 - (a + 1) % 4 * 8 & 255) << 8 | e[a + 2 >>> 2] >>> 24 - (a + 2) % 4 * 8 & 255, o = 0; 4 > o && a + .75 * o < i; o++) t.push(n.charAt(r >>> 6 * (3 - o) & 63));
                if (e = n.charAt(64)) for (; t.length % 4;) t.push(e);
                return t.join("");
            },
            parse: function (t) {
                var e = t.length, i = this._map;
                (n = i.charAt(64)) && -1 != (n = t.indexOf(n)) && (e = n);
                for (var n = [], r = 0, o = 0; o < e; o++) if (o % 4) {
                    var s = i.indexOf(t.charAt(o - 1)) << o % 4 * 2, c = i.indexOf(t.charAt(o)) >>> 6 - o % 4 * 2;
                    n[r >>> 2] |= (s | c) << 24 - r % 4 * 8;
                    r++;
                }
                return a.create(n, r);
            },
            _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
        };
        (function (t) {
            function e(t, e, i, n, a, r, o) {
                return ((t = t + (e & i | ~e & n) + a + o) << r | t >>> 32 - r) + e;
            }
            function i(t, e, i, n, a, r, o) {
                return ((t = t + (e & n | i & ~n) + a + o) << r | t >>> 32 - r) + e;
            }
            function n(t, e, i, n, a, r, o) {
                return ((t = t + (e ^ i ^ n) + a + o) << r | t >>> 32 - r) + e;
            }
            function a(t, e, i, n, a, r, o) {
                return ((t = t + (i ^ (e | ~n)) + a + o) << r | t >>> 32 - r) + e;
            }
            for (var o = r, s = (l = o.lib).WordArray, c = l.Hasher, l = o.algo, h = [], u = 0; 64 > u; u++) h[u] = 4294967296 * t.abs(t.sin(u + 1)) | 0;
            l = l.MD5 = c.extend({
                _doReset: function () {
                    this._hash = new s.init([1732584193, 4023233417, 2562383102, 271733878]);
                },
                _doProcessBlock: function (t, r) {
                    for (var o = 0; 16 > o; o++) {
                        var s = t[c = r + o];
                        t[c] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8);
                    }
                    o = this._hash.words;
                    var c = t[r + 0], l = (s = t[r + 1], t[r + 2]), u = t[r + 3], p = t[r + 4], d = t[r + 5], f = t[r + 6], m = t[r + 7], g = t[r + 8], _ = t[r + 9], y = t[r + 10], v = t[r + 11], b = t[r + 12], M = t[r + 13], S = t[r + 14], k = t[r + 15], C = e(C = o[0], T = o[1], A = o[2], w = o[3], c, 7, h[0]), w = e(w, C, T, A, s, 12, h[1]), A = e(A, w, C, T, l, 17, h[2]), T = e(T, A, w, C, u, 22, h[3]);
                    C = e(C, T, A, w, p, 7, h[4]), w = e(w, C, T, A, d, 12, h[5]), A = e(A, w, C, T, f, 17, h[6]),
                        T = e(T, A, w, C, m, 22, h[7]), C = e(C, T, A, w, g, 7, h[8]), w = e(w, C, T, A, _, 12, h[9]),
                        A = e(A, w, C, T, y, 17, h[10]), T = e(T, A, w, C, v, 22, h[11]), C = e(C, T, A, w, b, 7, h[12]),
                        w = e(w, C, T, A, M, 12, h[13]), A = e(A, w, C, T, S, 17, h[14]), C = i(C, T = e(T, A, w, C, k, 22, h[15]), A, w, s, 5, h[16]),
                        w = i(w, C, T, A, f, 9, h[17]), A = i(A, w, C, T, v, 14, h[18]), T = i(T, A, w, C, c, 20, h[19]),
                        C = i(C, T, A, w, d, 5, h[20]), w = i(w, C, T, A, y, 9, h[21]), A = i(A, w, C, T, k, 14, h[22]),
                        T = i(T, A, w, C, p, 20, h[23]), C = i(C, T, A, w, _, 5, h[24]), w = i(w, C, T, A, S, 9, h[25]),
                        A = i(A, w, C, T, u, 14, h[26]), T = i(T, A, w, C, g, 20, h[27]), C = i(C, T, A, w, M, 5, h[28]),
                        w = i(w, C, T, A, l, 9, h[29]), A = i(A, w, C, T, m, 14, h[30]), C = n(C, T = i(T, A, w, C, b, 20, h[31]), A, w, d, 4, h[32]),
                        w = n(w, C, T, A, g, 11, h[33]), A = n(A, w, C, T, v, 16, h[34]), T = n(T, A, w, C, S, 23, h[35]),
                        C = n(C, T, A, w, s, 4, h[36]), w = n(w, C, T, A, p, 11, h[37]), A = n(A, w, C, T, m, 16, h[38]),
                        T = n(T, A, w, C, y, 23, h[39]), C = n(C, T, A, w, M, 4, h[40]), w = n(w, C, T, A, c, 11, h[41]),
                        A = n(A, w, C, T, u, 16, h[42]), T = n(T, A, w, C, f, 23, h[43]), C = n(C, T, A, w, _, 4, h[44]),
                        w = n(w, C, T, A, b, 11, h[45]), A = n(A, w, C, T, k, 16, h[46]), C = a(C, T = n(T, A, w, C, l, 23, h[47]), A, w, c, 6, h[48]),
                        w = a(w, C, T, A, m, 10, h[49]), A = a(A, w, C, T, S, 15, h[50]), T = a(T, A, w, C, d, 21, h[51]),
                        C = a(C, T, A, w, b, 6, h[52]), w = a(w, C, T, A, u, 10, h[53]), A = a(A, w, C, T, y, 15, h[54]),
                        T = a(T, A, w, C, s, 21, h[55]), C = a(C, T, A, w, g, 6, h[56]), w = a(w, C, T, A, k, 10, h[57]),
                        A = a(A, w, C, T, f, 15, h[58]), T = a(T, A, w, C, M, 21, h[59]), C = a(C, T, A, w, p, 6, h[60]),
                        w = a(w, C, T, A, v, 10, h[61]), A = a(A, w, C, T, l, 15, h[62]), T = a(T, A, w, C, _, 21, h[63]);
                    o[0] = o[0] + C | 0;
                    o[1] = o[1] + T | 0;
                    o[2] = o[2] + A | 0;
                    o[3] = o[3] + w | 0;
                },
                _doFinalize: function () {
                    var e = this._data, i = e.words, n = 8 * this._nDataBytes, a = 8 * e.sigBytes;
                    i[a >>> 5] |= 128 << 24 - a % 32;
                    var r = t.floor(n / 4294967296);
                    i[15 + (a + 64 >>> 9 << 4)] = 16711935 & (r << 8 | r >>> 24) | 4278255360 & (r << 24 | r >>> 8);
                    i[14 + (a + 64 >>> 9 << 4)] = 16711935 & (n << 8 | n >>> 24) | 4278255360 & (n << 24 | n >>> 8);
                    e.sigBytes = 4 * (i.length + 1);
                    this._process();
                    i = (e = this._hash).words;
                    for (n = 0; 4 > n; n++) a = i[n], i[n] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8);
                    return e;
                },
                clone: function () {
                    var t = c.clone.call(this);
                    t._hash = this._hash.clone();
                    return t;
                }
            });
            o.MD5 = c._createHelper(l);
            o.HmacMD5 = c._createHmacHelper(l);
        })(Math);
        (function () {
            var t, e = r, i = (t = e.lib).Base, n = t.WordArray, a = (t = e.algo).EvpKDF = i.extend({
                cfg: i.extend({
                    keySize: 4,
                    hasher: t.MD5,
                    iterations: 1
                }),
                init: function (t) {
                    this.cfg = this.cfg.extend(t);
                },
                compute: function (t, e) {
                    for (var i = (s = this.cfg).hasher.create(), a = n.create(), r = a.words, o = s.keySize, s = s.iterations; r.length < o;) {
                        c && i.update(c);
                        var c = i.update(t).finalize(e);
                        i.reset();
                        for (var l = 1; l < s; l++) c = i.finalize(c), i.reset();
                        a.concat(c);
                    }
                    a.sigBytes = 4 * o;
                    return a;
                }
            });
            e.EvpKDF = function (t, e, i) {
                return a.create(i).compute(t, e);
            };
        })();
        r.lib.Cipher || function () {
            var t = (d = r).lib, e = t.Base, i = t.WordArray, n = t.BufferedBlockAlgorithm, a = d.enc.Base64, o = d.algo.EvpKDF, s = t.Cipher = n.extend({
                cfg: e.extend(),
                createEncryptor: function (t, e) {
                    return this.create(this._ENC_XFORM_MODE, t, e);
                },
                createDecryptor: function (t, e) {
                    return this.create(this._DEC_XFORM_MODE, t, e);
                },
                init: function (t, e, i) {
                    this.cfg = this.cfg.extend(i);
                    this._xformMode = t;
                    this._key = e;
                    this.reset();
                },
                reset: function () {
                    n.reset.call(this);
                    this._doReset();
                },
                process: function (t) {
                    this._append(t);
                    return this._process();
                },
                finalize: function (t) {
                    t && this._append(t);
                    return this._doFinalize();
                },
                keySize: 4,
                ivSize: 4,
                _ENC_XFORM_MODE: 1,
                _DEC_XFORM_MODE: 2,
                _createHelper: function (t) {
                    return {
                        encrypt: function (e, i, n) {
                            return ("string" == typeof i ? f : p).encrypt(t, e, i, n);
                        },
                        decrypt: function (e, i, n) {
                            return ("string" == typeof i ? f : p).decrypt(t, e, i, n);
                        }
                    };
                }
            });
            t.StreamCipher = s.extend({
                _doFinalize: function () {
                    return this._process(!0);
                },
                blockSize: 1
            });
            var c = d.mode = {}, l = function (t, e, i) {
                var n = this._iv;
                n ? this._iv = void 0 : n = this._prevBlock;
                for (var a = 0; a < i; a++) t[e + a] ^= n[a];
            }, h = (t.BlockCipherMode = e.extend({
                createEncryptor: function (t, e) {
                    return this.Encryptor.create(t, e);
                },
                createDecryptor: function (t, e) {
                    return this.Decryptor.create(t, e);
                },
                init: function (t, e) {
                    this._cipher = t;
                    this._iv = e;
                }
            })).extend();
            h.Encryptor = h.extend({
                processBlock: function (t, e) {
                    var i = this._cipher, n = i.blockSize;
                    l.call(this, t, e, n);
                    i.encryptBlock(t, e);
                    this._prevBlock = t.slice(e, e + n);
                }
            });
            h.Decryptor = h.extend({
                processBlock: function (t, e) {
                    var i = this._cipher, n = i.blockSize, a = t.slice(e, e + n);
                    i.decryptBlock(t, e);
                    l.call(this, t, e, n);
                    this._prevBlock = a;
                }
            });
            c = c.CBC = h;
            h = (d.pad = {}).Pkcs7 = {
                pad: function (t, e) {
                    for (var n, a = (n = (n = 4 * e) - t.sigBytes % n) << 24 | n << 16 | n << 8 | n, r = [], o = 0; o < n; o += 4) r.push(a);
                    n = i.create(r, n);
                    t.concat(n);
                },
                unpad: function (t) {
                    t.sigBytes -= 255 & t.words[t.sigBytes - 1 >>> 2];
                }
            };
            t.BlockCipher = s.extend({
                cfg: s.cfg.extend({
                    mode: c,
                    padding: h
                }),
                reset: function () {
                    s.reset.call(this);
                    var t = (e = this.cfg).iv, e = e.mode;
                    if (this._xformMode == this._ENC_XFORM_MODE) var i = e.createEncryptor; else i = e.createDecryptor,
                        this._minBufferSize = 1;
                    this._mode = i.call(e, this, t && t.words);
                },
                _doProcessBlock: function (t, e) {
                    this._mode.processBlock(t, e);
                },
                _doFinalize: function () {
                    var t = this.cfg.padding;
                    if (this._xformMode == this._ENC_XFORM_MODE) {
                        t.pad(this._data, this.blockSize);
                        var e = this._process(!0);
                    } else e = this._process(!0), t.unpad(e);
                    return e;
                },
                blockSize: 4
            });
            var u = t.CipherParams = e.extend({
                init: function (t) {
                    this.mixIn(t);
                },
                toString: function (t) {
                    return (t || this.formatter).stringify(this);
                }
            }), p = (c = (d.format = {}).OpenSSL = {
                stringify: function (t) {
                    var e = t.ciphertext;
                    return ((t = t.salt) ? i.create([1398893684, 1701076831]).concat(t).concat(e) : e).toString(a);
                },
                parse: function (t) {
                    var e = (t = a.parse(t)).words;
                    if (1398893684 == e[0] && 1701076831 == e[1]) {
                        var n = i.create(e.slice(2, 4));
                        e.splice(0, 4);
                        t.sigBytes -= 16;
                    }
                    return u.create({
                        ciphertext: t,
                        salt: n
                    });
                }
            }, t.SerializableCipher = e.extend({
                cfg: e.extend({
                    format: c
                }),
                encrypt: function (t, e, i, n) {
                    n = this.cfg.extend(n);
                    var a = t.createEncryptor(i, n);
                    e = a.finalize(e);
                    a = a.cfg;
                    return u.create({
                        ciphertext: e,
                        key: i,
                        iv: a.iv,
                        algorithm: t,
                        mode: a.mode,
                        padding: a.padding,
                        blockSize: t.blockSize,
                        formatter: n.format
                    });
                },
                decrypt: function (t, e, i, n) {
                    n = this.cfg.extend(n);
                    e = this._parse(e, n.format);
                    return t.createDecryptor(i, n).finalize(e.ciphertext);
                },
                _parse: function (t, e) {
                    return "string" == typeof t ? e.parse(t, this) : t;
                }
            })), d = (d.kdf = {}).OpenSSL = {
                execute: function (t, e, n, a) {
                    a || (a = i.random(8));
                    t = o.create({
                        keySize: e + n
                    }).compute(t, a);
                    n = i.create(t.words.slice(e), 4 * n);
                    t.sigBytes = 4 * e;
                    return u.create({
                        key: t,
                        iv: n,
                        salt: a
                    });
                }
            }, f = t.PasswordBasedCipher = p.extend({
                cfg: p.cfg.extend({
                    kdf: d
                }),
                encrypt: function (t, e, i, n) {
                    i = (n = this.cfg.extend(n)).kdf.execute(i, t.keySize, t.ivSize);
                    n.iv = i.iv;
                    (t = p.encrypt.call(this, t, e, i.key, n)).mixIn(i);
                    return t;
                },
                decrypt: function (t, e, i, n) {
                    n = this.cfg.extend(n);
                    e = this._parse(e, n.format);
                    i = n.kdf.execute(i, t.keySize, t.ivSize, e.salt);
                    n.iv = i.iv;
                    return p.decrypt.call(this, t, e, i.key, n);
                }
            });
        }();
        (function () {
            for (var t = r, e = t.lib.BlockCipher, i = t.algo, n = [], a = [], o = [], s = [], c = [], l = [], h = [], u = [], p = [], d = [], f = [], m = 0; 256 > m; m++) f[m] = 128 > m ? m << 1 : m << 1 ^ 283;
            var g = 0, _ = 0;
            for (m = 0; 256 > m; m++) {
                var y = (y = _ ^ _ << 1 ^ _ << 2 ^ _ << 3 ^ _ << 4) >>> 8 ^ 255 & y ^ 99;
                n[g] = y;
                a[y] = g;
                var v = f[g], b = f[v], M = f[b], S = 257 * f[y] ^ 16843008 * y;
                o[g] = S << 24 | S >>> 8;
                s[g] = S << 16 | S >>> 16;
                c[g] = S << 8 | S >>> 24;
                l[g] = S;
                S = 16843009 * M ^ 65537 * b ^ 257 * v ^ 16843008 * g;
                h[y] = S << 24 | S >>> 8;
                u[y] = S << 16 | S >>> 16;
                p[y] = S << 8 | S >>> 24;
                d[y] = S;
                g ? (g = v ^ f[f[f[M ^ v]]], _ ^= f[f[_]]) : g = _ = 1;
            }
            var k = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54];
            i = i.AES = e.extend({
                _doReset: function () {
                    for (var t = (i = this._key).words, e = i.sigBytes / 4, i = 4 * ((this._nRounds = e + 6) + 1), a = this._keySchedule = [], r = 0; r < i; r++) if (r < e) a[r] = t[r]; else {
                        var o = a[r - 1];
                        r % e ? 6 < e && 4 == r % e && (o = n[o >>> 24] << 24 | n[o >>> 16 & 255] << 16 | n[o >>> 8 & 255] << 8 | n[255 & o]) : (o = n[(o = o << 8 | o >>> 24) >>> 24] << 24 | n[o >>> 16 & 255] << 16 | n[o >>> 8 & 255] << 8 | n[255 & o],
                            o ^= k[r / e | 0] << 24);
                        a[r] = a[r - e] ^ o;
                    }
                    t = this._invKeySchedule = [];
                    for (e = 0; e < i; e++) r = i - e, o = e % 4 ? a[r] : a[r - 4], t[e] = 4 > e || 4 >= r ? o : h[n[o >>> 24]] ^ u[n[o >>> 16 & 255]] ^ p[n[o >>> 8 & 255]] ^ d[n[255 & o]];
                },
                encryptBlock: function (t, e) {
                    this._doCryptBlock(t, e, this._keySchedule, o, s, c, l, n);
                },
                decryptBlock: function (t, e) {
                    var i = t[e + 1];
                    t[e + 1] = t[e + 3];
                    t[e + 3] = i;
                    this._doCryptBlock(t, e, this._invKeySchedule, h, u, p, d, a);
                    i = t[e + 1];
                    t[e + 1] = t[e + 3];
                    t[e + 3] = i;
                },
                _doCryptBlock: function (t, e, i, n, a, r, o, s) {
                    for (var c = this._nRounds, l = t[e] ^ i[0], h = t[e + 1] ^ i[1], u = t[e + 2] ^ i[2], p = t[e + 3] ^ i[3], d = 4, f = 1; f < c; f++) {
                        var m = n[l >>> 24] ^ a[h >>> 16 & 255] ^ r[u >>> 8 & 255] ^ o[255 & p] ^ i[d++], g = n[h >>> 24] ^ a[u >>> 16 & 255] ^ r[p >>> 8 & 255] ^ o[255 & l] ^ i[d++], _ = n[u >>> 24] ^ a[p >>> 16 & 255] ^ r[l >>> 8 & 255] ^ o[255 & h] ^ i[d++];
                        p = n[p >>> 24] ^ a[l >>> 16 & 255] ^ r[h >>> 8 & 255] ^ o[255 & u] ^ i[d++], l = m,
                            h = g, u = _;
                    }
                    m = (s[l >>> 24] << 24 | s[h >>> 16 & 255] << 16 | s[u >>> 8 & 255] << 8 | s[255 & p]) ^ i[d++];
                    g = (s[h >>> 24] << 24 | s[u >>> 16 & 255] << 16 | s[p >>> 8 & 255] << 8 | s[255 & l]) ^ i[d++];
                    _ = (s[u >>> 24] << 24 | s[p >>> 16 & 255] << 16 | s[l >>> 8 & 255] << 8 | s[255 & h]) ^ i[d++];
                    p = (s[p >>> 24] << 24 | s[l >>> 16 & 255] << 16 | s[h >>> 8 & 255] << 8 | s[255 & u]) ^ i[d++];
                    t[e] = m;
                    t[e + 1] = g;
                    t[e + 2] = _;
                    t[e + 3] = p;
                },
                keySize: 8
            });
            t.AES = e._createHelper(i);
        })();
        cc._RF.pop();
    }, {}],
    blowfish: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "760b31BSR5HCIR/mWIVyuNK", "blowfish");
        n = function (t) {
            (function () {
                var e = t, i = e.lib.BlockCipher, n = e.algo, a = 16, r = [608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022, 953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479, 2450970073, 2306472731], o = [[3509652390, 2564797868, 805139163, 3491422135, 3101798381, 1780907670, 3128725573, 4046225305, 614570311, 3012652279, 134345442, 2240740374, 1667834072, 1901547113, 2757295779, 4103290238, 227898511, 1921955416, 1904987480, 2182433518, 2069144605, 3260701109, 2620446009, 720527379, 3318853667, 677414384, 3393288472, 3101374703, 2390351024, 1614419982, 1822297739, 2954791486, 3608508353, 3174124327, 2024746970, 1432378464, 3864339955, 2857741204, 1464375394, 1676153920, 1439316330, 715854006, 3033291828, 289532110, 2706671279, 2087905683, 3018724369, 1668267050, 732546397, 1947742710, 3462151702, 2609353502, 2950085171, 1814351708, 2050118529, 680887927, 999245976, 1800124847, 3300911131, 1713906067, 1641548236, 4213287313, 1216130144, 1575780402, 4018429277, 3917837745, 3693486850, 3949271944, 596196993, 3549867205, 258830323, 2213823033, 772490370, 2760122372, 1774776394, 2652871518, 566650946, 4142492826, 1728879713, 2882767088, 1783734482, 3629395816, 2517608232, 2874225571, 1861159788, 326777828, 3124490320, 2130389656, 2716951837, 967770486, 1724537150, 2185432712, 2364442137, 1164943284, 2105845187, 998989502, 3765401048, 2244026483, 1075463327, 1455516326, 1322494562, 910128902, 469688178, 1117454909, 936433444, 3490320968, 3675253459, 1240580251, 122909385, 2157517691, 634681816, 4142456567, 3825094682, 3061402683, 2540495037, 79693498, 3249098678, 1084186820, 1583128258, 426386531, 1761308591, 1047286709, 322548459, 995290223, 1845252383, 2603652396, 3431023940, 2942221577, 3202600964, 3727903485, 1712269319, 422464435, 3234572375, 1170764815, 3523960633, 3117677531, 1434042557, 442511882, 3600875718, 1076654713, 1738483198, 4213154764, 2393238008, 3677496056, 1014306527, 4251020053, 793779912, 2902807211, 842905082, 4246964064, 1395751752, 1040244610, 2656851899, 3396308128, 445077038, 3742853595, 3577915638, 679411651, 2892444358, 2354009459, 1767581616, 3150600392, 3791627101, 3102740896, 284835224, 4246832056, 1258075500, 768725851, 2589189241, 3069724005, 3532540348, 1274779536, 3789419226, 2764799539, 1660621633, 3471099624, 4011903706, 913787905, 3497959166, 737222580, 2514213453, 2928710040, 3937242737, 1804850592, 3499020752, 2949064160, 2386320175, 2390070455, 2415321851, 4061277028, 2290661394, 2416832540, 1336762016, 1754252060, 3520065937, 3014181293, 791618072, 3188594551, 3933548030, 2332172193, 3852520463, 3043980520, 413987798, 3465142937, 3030929376, 4245938359, 2093235073, 3534596313, 375366246, 2157278981, 2479649556, 555357303, 3870105701, 2008414854, 3344188149, 4221384143, 3956125452, 2067696032, 3594591187, 2921233993, 2428461, 544322398, 577241275, 1471733935, 610547355, 4027169054, 1432588573, 1507829418, 2025931657, 3646575487, 545086370, 48609733, 2200306550, 1653985193, 298326376, 1316178497, 3007786442, 2064951626, 458293330, 2589141269, 3591329599, 3164325604, 727753846, 2179363840, 146436021, 1461446943, 4069977195, 705550613, 3059967265, 3887724982, 4281599278, 3313849956, 1404054877, 2845806497, 146425753, 1854211946], [1266315497, 3048417604, 3681880366, 3289982499, 290971e4, 1235738493, 2632868024, 2414719590, 3970600049, 1771706367, 1449415276, 3266420449, 422970021, 1963543593, 2690192192, 3826793022, 1062508698, 1531092325, 1804592342, 2583117782, 2714934279, 4024971509, 1294809318, 4028980673, 1289560198, 2221992742, 1669523910, 35572830, 157838143, 1052438473, 1016535060, 1802137761, 1753167236, 1386275462, 3080475397, 2857371447, 1040679964, 2145300060, 2390574316, 1461121720, 2956646967, 4031777805, 4028374788, 33600511, 2920084762, 1018524850, 629373528, 3691585981, 3515945977, 2091462646, 2486323059, 586499841, 988145025, 935516892, 3367335476, 2599673255, 2839830854, 265290510, 3972581182, 2759138881, 3795373465, 1005194799, 847297441, 406762289, 1314163512, 1332590856, 1866599683, 4127851711, 750260880, 613907577, 1450815602, 3165620655, 3734664991, 3650291728, 3012275730, 3704569646, 1427272223, 778793252, 1343938022, 2676280711, 2052605720, 1946737175, 3164576444, 3914038668, 3967478842, 3682934266, 1661551462, 3294938066, 4011595847, 840292616, 3712170807, 616741398, 312560963, 711312465, 1351876610, 322626781, 1910503582, 271666773, 2175563734, 1594956187, 70604529, 3617834859, 1007753275, 1495573769, 4069517037, 2549218298, 2663038764, 504708206, 2263041392, 3941167025, 2249088522, 1514023603, 1998579484, 1312622330, 694541497, 2582060303, 2151582166, 1382467621, 776784248, 2618340202, 3323268794, 2497899128, 2784771155, 503983604, 4076293799, 907881277, 423175695, 432175456, 1378068232, 4145222326, 3954048622, 3938656102, 3820766613, 2793130115, 2977904593, 26017576, 3274890735, 3194772133, 1700274565, 1756076034, 4006520079, 3677328699, 720338349, 1533947780, 354530856, 688349552, 3973924725, 1637815568, 332179504, 3949051286, 53804574, 2852348879, 3044236432, 1282449977, 3583942155, 3416972820, 4006381244, 1617046695, 2628476075, 3002303598, 1686838959, 431878346, 2686675385, 1700445008, 1080580658, 1009431731, 832498133, 3223435511, 2605976345, 2271191193, 2516031870, 1648197032, 4164389018, 2548247927, 300782431, 375919233, 238389289, 3353747414, 2531188641, 2019080857, 1475708069, 455242339, 2609103871, 448939670, 3451063019, 1395535956, 2413381860, 1841049896, 1491858159, 885456874, 4264095073, 4001119347, 1565136089, 3898914787, 1108368660, 540939232, 1173283510, 2745871338, 3681308437, 4207628240, 3343053890, 4016749493, 1699691293, 1103962373, 3625875870, 2256883143, 3830138730, 1031889488, 3479347698, 1535977030, 4236805024, 3251091107, 2132092099, 1774941330, 1199868427, 1452454533, 157007616, 2904115357, 342012276, 595725824, 1480756522, 206960106, 497939518, 591360097, 863170706, 2375253569, 3596610801, 1814182875, 2094937945, 3421402208, 1082520231, 3463918190, 2785509508, 435703966, 3908032597, 1641649973, 2842273706, 3305899714, 1510255612, 2148256476, 2655287854, 3276092548, 4258621189, 236887753, 3681803219, 274041037, 1734335097, 3815195456, 3317970021, 1899903192, 1026095262, 4050517792, 356393447, 2410691914, 3873677099, 3682840055], [3913112168, 2491498743, 4132185628, 2489919796, 1091903735, 1979897079, 3170134830, 3567386728, 3557303409, 857797738, 1136121015, 1342202287, 507115054, 2535736646, 337727348, 3213592640, 1301675037, 2528481711, 1895095763, 1721773893, 3216771564, 62756741, 2142006736, 835421444, 2531993523, 1442658625, 3659876326, 2882144922, 676362277, 1392781812, 170690266, 3921047035, 1759253602, 3611846912, 1745797284, 664899054, 1329594018, 3901205900, 3045908486, 2062866102, 2865634940, 3543621612, 3464012697, 1080764994, 553557557, 3656615353, 3996768171, 991055499, 499776247, 1265440854, 648242737, 3940784050, 980351604, 3713745714, 1749149687, 3396870395, 4211799374, 3640570775, 1161844396, 3125318951, 1431517754, 545492359, 4268468663, 3499529547, 1437099964, 2702547544, 3433638243, 2581715763, 2787789398, 1060185593, 1593081372, 2418618748, 4260947970, 69676912, 2159744348, 86519011, 2512459080, 3838209314, 1220612927, 3339683548, 133810670, 1090789135, 1078426020, 1569222167, 845107691, 3583754449, 4072456591, 1091646820, 628848692, 1613405280, 3757631651, 526609435, 236106946, 48312990, 2942717905, 3402727701, 1797494240, 859738849, 992217954, 4005476642, 2243076622, 3870952857, 3732016268, 765654824, 3490871365, 2511836413, 1685915746, 3888969200, 1414112111, 2273134842, 3281911079, 4080962846, 172450625, 2569994100, 980381355, 4109958455, 2819808352, 2716589560, 2568741196, 3681446669, 3329971472, 1835478071, 660984891, 3704678404, 4045999559, 3422617507, 3040415634, 1762651403, 1719377915, 3470491036, 2693910283, 3642056355, 3138596744, 1364962596, 2073328063, 1983633131, 926494387, 3423689081, 2150032023, 4096667949, 1749200295, 3328846651, 309677260, 2016342300, 1779581495, 3079819751, 111262694, 1274766160, 443224088, 298511866, 1025883608, 3806446537, 1145181785, 168956806, 3641502830, 3584813610, 1689216846, 3666258015, 3200248200, 1692713982, 2646376535, 4042768518, 1618508792, 1610833997, 3523052358, 4130873264, 2001055236, 3610705100, 2202168115, 4028541809, 2961195399, 1006657119, 2006996926, 3186142756, 1430667929, 3210227297, 1314452623, 4074634658, 4101304120, 2273951170, 1399257539, 3367210612, 3027628629, 1190975929, 2062231137, 2333990788, 2221543033, 2438960610, 1181637006, 548689776, 2362791313, 3372408396, 3104550113, 3145860560, 296247880, 1970579870, 3078560182, 3769228297, 1714227617, 3291629107, 3898220290, 166772364, 1251581989, 493813264, 448347421, 195405023, 2709975567, 677966185, 3703036547, 1463355134, 2715995803, 1338867538, 1343315457, 2802222074, 2684532164, 233230375, 2599980071, 2000651841, 3277868038, 1638401717, 4028070440, 3237316320, 6314154, 819756386, 300326615, 590932579, 1405279636, 3267499572, 3150704214, 2428286686, 3959192993, 3461946742, 1862657033, 1266418056, 963775037, 2089974820, 2263052895, 1917689273, 448879540, 3550394620, 3981727096, 150775221, 3627908307, 1303187396, 508620638, 2975983352, 2726630617, 1817252668, 1876281319, 1457606340, 908771278, 3720792119, 3617206836, 2455994898, 1729034894, 1080033504], [976866871, 3556439503, 2881648439, 1522871579, 1555064734, 1336096578, 3548522304, 2579274686, 3574697629, 3205460757, 3593280638, 3338716283, 3079412587, 564236357, 2993598910, 1781952180, 1464380207, 3163844217, 3332601554, 1699332808, 1393555694, 1183702653, 3581086237, 1288719814, 691649499, 2847557200, 2895455976, 3193889540, 2717570544, 1781354906, 1676643554, 2592534050, 3230253752, 1126444790, 2770207658, 2633158820, 2210423226, 2615765581, 2414155088, 3127139286, 673620729, 2805611233, 1269405062, 4015350505, 3341807571, 4149409754, 1057255273, 2012875353, 2162469141, 2276492801, 2601117357, 993977747, 3918593370, 2654263191, 753973209, 36408145, 2530585658, 25011837, 3520020182, 2088578344, 530523599, 2918365339, 1524020338, 1518925132, 3760827505, 3759777254, 1202760957, 3985898139, 3906192525, 674977740, 4174734889, 2031300136, 2019492241, 3983892565, 4153806404, 3822280332, 352677332, 2297720250, 60907813, 90501309, 3286998549, 1016092578, 2535922412, 2839152426, 457141659, 509813237, 4120667899, 652014361, 1966332200, 2975202805, 55981186, 2327461051, 676427537, 3255491064, 2882294119, 3433927263, 1307055953, 942726286, 933058658, 2468411793, 3933900994, 4215176142, 1361170020, 2001714738, 2830558078, 3274259782, 1222529897, 1679025792, 2729314320, 3714953764, 1770335741, 151462246, 3013232138, 1682292957, 1483529935, 471910574, 1539241949, 458788160, 3436315007, 1807016891, 3718408830, 978976581, 1043663428, 3165965781, 1927990952, 4200891579, 2372276910, 3208408903, 3533431907, 1412390302, 2931980059, 4132332400, 1947078029, 3881505623, 4168226417, 2941484381, 1077988104, 1320477388, 886195818, 18198404, 3786409e3, 2509781533, 112762804, 3463356488, 1866414978, 891333506, 18488651, 661792760, 1628790961, 3885187036, 3141171499, 876946877, 2693282273, 1372485963, 791857591, 2686433993, 3759982718, 3167212022, 3472953795, 2716379847, 445679433, 3561995674, 3504004811, 3574258232, 54117162, 3331405415, 2381918588, 3769707343, 4154350007, 1140177722, 4074052095, 668550556, 3214352940, 367459370, 261225585, 2610173221, 4209349473, 3468074219, 3265815641, 314222801, 3066103646, 3808782860, 282218597, 3406013506, 3773591054, 379116347, 1285071038, 846784868, 2669647154, 3771962079, 3550491691, 2305946142, 453669953, 1268987020, 3317592352, 3279303384, 3744833421, 2610507566, 3859509063, 266596637, 3847019092, 517658769, 3462560207, 3443424879, 370717030, 4247526661, 2224018117, 4143653529, 4112773975, 2788324899, 2477274417, 1456262402, 2901442914, 1517677493, 1846949527, 2295493580, 3734397586, 2176403920, 1280348187, 1908823572, 3871786941, 846861322, 1172426758, 3287448474, 3383383037, 1655181056, 3139813346, 901632758, 1897031941, 2986607138, 3066810236, 3447102507, 1393639104, 373351379, 950779232, 625454576, 3124240540, 4148612726, 2007998917, 544563296, 2244738638, 2330496472, 2058025392, 1291430526, 424198748, 50039436, 29584100, 3605783033, 2429876329, 2791104160, 1057563949, 3255363231, 3075367218, 3463963227, 1469046755, 985887462]], s = {
                    pbox: [],
                    sbox: []
                };
                function c(t, e) {
                    var i = e >> 24 & 255, n = e >> 16 & 255, a = e >> 8 & 255, r = 255 & e, o = t.sbox[0][i] + t.sbox[1][n];
                    return (o ^= t.sbox[2][a]) + t.sbox[3][r];
                }
                function l(t, e, i) {
                    for (var n, r = e, o = i, s = 0; s < a; ++s) {
                        n = r ^= t.pbox[s];
                        r = o = c(t, r) ^ o;
                        o = n;
                    }
                    n = r;
                    r = o;
                    o = n;
                    o ^= t.pbox[a];
                    return {
                        left: r ^= t.pbox[a + 1],
                        right: o
                    };
                }
                function h(t, e, i) {
                    for (var n, r = e, o = i, s = a + 1; s > 1; --s) {
                        n = r ^= t.pbox[s];
                        r = o = c(t, r) ^ o;
                        o = n;
                    }
                    n = r;
                    r = o;
                    o = n;
                    o ^= t.pbox[1];
                    return {
                        left: r ^= t.pbox[0],
                        right: o
                    };
                }
                function u(t, e, i) {
                    for (var n = 0; n < 4; n++) {
                        t.sbox[n] = [];
                        for (var s = 0; s < 256; s++) t.sbox[n][s] = o[n][s];
                    }
                    for (var c = 0, h = 0; h < a + 2; h++) {
                        t.pbox[h] = r[h] ^ e[c];
                        ++c >= i && (c = 0);
                    }
                    for (var u = 0, p = 0, d = 0, f = 0; f < a + 2; f += 2) {
                        u = (d = l(t, u, p)).left;
                        p = d.right;
                        t.pbox[f] = u;
                        t.pbox[f + 1] = p;
                    }
                    for (var m = 0; m < 4; m++) for (var g = 0; g < 256; g += 2) {
                        u = (d = l(t, u, p)).left;
                        p = d.right;
                        t.sbox[m][g] = u;
                        t.sbox[m][g + 1] = p;
                    }
                    return !0;
                }
                var p = n.Blowfish = i.extend({
                    _doReset: function () {
                        if (this._keyPriorReset !== this._key) {
                            var t = this._keyPriorReset = this._key, e = t.words, i = t.sigBytes / 4;
                            u(s, e, i);
                        }
                    },
                    encryptBlock: function (t, e) {
                        var i = l(s, t[e], t[e + 1]);
                        t[e] = i.left;
                        t[e + 1] = i.right;
                    },
                    decryptBlock: function (t, e) {
                        var i = h(s, t[e], t[e + 1]);
                        t[e] = i.left;
                        t[e + 1] = i.right;
                    },
                    blockSize: 2,
                    keySize: 4,
                    ivSize: 2
                });
                e.Blowfish = i._createHelper(p);
            })();
            return t.Blowfish;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./enc-base64"), t("./md5"), t("./evpkdf"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core",
        "./enc-base64": "enc-base64",
        "./evpkdf": "evpkdf",
        "./md5": "md5"
    }],
    "cipher-core": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "a6344Y13Q5Fz7IlvO2Kbyc5", "cipher-core");
        n = function (t) {
            t.lib.Cipher || function (e) {
                var i = t, n = i.lib, a = n.Base, r = n.WordArray, o = n.BufferedBlockAlgorithm, s = i.enc, c = (s.Utf8,
                    s.Base64), l = i.algo.EvpKDF, h = n.Cipher = o.extend({
                        cfg: a.extend(),
                        createEncryptor: function (t, e) {
                            return this.create(this._ENC_XFORM_MODE, t, e);
                        },
                        createDecryptor: function (t, e) {
                            return this.create(this._DEC_XFORM_MODE, t, e);
                        },
                        init: function (t, e, i) {
                            this.cfg = this.cfg.extend(i);
                            this._xformMode = t;
                            this._key = e;
                            this.reset();
                        },
                        reset: function () {
                            o.reset.call(this);
                            this._doReset();
                        },
                        process: function (t) {
                            this._append(t);
                            return this._process();
                        },
                        finalize: function (t) {
                            t && this._append(t);
                            return this._doFinalize();
                        },
                        keySize: 4,
                        ivSize: 4,
                        _ENC_XFORM_MODE: 1,
                        _DEC_XFORM_MODE: 2,
                        _createHelper: function () {
                            function t(t) {
                                return "string" == typeof t ? v : _;
                            }
                            return function (e) {
                                return {
                                    encrypt: function (i, n, a) {
                                        return t(n).encrypt(e, i, n, a);
                                    },
                                    decrypt: function (i, n, a) {
                                        return t(n).decrypt(e, i, n, a);
                                    }
                                };
                            };
                        }()
                    }), u = (n.StreamCipher = h.extend({
                        _doFinalize: function () {
                            return this._process(!0);
                        },
                        blockSize: 1
                    }), i.mode = {}), p = n.BlockCipherMode = a.extend({
                        createEncryptor: function (t, e) {
                            return this.Encryptor.create(t, e);
                        },
                        createDecryptor: function (t, e) {
                            return this.Decryptor.create(t, e);
                        },
                        init: function (t, e) {
                            this._cipher = t;
                            this._iv = e;
                        }
                    }), d = u.CBC = function () {
                        var t = p.extend();
                        t.Encryptor = t.extend({
                            processBlock: function (t, e) {
                                var n = this._cipher, a = n.blockSize;
                                i.call(this, t, e, a);
                                n.encryptBlock(t, e);
                                this._prevBlock = t.slice(e, e + a);
                            }
                        });
                        t.Decryptor = t.extend({
                            processBlock: function (t, e) {
                                var n = this._cipher, a = n.blockSize, r = t.slice(e, e + a);
                                n.decryptBlock(t, e);
                                i.call(this, t, e, a);
                                this._prevBlock = r;
                            }
                        });
                        function i(t, i, n) {
                            var a, r = this._iv;
                            if (r) {
                                a = r;
                                this._iv = e;
                            } else a = this._prevBlock;
                            for (var o = 0; o < n; o++) t[i + o] ^= a[o];
                        }
                        return t;
                    }(), f = (i.pad = {}).Pkcs7 = {
                        pad: function (t, e) {
                            for (var i = 4 * e, n = i - t.sigBytes % i, a = n << 24 | n << 16 | n << 8 | n, o = [], s = 0; s < n; s += 4) o.push(a);
                            var c = r.create(o, n);
                            t.concat(c);
                        },
                        unpad: function (t) {
                            var e = 255 & t.words[t.sigBytes - 1 >>> 2];
                            t.sigBytes -= e;
                        }
                    }, m = (n.BlockCipher = h.extend({
                        cfg: h.cfg.extend({
                            mode: d,
                            padding: f
                        }),
                        reset: function () {
                            var t;
                            h.reset.call(this);
                            var e = this.cfg, i = e.iv, n = e.mode;
                            if (this._xformMode == this._ENC_XFORM_MODE) t = n.createEncryptor; else {
                                t = n.createDecryptor;
                                this._minBufferSize = 1;
                            }
                            if (this._mode && this._mode.__creator == t) this._mode.init(this, i && i.words); else {
                                this._mode = t.call(n, this, i && i.words);
                                this._mode.__creator = t;
                            }
                        },
                        _doProcessBlock: function (t, e) {
                            this._mode.processBlock(t, e);
                        },
                        _doFinalize: function () {
                            var t, e = this.cfg.padding;
                            if (this._xformMode == this._ENC_XFORM_MODE) {
                                e.pad(this._data, this.blockSize);
                                t = this._process(!0);
                            } else {
                                t = this._process(!0);
                                e.unpad(t);
                            }
                            return t;
                        },
                        blockSize: 4
                    }), n.CipherParams = a.extend({
                        init: function (t) {
                            this.mixIn(t);
                        },
                        toString: function (t) {
                            return (t || this.formatter).stringify(this);
                        }
                    })), g = (i.format = {}).OpenSSL = {
                        stringify: function (t) {
                            var e = t.ciphertext, i = t.salt;
                            return (i ? r.create([1398893684, 1701076831]).concat(i).concat(e) : e).toString(c);
                        },
                        parse: function (t) {
                            var e, i = c.parse(t), n = i.words;
                            if (1398893684 == n[0] && 1701076831 == n[1]) {
                                e = r.create(n.slice(2, 4));
                                n.splice(0, 4);
                                i.sigBytes -= 16;
                            }
                            return m.create({
                                ciphertext: i,
                                salt: e
                            });
                        }
                    }, _ = n.SerializableCipher = a.extend({
                        cfg: a.extend({
                            format: g
                        }),
                        encrypt: function (t, e, i, n) {
                            n = this.cfg.extend(n);
                            var a = t.createEncryptor(i, n), r = a.finalize(e), o = a.cfg;
                            return m.create({
                                ciphertext: r,
                                key: i,
                                iv: o.iv,
                                algorithm: t,
                                mode: o.mode,
                                padding: o.padding,
                                blockSize: t.blockSize,
                                formatter: n.format
                            });
                        },
                        decrypt: function (t, e, i, n) {
                            n = this.cfg.extend(n);
                            e = this._parse(e, n.format);
                            return t.createDecryptor(i, n).finalize(e.ciphertext);
                        },
                        _parse: function (t, e) {
                            return "string" == typeof t ? e.parse(t, this) : t;
                        }
                    }), y = (i.kdf = {}).OpenSSL = {
                        execute: function (t, e, i, n, a) {
                            n || (n = r.random(8));
                            if (a) o = l.create({
                                keySize: e + i,
                                hasher: a
                            }).compute(t, n); else var o = l.create({
                                keySize: e + i
                            }).compute(t, n);
                            var s = r.create(o.words.slice(e), 4 * i);
                            o.sigBytes = 4 * e;
                            return m.create({
                                key: o,
                                iv: s,
                                salt: n
                            });
                        }
                    }, v = n.PasswordBasedCipher = _.extend({
                        cfg: _.cfg.extend({
                            kdf: y
                        }),
                        encrypt: function (t, e, i, n) {
                            var a = (n = this.cfg.extend(n)).kdf.execute(i, t.keySize, t.ivSize, n.salt, n.hasher);
                            n.iv = a.iv;
                            var r = _.encrypt.call(this, t, e, a.key, n);
                            r.mixIn(a);
                            return r;
                        },
                        decrypt: function (t, e, i, n) {
                            n = this.cfg.extend(n);
                            e = this._parse(e, n.format);
                            var a = n.kdf.execute(i, t.keySize, t.ivSize, e.salt, n.hasher);
                            n.iv = a.iv;
                            return _.decrypt.call(this, t, e, a.key, n);
                        }
                    });
            }();
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./evpkdf")) : "function" == typeof define && define.amd ? define(["./core", "./evpkdf"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./evpkdf": "evpkdf"
    }],
    core: [function (t, e, i) {
        (function (n) {
            "use strict";
            cc._RF.push(e, "8431fKKmPRF/Jd+c3U97UUp", "core");
            a = function () {
                var e = e || function (e) {
                    var i;
                    "undefined" != typeof window && window.crypto && (i = window.crypto);
                    "undefined" != typeof self && self.crypto && (i = self.crypto);
                    "undefined" != typeof globalThis && globalThis.crypto && (i = globalThis.crypto);
                    !i && "undefined" != typeof window && window.msCrypto && (i = window.msCrypto);
                    !i && "undefined" != typeof n && n.crypto && (i = n.crypto);
                    if (!i && "function" == typeof t) try {
                        i = t("crypto");
                    } catch (t) { }
                    var a = function () {
                        if (i) {
                            if ("function" == typeof i.getRandomValues) try {
                                return i.getRandomValues(new Uint32Array(1))[0];
                            } catch (t) { }
                            if ("function" == typeof i.randomBytes) try {
                                return i.randomBytes(4).readInt32LE();
                            } catch (t) { }
                        }
                        throw new Error("Native crypto module could not be used to get secure random number.");
                    }, r = Object.create || function () {
                        function t() { }
                        return function (e) {
                            var i;
                            t.prototype = e;
                            i = new t();
                            t.prototype = null;
                            return i;
                        };
                    }(), o = {}, s = o.lib = {}, c = s.Base = {
                        extend: function (t) {
                            var e = r(this);
                            t && e.mixIn(t);
                            e.hasOwnProperty("init") && this.init !== e.init || (e.init = function () {
                                e.$super.init.apply(this, arguments);
                            });
                            e.init.prototype = e;
                            e.$super = this;
                            return e;
                        },
                        create: function () {
                            var t = this.extend();
                            t.init.apply(t, arguments);
                            return t;
                        },
                        init: function () { },
                        mixIn: function (t) {
                            for (var e in t) t.hasOwnProperty(e) && (this[e] = t[e]);
                            t.hasOwnProperty("toString") && (this.toString = t.toString);
                        },
                        clone: function () {
                            return this.init.prototype.extend(this);
                        }
                    }, l = s.WordArray = c.extend({
                        init: function (t, e) {
                            t = this.words = t || [];
                            this.sigBytes = null != e ? e : 4 * t.length;
                        },
                        toString: function (t) {
                            return (t || u).stringify(this);
                        },
                        concat: function (t) {
                            var e = this.words, i = t.words, n = this.sigBytes, a = t.sigBytes;
                            this.clamp();
                            if (n % 4) for (var r = 0; r < a; r++) {
                                var o = i[r >>> 2] >>> 24 - r % 4 * 8 & 255;
                                e[n + r >>> 2] |= o << 24 - (n + r) % 4 * 8;
                            } else for (var s = 0; s < a; s += 4) e[n + s >>> 2] = i[s >>> 2];
                            this.sigBytes += a;
                            return this;
                        },
                        clamp: function () {
                            var t = this.words, i = this.sigBytes;
                            t[i >>> 2] &= 4294967295 << 32 - i % 4 * 8;
                            t.length = e.ceil(i / 4);
                        },
                        clone: function () {
                            var t = c.clone.call(this);
                            t.words = this.words.slice(0);
                            return t;
                        },
                        random: function (t) {
                            for (var e = [], i = 0; i < t; i += 4) e.push(a());
                            return new l.init(e, t);
                        }
                    }), h = o.enc = {}, u = h.Hex = {
                        stringify: function (t) {
                            for (var e = t.words, i = t.sigBytes, n = [], a = 0; a < i; a++) {
                                var r = e[a >>> 2] >>> 24 - a % 4 * 8 & 255;
                                n.push((r >>> 4).toString(16));
                                n.push((15 & r).toString(16));
                            }
                            return n.join("");
                        },
                        parse: function (t) {
                            for (var e = t.length, i = [], n = 0; n < e; n += 2) i[n >>> 3] |= parseInt(t.substr(n, 2), 16) << 24 - n % 8 * 4;
                            return new l.init(i, e / 2);
                        }
                    }, p = h.Latin1 = {
                        stringify: function (t) {
                            for (var e = t.words, i = t.sigBytes, n = [], a = 0; a < i; a++) {
                                var r = e[a >>> 2] >>> 24 - a % 4 * 8 & 255;
                                n.push(String.fromCharCode(r));
                            }
                            return n.join("");
                        },
                        parse: function (t) {
                            for (var e = t.length, i = [], n = 0; n < e; n++) i[n >>> 2] |= (255 & t.charCodeAt(n)) << 24 - n % 4 * 8;
                            return new l.init(i, e);
                        }
                    }, d = h.Utf8 = {
                        stringify: function (t) {
                            try {
                                return decodeURIComponent(escape(p.stringify(t)));
                            } catch (t) {
                                throw new Error("Malformed UTF-8 data");
                            }
                        },
                        parse: function (t) {
                            return p.parse(unescape(encodeURIComponent(t)));
                        }
                    }, f = s.BufferedBlockAlgorithm = c.extend({
                        reset: function () {
                            this._data = new l.init();
                            this._nDataBytes = 0;
                        },
                        _append: function (t) {
                            "string" == typeof t && (t = d.parse(t));
                            this._data.concat(t);
                            this._nDataBytes += t.sigBytes;
                        },
                        _process: function (t) {
                            var i, n = this._data, a = n.words, r = n.sigBytes, o = this.blockSize, s = r / (4 * o), c = (s = t ? e.ceil(s) : e.max((0 | s) - this._minBufferSize, 0)) * o, h = e.min(4 * c, r);
                            if (c) {
                                for (var u = 0; u < c; u += o) this._doProcessBlock(a, u);
                                i = a.splice(0, c);
                                n.sigBytes -= h;
                            }
                            return new l.init(i, h);
                        },
                        clone: function () {
                            var t = c.clone.call(this);
                            t._data = this._data.clone();
                            return t;
                        },
                        _minBufferSize: 0
                    }), m = (s.Hasher = f.extend({
                        cfg: c.extend(),
                        init: function (t) {
                            this.cfg = this.cfg.extend(t);
                            this.reset();
                        },
                        reset: function () {
                            f.reset.call(this);
                            this._doReset();
                        },
                        update: function (t) {
                            this._append(t);
                            this._process();
                            return this;
                        },
                        finalize: function (t) {
                            t && this._append(t);
                            return this._doFinalize();
                        },
                        blockSize: 16,
                        _createHelper: function (t) {
                            return function (e, i) {
                                return new t.init(i).finalize(e);
                            };
                        },
                        _createHmacHelper: function (t) {
                            return function (e, i) {
                                return new m.HMAC.init(t, i).finalize(e);
                            };
                        }
                    }), o.algo = {});
                    return o;
                }(Math);
                return e;
            }, "object" == typeof i ? e.exports = i = a() : "function" == typeof define && define.amd ? define([], a) : (void 0).CryptoJS = a();
            var a;
            cc._RF.pop();
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
        crypto: 75
    }],
    "crypto-js": [function (t, e, i) {
        (function (n) {
            "use strict";
            cc._RF.push(e, "65b0b3EJ9FEkYbw/WxMR1LU", "crypto-js");
            a = function () {
                var e, i, a, r, o, s = s || function (e) {
                    var i;
                    "undefined" != typeof window && window.crypto && (i = window.crypto);
                    "undefined" != typeof self && self.crypto && (i = self.crypto);
                    "undefined" != typeof globalThis && globalThis.crypto && (i = globalThis.crypto);
                    !i && "undefined" != typeof window && window.msCrypto && (i = window.msCrypto);
                    !i && "undefined" != typeof n && n.crypto && (i = n.crypto);
                    if (!i && "function" == typeof t) try {
                        i = t("crypto");
                    } catch (t) { }
                    var a = function () {
                        if (i) {
                            if ("function" == typeof i.getRandomValues) try {
                                return i.getRandomValues(new Uint32Array(1))[0];
                            } catch (t) { }
                            if ("function" == typeof i.randomBytes) try {
                                return i.randomBytes(4).readInt32LE();
                            } catch (t) { }
                        }
                        throw new Error("Native crypto module could not be used to get secure random number.");
                    }, r = Object.create || function () {
                        function t() { }
                        return function (e) {
                            var i;
                            t.prototype = e;
                            i = new t();
                            t.prototype = null;
                            return i;
                        };
                    }(), o = {}, s = o.lib = {}, c = s.Base = {
                        extend: function (t) {
                            var e = r(this);
                            t && e.mixIn(t);
                            e.hasOwnProperty("init") && this.init !== e.init || (e.init = function () {
                                e.$super.init.apply(this, arguments);
                            });
                            e.init.prototype = e;
                            e.$super = this;
                            return e;
                        },
                        create: function () {
                            var t = this.extend();
                            t.init.apply(t, arguments);
                            return t;
                        },
                        init: function () { },
                        mixIn: function (t) {
                            for (var e in t) t.hasOwnProperty(e) && (this[e] = t[e]);
                            t.hasOwnProperty("toString") && (this.toString = t.toString);
                        },
                        clone: function () {
                            return this.init.prototype.extend(this);
                        }
                    }, l = s.WordArray = c.extend({
                        init: function (t, e) {
                            t = this.words = t || [];
                            this.sigBytes = null != e ? e : 4 * t.length;
                        },
                        toString: function (t) {
                            return (t || u).stringify(this);
                        },
                        concat: function (t) {
                            var e = this.words, i = t.words, n = this.sigBytes, a = t.sigBytes;
                            this.clamp();
                            if (n % 4) for (var r = 0; r < a; r++) {
                                var o = i[r >>> 2] >>> 24 - r % 4 * 8 & 255;
                                e[n + r >>> 2] |= o << 24 - (n + r) % 4 * 8;
                            } else for (var s = 0; s < a; s += 4) e[n + s >>> 2] = i[s >>> 2];
                            this.sigBytes += a;
                            return this;
                        },
                        clamp: function () {
                            var t = this.words, i = this.sigBytes;
                            t[i >>> 2] &= 4294967295 << 32 - i % 4 * 8;
                            t.length = e.ceil(i / 4);
                        },
                        clone: function () {
                            var t = c.clone.call(this);
                            t.words = this.words.slice(0);
                            return t;
                        },
                        random: function (t) {
                            for (var e = [], i = 0; i < t; i += 4) e.push(a());
                            return new l.init(e, t);
                        }
                    }), h = o.enc = {}, u = h.Hex = {
                        stringify: function (t) {
                            for (var e = t.words, i = t.sigBytes, n = [], a = 0; a < i; a++) {
                                var r = e[a >>> 2] >>> 24 - a % 4 * 8 & 255;
                                n.push((r >>> 4).toString(16));
                                n.push((15 & r).toString(16));
                            }
                            return n.join("");
                        },
                        parse: function (t) {
                            for (var e = t.length, i = [], n = 0; n < e; n += 2) i[n >>> 3] |= parseInt(t.substr(n, 2), 16) << 24 - n % 8 * 4;
                            return new l.init(i, e / 2);
                        }
                    }, p = h.Latin1 = {
                        stringify: function (t) {
                            for (var e = t.words, i = t.sigBytes, n = [], a = 0; a < i; a++) {
                                var r = e[a >>> 2] >>> 24 - a % 4 * 8 & 255;
                                n.push(String.fromCharCode(r));
                            }
                            return n.join("");
                        },
                        parse: function (t) {
                            for (var e = t.length, i = [], n = 0; n < e; n++) i[n >>> 2] |= (255 & t.charCodeAt(n)) << 24 - n % 4 * 8;
                            return new l.init(i, e);
                        }
                    }, d = h.Utf8 = {
                        stringify: function (t) {
                            try {
                                return decodeURIComponent(escape(p.stringify(t)));
                            } catch (t) {
                                throw new Error("Malformed UTF-8 data");
                            }
                        },
                        parse: function (t) {
                            return p.parse(unescape(encodeURIComponent(t)));
                        }
                    }, f = s.BufferedBlockAlgorithm = c.extend({
                        reset: function () {
                            this._data = new l.init();
                            this._nDataBytes = 0;
                        },
                        _append: function (t) {
                            "string" == typeof t && (t = d.parse(t));
                            this._data.concat(t);
                            this._nDataBytes += t.sigBytes;
                        },
                        _process: function (t) {
                            var i, n = this._data, a = n.words, r = n.sigBytes, o = this.blockSize, s = r / (4 * o), c = (s = t ? e.ceil(s) : e.max((0 | s) - this._minBufferSize, 0)) * o, h = e.min(4 * c, r);
                            if (c) {
                                for (var u = 0; u < c; u += o) this._doProcessBlock(a, u);
                                i = a.splice(0, c);
                                n.sigBytes -= h;
                            }
                            return new l.init(i, h);
                        },
                        clone: function () {
                            var t = c.clone.call(this);
                            t._data = this._data.clone();
                            return t;
                        },
                        _minBufferSize: 0
                    }), m = (s.Hasher = f.extend({
                        cfg: c.extend(),
                        init: function (t) {
                            this.cfg = this.cfg.extend(t);
                            this.reset();
                        },
                        reset: function () {
                            f.reset.call(this);
                            this._doReset();
                        },
                        update: function (t) {
                            this._append(t);
                            this._process();
                            return this;
                        },
                        finalize: function (t) {
                            t && this._append(t);
                            return this._doFinalize();
                        },
                        blockSize: 16,
                        _createHelper: function (t) {
                            return function (e, i) {
                                return new t.init(i).finalize(e);
                            };
                        },
                        _createHmacHelper: function (t) {
                            return function (e, i) {
                                return new m.HMAC.init(t, i).finalize(e);
                            };
                        }
                    }), o.algo = {});
                    return o;
                }(Math);
                i = (e = s).lib, a = i.Base, r = i.WordArray, (o = e.x64 = {}).Word = a.extend({
                    init: function (t, e) {
                        this.high = t;
                        this.low = e;
                    }
                }), o.WordArray = a.extend({
                    init: function (t, e) {
                        t = this.words = t || [];
                        this.sigBytes = null != e ? e : 8 * t.length;
                    },
                    toX32: function () {
                        for (var t = this.words, e = t.length, i = [], n = 0; n < e; n++) {
                            var a = t[n];
                            i.push(a.high);
                            i.push(a.low);
                        }
                        return r.create(i, this.sigBytes);
                    },
                    clone: function () {
                        for (var t = a.clone.call(this), e = t.words = this.words.slice(0), i = e.length, n = 0; n < i; n++) e[n] = e[n].clone();
                        return t;
                    }
                });
                (function () {
                    if ("function" == typeof ArrayBuffer) {
                        var t = s.lib.WordArray, e = t.init;
                        (t.init = function (t) {
                            t instanceof ArrayBuffer && (t = new Uint8Array(t));
                            (t instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && t instanceof Uint8ClampedArray || t instanceof Int16Array || t instanceof Uint16Array || t instanceof Int32Array || t instanceof Uint32Array || t instanceof Float32Array || t instanceof Float64Array) && (t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength));
                            if (t instanceof Uint8Array) {
                                for (var i = t.byteLength, n = [], a = 0; a < i; a++) n[a >>> 2] |= t[a] << 24 - a % 4 * 8;
                                e.call(this, n, i);
                            } else e.apply(this, arguments);
                        }).prototype = t;
                    }
                })();
                (function () {
                    var t = s, e = t.lib.WordArray, i = t.enc;
                    i.Utf16 = i.Utf16BE = {
                        stringify: function (t) {
                            for (var e = t.words, i = t.sigBytes, n = [], a = 0; a < i; a += 2) {
                                var r = e[a >>> 2] >>> 16 - a % 4 * 8 & 65535;
                                n.push(String.fromCharCode(r));
                            }
                            return n.join("");
                        },
                        parse: function (t) {
                            for (var i = t.length, n = [], a = 0; a < i; a++) n[a >>> 1] |= t.charCodeAt(a) << 16 - a % 2 * 16;
                            return e.create(n, 2 * i);
                        }
                    };
                    i.Utf16LE = {
                        stringify: function (t) {
                            for (var e = t.words, i = t.sigBytes, a = [], r = 0; r < i; r += 2) {
                                var o = n(e[r >>> 2] >>> 16 - r % 4 * 8 & 65535);
                                a.push(String.fromCharCode(o));
                            }
                            return a.join("");
                        },
                        parse: function (t) {
                            for (var i = t.length, a = [], r = 0; r < i; r++) a[r >>> 1] |= n(t.charCodeAt(r) << 16 - r % 2 * 16);
                            return e.create(a, 2 * i);
                        }
                    };
                    function n(t) {
                        return t << 8 & 4278255360 | t >>> 8 & 16711935;
                    }
                })();
                (function () {
                    var t = s, e = t.lib.WordArray;
                    t.enc.Base64 = {
                        stringify: function (t) {
                            var e = t.words, i = t.sigBytes, n = this._map;
                            t.clamp();
                            for (var a = [], r = 0; r < i; r += 3) for (var o = (e[r >>> 2] >>> 24 - r % 4 * 8 & 255) << 16 | (e[r + 1 >>> 2] >>> 24 - (r + 1) % 4 * 8 & 255) << 8 | e[r + 2 >>> 2] >>> 24 - (r + 2) % 4 * 8 & 255, s = 0; s < 4 && r + .75 * s < i; s++) a.push(n.charAt(o >>> 6 * (3 - s) & 63));
                            var c = n.charAt(64);
                            if (c) for (; a.length % 4;) a.push(c);
                            return a.join("");
                        },
                        parse: function (t) {
                            var e = t.length, n = this._map, a = this._reverseMap;
                            if (!a) {
                                a = this._reverseMap = [];
                                for (var r = 0; r < n.length; r++) a[n.charCodeAt(r)] = r;
                            }
                            var o = n.charAt(64);
                            if (o) {
                                var s = t.indexOf(o);
                                -1 !== s && (e = s);
                            }
                            return i(t, e, a);
                        },
                        _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                    };
                    function i(t, i, n) {
                        for (var a = [], r = 0, o = 0; o < i; o++) if (o % 4) {
                            var s = n[t.charCodeAt(o - 1)] << o % 4 * 2 | n[t.charCodeAt(o)] >>> 6 - o % 4 * 2;
                            a[r >>> 2] |= s << 24 - r % 4 * 8;
                            r++;
                        }
                        return e.create(a, r);
                    }
                })();
                (function () {
                    var t = s, e = t.lib.WordArray;
                    t.enc.Base64url = {
                        stringify: function (t, e) {
                            void 0 === e && (e = !0);
                            var i = t.words, n = t.sigBytes, a = e ? this._safe_map : this._map;
                            t.clamp();
                            for (var r = [], o = 0; o < n; o += 3) for (var s = (i[o >>> 2] >>> 24 - o % 4 * 8 & 255) << 16 | (i[o + 1 >>> 2] >>> 24 - (o + 1) % 4 * 8 & 255) << 8 | i[o + 2 >>> 2] >>> 24 - (o + 2) % 4 * 8 & 255, c = 0; c < 4 && o + .75 * c < n; c++) r.push(a.charAt(s >>> 6 * (3 - c) & 63));
                            var l = a.charAt(64);
                            if (l) for (; r.length % 4;) r.push(l);
                            return r.join("");
                        },
                        parse: function (t, e) {
                            void 0 === e && (e = !0);
                            var n = t.length, a = e ? this._safe_map : this._map, r = this._reverseMap;
                            if (!r) {
                                r = this._reverseMap = [];
                                for (var o = 0; o < a.length; o++) r[a.charCodeAt(o)] = o;
                            }
                            var s = a.charAt(64);
                            if (s) {
                                var c = t.indexOf(s);
                                -1 !== c && (n = c);
                            }
                            return i(t, n, r);
                        },
                        _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                        _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
                    };
                    function i(t, i, n) {
                        for (var a = [], r = 0, o = 0; o < i; o++) if (o % 4) {
                            var s = n[t.charCodeAt(o - 1)] << o % 4 * 2 | n[t.charCodeAt(o)] >>> 6 - o % 4 * 2;
                            a[r >>> 2] |= s << 24 - r % 4 * 8;
                            r++;
                        }
                        return e.create(a, r);
                    }
                })();
                (function (t) {
                    var e = s, i = e.lib, n = i.WordArray, a = i.Hasher, r = e.algo, o = [];
                    (function () {
                        for (var e = 0; e < 64; e++) o[e] = 4294967296 * t.abs(t.sin(e + 1)) | 0;
                    })();
                    var c = r.MD5 = a.extend({
                        _doReset: function () {
                            this._hash = new n.init([1732584193, 4023233417, 2562383102, 271733878]);
                        },
                        _doProcessBlock: function (t, e) {
                            for (var i = 0; i < 16; i++) {
                                var n = e + i, a = t[n];
                                t[n] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8);
                            }
                            var r = this._hash.words, s = t[e + 0], c = t[e + 1], d = t[e + 2], f = t[e + 3], m = t[e + 4], g = t[e + 5], _ = t[e + 6], y = t[e + 7], v = t[e + 8], b = t[e + 9], M = t[e + 10], S = t[e + 11], k = t[e + 12], C = t[e + 13], w = t[e + 14], A = t[e + 15], T = r[0], D = r[1], P = r[2], E = r[3];
                            T = l(T, D, P, E, s, 7, o[0]);
                            E = l(E, T, D, P, c, 12, o[1]);
                            P = l(P, E, T, D, d, 17, o[2]);
                            D = l(D, P, E, T, f, 22, o[3]);
                            T = l(T, D, P, E, m, 7, o[4]);
                            E = l(E, T, D, P, g, 12, o[5]);
                            P = l(P, E, T, D, _, 17, o[6]);
                            D = l(D, P, E, T, y, 22, o[7]);
                            T = l(T, D, P, E, v, 7, o[8]);
                            E = l(E, T, D, P, b, 12, o[9]);
                            P = l(P, E, T, D, M, 17, o[10]);
                            D = l(D, P, E, T, S, 22, o[11]);
                            T = l(T, D, P, E, k, 7, o[12]);
                            E = l(E, T, D, P, C, 12, o[13]);
                            P = l(P, E, T, D, w, 17, o[14]);
                            T = h(T, D = l(D, P, E, T, A, 22, o[15]), P, E, c, 5, o[16]);
                            E = h(E, T, D, P, _, 9, o[17]);
                            P = h(P, E, T, D, S, 14, o[18]);
                            D = h(D, P, E, T, s, 20, o[19]);
                            T = h(T, D, P, E, g, 5, o[20]);
                            E = h(E, T, D, P, M, 9, o[21]);
                            P = h(P, E, T, D, A, 14, o[22]);
                            D = h(D, P, E, T, m, 20, o[23]);
                            T = h(T, D, P, E, b, 5, o[24]);
                            E = h(E, T, D, P, w, 9, o[25]);
                            P = h(P, E, T, D, f, 14, o[26]);
                            D = h(D, P, E, T, v, 20, o[27]);
                            T = h(T, D, P, E, C, 5, o[28]);
                            E = h(E, T, D, P, d, 9, o[29]);
                            P = h(P, E, T, D, y, 14, o[30]);
                            T = u(T, D = h(D, P, E, T, k, 20, o[31]), P, E, g, 4, o[32]);
                            E = u(E, T, D, P, v, 11, o[33]);
                            P = u(P, E, T, D, S, 16, o[34]);
                            D = u(D, P, E, T, w, 23, o[35]);
                            T = u(T, D, P, E, c, 4, o[36]);
                            E = u(E, T, D, P, m, 11, o[37]);
                            P = u(P, E, T, D, y, 16, o[38]);
                            D = u(D, P, E, T, M, 23, o[39]);
                            T = u(T, D, P, E, C, 4, o[40]);
                            E = u(E, T, D, P, s, 11, o[41]);
                            P = u(P, E, T, D, f, 16, o[42]);
                            D = u(D, P, E, T, _, 23, o[43]);
                            T = u(T, D, P, E, b, 4, o[44]);
                            E = u(E, T, D, P, k, 11, o[45]);
                            P = u(P, E, T, D, A, 16, o[46]);
                            T = p(T, D = u(D, P, E, T, d, 23, o[47]), P, E, s, 6, o[48]);
                            E = p(E, T, D, P, y, 10, o[49]);
                            P = p(P, E, T, D, w, 15, o[50]);
                            D = p(D, P, E, T, g, 21, o[51]);
                            T = p(T, D, P, E, k, 6, o[52]);
                            E = p(E, T, D, P, f, 10, o[53]);
                            P = p(P, E, T, D, M, 15, o[54]);
                            D = p(D, P, E, T, c, 21, o[55]);
                            T = p(T, D, P, E, v, 6, o[56]);
                            E = p(E, T, D, P, A, 10, o[57]);
                            P = p(P, E, T, D, _, 15, o[58]);
                            D = p(D, P, E, T, C, 21, o[59]);
                            T = p(T, D, P, E, m, 6, o[60]);
                            E = p(E, T, D, P, S, 10, o[61]);
                            P = p(P, E, T, D, d, 15, o[62]);
                            D = p(D, P, E, T, b, 21, o[63]);
                            r[0] = r[0] + T | 0;
                            r[1] = r[1] + D | 0;
                            r[2] = r[2] + P | 0;
                            r[3] = r[3] + E | 0;
                        },
                        _doFinalize: function () {
                            var e = this._data, i = e.words, n = 8 * this._nDataBytes, a = 8 * e.sigBytes;
                            i[a >>> 5] |= 128 << 24 - a % 32;
                            var r = t.floor(n / 4294967296), o = n;
                            i[15 + (a + 64 >>> 9 << 4)] = 16711935 & (r << 8 | r >>> 24) | 4278255360 & (r << 24 | r >>> 8);
                            i[14 + (a + 64 >>> 9 << 4)] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8);
                            e.sigBytes = 4 * (i.length + 1);
                            this._process();
                            for (var s = this._hash, c = s.words, l = 0; l < 4; l++) {
                                var h = c[l];
                                c[l] = 16711935 & (h << 8 | h >>> 24) | 4278255360 & (h << 24 | h >>> 8);
                            }
                            return s;
                        },
                        clone: function () {
                            var t = a.clone.call(this);
                            t._hash = this._hash.clone();
                            return t;
                        }
                    });
                    function l(t, e, i, n, a, r, o) {
                        var s = t + (e & i | ~e & n) + a + o;
                        return (s << r | s >>> 32 - r) + e;
                    }
                    function h(t, e, i, n, a, r, o) {
                        var s = t + (e & n | i & ~n) + a + o;
                        return (s << r | s >>> 32 - r) + e;
                    }
                    function u(t, e, i, n, a, r, o) {
                        var s = t + (e ^ i ^ n) + a + o;
                        return (s << r | s >>> 32 - r) + e;
                    }
                    function p(t, e, i, n, a, r, o) {
                        var s = t + (i ^ (e | ~n)) + a + o;
                        return (s << r | s >>> 32 - r) + e;
                    }
                    e.MD5 = a._createHelper(c);
                    e.HmacMD5 = a._createHmacHelper(c);
                })(Math);
                (function () {
                    var t = s, e = t.lib, i = e.WordArray, n = e.Hasher, a = t.algo, r = [], o = a.SHA1 = n.extend({
                        _doReset: function () {
                            this._hash = new i.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                        },
                        _doProcessBlock: function (t, e) {
                            for (var i = this._hash.words, n = i[0], a = i[1], o = i[2], s = i[3], c = i[4], l = 0; l < 80; l++) {
                                if (l < 16) r[l] = 0 | t[e + l]; else {
                                    var h = r[l - 3] ^ r[l - 8] ^ r[l - 14] ^ r[l - 16];
                                    r[l] = h << 1 | h >>> 31;
                                }
                                var u = (n << 5 | n >>> 27) + c + r[l];
                                u += l < 20 ? 1518500249 + (a & o | ~a & s) : l < 40 ? 1859775393 + (a ^ o ^ s) : l < 60 ? (a & o | a & s | o & s) - 1894007588 : (a ^ o ^ s) - 899497514;
                                c = s;
                                s = o;
                                o = a << 30 | a >>> 2;
                                a = n;
                                n = u;
                            }
                            i[0] = i[0] + n | 0;
                            i[1] = i[1] + a | 0;
                            i[2] = i[2] + o | 0;
                            i[3] = i[3] + s | 0;
                            i[4] = i[4] + c | 0;
                        },
                        _doFinalize: function () {
                            var t = this._data, e = t.words, i = 8 * this._nDataBytes, n = 8 * t.sigBytes;
                            e[n >>> 5] |= 128 << 24 - n % 32;
                            e[14 + (n + 64 >>> 9 << 4)] = Math.floor(i / 4294967296);
                            e[15 + (n + 64 >>> 9 << 4)] = i;
                            t.sigBytes = 4 * e.length;
                            this._process();
                            return this._hash;
                        },
                        clone: function () {
                            var t = n.clone.call(this);
                            t._hash = this._hash.clone();
                            return t;
                        }
                    });
                    t.SHA1 = n._createHelper(o);
                    t.HmacSHA1 = n._createHmacHelper(o);
                })();
                (function (t) {
                    var e = s, i = e.lib, n = i.WordArray, a = i.Hasher, r = e.algo, o = [], c = [];
                    (function () {
                        function e(e) {
                            for (var i = t.sqrt(e), n = 2; n <= i; n++) if (!(e % n)) return !1;
                            return !0;
                        }
                        function i(t) {
                            return 4294967296 * (t - (0 | t)) | 0;
                        }
                        for (var n = 2, a = 0; a < 64;) {
                            if (e(n)) {
                                a < 8 && (o[a] = i(t.pow(n, .5)));
                                c[a] = i(t.pow(n, 1 / 3));
                                a++;
                            }
                            n++;
                        }
                    })();
                    var l = [], h = r.SHA256 = a.extend({
                        _doReset: function () {
                            this._hash = new n.init(o.slice(0));
                        },
                        _doProcessBlock: function (t, e) {
                            for (var i = this._hash.words, n = i[0], a = i[1], r = i[2], o = i[3], s = i[4], h = i[5], u = i[6], p = i[7], d = 0; d < 64; d++) {
                                if (d < 16) l[d] = 0 | t[e + d]; else {
                                    var f = l[d - 15], m = (f << 25 | f >>> 7) ^ (f << 14 | f >>> 18) ^ f >>> 3, g = l[d - 2], _ = (g << 15 | g >>> 17) ^ (g << 13 | g >>> 19) ^ g >>> 10;
                                    l[d] = m + l[d - 7] + _ + l[d - 16];
                                }
                                var y = n & a ^ n & r ^ a & r, v = (n << 30 | n >>> 2) ^ (n << 19 | n >>> 13) ^ (n << 10 | n >>> 22), b = p + ((s << 26 | s >>> 6) ^ (s << 21 | s >>> 11) ^ (s << 7 | s >>> 25)) + (s & h ^ ~s & u) + c[d] + l[d];
                                p = u;
                                u = h;
                                h = s;
                                s = o + b | 0;
                                o = r;
                                r = a;
                                a = n;
                                n = b + (v + y) | 0;
                            }
                            i[0] = i[0] + n | 0;
                            i[1] = i[1] + a | 0;
                            i[2] = i[2] + r | 0;
                            i[3] = i[3] + o | 0;
                            i[4] = i[4] + s | 0;
                            i[5] = i[5] + h | 0;
                            i[6] = i[6] + u | 0;
                            i[7] = i[7] + p | 0;
                        },
                        _doFinalize: function () {
                            var e = this._data, i = e.words, n = 8 * this._nDataBytes, a = 8 * e.sigBytes;
                            i[a >>> 5] |= 128 << 24 - a % 32;
                            i[14 + (a + 64 >>> 9 << 4)] = t.floor(n / 4294967296);
                            i[15 + (a + 64 >>> 9 << 4)] = n;
                            e.sigBytes = 4 * i.length;
                            this._process();
                            return this._hash;
                        },
                        clone: function () {
                            var t = a.clone.call(this);
                            t._hash = this._hash.clone();
                            return t;
                        }
                    });
                    e.SHA256 = a._createHelper(h);
                    e.HmacSHA256 = a._createHmacHelper(h);
                })(Math);
                (function () {
                    var t = s, e = t.lib.WordArray, i = t.algo, n = i.SHA256, a = i.SHA224 = n.extend({
                        _doReset: function () {
                            this._hash = new e.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
                        },
                        _doFinalize: function () {
                            var t = n._doFinalize.call(this);
                            t.sigBytes -= 4;
                            return t;
                        }
                    });
                    t.SHA224 = n._createHelper(a);
                    t.HmacSHA224 = n._createHmacHelper(a);
                })();
                (function () {
                    var t = s, e = t.lib.Hasher, i = t.x64, n = i.Word, a = i.WordArray, r = t.algo;
                    function o() {
                        return n.create.apply(n, arguments);
                    }
                    var c = [o(1116352408, 3609767458), o(1899447441, 602891725), o(3049323471, 3964484399), o(3921009573, 2173295548), o(961987163, 4081628472), o(1508970993, 3053834265), o(2453635748, 2937671579), o(2870763221, 3664609560), o(3624381080, 2734883394), o(310598401, 1164996542), o(607225278, 1323610764), o(1426881987, 3590304994), o(1925078388, 4068182383), o(2162078206, 991336113), o(2614888103, 633803317), o(3248222580, 3479774868), o(3835390401, 2666613458), o(4022224774, 944711139), o(264347078, 2341262773), o(604807628, 2007800933), o(770255983, 1495990901), o(1249150122, 1856431235), o(1555081692, 3175218132), o(1996064986, 2198950837), o(2554220882, 3999719339), o(2821834349, 766784016), o(2952996808, 2566594879), o(3210313671, 3203337956), o(3336571891, 1034457026), o(3584528711, 2466948901), o(113926993, 3758326383), o(338241895, 168717936), o(666307205, 1188179964), o(773529912, 1546045734), o(1294757372, 1522805485), o(1396182291, 2643833823), o(1695183700, 2343527390), o(1986661051, 1014477480), o(2177026350, 1206759142), o(2456956037, 344077627), o(2730485921, 1290863460), o(2820302411, 3158454273), o(3259730800, 3505952657), o(3345764771, 106217008), o(3516065817, 3606008344), o(3600352804, 1432725776), o(4094571909, 1467031594), o(275423344, 851169720), o(430227734, 3100823752), o(506948616, 1363258195), o(659060556, 3750685593), o(883997877, 3785050280), o(958139571, 3318307427), o(1322822218, 3812723403), o(1537002063, 2003034995), o(1747873779, 3602036899), o(1955562222, 1575990012), o(2024104815, 1125592928), o(2227730452, 2716904306), o(2361852424, 442776044), o(2428436474, 593698344), o(2756734187, 3733110249), o(3204031479, 2999351573), o(3329325298, 3815920427), o(3391569614, 3928383900), o(3515267271, 566280711), o(3940187606, 3454069534), o(4118630271, 4000239992), o(116418474, 1914138554), o(174292421, 2731055270), o(289380356, 3203993006), o(460393269, 320620315), o(685471733, 587496836), o(852142971, 1086792851), o(1017036298, 365543100), o(1126000580, 2618297676), o(1288033470, 3409855158), o(1501505948, 4234509866), o(1607167915, 987167468), o(1816402316, 1246189591)], l = [];
                    (function () {
                        for (var t = 0; t < 80; t++) l[t] = o();
                    })();
                    var h = r.SHA512 = e.extend({
                        _doReset: function () {
                            this._hash = new a.init([new n.init(1779033703, 4089235720), new n.init(3144134277, 2227873595), new n.init(1013904242, 4271175723), new n.init(2773480762, 1595750129), new n.init(1359893119, 2917565137), new n.init(2600822924, 725511199), new n.init(528734635, 4215389547), new n.init(1541459225, 327033209)]);
                        },
                        _doProcessBlock: function (t, e) {
                            for (var i = this._hash.words, n = i[0], a = i[1], r = i[2], o = i[3], s = i[4], h = i[5], u = i[6], p = i[7], d = n.high, f = n.low, m = a.high, g = a.low, _ = r.high, y = r.low, v = o.high, b = o.low, M = s.high, S = s.low, k = h.high, C = h.low, w = u.high, A = u.low, T = p.high, D = p.low, P = d, E = f, B = m, F = g, N = _, x = y, R = v, I = b, G = M, O = S, L = k, j = C, U = w, Y = A, H = T, W = D, V = 0; V < 80; V++) {
                                var z, J, X = l[V];
                                if (V < 16) {
                                    J = X.high = 0 | t[e + 2 * V];
                                    z = X.low = 0 | t[e + 2 * V + 1];
                                } else {
                                    var q = l[V - 15], K = q.high, Z = q.low, Q = (K >>> 1 | Z << 31) ^ (K >>> 8 | Z << 24) ^ K >>> 7, $ = (Z >>> 1 | K << 31) ^ (Z >>> 8 | K << 24) ^ (Z >>> 7 | K << 25), tt = l[V - 2], et = tt.high, it = tt.low, nt = (et >>> 19 | it << 13) ^ (et << 3 | it >>> 29) ^ et >>> 6, at = (it >>> 19 | et << 13) ^ (it << 3 | et >>> 29) ^ (it >>> 6 | et << 26), rt = l[V - 7], ot = rt.high, st = rt.low, ct = l[V - 16], lt = ct.high, ht = ct.low;
                                    J = (J = (J = Q + ot + ((z = $ + st) >>> 0 < $ >>> 0 ? 1 : 0)) + nt + ((z += at) >>> 0 < at >>> 0 ? 1 : 0)) + lt + ((z += ht) >>> 0 < ht >>> 0 ? 1 : 0);
                                    X.high = J;
                                    X.low = z;
                                }
                                var ut, pt = G & L ^ ~G & U, dt = O & j ^ ~O & Y, ft = P & B ^ P & N ^ B & N, mt = E & F ^ E & x ^ F & x, gt = (P >>> 28 | E << 4) ^ (P << 30 | E >>> 2) ^ (P << 25 | E >>> 7), _t = (E >>> 28 | P << 4) ^ (E << 30 | P >>> 2) ^ (E << 25 | P >>> 7), yt = (G >>> 14 | O << 18) ^ (G >>> 18 | O << 14) ^ (G << 23 | O >>> 9), vt = (O >>> 14 | G << 18) ^ (O >>> 18 | G << 14) ^ (O << 23 | G >>> 9), bt = c[V], Mt = bt.high, St = bt.low, kt = H + yt + ((ut = W + vt) >>> 0 < W >>> 0 ? 1 : 0), Ct = _t + mt;
                                H = U;
                                W = Y;
                                U = L;
                                Y = j;
                                L = G;
                                j = O;
                                G = R + (kt = (kt = (kt = kt + pt + ((ut += dt) >>> 0 < dt >>> 0 ? 1 : 0)) + Mt + ((ut += St) >>> 0 < St >>> 0 ? 1 : 0)) + J + ((ut += z) >>> 0 < z >>> 0 ? 1 : 0)) + ((O = I + ut | 0) >>> 0 < I >>> 0 ? 1 : 0) | 0;
                                R = N;
                                I = x;
                                N = B;
                                x = F;
                                B = P;
                                F = E;
                                P = kt + (gt + ft + (Ct >>> 0 < _t >>> 0 ? 1 : 0)) + ((E = ut + Ct | 0) >>> 0 < ut >>> 0 ? 1 : 0) | 0;
                            }
                            f = n.low = f + E;
                            n.high = d + P + (f >>> 0 < E >>> 0 ? 1 : 0);
                            g = a.low = g + F;
                            a.high = m + B + (g >>> 0 < F >>> 0 ? 1 : 0);
                            y = r.low = y + x;
                            r.high = _ + N + (y >>> 0 < x >>> 0 ? 1 : 0);
                            b = o.low = b + I;
                            o.high = v + R + (b >>> 0 < I >>> 0 ? 1 : 0);
                            S = s.low = S + O;
                            s.high = M + G + (S >>> 0 < O >>> 0 ? 1 : 0);
                            C = h.low = C + j;
                            h.high = k + L + (C >>> 0 < j >>> 0 ? 1 : 0);
                            A = u.low = A + Y;
                            u.high = w + U + (A >>> 0 < Y >>> 0 ? 1 : 0);
                            D = p.low = D + W;
                            p.high = T + H + (D >>> 0 < W >>> 0 ? 1 : 0);
                        },
                        _doFinalize: function () {
                            var t = this._data, e = t.words, i = 8 * this._nDataBytes, n = 8 * t.sigBytes;
                            e[n >>> 5] |= 128 << 24 - n % 32;
                            e[30 + (n + 128 >>> 10 << 5)] = Math.floor(i / 4294967296);
                            e[31 + (n + 128 >>> 10 << 5)] = i;
                            t.sigBytes = 4 * e.length;
                            this._process();
                            return this._hash.toX32();
                        },
                        clone: function () {
                            var t = e.clone.call(this);
                            t._hash = this._hash.clone();
                            return t;
                        },
                        blockSize: 32
                    });
                    t.SHA512 = e._createHelper(h);
                    t.HmacSHA512 = e._createHmacHelper(h);
                })();
                (function () {
                    var t = s, e = t.x64, i = e.Word, n = e.WordArray, a = t.algo, r = a.SHA512, o = a.SHA384 = r.extend({
                        _doReset: function () {
                            this._hash = new n.init([new i.init(3418070365, 3238371032), new i.init(1654270250, 914150663), new i.init(2438529370, 812702999), new i.init(355462360, 4144912697), new i.init(1731405415, 4290775857), new i.init(2394180231, 1750603025), new i.init(3675008525, 1694076839), new i.init(1203062813, 3204075428)]);
                        },
                        _doFinalize: function () {
                            var t = r._doFinalize.call(this);
                            t.sigBytes -= 16;
                            return t;
                        }
                    });
                    t.SHA384 = r._createHelper(o);
                    t.HmacSHA384 = r._createHmacHelper(o);
                })();
                (function (t) {
                    var e = s, i = e.lib, n = i.WordArray, a = i.Hasher, r = e.x64.Word, o = e.algo, c = [], l = [], h = [];
                    (function () {
                        for (var t = 1, e = 0, i = 0; i < 24; i++) {
                            c[t + 5 * e] = (i + 1) * (i + 2) / 2 % 64;
                            var n = (2 * t + 3 * e) % 5;
                            t = e % 5;
                            e = n;
                        }
                        for (t = 0; t < 5; t++) for (e = 0; e < 5; e++) l[t + 5 * e] = e + (2 * t + 3 * e) % 5 * 5;
                        for (var a = 1, o = 0; o < 24; o++) {
                            for (var s = 0, u = 0, p = 0; p < 7; p++) {
                                if (1 & a) {
                                    var d = (1 << p) - 1;
                                    d < 32 ? u ^= 1 << d : s ^= 1 << d - 32;
                                }
                                128 & a ? a = a << 1 ^ 113 : a <<= 1;
                            }
                            h[o] = r.create(s, u);
                        }
                    })();
                    var u = [];
                    (function () {
                        for (var t = 0; t < 25; t++) u[t] = r.create();
                    })();
                    var p = o.SHA3 = a.extend({
                        cfg: a.cfg.extend({
                            outputLength: 512
                        }),
                        _doReset: function () {
                            for (var t = this._state = [], e = 0; e < 25; e++) t[e] = new r.init();
                            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
                        },
                        _doProcessBlock: function (t, e) {
                            for (var i = this._state, n = this.blockSize / 2, a = 0; a < n; a++) {
                                var r = t[e + 2 * a], o = t[e + 2 * a + 1];
                                r = 16711935 & (r << 8 | r >>> 24) | 4278255360 & (r << 24 | r >>> 8);
                                o = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8);
                                (D = i[a]).high ^= o;
                                D.low ^= r;
                            }
                            for (var s = 0; s < 24; s++) {
                                for (var p = 0; p < 5; p++) {
                                    for (var d = 0, f = 0, m = 0; m < 5; m++) {
                                        d ^= (D = i[p + 5 * m]).high;
                                        f ^= D.low;
                                    }
                                    var g = u[p];
                                    g.high = d;
                                    g.low = f;
                                }
                                for (p = 0; p < 5; p++) {
                                    var _ = u[(p + 4) % 5], y = u[(p + 1) % 5], v = y.high, b = y.low;
                                    for (d = _.high ^ (v << 1 | b >>> 31), f = _.low ^ (b << 1 | v >>> 31), m = 0; m < 5; m++) {
                                        (D = i[p + 5 * m]).high ^= d;
                                        D.low ^= f;
                                    }
                                }
                                for (var M = 1; M < 25; M++) {
                                    var S = (D = i[M]).high, k = D.low, C = c[M];
                                    if (C < 32) {
                                        d = S << C | k >>> 32 - C;
                                        f = k << C | S >>> 32 - C;
                                    } else {
                                        d = k << C - 32 | S >>> 64 - C;
                                        f = S << C - 32 | k >>> 64 - C;
                                    }
                                    var w = u[l[M]];
                                    w.high = d;
                                    w.low = f;
                                }
                                var A = u[0], T = i[0];
                                A.high = T.high;
                                A.low = T.low;
                                for (p = 0; p < 5; p++) for (m = 0; m < 5; m++) {
                                    var D = i[M = p + 5 * m], P = u[M], E = u[(p + 1) % 5 + 5 * m], B = u[(p + 2) % 5 + 5 * m];
                                    D.high = P.high ^ ~E.high & B.high;
                                    D.low = P.low ^ ~E.low & B.low;
                                }
                                D = i[0];
                                var F = h[s];
                                D.high ^= F.high;
                                D.low ^= F.low;
                            }
                        },
                        _doFinalize: function () {
                            var e = this._data, i = e.words, a = (this._nDataBytes, 8 * e.sigBytes), r = 32 * this.blockSize;
                            i[a >>> 5] |= 1 << 24 - a % 32;
                            i[(t.ceil((a + 1) / r) * r >>> 5) - 1] |= 128;
                            e.sigBytes = 4 * i.length;
                            this._process();
                            for (var o = this._state, s = this.cfg.outputLength / 8, c = s / 8, l = [], h = 0; h < c; h++) {
                                var u = o[h], p = u.high, d = u.low;
                                p = 16711935 & (p << 8 | p >>> 24) | 4278255360 & (p << 24 | p >>> 8);
                                d = 16711935 & (d << 8 | d >>> 24) | 4278255360 & (d << 24 | d >>> 8);
                                l.push(d);
                                l.push(p);
                            }
                            return new n.init(l, s);
                        },
                        clone: function () {
                            for (var t = a.clone.call(this), e = t._state = this._state.slice(0), i = 0; i < 25; i++) e[i] = e[i].clone();
                            return t;
                        }
                    });
                    e.SHA3 = a._createHelper(p);
                    e.HmacSHA3 = a._createHmacHelper(p);
                })(Math);
                (function () {
                    var t = s, e = t.lib, i = e.WordArray, n = e.Hasher, a = t.algo, r = i.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), o = i.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), c = i.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), l = i.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), h = i.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), u = i.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), p = a.RIPEMD160 = n.extend({
                        _doReset: function () {
                            this._hash = i.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                        },
                        _doProcessBlock: function (t, e) {
                            for (var i = 0; i < 16; i++) {
                                var n = e + i, a = t[n];
                                t[n] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8);
                            }
                            var s, p, v, b, M, S, k, C, w, A, T, D = this._hash.words, P = h.words, E = u.words, B = r.words, F = o.words, N = c.words, x = l.words;
                            S = s = D[0];
                            k = p = D[1];
                            C = v = D[2];
                            w = b = D[3];
                            A = M = D[4];
                            for (i = 0; i < 80; i += 1) {
                                T = s + t[e + B[i]] | 0;
                                T += i < 16 ? d(p, v, b) + P[0] : i < 32 ? f(p, v, b) + P[1] : i < 48 ? m(p, v, b) + P[2] : i < 64 ? g(p, v, b) + P[3] : _(p, v, b) + P[4];
                                T = (T = y(T |= 0, N[i])) + M | 0;
                                s = M;
                                M = b;
                                b = y(v, 10);
                                v = p;
                                p = T;
                                T = S + t[e + F[i]] | 0;
                                T += i < 16 ? _(k, C, w) + E[0] : i < 32 ? g(k, C, w) + E[1] : i < 48 ? m(k, C, w) + E[2] : i < 64 ? f(k, C, w) + E[3] : d(k, C, w) + E[4];
                                T = (T = y(T |= 0, x[i])) + A | 0;
                                S = A;
                                A = w;
                                w = y(C, 10);
                                C = k;
                                k = T;
                            }
                            T = D[1] + v + w | 0;
                            D[1] = D[2] + b + A | 0;
                            D[2] = D[3] + M + S | 0;
                            D[3] = D[4] + s + k | 0;
                            D[4] = D[0] + p + C | 0;
                            D[0] = T;
                        },
                        _doFinalize: function () {
                            var t = this._data, e = t.words, i = 8 * this._nDataBytes, n = 8 * t.sigBytes;
                            e[n >>> 5] |= 128 << 24 - n % 32;
                            e[14 + (n + 64 >>> 9 << 4)] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8);
                            t.sigBytes = 4 * (e.length + 1);
                            this._process();
                            for (var a = this._hash, r = a.words, o = 0; o < 5; o++) {
                                var s = r[o];
                                r[o] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8);
                            }
                            return a;
                        },
                        clone: function () {
                            var t = n.clone.call(this);
                            t._hash = this._hash.clone();
                            return t;
                        }
                    });
                    function d(t, e, i) {
                        return t ^ e ^ i;
                    }
                    function f(t, e, i) {
                        return t & e | ~t & i;
                    }
                    function m(t, e, i) {
                        return (t | ~e) ^ i;
                    }
                    function g(t, e, i) {
                        return t & i | e & ~i;
                    }
                    function _(t, e, i) {
                        return t ^ (e | ~i);
                    }
                    function y(t, e) {
                        return t << e | t >>> 32 - e;
                    }
                    t.RIPEMD160 = n._createHelper(p);
                    t.HmacRIPEMD160 = n._createHmacHelper(p);
                })(Math);
                (function () {
                    var t = s, e = t.lib.Base, i = t.enc.Utf8;
                    t.algo.HMAC = e.extend({
                        init: function (t, e) {
                            t = this._hasher = new t.init();
                            "string" == typeof e && (e = i.parse(e));
                            var n = t.blockSize, a = 4 * n;
                            e.sigBytes > a && (e = t.finalize(e));
                            e.clamp();
                            for (var r = this._oKey = e.clone(), o = this._iKey = e.clone(), s = r.words, c = o.words, l = 0; l < n; l++) {
                                s[l] ^= 1549556828;
                                c[l] ^= 909522486;
                            }
                            r.sigBytes = o.sigBytes = a;
                            this.reset();
                        },
                        reset: function () {
                            var t = this._hasher;
                            t.reset();
                            t.update(this._iKey);
                        },
                        update: function (t) {
                            this._hasher.update(t);
                            return this;
                        },
                        finalize: function (t) {
                            var e = this._hasher, i = e.finalize(t);
                            e.reset();
                            return e.finalize(this._oKey.clone().concat(i));
                        }
                    });
                })();
                (function () {
                    var t = s, e = t.lib, i = e.Base, n = e.WordArray, a = t.algo, r = a.SHA1, o = a.HMAC, c = a.PBKDF2 = i.extend({
                        cfg: i.extend({
                            keySize: 4,
                            hasher: r,
                            iterations: 1
                        }),
                        init: function (t) {
                            this.cfg = this.cfg.extend(t);
                        },
                        compute: function (t, e) {
                            for (var i = this.cfg, a = o.create(i.hasher, t), r = n.create(), s = n.create([1]), c = r.words, l = s.words, h = i.keySize, u = i.iterations; c.length < h;) {
                                var p = a.update(e).finalize(s);
                                a.reset();
                                for (var d = p.words, f = d.length, m = p, g = 1; g < u; g++) {
                                    m = a.finalize(m);
                                    a.reset();
                                    for (var _ = m.words, y = 0; y < f; y++) d[y] ^= _[y];
                                }
                                r.concat(p);
                                l[0]++;
                            }
                            r.sigBytes = 4 * h;
                            return r;
                        }
                    });
                    t.PBKDF2 = function (t, e, i) {
                        return c.create(i).compute(t, e);
                    };
                })();
                (function () {
                    var t = s, e = t.lib, i = e.Base, n = e.WordArray, a = t.algo, r = a.MD5, o = a.EvpKDF = i.extend({
                        cfg: i.extend({
                            keySize: 4,
                            hasher: r,
                            iterations: 1
                        }),
                        init: function (t) {
                            this.cfg = this.cfg.extend(t);
                        },
                        compute: function (t, e) {
                            for (var i, a = this.cfg, r = a.hasher.create(), o = n.create(), s = o.words, c = a.keySize, l = a.iterations; s.length < c;) {
                                i && r.update(i);
                                i = r.update(t).finalize(e);
                                r.reset();
                                for (var h = 1; h < l; h++) {
                                    i = r.finalize(i);
                                    r.reset();
                                }
                                o.concat(i);
                            }
                            o.sigBytes = 4 * c;
                            return o;
                        }
                    });
                    t.EvpKDF = function (t, e, i) {
                        return o.create(i).compute(t, e);
                    };
                })();
                s.lib.Cipher || function (t) {
                    var e = s, i = e.lib, n = i.Base, a = i.WordArray, r = i.BufferedBlockAlgorithm, o = e.enc, c = (o.Utf8,
                        o.Base64), l = e.algo.EvpKDF, h = i.Cipher = r.extend({
                            cfg: n.extend(),
                            createEncryptor: function (t, e) {
                                return this.create(this._ENC_XFORM_MODE, t, e);
                            },
                            createDecryptor: function (t, e) {
                                return this.create(this._DEC_XFORM_MODE, t, e);
                            },
                            init: function (t, e, i) {
                                this.cfg = this.cfg.extend(i);
                                this._xformMode = t;
                                this._key = e;
                                this.reset();
                            },
                            reset: function () {
                                r.reset.call(this);
                                this._doReset();
                            },
                            process: function (t) {
                                this._append(t);
                                return this._process();
                            },
                            finalize: function (t) {
                                t && this._append(t);
                                return this._doFinalize();
                            },
                            keySize: 4,
                            ivSize: 4,
                            _ENC_XFORM_MODE: 1,
                            _DEC_XFORM_MODE: 2,
                            _createHelper: function () {
                                function t(t) {
                                    return "string" == typeof t ? v : _;
                                }
                                return function (e) {
                                    return {
                                        encrypt: function (i, n, a) {
                                            return t(n).encrypt(e, i, n, a);
                                        },
                                        decrypt: function (i, n, a) {
                                            return t(n).decrypt(e, i, n, a);
                                        }
                                    };
                                };
                            }()
                        }), u = (i.StreamCipher = h.extend({
                            _doFinalize: function () {
                                return this._process(!0);
                            },
                            blockSize: 1
                        }), e.mode = {}), p = i.BlockCipherMode = n.extend({
                            createEncryptor: function (t, e) {
                                return this.Encryptor.create(t, e);
                            },
                            createDecryptor: function (t, e) {
                                return this.Decryptor.create(t, e);
                            },
                            init: function (t, e) {
                                this._cipher = t;
                                this._iv = e;
                            }
                        }), d = u.CBC = function () {
                            var e = p.extend();
                            e.Encryptor = e.extend({
                                processBlock: function (t, e) {
                                    var n = this._cipher, a = n.blockSize;
                                    i.call(this, t, e, a);
                                    n.encryptBlock(t, e);
                                    this._prevBlock = t.slice(e, e + a);
                                }
                            });
                            e.Decryptor = e.extend({
                                processBlock: function (t, e) {
                                    var n = this._cipher, a = n.blockSize, r = t.slice(e, e + a);
                                    n.decryptBlock(t, e);
                                    i.call(this, t, e, a);
                                    this._prevBlock = r;
                                }
                            });
                            function i(e, i, n) {
                                var a, r = this._iv;
                                if (r) {
                                    a = r;
                                    this._iv = t;
                                } else a = this._prevBlock;
                                for (var o = 0; o < n; o++) e[i + o] ^= a[o];
                            }
                            return e;
                        }(), f = (e.pad = {}).Pkcs7 = {
                            pad: function (t, e) {
                                for (var i = 4 * e, n = i - t.sigBytes % i, r = n << 24 | n << 16 | n << 8 | n, o = [], s = 0; s < n; s += 4) o.push(r);
                                var c = a.create(o, n);
                                t.concat(c);
                            },
                            unpad: function (t) {
                                var e = 255 & t.words[t.sigBytes - 1 >>> 2];
                                t.sigBytes -= e;
                            }
                        }, m = (i.BlockCipher = h.extend({
                            cfg: h.cfg.extend({
                                mode: d,
                                padding: f
                            }),
                            reset: function () {
                                var t;
                                h.reset.call(this);
                                var e = this.cfg, i = e.iv, n = e.mode;
                                if (this._xformMode == this._ENC_XFORM_MODE) t = n.createEncryptor; else {
                                    t = n.createDecryptor;
                                    this._minBufferSize = 1;
                                }
                                if (this._mode && this._mode.__creator == t) this._mode.init(this, i && i.words); else {
                                    this._mode = t.call(n, this, i && i.words);
                                    this._mode.__creator = t;
                                }
                            },
                            _doProcessBlock: function (t, e) {
                                this._mode.processBlock(t, e);
                            },
                            _doFinalize: function () {
                                var t, e = this.cfg.padding;
                                if (this._xformMode == this._ENC_XFORM_MODE) {
                                    e.pad(this._data, this.blockSize);
                                    t = this._process(!0);
                                } else {
                                    t = this._process(!0);
                                    e.unpad(t);
                                }
                                return t;
                            },
                            blockSize: 4
                        }), i.CipherParams = n.extend({
                            init: function (t) {
                                this.mixIn(t);
                            },
                            toString: function (t) {
                                return (t || this.formatter).stringify(this);
                            }
                        })), g = (e.format = {}).OpenSSL = {
                            stringify: function (t) {
                                var e = t.ciphertext, i = t.salt;
                                return (i ? a.create([1398893684, 1701076831]).concat(i).concat(e) : e).toString(c);
                            },
                            parse: function (t) {
                                var e, i = c.parse(t), n = i.words;
                                if (1398893684 == n[0] && 1701076831 == n[1]) {
                                    e = a.create(n.slice(2, 4));
                                    n.splice(0, 4);
                                    i.sigBytes -= 16;
                                }
                                return m.create({
                                    ciphertext: i,
                                    salt: e
                                });
                            }
                        }, _ = i.SerializableCipher = n.extend({
                            cfg: n.extend({
                                format: g
                            }),
                            encrypt: function (t, e, i, n) {
                                n = this.cfg.extend(n);
                                var a = t.createEncryptor(i, n), r = a.finalize(e), o = a.cfg;
                                return m.create({
                                    ciphertext: r,
                                    key: i,
                                    iv: o.iv,
                                    algorithm: t,
                                    mode: o.mode,
                                    padding: o.padding,
                                    blockSize: t.blockSize,
                                    formatter: n.format
                                });
                            },
                            decrypt: function (t, e, i, n) {
                                n = this.cfg.extend(n);
                                e = this._parse(e, n.format);
                                return t.createDecryptor(i, n).finalize(e.ciphertext);
                            },
                            _parse: function (t, e) {
                                return "string" == typeof t ? e.parse(t, this) : t;
                            }
                        }), y = (e.kdf = {}).OpenSSL = {
                            execute: function (t, e, i, n, r) {
                                n || (n = a.random(8));
                                if (r) o = l.create({
                                    keySize: e + i,
                                    hasher: r
                                }).compute(t, n); else var o = l.create({
                                    keySize: e + i
                                }).compute(t, n);
                                var s = a.create(o.words.slice(e), 4 * i);
                                o.sigBytes = 4 * e;
                                return m.create({
                                    key: o,
                                    iv: s,
                                    salt: n
                                });
                            }
                        }, v = i.PasswordBasedCipher = _.extend({
                            cfg: _.cfg.extend({
                                kdf: y
                            }),
                            encrypt: function (t, e, i, n) {
                                var a = (n = this.cfg.extend(n)).kdf.execute(i, t.keySize, t.ivSize, n.salt, n.hasher);
                                n.iv = a.iv;
                                var r = _.encrypt.call(this, t, e, a.key, n);
                                r.mixIn(a);
                                return r;
                            },
                            decrypt: function (t, e, i, n) {
                                n = this.cfg.extend(n);
                                e = this._parse(e, n.format);
                                var a = n.kdf.execute(i, t.keySize, t.ivSize, e.salt, n.hasher);
                                n.iv = a.iv;
                                return _.decrypt.call(this, t, e, a.key, n);
                            }
                        });
                }();
                s.mode.CFB = function () {
                    var t = s.lib.BlockCipherMode.extend();
                    t.Encryptor = t.extend({
                        processBlock: function (t, i) {
                            var n = this._cipher, a = n.blockSize;
                            e.call(this, t, i, a, n);
                            this._prevBlock = t.slice(i, i + a);
                        }
                    });
                    t.Decryptor = t.extend({
                        processBlock: function (t, i) {
                            var n = this._cipher, a = n.blockSize, r = t.slice(i, i + a);
                            e.call(this, t, i, a, n);
                            this._prevBlock = r;
                        }
                    });
                    function e(t, e, i, n) {
                        var a, r = this._iv;
                        if (r) {
                            a = r.slice(0);
                            this._iv = void 0;
                        } else a = this._prevBlock;
                        n.encryptBlock(a, 0);
                        for (var o = 0; o < i; o++) t[e + o] ^= a[o];
                    }
                    return t;
                }();
                s.mode.CTR = function () {
                    var t = s.lib.BlockCipherMode.extend(), e = t.Encryptor = t.extend({
                        processBlock: function (t, e) {
                            var i = this._cipher, n = i.blockSize, a = this._iv, r = this._counter;
                            if (a) {
                                r = this._counter = a.slice(0);
                                this._iv = void 0;
                            }
                            var o = r.slice(0);
                            i.encryptBlock(o, 0);
                            r[n - 1] = r[n - 1] + 1 | 0;
                            for (var s = 0; s < n; s++) t[e + s] ^= o[s];
                        }
                    });
                    t.Decryptor = e;
                    return t;
                }();
                s.mode.CTRGladman = function () {
                    var t = s.lib.BlockCipherMode.extend();
                    function e(t) {
                        if (255 == (t >> 24 & 255)) {
                            var e = t >> 16 & 255, i = t >> 8 & 255, n = 255 & t;
                            if (255 === e) {
                                e = 0;
                                if (255 === i) {
                                    i = 0;
                                    255 === n ? n = 0 : ++n;
                                } else ++i;
                            } else ++e;
                            t = 0;
                            t += e << 16;
                            t += i << 8;
                            t += n;
                        } else t += 1 << 24;
                        return t;
                    }
                    function i(t) {
                        0 === (t[0] = e(t[0])) && (t[1] = e(t[1]));
                        return t;
                    }
                    var n = t.Encryptor = t.extend({
                        processBlock: function (t, e) {
                            var n = this._cipher, a = n.blockSize, r = this._iv, o = this._counter;
                            if (r) {
                                o = this._counter = r.slice(0);
                                this._iv = void 0;
                            }
                            i(o);
                            var s = o.slice(0);
                            n.encryptBlock(s, 0);
                            for (var c = 0; c < a; c++) t[e + c] ^= s[c];
                        }
                    });
                    t.Decryptor = n;
                    return t;
                }();
                s.mode.OFB = function () {
                    var t = s.lib.BlockCipherMode.extend(), e = t.Encryptor = t.extend({
                        processBlock: function (t, e) {
                            var i = this._cipher, n = i.blockSize, a = this._iv, r = this._keystream;
                            if (a) {
                                r = this._keystream = a.slice(0);
                                this._iv = void 0;
                            }
                            i.encryptBlock(r, 0);
                            for (var o = 0; o < n; o++) t[e + o] ^= r[o];
                        }
                    });
                    t.Decryptor = e;
                    return t;
                }();
                s.mode.ECB = function () {
                    var t = s.lib.BlockCipherMode.extend();
                    t.Encryptor = t.extend({
                        processBlock: function (t, e) {
                            this._cipher.encryptBlock(t, e);
                        }
                    });
                    t.Decryptor = t.extend({
                        processBlock: function (t, e) {
                            this._cipher.decryptBlock(t, e);
                        }
                    });
                    return t;
                }();
                s.pad.AnsiX923 = {
                    pad: function (t, e) {
                        var i = t.sigBytes, n = 4 * e, a = n - i % n, r = i + a - 1;
                        t.clamp();
                        t.words[r >>> 2] |= a << 24 - r % 4 * 8;
                        t.sigBytes += a;
                    },
                    unpad: function (t) {
                        var e = 255 & t.words[t.sigBytes - 1 >>> 2];
                        t.sigBytes -= e;
                    }
                };
                s.pad.Iso10126 = {
                    pad: function (t, e) {
                        var i = 4 * e, n = i - t.sigBytes % i;
                        t.concat(s.lib.WordArray.random(n - 1)).concat(s.lib.WordArray.create([n << 24], 1));
                    },
                    unpad: function (t) {
                        var e = 255 & t.words[t.sigBytes - 1 >>> 2];
                        t.sigBytes -= e;
                    }
                };
                s.pad.Iso97971 = {
                    pad: function (t, e) {
                        t.concat(s.lib.WordArray.create([2147483648], 1));
                        s.pad.ZeroPadding.pad(t, e);
                    },
                    unpad: function (t) {
                        s.pad.ZeroPadding.unpad(t);
                        t.sigBytes--;
                    }
                };
                s.pad.ZeroPadding = {
                    pad: function (t, e) {
                        var i = 4 * e;
                        t.clamp();
                        t.sigBytes += i - (t.sigBytes % i || i);
                    },
                    unpad: function (t) {
                        var e = t.words, i = t.sigBytes - 1;
                        for (i = t.sigBytes - 1; i >= 0; i--) if (e[i >>> 2] >>> 24 - i % 4 * 8 & 255) {
                            t.sigBytes = i + 1;
                            break;
                        }
                    }
                };
                s.pad.NoPadding = {
                    pad: function () { },
                    unpad: function () { }
                };
                (function () {
                    var t = s, e = t.lib.CipherParams, i = t.enc.Hex;
                    t.format.Hex = {
                        stringify: function (t) {
                            return t.ciphertext.toString(i);
                        },
                        parse: function (t) {
                            var n = i.parse(t);
                            return e.create({
                                ciphertext: n
                            });
                        }
                    };
                })();
                (function () {
                    var t = s, e = t.lib.BlockCipher, i = t.algo, n = [], a = [], r = [], o = [], c = [], l = [], h = [], u = [], p = [], d = [];
                    (function () {
                        for (var t = [], e = 0; e < 256; e++) t[e] = e < 128 ? e << 1 : e << 1 ^ 283;
                        var i = 0, s = 0;
                        for (e = 0; e < 256; e++) {
                            var f = s ^ s << 1 ^ s << 2 ^ s << 3 ^ s << 4;
                            f = f >>> 8 ^ 255 & f ^ 99;
                            n[i] = f;
                            a[f] = i;
                            var m = t[i], g = t[m], _ = t[g], y = 257 * t[f] ^ 16843008 * f;
                            r[i] = y << 24 | y >>> 8;
                            o[i] = y << 16 | y >>> 16;
                            c[i] = y << 8 | y >>> 24;
                            l[i] = y;
                            y = 16843009 * _ ^ 65537 * g ^ 257 * m ^ 16843008 * i;
                            h[f] = y << 24 | y >>> 8;
                            u[f] = y << 16 | y >>> 16;
                            p[f] = y << 8 | y >>> 24;
                            d[f] = y;
                            if (i) {
                                i = m ^ t[t[t[_ ^ m]]];
                                s ^= t[t[s]];
                            } else i = s = 1;
                        }
                    })();
                    var f = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], m = i.AES = e.extend({
                        _doReset: function () {
                            if (!this._nRounds || this._keyPriorReset !== this._key) {
                                for (var t = this._keyPriorReset = this._key, e = t.words, i = t.sigBytes / 4, a = 4 * ((this._nRounds = i + 6) + 1), r = this._keySchedule = [], o = 0; o < a; o++) if (o < i) r[o] = e[o]; else {
                                    l = r[o - 1];
                                    if (o % i) i > 6 && o % i == 4 && (l = n[l >>> 24] << 24 | n[l >>> 16 & 255] << 16 | n[l >>> 8 & 255] << 8 | n[255 & l]); else {
                                        l = n[(l = l << 8 | l >>> 24) >>> 24] << 24 | n[l >>> 16 & 255] << 16 | n[l >>> 8 & 255] << 8 | n[255 & l];
                                        l ^= f[o / i | 0] << 24;
                                    }
                                    r[o] = r[o - i] ^ l;
                                }
                                for (var s = this._invKeySchedule = [], c = 0; c < a; c++) {
                                    o = a - c;
                                    if (c % 4) var l = r[o]; else l = r[o - 4];
                                    s[c] = c < 4 || o <= 4 ? l : h[n[l >>> 24]] ^ u[n[l >>> 16 & 255]] ^ p[n[l >>> 8 & 255]] ^ d[n[255 & l]];
                                }
                            }
                        },
                        encryptBlock: function (t, e) {
                            this._doCryptBlock(t, e, this._keySchedule, r, o, c, l, n);
                        },
                        decryptBlock: function (t, e) {
                            var i = t[e + 1];
                            t[e + 1] = t[e + 3];
                            t[e + 3] = i;
                            this._doCryptBlock(t, e, this._invKeySchedule, h, u, p, d, a);
                            i = t[e + 1];
                            t[e + 1] = t[e + 3];
                            t[e + 3] = i;
                        },
                        _doCryptBlock: function (t, e, i, n, a, r, o, s) {
                            for (var c = this._nRounds, l = t[e] ^ i[0], h = t[e + 1] ^ i[1], u = t[e + 2] ^ i[2], p = t[e + 3] ^ i[3], d = 4, f = 1; f < c; f++) {
                                var m = n[l >>> 24] ^ a[h >>> 16 & 255] ^ r[u >>> 8 & 255] ^ o[255 & p] ^ i[d++], g = n[h >>> 24] ^ a[u >>> 16 & 255] ^ r[p >>> 8 & 255] ^ o[255 & l] ^ i[d++], _ = n[u >>> 24] ^ a[p >>> 16 & 255] ^ r[l >>> 8 & 255] ^ o[255 & h] ^ i[d++], y = n[p >>> 24] ^ a[l >>> 16 & 255] ^ r[h >>> 8 & 255] ^ o[255 & u] ^ i[d++];
                                l = m;
                                h = g;
                                u = _;
                                p = y;
                            }
                            m = (s[l >>> 24] << 24 | s[h >>> 16 & 255] << 16 | s[u >>> 8 & 255] << 8 | s[255 & p]) ^ i[d++],
                                g = (s[h >>> 24] << 24 | s[u >>> 16 & 255] << 16 | s[p >>> 8 & 255] << 8 | s[255 & l]) ^ i[d++],
                                _ = (s[u >>> 24] << 24 | s[p >>> 16 & 255] << 16 | s[l >>> 8 & 255] << 8 | s[255 & h]) ^ i[d++],
                                y = (s[p >>> 24] << 24 | s[l >>> 16 & 255] << 16 | s[h >>> 8 & 255] << 8 | s[255 & u]) ^ i[d++];
                            t[e] = m;
                            t[e + 1] = g;
                            t[e + 2] = _;
                            t[e + 3] = y;
                        },
                        keySize: 8
                    });
                    t.AES = e._createHelper(m);
                })();
                (function () {
                    var t = s, e = t.lib, i = e.WordArray, n = e.BlockCipher, a = t.algo, r = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], o = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], c = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], l = [{
                        0: 8421888,
                        268435456: 32768,
                        536870912: 8421378,
                        805306368: 2,
                        1073741824: 512,
                        1342177280: 8421890,
                        1610612736: 8389122,
                        1879048192: 8388608,
                        2147483648: 514,
                        2415919104: 8389120,
                        2684354560: 33280,
                        2952790016: 8421376,
                        3221225472: 32770,
                        3489660928: 8388610,
                        3758096384: 0,
                        4026531840: 33282,
                        134217728: 0,
                        402653184: 8421890,
                        671088640: 33282,
                        939524096: 32768,
                        1207959552: 8421888,
                        1476395008: 512,
                        1744830464: 8421378,
                        2013265920: 2,
                        2281701376: 8389120,
                        2550136832: 33280,
                        2818572288: 8421376,
                        3087007744: 8389122,
                        3355443200: 8388610,
                        3623878656: 32770,
                        3892314112: 514,
                        4160749568: 8388608,
                        1: 32768,
                        268435457: 2,
                        536870913: 8421888,
                        805306369: 8388608,
                        1073741825: 8421378,
                        1342177281: 33280,
                        1610612737: 512,
                        1879048193: 8389122,
                        2147483649: 8421890,
                        2415919105: 8421376,
                        2684354561: 8388610,
                        2952790017: 33282,
                        3221225473: 514,
                        3489660929: 8389120,
                        3758096385: 32770,
                        4026531841: 0,
                        134217729: 8421890,
                        402653185: 8421376,
                        671088641: 8388608,
                        939524097: 512,
                        1207959553: 32768,
                        1476395009: 8388610,
                        1744830465: 2,
                        2013265921: 33282,
                        2281701377: 32770,
                        2550136833: 8389122,
                        2818572289: 514,
                        3087007745: 8421888,
                        3355443201: 8389120,
                        3623878657: 0,
                        3892314113: 33280,
                        4160749569: 8421378
                    }, {
                        0: 1074282512,
                        16777216: 16384,
                        33554432: 524288,
                        50331648: 1074266128,
                        67108864: 1073741840,
                        83886080: 1074282496,
                        100663296: 1073758208,
                        117440512: 16,
                        134217728: 540672,
                        150994944: 1073758224,
                        167772160: 1073741824,
                        184549376: 540688,
                        201326592: 524304,
                        218103808: 0,
                        234881024: 16400,
                        251658240: 1074266112,
                        8388608: 1073758208,
                        25165824: 540688,
                        41943040: 16,
                        58720256: 1073758224,
                        75497472: 1074282512,
                        92274688: 1073741824,
                        109051904: 524288,
                        125829120: 1074266128,
                        142606336: 524304,
                        159383552: 0,
                        176160768: 16384,
                        192937984: 1074266112,
                        209715200: 1073741840,
                        226492416: 540672,
                        243269632: 1074282496,
                        260046848: 16400,
                        268435456: 0,
                        285212672: 1074266128,
                        301989888: 1073758224,
                        318767104: 1074282496,
                        335544320: 1074266112,
                        352321536: 16,
                        369098752: 540688,
                        385875968: 16384,
                        402653184: 16400,
                        419430400: 524288,
                        436207616: 524304,
                        452984832: 1073741840,
                        469762048: 540672,
                        486539264: 1073758208,
                        503316480: 1073741824,
                        520093696: 1074282512,
                        276824064: 540688,
                        293601280: 524288,
                        310378496: 1074266112,
                        327155712: 16384,
                        343932928: 1073758208,
                        360710144: 1074282512,
                        377487360: 16,
                        394264576: 1073741824,
                        411041792: 1074282496,
                        427819008: 1073741840,
                        444596224: 1073758224,
                        461373440: 524304,
                        478150656: 0,
                        494927872: 16400,
                        511705088: 1074266128,
                        528482304: 540672
                    }, {
                        0: 260,
                        1048576: 0,
                        2097152: 67109120,
                        3145728: 65796,
                        4194304: 65540,
                        5242880: 67108868,
                        6291456: 67174660,
                        7340032: 67174400,
                        8388608: 67108864,
                        9437184: 67174656,
                        10485760: 65792,
                        11534336: 67174404,
                        12582912: 67109124,
                        13631488: 65536,
                        14680064: 4,
                        15728640: 256,
                        524288: 67174656,
                        1572864: 67174404,
                        2621440: 0,
                        3670016: 67109120,
                        4718592: 67108868,
                        5767168: 65536,
                        6815744: 65540,
                        7864320: 260,
                        8912896: 4,
                        9961472: 256,
                        11010048: 67174400,
                        12058624: 65796,
                        13107200: 65792,
                        14155776: 67109124,
                        15204352: 67174660,
                        16252928: 67108864,
                        16777216: 67174656,
                        17825792: 65540,
                        18874368: 65536,
                        19922944: 67109120,
                        20971520: 256,
                        22020096: 67174660,
                        23068672: 67108868,
                        24117248: 0,
                        25165824: 67109124,
                        26214400: 67108864,
                        27262976: 4,
                        28311552: 65792,
                        29360128: 67174400,
                        30408704: 260,
                        31457280: 65796,
                        32505856: 67174404,
                        17301504: 67108864,
                        18350080: 260,
                        19398656: 67174656,
                        20447232: 0,
                        21495808: 65540,
                        22544384: 67109120,
                        23592960: 256,
                        24641536: 67174404,
                        25690112: 65536,
                        26738688: 67174660,
                        27787264: 65796,
                        28835840: 67108868,
                        29884416: 67109124,
                        30932992: 67174400,
                        31981568: 4,
                        33030144: 65792
                    }, {
                        0: 2151682048,
                        65536: 2147487808,
                        131072: 4198464,
                        196608: 2151677952,
                        262144: 0,
                        327680: 4198400,
                        393216: 2147483712,
                        458752: 4194368,
                        524288: 2147483648,
                        589824: 4194304,
                        655360: 64,
                        720896: 2147487744,
                        786432: 2151678016,
                        851968: 4160,
                        917504: 4096,
                        983040: 2151682112,
                        32768: 2147487808,
                        98304: 64,
                        163840: 2151678016,
                        229376: 2147487744,
                        294912: 4198400,
                        360448: 2151682112,
                        425984: 0,
                        491520: 2151677952,
                        557056: 4096,
                        622592: 2151682048,
                        688128: 4194304,
                        753664: 4160,
                        819200: 2147483648,
                        884736: 4194368,
                        950272: 4198464,
                        1015808: 2147483712,
                        1048576: 4194368,
                        1114112: 4198400,
                        1179648: 2147483712,
                        1245184: 0,
                        1310720: 4160,
                        1376256: 2151678016,
                        1441792: 2151682048,
                        1507328: 2147487808,
                        1572864: 2151682112,
                        1638400: 2147483648,
                        1703936: 2151677952,
                        1769472: 4198464,
                        1835008: 2147487744,
                        1900544: 4194304,
                        1966080: 64,
                        2031616: 4096,
                        1081344: 2151677952,
                        1146880: 2151682112,
                        1212416: 0,
                        1277952: 4198400,
                        1343488: 4194368,
                        1409024: 2147483648,
                        1474560: 2147487808,
                        1540096: 64,
                        1605632: 2147483712,
                        1671168: 4096,
                        1736704: 2147487744,
                        1802240: 2151678016,
                        1867776: 4160,
                        1933312: 2151682048,
                        1998848: 4194304,
                        2064384: 4198464
                    }, {
                        0: 128,
                        4096: 17039360,
                        8192: 262144,
                        12288: 536870912,
                        16384: 537133184,
                        20480: 16777344,
                        24576: 553648256,
                        28672: 262272,
                        32768: 16777216,
                        36864: 537133056,
                        40960: 536871040,
                        45056: 553910400,
                        49152: 553910272,
                        53248: 0,
                        57344: 17039488,
                        61440: 553648128,
                        2048: 17039488,
                        6144: 553648256,
                        10240: 128,
                        14336: 17039360,
                        18432: 262144,
                        22528: 537133184,
                        26624: 553910272,
                        30720: 536870912,
                        34816: 537133056,
                        38912: 0,
                        43008: 553910400,
                        47104: 16777344,
                        51200: 536871040,
                        55296: 553648128,
                        59392: 16777216,
                        63488: 262272,
                        65536: 262144,
                        69632: 128,
                        73728: 536870912,
                        77824: 553648256,
                        81920: 16777344,
                        86016: 553910272,
                        90112: 537133184,
                        94208: 16777216,
                        98304: 553910400,
                        102400: 553648128,
                        106496: 17039360,
                        110592: 537133056,
                        114688: 262272,
                        118784: 536871040,
                        122880: 0,
                        126976: 17039488,
                        67584: 553648256,
                        71680: 16777216,
                        75776: 17039360,
                        79872: 537133184,
                        83968: 536870912,
                        88064: 17039488,
                        92160: 128,
                        96256: 553910272,
                        100352: 262272,
                        104448: 553910400,
                        108544: 0,
                        112640: 553648128,
                        116736: 16777344,
                        120832: 262144,
                        124928: 537133056,
                        129024: 536871040
                    }, {
                        0: 268435464,
                        256: 8192,
                        512: 270532608,
                        768: 270540808,
                        1024: 268443648,
                        1280: 2097152,
                        1536: 2097160,
                        1792: 268435456,
                        2048: 0,
                        2304: 268443656,
                        2560: 2105344,
                        2816: 8,
                        3072: 270532616,
                        3328: 2105352,
                        3584: 8200,
                        3840: 270540800,
                        128: 270532608,
                        384: 270540808,
                        640: 8,
                        896: 2097152,
                        1152: 2105352,
                        1408: 268435464,
                        1664: 268443648,
                        1920: 8200,
                        2176: 2097160,
                        2432: 8192,
                        2688: 268443656,
                        2944: 270532616,
                        3200: 0,
                        3456: 270540800,
                        3712: 2105344,
                        3968: 268435456,
                        4096: 268443648,
                        4352: 270532616,
                        4608: 270540808,
                        4864: 8200,
                        5120: 2097152,
                        5376: 268435456,
                        5632: 268435464,
                        5888: 2105344,
                        6144: 2105352,
                        6400: 0,
                        6656: 8,
                        6912: 270532608,
                        7168: 8192,
                        7424: 268443656,
                        7680: 270540800,
                        7936: 2097160,
                        4224: 8,
                        4480: 2105344,
                        4736: 2097152,
                        4992: 268435464,
                        5248: 268443648,
                        5504: 8200,
                        5760: 270540808,
                        6016: 270532608,
                        6272: 270540800,
                        6528: 270532616,
                        6784: 8192,
                        7040: 2105352,
                        7296: 2097160,
                        7552: 0,
                        7808: 268435456,
                        8064: 268443656
                    }, {
                        0: 1048576,
                        16: 33555457,
                        32: 1024,
                        48: 1049601,
                        64: 34604033,
                        80: 0,
                        96: 1,
                        112: 34603009,
                        128: 33555456,
                        144: 1048577,
                        160: 33554433,
                        176: 34604032,
                        192: 34603008,
                        208: 1025,
                        224: 1049600,
                        240: 33554432,
                        8: 34603009,
                        24: 0,
                        40: 33555457,
                        56: 34604032,
                        72: 1048576,
                        88: 33554433,
                        104: 33554432,
                        120: 1025,
                        136: 1049601,
                        152: 33555456,
                        168: 34603008,
                        184: 1048577,
                        200: 1024,
                        216: 34604033,
                        232: 1,
                        248: 1049600,
                        256: 33554432,
                        272: 1048576,
                        288: 33555457,
                        304: 34603009,
                        320: 1048577,
                        336: 33555456,
                        352: 34604032,
                        368: 1049601,
                        384: 1025,
                        400: 34604033,
                        416: 1049600,
                        432: 1,
                        448: 0,
                        464: 34603008,
                        480: 33554433,
                        496: 1024,
                        264: 1049600,
                        280: 33555457,
                        296: 34603009,
                        312: 1,
                        328: 33554432,
                        344: 1048576,
                        360: 1025,
                        376: 34604032,
                        392: 33554433,
                        408: 34603008,
                        424: 0,
                        440: 34604033,
                        456: 1049601,
                        472: 1024,
                        488: 33555456,
                        504: 1048577
                    }, {
                        0: 134219808,
                        1: 131072,
                        2: 134217728,
                        3: 32,
                        4: 131104,
                        5: 134350880,
                        6: 134350848,
                        7: 2048,
                        8: 134348800,
                        9: 134219776,
                        10: 133120,
                        11: 134348832,
                        12: 2080,
                        13: 0,
                        14: 134217760,
                        15: 133152,
                        2147483648: 2048,
                        2147483649: 134350880,
                        2147483650: 134219808,
                        2147483651: 134217728,
                        2147483652: 134348800,
                        2147483653: 133120,
                        2147483654: 133152,
                        2147483655: 32,
                        2147483656: 134217760,
                        2147483657: 2080,
                        2147483658: 131104,
                        2147483659: 134350848,
                        2147483660: 0,
                        2147483661: 134348832,
                        2147483662: 134219776,
                        2147483663: 131072,
                        16: 133152,
                        17: 134350848,
                        18: 32,
                        19: 2048,
                        20: 134219776,
                        21: 134217760,
                        22: 134348832,
                        23: 131072,
                        24: 0,
                        25: 131104,
                        26: 134348800,
                        27: 134219808,
                        28: 134350880,
                        29: 133120,
                        30: 2080,
                        31: 134217728,
                        2147483664: 131072,
                        2147483665: 2048,
                        2147483666: 134348832,
                        2147483667: 133152,
                        2147483668: 32,
                        2147483669: 134348800,
                        2147483670: 134217728,
                        2147483671: 134219808,
                        2147483672: 134350880,
                        2147483673: 134217760,
                        2147483674: 134219776,
                        2147483675: 0,
                        2147483676: 133120,
                        2147483677: 2080,
                        2147483678: 131104,
                        2147483679: 134350848
                    }], h = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], u = a.DES = n.extend({
                        _doReset: function () {
                            for (var t = this._key.words, e = [], i = 0; i < 56; i++) {
                                var n = r[i] - 1;
                                e[i] = t[n >>> 5] >>> 31 - n % 32 & 1;
                            }
                            for (var a = this._subKeys = [], s = 0; s < 16; s++) {
                                var l = a[s] = [], h = c[s];
                                for (i = 0; i < 24; i++) {
                                    l[i / 6 | 0] |= e[(o[i] - 1 + h) % 28] << 31 - i % 6;
                                    l[4 + (i / 6 | 0)] |= e[28 + (o[i + 24] - 1 + h) % 28] << 31 - i % 6;
                                }
                                l[0] = l[0] << 1 | l[0] >>> 31;
                                for (i = 1; i < 7; i++) l[i] = l[i] >>> 4 * (i - 1) + 3;
                                l[7] = l[7] << 5 | l[7] >>> 27;
                            }
                            var u = this._invSubKeys = [];
                            for (i = 0; i < 16; i++) u[i] = a[15 - i];
                        },
                        encryptBlock: function (t, e) {
                            this._doCryptBlock(t, e, this._subKeys);
                        },
                        decryptBlock: function (t, e) {
                            this._doCryptBlock(t, e, this._invSubKeys);
                        },
                        _doCryptBlock: function (t, e, i) {
                            this._lBlock = t[e];
                            this._rBlock = t[e + 1];
                            p.call(this, 4, 252645135);
                            p.call(this, 16, 65535);
                            d.call(this, 2, 858993459);
                            d.call(this, 8, 16711935);
                            p.call(this, 1, 1431655765);
                            for (var n = 0; n < 16; n++) {
                                for (var a = i[n], r = this._lBlock, o = this._rBlock, s = 0, c = 0; c < 8; c++) s |= l[c][((o ^ a[c]) & h[c]) >>> 0];
                                this._lBlock = o;
                                this._rBlock = r ^ s;
                            }
                            var u = this._lBlock;
                            this._lBlock = this._rBlock;
                            this._rBlock = u;
                            p.call(this, 1, 1431655765);
                            d.call(this, 8, 16711935);
                            d.call(this, 2, 858993459);
                            p.call(this, 16, 65535);
                            p.call(this, 4, 252645135);
                            t[e] = this._lBlock;
                            t[e + 1] = this._rBlock;
                        },
                        keySize: 2,
                        ivSize: 2,
                        blockSize: 2
                    });
                    function p(t, e) {
                        var i = (this._lBlock >>> t ^ this._rBlock) & e;
                        this._rBlock ^= i;
                        this._lBlock ^= i << t;
                    }
                    function d(t, e) {
                        var i = (this._rBlock >>> t ^ this._lBlock) & e;
                        this._lBlock ^= i;
                        this._rBlock ^= i << t;
                    }
                    t.DES = n._createHelper(u);
                    var f = a.TripleDES = n.extend({
                        _doReset: function () {
                            var t = this._key.words;
                            if (2 !== t.length && 4 !== t.length && t.length < 6) throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
                            var e = t.slice(0, 2), n = t.length < 4 ? t.slice(0, 2) : t.slice(2, 4), a = t.length < 6 ? t.slice(0, 2) : t.slice(4, 6);
                            this._des1 = u.createEncryptor(i.create(e));
                            this._des2 = u.createEncryptor(i.create(n));
                            this._des3 = u.createEncryptor(i.create(a));
                        },
                        encryptBlock: function (t, e) {
                            this._des1.encryptBlock(t, e);
                            this._des2.decryptBlock(t, e);
                            this._des3.encryptBlock(t, e);
                        },
                        decryptBlock: function (t, e) {
                            this._des3.decryptBlock(t, e);
                            this._des2.encryptBlock(t, e);
                            this._des1.decryptBlock(t, e);
                        },
                        keySize: 6,
                        ivSize: 2,
                        blockSize: 2
                    });
                    t.TripleDES = n._createHelper(f);
                })();
                (function () {
                    var t = s, e = t.lib.StreamCipher, i = t.algo, n = i.RC4 = e.extend({
                        _doReset: function () {
                            for (var t = this._key, e = t.words, i = t.sigBytes, n = this._S = [], a = 0; a < 256; a++) n[a] = a;
                            a = 0;
                            for (var r = 0; a < 256; a++) {
                                var o = a % i, s = e[o >>> 2] >>> 24 - o % 4 * 8 & 255;
                                r = (r + n[a] + s) % 256;
                                var c = n[a];
                                n[a] = n[r];
                                n[r] = c;
                            }
                            this._i = this._j = 0;
                        },
                        _doProcessBlock: function (t, e) {
                            t[e] ^= a.call(this);
                        },
                        keySize: 8,
                        ivSize: 0
                    });
                    function a() {
                        for (var t = this._S, e = this._i, i = this._j, n = 0, a = 0; a < 4; a++) {
                            i = (i + t[e = (e + 1) % 256]) % 256;
                            var r = t[e];
                            t[e] = t[i];
                            t[i] = r;
                            n |= t[(t[e] + t[i]) % 256] << 24 - 8 * a;
                        }
                        this._i = e;
                        this._j = i;
                        return n;
                    }
                    t.RC4 = e._createHelper(n);
                    var r = i.RC4Drop = n.extend({
                        cfg: n.cfg.extend({
                            drop: 192
                        }),
                        _doReset: function () {
                            n._doReset.call(this);
                            for (var t = this.cfg.drop; t > 0; t--) a.call(this);
                        }
                    });
                    t.RC4Drop = e._createHelper(r);
                })();
                (function () {
                    var t = s, e = t.lib.StreamCipher, i = t.algo, n = [], a = [], r = [], o = i.Rabbit = e.extend({
                        _doReset: function () {
                            for (var t = this._key.words, e = this.cfg.iv, i = 0; i < 4; i++) t[i] = 16711935 & (t[i] << 8 | t[i] >>> 24) | 4278255360 & (t[i] << 24 | t[i] >>> 8);
                            var n = this._X = [t[0], t[3] << 16 | t[2] >>> 16, t[1], t[0] << 16 | t[3] >>> 16, t[2], t[1] << 16 | t[0] >>> 16, t[3], t[2] << 16 | t[1] >>> 16], a = this._C = [t[2] << 16 | t[2] >>> 16, 4294901760 & t[0] | 65535 & t[1], t[3] << 16 | t[3] >>> 16, 4294901760 & t[1] | 65535 & t[2], t[0] << 16 | t[0] >>> 16, 4294901760 & t[2] | 65535 & t[3], t[1] << 16 | t[1] >>> 16, 4294901760 & t[3] | 65535 & t[0]];
                            this._b = 0;
                            for (i = 0; i < 4; i++) c.call(this);
                            for (i = 0; i < 8; i++) a[i] ^= n[i + 4 & 7];
                            if (e) {
                                var r = e.words, o = r[0], s = r[1], l = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), h = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), u = l >>> 16 | 4294901760 & h, p = h << 16 | 65535 & l;
                                a[0] ^= l;
                                a[1] ^= u;
                                a[2] ^= h;
                                a[3] ^= p;
                                a[4] ^= l;
                                a[5] ^= u;
                                a[6] ^= h;
                                a[7] ^= p;
                                for (i = 0; i < 4; i++) c.call(this);
                            }
                        },
                        _doProcessBlock: function (t, e) {
                            var i = this._X;
                            c.call(this);
                            n[0] = i[0] ^ i[5] >>> 16 ^ i[3] << 16;
                            n[1] = i[2] ^ i[7] >>> 16 ^ i[5] << 16;
                            n[2] = i[4] ^ i[1] >>> 16 ^ i[7] << 16;
                            n[3] = i[6] ^ i[3] >>> 16 ^ i[1] << 16;
                            for (var a = 0; a < 4; a++) {
                                n[a] = 16711935 & (n[a] << 8 | n[a] >>> 24) | 4278255360 & (n[a] << 24 | n[a] >>> 8);
                                t[e + a] ^= n[a];
                            }
                        },
                        blockSize: 4,
                        ivSize: 2
                    });
                    function c() {
                        for (var t = this._X, e = this._C, i = 0; i < 8; i++) a[i] = e[i];
                        e[0] = e[0] + 1295307597 + this._b | 0;
                        e[1] = e[1] + 3545052371 + (e[0] >>> 0 < a[0] >>> 0 ? 1 : 0) | 0;
                        e[2] = e[2] + 886263092 + (e[1] >>> 0 < a[1] >>> 0 ? 1 : 0) | 0;
                        e[3] = e[3] + 1295307597 + (e[2] >>> 0 < a[2] >>> 0 ? 1 : 0) | 0;
                        e[4] = e[4] + 3545052371 + (e[3] >>> 0 < a[3] >>> 0 ? 1 : 0) | 0;
                        e[5] = e[5] + 886263092 + (e[4] >>> 0 < a[4] >>> 0 ? 1 : 0) | 0;
                        e[6] = e[6] + 1295307597 + (e[5] >>> 0 < a[5] >>> 0 ? 1 : 0) | 0;
                        e[7] = e[7] + 3545052371 + (e[6] >>> 0 < a[6] >>> 0 ? 1 : 0) | 0;
                        this._b = e[7] >>> 0 < a[7] >>> 0 ? 1 : 0;
                        for (i = 0; i < 8; i++) {
                            var n = t[i] + e[i], o = 65535 & n, s = n >>> 16, c = ((o * o >>> 17) + o * s >>> 15) + s * s, l = ((4294901760 & n) * n | 0) + ((65535 & n) * n | 0);
                            r[i] = c ^ l;
                        }
                        t[0] = r[0] + (r[7] << 16 | r[7] >>> 16) + (r[6] << 16 | r[6] >>> 16) | 0;
                        t[1] = r[1] + (r[0] << 8 | r[0] >>> 24) + r[7] | 0;
                        t[2] = r[2] + (r[1] << 16 | r[1] >>> 16) + (r[0] << 16 | r[0] >>> 16) | 0;
                        t[3] = r[3] + (r[2] << 8 | r[2] >>> 24) + r[1] | 0;
                        t[4] = r[4] + (r[3] << 16 | r[3] >>> 16) + (r[2] << 16 | r[2] >>> 16) | 0;
                        t[5] = r[5] + (r[4] << 8 | r[4] >>> 24) + r[3] | 0;
                        t[6] = r[6] + (r[5] << 16 | r[5] >>> 16) + (r[4] << 16 | r[4] >>> 16) | 0;
                        t[7] = r[7] + (r[6] << 8 | r[6] >>> 24) + r[5] | 0;
                    }
                    t.Rabbit = e._createHelper(o);
                })();
                (function () {
                    var t = s, e = t.lib.StreamCipher, i = t.algo, n = [], a = [], r = [], o = i.RabbitLegacy = e.extend({
                        _doReset: function () {
                            var t = this._key.words, e = this.cfg.iv, i = this._X = [t[0], t[3] << 16 | t[2] >>> 16, t[1], t[0] << 16 | t[3] >>> 16, t[2], t[1] << 16 | t[0] >>> 16, t[3], t[2] << 16 | t[1] >>> 16], n = this._C = [t[2] << 16 | t[2] >>> 16, 4294901760 & t[0] | 65535 & t[1], t[3] << 16 | t[3] >>> 16, 4294901760 & t[1] | 65535 & t[2], t[0] << 16 | t[0] >>> 16, 4294901760 & t[2] | 65535 & t[3], t[1] << 16 | t[1] >>> 16, 4294901760 & t[3] | 65535 & t[0]];
                            this._b = 0;
                            for (var a = 0; a < 4; a++) c.call(this);
                            for (a = 0; a < 8; a++) n[a] ^= i[a + 4 & 7];
                            if (e) {
                                var r = e.words, o = r[0], s = r[1], l = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), h = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), u = l >>> 16 | 4294901760 & h, p = h << 16 | 65535 & l;
                                n[0] ^= l;
                                n[1] ^= u;
                                n[2] ^= h;
                                n[3] ^= p;
                                n[4] ^= l;
                                n[5] ^= u;
                                n[6] ^= h;
                                n[7] ^= p;
                                for (a = 0; a < 4; a++) c.call(this);
                            }
                        },
                        _doProcessBlock: function (t, e) {
                            var i = this._X;
                            c.call(this);
                            n[0] = i[0] ^ i[5] >>> 16 ^ i[3] << 16;
                            n[1] = i[2] ^ i[7] >>> 16 ^ i[5] << 16;
                            n[2] = i[4] ^ i[1] >>> 16 ^ i[7] << 16;
                            n[3] = i[6] ^ i[3] >>> 16 ^ i[1] << 16;
                            for (var a = 0; a < 4; a++) {
                                n[a] = 16711935 & (n[a] << 8 | n[a] >>> 24) | 4278255360 & (n[a] << 24 | n[a] >>> 8);
                                t[e + a] ^= n[a];
                            }
                        },
                        blockSize: 4,
                        ivSize: 2
                    });
                    function c() {
                        for (var t = this._X, e = this._C, i = 0; i < 8; i++) a[i] = e[i];
                        e[0] = e[0] + 1295307597 + this._b | 0;
                        e[1] = e[1] + 3545052371 + (e[0] >>> 0 < a[0] >>> 0 ? 1 : 0) | 0;
                        e[2] = e[2] + 886263092 + (e[1] >>> 0 < a[1] >>> 0 ? 1 : 0) | 0;
                        e[3] = e[3] + 1295307597 + (e[2] >>> 0 < a[2] >>> 0 ? 1 : 0) | 0;
                        e[4] = e[4] + 3545052371 + (e[3] >>> 0 < a[3] >>> 0 ? 1 : 0) | 0;
                        e[5] = e[5] + 886263092 + (e[4] >>> 0 < a[4] >>> 0 ? 1 : 0) | 0;
                        e[6] = e[6] + 1295307597 + (e[5] >>> 0 < a[5] >>> 0 ? 1 : 0) | 0;
                        e[7] = e[7] + 3545052371 + (e[6] >>> 0 < a[6] >>> 0 ? 1 : 0) | 0;
                        this._b = e[7] >>> 0 < a[7] >>> 0 ? 1 : 0;
                        for (i = 0; i < 8; i++) {
                            var n = t[i] + e[i], o = 65535 & n, s = n >>> 16, c = ((o * o >>> 17) + o * s >>> 15) + s * s, l = ((4294901760 & n) * n | 0) + ((65535 & n) * n | 0);
                            r[i] = c ^ l;
                        }
                        t[0] = r[0] + (r[7] << 16 | r[7] >>> 16) + (r[6] << 16 | r[6] >>> 16) | 0;
                        t[1] = r[1] + (r[0] << 8 | r[0] >>> 24) + r[7] | 0;
                        t[2] = r[2] + (r[1] << 16 | r[1] >>> 16) + (r[0] << 16 | r[0] >>> 16) | 0;
                        t[3] = r[3] + (r[2] << 8 | r[2] >>> 24) + r[1] | 0;
                        t[4] = r[4] + (r[3] << 16 | r[3] >>> 16) + (r[2] << 16 | r[2] >>> 16) | 0;
                        t[5] = r[5] + (r[4] << 8 | r[4] >>> 24) + r[3] | 0;
                        t[6] = r[6] + (r[5] << 16 | r[5] >>> 16) + (r[4] << 16 | r[4] >>> 16) | 0;
                        t[7] = r[7] + (r[6] << 8 | r[6] >>> 24) + r[5] | 0;
                    }
                    t.RabbitLegacy = e._createHelper(o);
                })();
                (function () {
                    var t = s, e = t.lib.BlockCipher, i = t.algo, n = 16, a = [608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022, 953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479, 2450970073, 2306472731], r = [[3509652390, 2564797868, 805139163, 3491422135, 3101798381, 1780907670, 3128725573, 4046225305, 614570311, 3012652279, 134345442, 2240740374, 1667834072, 1901547113, 2757295779, 4103290238, 227898511, 1921955416, 1904987480, 2182433518, 2069144605, 3260701109, 2620446009, 720527379, 3318853667, 677414384, 3393288472, 3101374703, 2390351024, 1614419982, 1822297739, 2954791486, 3608508353, 3174124327, 2024746970, 1432378464, 3864339955, 2857741204, 1464375394, 1676153920, 1439316330, 715854006, 3033291828, 289532110, 2706671279, 2087905683, 3018724369, 1668267050, 732546397, 1947742710, 3462151702, 2609353502, 2950085171, 1814351708, 2050118529, 680887927, 999245976, 1800124847, 3300911131, 1713906067, 1641548236, 4213287313, 1216130144, 1575780402, 4018429277, 3917837745, 3693486850, 3949271944, 596196993, 3549867205, 258830323, 2213823033, 772490370, 2760122372, 1774776394, 2652871518, 566650946, 4142492826, 1728879713, 2882767088, 1783734482, 3629395816, 2517608232, 2874225571, 1861159788, 326777828, 3124490320, 2130389656, 2716951837, 967770486, 1724537150, 2185432712, 2364442137, 1164943284, 2105845187, 998989502, 3765401048, 2244026483, 1075463327, 1455516326, 1322494562, 910128902, 469688178, 1117454909, 936433444, 3490320968, 3675253459, 1240580251, 122909385, 2157517691, 634681816, 4142456567, 3825094682, 3061402683, 2540495037, 79693498, 3249098678, 1084186820, 1583128258, 426386531, 1761308591, 1047286709, 322548459, 995290223, 1845252383, 2603652396, 3431023940, 2942221577, 3202600964, 3727903485, 1712269319, 422464435, 3234572375, 1170764815, 3523960633, 3117677531, 1434042557, 442511882, 3600875718, 1076654713, 1738483198, 4213154764, 2393238008, 3677496056, 1014306527, 4251020053, 793779912, 2902807211, 842905082, 4246964064, 1395751752, 1040244610, 2656851899, 3396308128, 445077038, 3742853595, 3577915638, 679411651, 2892444358, 2354009459, 1767581616, 3150600392, 3791627101, 3102740896, 284835224, 4246832056, 1258075500, 768725851, 2589189241, 3069724005, 3532540348, 1274779536, 3789419226, 2764799539, 1660621633, 3471099624, 4011903706, 913787905, 3497959166, 737222580, 2514213453, 2928710040, 3937242737, 1804850592, 3499020752, 2949064160, 2386320175, 2390070455, 2415321851, 4061277028, 2290661394, 2416832540, 1336762016, 1754252060, 3520065937, 3014181293, 791618072, 3188594551, 3933548030, 2332172193, 3852520463, 3043980520, 413987798, 3465142937, 3030929376, 4245938359, 2093235073, 3534596313, 375366246, 2157278981, 2479649556, 555357303, 3870105701, 2008414854, 3344188149, 4221384143, 3956125452, 2067696032, 3594591187, 2921233993, 2428461, 544322398, 577241275, 1471733935, 610547355, 4027169054, 1432588573, 1507829418, 2025931657, 3646575487, 545086370, 48609733, 2200306550, 1653985193, 298326376, 1316178497, 3007786442, 2064951626, 458293330, 2589141269, 3591329599, 3164325604, 727753846, 2179363840, 146436021, 1461446943, 4069977195, 705550613, 3059967265, 3887724982, 4281599278, 3313849956, 1404054877, 2845806497, 146425753, 1854211946], [1266315497, 3048417604, 3681880366, 3289982499, 290971e4, 1235738493, 2632868024, 2414719590, 3970600049, 1771706367, 1449415276, 3266420449, 422970021, 1963543593, 2690192192, 3826793022, 1062508698, 1531092325, 1804592342, 2583117782, 2714934279, 4024971509, 1294809318, 4028980673, 1289560198, 2221992742, 1669523910, 35572830, 157838143, 1052438473, 1016535060, 1802137761, 1753167236, 1386275462, 3080475397, 2857371447, 1040679964, 2145300060, 2390574316, 1461121720, 2956646967, 4031777805, 4028374788, 33600511, 2920084762, 1018524850, 629373528, 3691585981, 3515945977, 2091462646, 2486323059, 586499841, 988145025, 935516892, 3367335476, 2599673255, 2839830854, 265290510, 3972581182, 2759138881, 3795373465, 1005194799, 847297441, 406762289, 1314163512, 1332590856, 1866599683, 4127851711, 750260880, 613907577, 1450815602, 3165620655, 3734664991, 3650291728, 3012275730, 3704569646, 1427272223, 778793252, 1343938022, 2676280711, 2052605720, 1946737175, 3164576444, 3914038668, 3967478842, 3682934266, 1661551462, 3294938066, 4011595847, 840292616, 3712170807, 616741398, 312560963, 711312465, 1351876610, 322626781, 1910503582, 271666773, 2175563734, 1594956187, 70604529, 3617834859, 1007753275, 1495573769, 4069517037, 2549218298, 2663038764, 504708206, 2263041392, 3941167025, 2249088522, 1514023603, 1998579484, 1312622330, 694541497, 2582060303, 2151582166, 1382467621, 776784248, 2618340202, 3323268794, 2497899128, 2784771155, 503983604, 4076293799, 907881277, 423175695, 432175456, 1378068232, 4145222326, 3954048622, 3938656102, 3820766613, 2793130115, 2977904593, 26017576, 3274890735, 3194772133, 1700274565, 1756076034, 4006520079, 3677328699, 720338349, 1533947780, 354530856, 688349552, 3973924725, 1637815568, 332179504, 3949051286, 53804574, 2852348879, 3044236432, 1282449977, 3583942155, 3416972820, 4006381244, 1617046695, 2628476075, 3002303598, 1686838959, 431878346, 2686675385, 1700445008, 1080580658, 1009431731, 832498133, 3223435511, 2605976345, 2271191193, 2516031870, 1648197032, 4164389018, 2548247927, 300782431, 375919233, 238389289, 3353747414, 2531188641, 2019080857, 1475708069, 455242339, 2609103871, 448939670, 3451063019, 1395535956, 2413381860, 1841049896, 1491858159, 885456874, 4264095073, 4001119347, 1565136089, 3898914787, 1108368660, 540939232, 1173283510, 2745871338, 3681308437, 4207628240, 3343053890, 4016749493, 1699691293, 1103962373, 3625875870, 2256883143, 3830138730, 1031889488, 3479347698, 1535977030, 4236805024, 3251091107, 2132092099, 1774941330, 1199868427, 1452454533, 157007616, 2904115357, 342012276, 595725824, 1480756522, 206960106, 497939518, 591360097, 863170706, 2375253569, 3596610801, 1814182875, 2094937945, 3421402208, 1082520231, 3463918190, 2785509508, 435703966, 3908032597, 1641649973, 2842273706, 3305899714, 1510255612, 2148256476, 2655287854, 3276092548, 4258621189, 236887753, 3681803219, 274041037, 1734335097, 3815195456, 3317970021, 1899903192, 1026095262, 4050517792, 356393447, 2410691914, 3873677099, 3682840055], [3913112168, 2491498743, 4132185628, 2489919796, 1091903735, 1979897079, 3170134830, 3567386728, 3557303409, 857797738, 1136121015, 1342202287, 507115054, 2535736646, 337727348, 3213592640, 1301675037, 2528481711, 1895095763, 1721773893, 3216771564, 62756741, 2142006736, 835421444, 2531993523, 1442658625, 3659876326, 2882144922, 676362277, 1392781812, 170690266, 3921047035, 1759253602, 3611846912, 1745797284, 664899054, 1329594018, 3901205900, 3045908486, 2062866102, 2865634940, 3543621612, 3464012697, 1080764994, 553557557, 3656615353, 3996768171, 991055499, 499776247, 1265440854, 648242737, 3940784050, 980351604, 3713745714, 1749149687, 3396870395, 4211799374, 3640570775, 1161844396, 3125318951, 1431517754, 545492359, 4268468663, 3499529547, 1437099964, 2702547544, 3433638243, 2581715763, 2787789398, 1060185593, 1593081372, 2418618748, 4260947970, 69676912, 2159744348, 86519011, 2512459080, 3838209314, 1220612927, 3339683548, 133810670, 1090789135, 1078426020, 1569222167, 845107691, 3583754449, 4072456591, 1091646820, 628848692, 1613405280, 3757631651, 526609435, 236106946, 48312990, 2942717905, 3402727701, 1797494240, 859738849, 992217954, 4005476642, 2243076622, 3870952857, 3732016268, 765654824, 3490871365, 2511836413, 1685915746, 3888969200, 1414112111, 2273134842, 3281911079, 4080962846, 172450625, 2569994100, 980381355, 4109958455, 2819808352, 2716589560, 2568741196, 3681446669, 3329971472, 1835478071, 660984891, 3704678404, 4045999559, 3422617507, 3040415634, 1762651403, 1719377915, 3470491036, 2693910283, 3642056355, 3138596744, 1364962596, 2073328063, 1983633131, 926494387, 3423689081, 2150032023, 4096667949, 1749200295, 3328846651, 309677260, 2016342300, 1779581495, 3079819751, 111262694, 1274766160, 443224088, 298511866, 1025883608, 3806446537, 1145181785, 168956806, 3641502830, 3584813610, 1689216846, 3666258015, 3200248200, 1692713982, 2646376535, 4042768518, 1618508792, 1610833997, 3523052358, 4130873264, 2001055236, 3610705100, 2202168115, 4028541809, 2961195399, 1006657119, 2006996926, 3186142756, 1430667929, 3210227297, 1314452623, 4074634658, 4101304120, 2273951170, 1399257539, 3367210612, 3027628629, 1190975929, 2062231137, 2333990788, 2221543033, 2438960610, 1181637006, 548689776, 2362791313, 3372408396, 3104550113, 3145860560, 296247880, 1970579870, 3078560182, 3769228297, 1714227617, 3291629107, 3898220290, 166772364, 1251581989, 493813264, 448347421, 195405023, 2709975567, 677966185, 3703036547, 1463355134, 2715995803, 1338867538, 1343315457, 2802222074, 2684532164, 233230375, 2599980071, 2000651841, 3277868038, 1638401717, 4028070440, 3237316320, 6314154, 819756386, 300326615, 590932579, 1405279636, 3267499572, 3150704214, 2428286686, 3959192993, 3461946742, 1862657033, 1266418056, 963775037, 2089974820, 2263052895, 1917689273, 448879540, 3550394620, 3981727096, 150775221, 3627908307, 1303187396, 508620638, 2975983352, 2726630617, 1817252668, 1876281319, 1457606340, 908771278, 3720792119, 3617206836, 2455994898, 1729034894, 1080033504], [976866871, 3556439503, 2881648439, 1522871579, 1555064734, 1336096578, 3548522304, 2579274686, 3574697629, 3205460757, 3593280638, 3338716283, 3079412587, 564236357, 2993598910, 1781952180, 1464380207, 3163844217, 3332601554, 1699332808, 1393555694, 1183702653, 3581086237, 1288719814, 691649499, 2847557200, 2895455976, 3193889540, 2717570544, 1781354906, 1676643554, 2592534050, 3230253752, 1126444790, 2770207658, 2633158820, 2210423226, 2615765581, 2414155088, 3127139286, 673620729, 2805611233, 1269405062, 4015350505, 3341807571, 4149409754, 1057255273, 2012875353, 2162469141, 2276492801, 2601117357, 993977747, 3918593370, 2654263191, 753973209, 36408145, 2530585658, 25011837, 3520020182, 2088578344, 530523599, 2918365339, 1524020338, 1518925132, 3760827505, 3759777254, 1202760957, 3985898139, 3906192525, 674977740, 4174734889, 2031300136, 2019492241, 3983892565, 4153806404, 3822280332, 352677332, 2297720250, 60907813, 90501309, 3286998549, 1016092578, 2535922412, 2839152426, 457141659, 509813237, 4120667899, 652014361, 1966332200, 2975202805, 55981186, 2327461051, 676427537, 3255491064, 2882294119, 3433927263, 1307055953, 942726286, 933058658, 2468411793, 3933900994, 4215176142, 1361170020, 2001714738, 2830558078, 3274259782, 1222529897, 1679025792, 2729314320, 3714953764, 1770335741, 151462246, 3013232138, 1682292957, 1483529935, 471910574, 1539241949, 458788160, 3436315007, 1807016891, 3718408830, 978976581, 1043663428, 3165965781, 1927990952, 4200891579, 2372276910, 3208408903, 3533431907, 1412390302, 2931980059, 4132332400, 1947078029, 3881505623, 4168226417, 2941484381, 1077988104, 1320477388, 886195818, 18198404, 3786409e3, 2509781533, 112762804, 3463356488, 1866414978, 891333506, 18488651, 661792760, 1628790961, 3885187036, 3141171499, 876946877, 2693282273, 1372485963, 791857591, 2686433993, 3759982718, 3167212022, 3472953795, 2716379847, 445679433, 3561995674, 3504004811, 3574258232, 54117162, 3331405415, 2381918588, 3769707343, 4154350007, 1140177722, 4074052095, 668550556, 3214352940, 367459370, 261225585, 2610173221, 4209349473, 3468074219, 3265815641, 314222801, 3066103646, 3808782860, 282218597, 3406013506, 3773591054, 379116347, 1285071038, 846784868, 2669647154, 3771962079, 3550491691, 2305946142, 453669953, 1268987020, 3317592352, 3279303384, 3744833421, 2610507566, 3859509063, 266596637, 3847019092, 517658769, 3462560207, 3443424879, 370717030, 4247526661, 2224018117, 4143653529, 4112773975, 2788324899, 2477274417, 1456262402, 2901442914, 1517677493, 1846949527, 2295493580, 3734397586, 2176403920, 1280348187, 1908823572, 3871786941, 846861322, 1172426758, 3287448474, 3383383037, 1655181056, 3139813346, 901632758, 1897031941, 2986607138, 3066810236, 3447102507, 1393639104, 373351379, 950779232, 625454576, 3124240540, 4148612726, 2007998917, 544563296, 2244738638, 2330496472, 2058025392, 1291430526, 424198748, 50039436, 29584100, 3605783033, 2429876329, 2791104160, 1057563949, 3255363231, 3075367218, 3463963227, 1469046755, 985887462]], o = {
                        pbox: [],
                        sbox: []
                    };
                    function c(t, e) {
                        var i = e >> 24 & 255, n = e >> 16 & 255, a = e >> 8 & 255, r = 255 & e, o = t.sbox[0][i] + t.sbox[1][n];
                        return (o ^= t.sbox[2][a]) + t.sbox[3][r];
                    }
                    function l(t, e, i) {
                        for (var a, r = e, o = i, s = 0; s < n; ++s) {
                            a = r ^= t.pbox[s];
                            r = o = c(t, r) ^ o;
                            o = a;
                        }
                        a = r;
                        r = o;
                        o = a;
                        o ^= t.pbox[n];
                        return {
                            left: r ^= t.pbox[n + 1],
                            right: o
                        };
                    }
                    function h(t, e, i) {
                        for (var a, r = e, o = i, s = n + 1; s > 1; --s) {
                            a = r ^= t.pbox[s];
                            r = o = c(t, r) ^ o;
                            o = a;
                        }
                        a = r;
                        r = o;
                        o = a;
                        o ^= t.pbox[1];
                        return {
                            left: r ^= t.pbox[0],
                            right: o
                        };
                    }
                    function u(t, e, i) {
                        for (var o = 0; o < 4; o++) {
                            t.sbox[o] = [];
                            for (var s = 0; s < 256; s++) t.sbox[o][s] = r[o][s];
                        }
                        for (var c = 0, h = 0; h < n + 2; h++) {
                            t.pbox[h] = a[h] ^ e[c];
                            ++c >= i && (c = 0);
                        }
                        for (var u = 0, p = 0, d = 0, f = 0; f < n + 2; f += 2) {
                            u = (d = l(t, u, p)).left;
                            p = d.right;
                            t.pbox[f] = u;
                            t.pbox[f + 1] = p;
                        }
                        for (var m = 0; m < 4; m++) for (var g = 0; g < 256; g += 2) {
                            u = (d = l(t, u, p)).left;
                            p = d.right;
                            t.sbox[m][g] = u;
                            t.sbox[m][g + 1] = p;
                        }
                        return !0;
                    }
                    var p = i.Blowfish = e.extend({
                        _doReset: function () {
                            if (this._keyPriorReset !== this._key) {
                                var t = this._keyPriorReset = this._key, e = t.words, i = t.sigBytes / 4;
                                u(o, e, i);
                            }
                        },
                        encryptBlock: function (t, e) {
                            var i = l(o, t[e], t[e + 1]);
                            t[e] = i.left;
                            t[e + 1] = i.right;
                        },
                        decryptBlock: function (t, e) {
                            var i = h(o, t[e], t[e + 1]);
                            t[e] = i.left;
                            t[e + 1] = i.right;
                        },
                        blockSize: 2,
                        keySize: 4,
                        ivSize: 2
                    });
                    t.Blowfish = e._createHelper(p);
                })();
                return s;
            }, "object" == typeof i ? e.exports = i = a() : "function" == typeof define && define.amd ? define([], a) : (void 0).CryptoJS = a();
            var a;
            cc._RF.pop();
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
        crypto: 75
    }],
    "enc-base64": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "54df7r3pzNNlYIcr4s+PgAu", "enc-base64");
        n = function (t) {
            (function () {
                var e = t, i = e.lib.WordArray;
                e.enc.Base64 = {
                    stringify: function (t) {
                        var e = t.words, i = t.sigBytes, n = this._map;
                        t.clamp();
                        for (var a = [], r = 0; r < i; r += 3) for (var o = (e[r >>> 2] >>> 24 - r % 4 * 8 & 255) << 16 | (e[r + 1 >>> 2] >>> 24 - (r + 1) % 4 * 8 & 255) << 8 | e[r + 2 >>> 2] >>> 24 - (r + 2) % 4 * 8 & 255, s = 0; s < 4 && r + .75 * s < i; s++) a.push(n.charAt(o >>> 6 * (3 - s) & 63));
                        var c = n.charAt(64);
                        if (c) for (; a.length % 4;) a.push(c);
                        return a.join("");
                    },
                    parse: function (t) {
                        var e = t.length, i = this._map, a = this._reverseMap;
                        if (!a) {
                            a = this._reverseMap = [];
                            for (var r = 0; r < i.length; r++) a[i.charCodeAt(r)] = r;
                        }
                        var o = i.charAt(64);
                        if (o) {
                            var s = t.indexOf(o);
                            -1 !== s && (e = s);
                        }
                        return n(t, e, a);
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                };
                function n(t, e, n) {
                    for (var a = [], r = 0, o = 0; o < e; o++) if (o % 4) {
                        var s = n[t.charCodeAt(o - 1)] << o % 4 * 2 | n[t.charCodeAt(o)] >>> 6 - o % 4 * 2;
                        a[r >>> 2] |= s << 24 - r % 4 * 8;
                        r++;
                    }
                    return i.create(a, r);
                }
            })();
            return t.enc.Base64;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    "enc-base64url": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "ae234ChnZpF8LD2CO0J6JkU", "enc-base64url");
        n = function (t) {
            (function () {
                var e = t, i = e.lib.WordArray;
                e.enc.Base64url = {
                    stringify: function (t, e) {
                        void 0 === e && (e = !0);
                        var i = t.words, n = t.sigBytes, a = e ? this._safe_map : this._map;
                        t.clamp();
                        for (var r = [], o = 0; o < n; o += 3) for (var s = (i[o >>> 2] >>> 24 - o % 4 * 8 & 255) << 16 | (i[o + 1 >>> 2] >>> 24 - (o + 1) % 4 * 8 & 255) << 8 | i[o + 2 >>> 2] >>> 24 - (o + 2) % 4 * 8 & 255, c = 0; c < 4 && o + .75 * c < n; c++) r.push(a.charAt(s >>> 6 * (3 - c) & 63));
                        var l = a.charAt(64);
                        if (l) for (; r.length % 4;) r.push(l);
                        return r.join("");
                    },
                    parse: function (t, e) {
                        void 0 === e && (e = !0);
                        var i = t.length, a = e ? this._safe_map : this._map, r = this._reverseMap;
                        if (!r) {
                            r = this._reverseMap = [];
                            for (var o = 0; o < a.length; o++) r[a.charCodeAt(o)] = o;
                        }
                        var s = a.charAt(64);
                        if (s) {
                            var c = t.indexOf(s);
                            -1 !== c && (i = c);
                        }
                        return n(t, i, r);
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
                };
                function n(t, e, n) {
                    for (var a = [], r = 0, o = 0; o < e; o++) if (o % 4) {
                        var s = n[t.charCodeAt(o - 1)] << o % 4 * 2 | n[t.charCodeAt(o)] >>> 6 - o % 4 * 2;
                        a[r >>> 2] |= s << 24 - r % 4 * 8;
                        r++;
                    }
                    return i.create(a, r);
                }
            })();
            return t.enc.Base64url;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    "enc-hex": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2a872tGOGZNO75qAV+p4lEw", "enc-hex");
        n = function (t) {
            return t.enc.Hex;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    "enc-latin1": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "16f5dNIdvBHs4icRvcUh8mQ", "enc-latin1");
        n = function (t) {
            return t.enc.Latin1;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    "enc-utf16": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "77d62xGBmxBVZmFxBT6ft+X", "enc-utf16");
        n = function (t) {
            (function () {
                var e = t, i = e.lib.WordArray, n = e.enc;
                n.Utf16 = n.Utf16BE = {
                    stringify: function (t) {
                        for (var e = t.words, i = t.sigBytes, n = [], a = 0; a < i; a += 2) {
                            var r = e[a >>> 2] >>> 16 - a % 4 * 8 & 65535;
                            n.push(String.fromCharCode(r));
                        }
                        return n.join("");
                    },
                    parse: function (t) {
                        for (var e = t.length, n = [], a = 0; a < e; a++) n[a >>> 1] |= t.charCodeAt(a) << 16 - a % 2 * 16;
                        return i.create(n, 2 * e);
                    }
                };
                n.Utf16LE = {
                    stringify: function (t) {
                        for (var e = t.words, i = t.sigBytes, n = [], r = 0; r < i; r += 2) {
                            var o = a(e[r >>> 2] >>> 16 - r % 4 * 8 & 65535);
                            n.push(String.fromCharCode(o));
                        }
                        return n.join("");
                    },
                    parse: function (t) {
                        for (var e = t.length, n = [], r = 0; r < e; r++) n[r >>> 1] |= a(t.charCodeAt(r) << 16 - r % 2 * 16);
                        return i.create(n, 2 * e);
                    }
                };
                function a(t) {
                    return t << 8 & 4278255360 | t >>> 8 & 16711935;
                }
            })();
            return t.enc.Utf16;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    "enc-utf8": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "3d648XAHbhPr6TDm6mIJNcC", "enc-utf8");
        n = function (t) {
            return t.enc.Utf8;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    evpkdf: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "abba9oo87pBzYTWV+w+pQyr", "evpkdf");
        n = function (t) {
            n = (i = (e = t).lib).Base, a = i.WordArray, o = (r = e.algo).MD5, s = r.EvpKDF = n.extend({
                cfg: n.extend({
                    keySize: 4,
                    hasher: o,
                    iterations: 1
                }),
                init: function (t) {
                    this.cfg = this.cfg.extend(t);
                },
                compute: function (t, e) {
                    for (var i, n = this.cfg, r = n.hasher.create(), o = a.create(), s = o.words, c = n.keySize, l = n.iterations; s.length < c;) {
                        i && r.update(i);
                        i = r.update(t).finalize(e);
                        r.reset();
                        for (var h = 1; h < l; h++) {
                            i = r.finalize(i);
                            r.reset();
                        }
                        o.concat(i);
                    }
                    o.sigBytes = 4 * c;
                    return o;
                }
            }), e.EvpKDF = function (t, e, i) {
                return s.create(i).compute(t, e);
            };
            var e, i, n, a, r, o, s;
            return t.EvpKDF;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./sha1"), t("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./sha1", "./hmac"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./hmac": "hmac",
        "./sha1": "sha1"
    }],
    "format-hex": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "439a2wA8sZKlacJyuK/bcRR", "format-hex");
        n = function (t) {
            i = (e = t).lib.CipherParams, n = e.enc.Hex, e.format.Hex = {
                stringify: function (t) {
                    return t.ciphertext.toString(n);
                },
                parse: function (t) {
                    var e = n.parse(t);
                    return i.create({
                        ciphertext: e
                    });
                }
            };
            var e, i, n;
            return t.format.Hex;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "format-openssl": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "3c973zeZkxC6aW06WXDZ1pD", "format-openssl");
        n = function (t) {
            return t.format.OpenSSL;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "hmac-md5": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "8f0e4R9ly1As4CkG6cuTV+L", "hmac-md5");
        n = function (t) {
            return t.HmacMD5;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./md5"), t("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./md5", "./hmac"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./hmac": "hmac",
        "./md5": "md5"
    }],
    "hmac-ripemd160": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "57e6coBgy5E3Z1d0A2z/9Mu", "hmac-ripemd160");
        n = function (t) {
            return t.HmacRIPEMD160;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./ripemd160"), t("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./ripemd160", "./hmac"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./hmac": "hmac",
        "./ripemd160": "ripemd160"
    }],
    "hmac-sha1": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "07881MY+35LlrgJVBKKCuyk", "hmac-sha1");
        n = function (t) {
            return t.HmacSHA1;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./sha1"), t("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./sha1", "./hmac"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./hmac": "hmac",
        "./sha1": "sha1"
    }],
    "hmac-sha224": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "d0ba51iPKBL/4bE993BHsJ6", "hmac-sha224");
        n = function (t) {
            return t.HmacSHA224;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./sha256"), t("./sha224"), t("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./sha256", "./sha224", "./hmac"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./hmac": "hmac",
        "./sha224": "sha224",
        "./sha256": "sha256"
    }],
    "hmac-sha256": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b816eVwfi5O0pHHn6KemRNv", "hmac-sha256");
        n = function (t) {
            return t.HmacSHA256;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./sha256"), t("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./sha256", "./hmac"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./hmac": "hmac",
        "./sha256": "sha256"
    }],
    "hmac-sha384": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "4106c64gyFOq6GbkDQZ5o7I", "hmac-sha384");
        n = function (t) {
            return t.HmacSHA384;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./x64-core"), t("./sha512"), t("./sha384"), t("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core", "./sha512", "./sha384", "./hmac"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./hmac": "hmac",
        "./sha384": "sha384",
        "./sha512": "sha512",
        "./x64-core": "x64-core"
    }],
    "hmac-sha3": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1103bb0AzRNlajsuSlMOX4x", "hmac-sha3");
        n = function (t) {
            return t.HmacSHA3;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./x64-core"), t("./sha3"), t("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core", "./sha3", "./hmac"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./hmac": "hmac",
        "./sha3": "sha3",
        "./x64-core": "x64-core"
    }],
    "hmac-sha512": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "41d3aS82K5NoIVvW65ORMA8", "hmac-sha512");
        n = function (t) {
            return t.HmacSHA512;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./x64-core"), t("./sha512"), t("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core", "./sha512", "./hmac"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./hmac": "hmac",
        "./sha512": "sha512",
        "./x64-core": "x64-core"
    }],
    hmac: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "fd3e7h6plxLTrjB7oZT7X1G", "hmac");
        n = function (t) {
            i = (e = t).lib.Base, n = e.enc.Utf8, e.algo.HMAC = i.extend({
                init: function (t, e) {
                    t = this._hasher = new t.init();
                    "string" == typeof e && (e = n.parse(e));
                    var i = t.blockSize, a = 4 * i;
                    e.sigBytes > a && (e = t.finalize(e));
                    e.clamp();
                    for (var r = this._oKey = e.clone(), o = this._iKey = e.clone(), s = r.words, c = o.words, l = 0; l < i; l++) {
                        s[l] ^= 1549556828;
                        c[l] ^= 909522486;
                    }
                    r.sigBytes = o.sigBytes = a;
                    this.reset();
                },
                reset: function () {
                    var t = this._hasher;
                    t.reset();
                    t.update(this._iKey);
                },
                update: function (t) {
                    this._hasher.update(t);
                    return this;
                },
                finalize: function (t) {
                    var e = this._hasher, i = e.finalize(t);
                    e.reset();
                    return e.finalize(this._oKey.clone().concat(i));
                }
            });
            var e, i, n;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    index: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b1982+thq1D8q9+bMi/HYY9", "index");
        n = function (t) {
            return t;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./x64-core"), t("./lib-typedarrays"), t("./enc-utf16"), t("./enc-base64"), t("./enc-base64url"), t("./md5"), t("./sha1"), t("./sha256"), t("./sha224"), t("./sha512"), t("./sha384"), t("./sha3"), t("./ripemd160"), t("./hmac"), t("./pbkdf2"), t("./evpkdf"), t("./cipher-core"), t("./mode-cfb"), t("./mode-ctr"), t("./mode-ctr-gladman"), t("./mode-ofb"), t("./mode-ecb"), t("./pad-ansix923"), t("./pad-iso10126"), t("./pad-iso97971"), t("./pad-zeropaddinga"), t("./pad-nopadding"), t("./format-hex"), t("./aesa"), t("./tripledes"), t("./rc4"), t("./rabbit"), t("./rabbit-legacy"), t("./blowfish")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core", "./lib-typedarrays", "./enc-utf16", "./enc-base64", "./enc-base64url", "./md5", "./sha1", "./sha256", "./sha224", "./sha512", "./sha384", "./sha3", "./ripemd160", "./hmac", "./pbkdf2", "./evpkdf", "./cipher-core", "./mode-cfb", "./mode-ctr", "./mode-ctr-gladman", "./mode-ofb", "./mode-ecb", "./pad-ansix923", "./pad-iso10126", "./pad-iso97971", "./pad-zeropaddinga", "./pad-nopadding", "./format-hex", "./aesa", "./tripledes", "./rc4", "./rabbit", "./rabbit-legacy", "./blowfish"], n) : (void 0).CryptoJS = n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./aesa": "aesa",
        "./blowfish": "blowfish",
        "./cipher-core": "cipher-core",
        "./core": "core",
        "./enc-base64": "enc-base64",
        "./enc-base64url": "enc-base64url",
        "./enc-utf16": "enc-utf16",
        "./evpkdf": "evpkdf",
        "./format-hex": "format-hex",
        "./hmac": "hmac",
        "./lib-typedarrays": "lib-typedarrays",
        "./md5": "md5",
        "./mode-cfb": "mode-cfb",
        "./mode-ctr": "mode-ctr",
        "./mode-ctr-gladman": "mode-ctr-gladman",
        "./mode-ecb": "mode-ecb",
        "./mode-ofb": "mode-ofb",
        "./pad-ansix923": "pad-ansix923",
        "./pad-iso10126": "pad-iso10126",
        "./pad-iso97971": "pad-iso97971",
        "./pad-nopadding": "pad-nopadding",
        "./pad-zeropaddinga": "pad-zeropaddinga",
        "./pbkdf2": "pbkdf2",
        "./rabbit": "rabbit",
        "./rabbit-legacy": "rabbit-legacy",
        "./rc4": "rc4",
        "./ripemd160": "ripemd160",
        "./sha1": "sha1",
        "./sha224": "sha224",
        "./sha256": "sha256",
        "./sha3": "sha3",
        "./sha384": "sha384",
        "./sha512": "sha512",
        "./tripledes": "tripledes",
        "./x64-core": "x64-core"
    }],
    "lib-typedarrays": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "4f1dbVuT11LUaRUd19Frmdb", "lib-typedarrays");
        n = function (t) {
            (function () {
                if ("function" == typeof ArrayBuffer) {
                    var e = t.lib.WordArray, i = e.init;
                    (e.init = function (t) {
                        t instanceof ArrayBuffer && (t = new Uint8Array(t));
                        (t instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && t instanceof Uint8ClampedArray || t instanceof Int16Array || t instanceof Uint16Array || t instanceof Int32Array || t instanceof Uint32Array || t instanceof Float32Array || t instanceof Float64Array) && (t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength));
                        if (t instanceof Uint8Array) {
                            for (var e = t.byteLength, n = [], a = 0; a < e; a++) n[a >>> 2] |= t[a] << 24 - a % 4 * 8;
                            i.call(this, n, e);
                        } else i.apply(this, arguments);
                    }).prototype = e;
                }
            })();
            return t.lib.WordArray;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    md5: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "80a320ombJKhLUUW14iwslH", "md5");
        n = function (t) {
            (function (e) {
                var i = t, n = i.lib, a = n.WordArray, r = n.Hasher, o = i.algo, s = [];
                (function () {
                    for (var t = 0; t < 64; t++) s[t] = 4294967296 * e.abs(e.sin(t + 1)) | 0;
                })();
                var c = o.MD5 = r.extend({
                    _doReset: function () {
                        this._hash = new a.init([1732584193, 4023233417, 2562383102, 271733878]);
                    },
                    _doProcessBlock: function (t, e) {
                        for (var i = 0; i < 16; i++) {
                            var n = e + i, a = t[n];
                            t[n] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8);
                        }
                        var r = this._hash.words, o = t[e + 0], c = t[e + 1], d = t[e + 2], f = t[e + 3], m = t[e + 4], g = t[e + 5], _ = t[e + 6], y = t[e + 7], v = t[e + 8], b = t[e + 9], M = t[e + 10], S = t[e + 11], k = t[e + 12], C = t[e + 13], w = t[e + 14], A = t[e + 15], T = r[0], D = r[1], P = r[2], E = r[3];
                        T = l(T, D, P, E, o, 7, s[0]);
                        E = l(E, T, D, P, c, 12, s[1]);
                        P = l(P, E, T, D, d, 17, s[2]);
                        D = l(D, P, E, T, f, 22, s[3]);
                        T = l(T, D, P, E, m, 7, s[4]);
                        E = l(E, T, D, P, g, 12, s[5]);
                        P = l(P, E, T, D, _, 17, s[6]);
                        D = l(D, P, E, T, y, 22, s[7]);
                        T = l(T, D, P, E, v, 7, s[8]);
                        E = l(E, T, D, P, b, 12, s[9]);
                        P = l(P, E, T, D, M, 17, s[10]);
                        D = l(D, P, E, T, S, 22, s[11]);
                        T = l(T, D, P, E, k, 7, s[12]);
                        E = l(E, T, D, P, C, 12, s[13]);
                        P = l(P, E, T, D, w, 17, s[14]);
                        T = h(T, D = l(D, P, E, T, A, 22, s[15]), P, E, c, 5, s[16]);
                        E = h(E, T, D, P, _, 9, s[17]);
                        P = h(P, E, T, D, S, 14, s[18]);
                        D = h(D, P, E, T, o, 20, s[19]);
                        T = h(T, D, P, E, g, 5, s[20]);
                        E = h(E, T, D, P, M, 9, s[21]);
                        P = h(P, E, T, D, A, 14, s[22]);
                        D = h(D, P, E, T, m, 20, s[23]);
                        T = h(T, D, P, E, b, 5, s[24]);
                        E = h(E, T, D, P, w, 9, s[25]);
                        P = h(P, E, T, D, f, 14, s[26]);
                        D = h(D, P, E, T, v, 20, s[27]);
                        T = h(T, D, P, E, C, 5, s[28]);
                        E = h(E, T, D, P, d, 9, s[29]);
                        P = h(P, E, T, D, y, 14, s[30]);
                        T = u(T, D = h(D, P, E, T, k, 20, s[31]), P, E, g, 4, s[32]);
                        E = u(E, T, D, P, v, 11, s[33]);
                        P = u(P, E, T, D, S, 16, s[34]);
                        D = u(D, P, E, T, w, 23, s[35]);
                        T = u(T, D, P, E, c, 4, s[36]);
                        E = u(E, T, D, P, m, 11, s[37]);
                        P = u(P, E, T, D, y, 16, s[38]);
                        D = u(D, P, E, T, M, 23, s[39]);
                        T = u(T, D, P, E, C, 4, s[40]);
                        E = u(E, T, D, P, o, 11, s[41]);
                        P = u(P, E, T, D, f, 16, s[42]);
                        D = u(D, P, E, T, _, 23, s[43]);
                        T = u(T, D, P, E, b, 4, s[44]);
                        E = u(E, T, D, P, k, 11, s[45]);
                        P = u(P, E, T, D, A, 16, s[46]);
                        T = p(T, D = u(D, P, E, T, d, 23, s[47]), P, E, o, 6, s[48]);
                        E = p(E, T, D, P, y, 10, s[49]);
                        P = p(P, E, T, D, w, 15, s[50]);
                        D = p(D, P, E, T, g, 21, s[51]);
                        T = p(T, D, P, E, k, 6, s[52]);
                        E = p(E, T, D, P, f, 10, s[53]);
                        P = p(P, E, T, D, M, 15, s[54]);
                        D = p(D, P, E, T, c, 21, s[55]);
                        T = p(T, D, P, E, v, 6, s[56]);
                        E = p(E, T, D, P, A, 10, s[57]);
                        P = p(P, E, T, D, _, 15, s[58]);
                        D = p(D, P, E, T, C, 21, s[59]);
                        T = p(T, D, P, E, m, 6, s[60]);
                        E = p(E, T, D, P, S, 10, s[61]);
                        P = p(P, E, T, D, d, 15, s[62]);
                        D = p(D, P, E, T, b, 21, s[63]);
                        r[0] = r[0] + T | 0;
                        r[1] = r[1] + D | 0;
                        r[2] = r[2] + P | 0;
                        r[3] = r[3] + E | 0;
                    },
                    _doFinalize: function () {
                        var t = this._data, i = t.words, n = 8 * this._nDataBytes, a = 8 * t.sigBytes;
                        i[a >>> 5] |= 128 << 24 - a % 32;
                        var r = e.floor(n / 4294967296), o = n;
                        i[15 + (a + 64 >>> 9 << 4)] = 16711935 & (r << 8 | r >>> 24) | 4278255360 & (r << 24 | r >>> 8);
                        i[14 + (a + 64 >>> 9 << 4)] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8);
                        t.sigBytes = 4 * (i.length + 1);
                        this._process();
                        for (var s = this._hash, c = s.words, l = 0; l < 4; l++) {
                            var h = c[l];
                            c[l] = 16711935 & (h << 8 | h >>> 24) | 4278255360 & (h << 24 | h >>> 8);
                        }
                        return s;
                    },
                    clone: function () {
                        var t = r.clone.call(this);
                        t._hash = this._hash.clone();
                        return t;
                    }
                });
                function l(t, e, i, n, a, r, o) {
                    var s = t + (e & i | ~e & n) + a + o;
                    return (s << r | s >>> 32 - r) + e;
                }
                function h(t, e, i, n, a, r, o) {
                    var s = t + (e & n | i & ~n) + a + o;
                    return (s << r | s >>> 32 - r) + e;
                }
                function u(t, e, i, n, a, r, o) {
                    var s = t + (e ^ i ^ n) + a + o;
                    return (s << r | s >>> 32 - r) + e;
                }
                function p(t, e, i, n, a, r, o) {
                    var s = t + (i ^ (e | ~n)) + a + o;
                    return (s << r | s >>> 32 - r) + e;
                }
                i.MD5 = r._createHelper(c);
                i.HmacMD5 = r._createHmacHelper(c);
            })(Math);
            return t.MD5;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    "mode-cfb": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "ea7c4+oS2lJZr59nkKU2LeK", "mode-cfb");
        n = function (t) {
            t.mode.CFB = function () {
                var e = t.lib.BlockCipherMode.extend();
                e.Encryptor = e.extend({
                    processBlock: function (t, e) {
                        var n = this._cipher, a = n.blockSize;
                        i.call(this, t, e, a, n);
                        this._prevBlock = t.slice(e, e + a);
                    }
                });
                e.Decryptor = e.extend({
                    processBlock: function (t, e) {
                        var n = this._cipher, a = n.blockSize, r = t.slice(e, e + a);
                        i.call(this, t, e, a, n);
                        this._prevBlock = r;
                    }
                });
                function i(t, e, i, n) {
                    var a, r = this._iv;
                    if (r) {
                        a = r.slice(0);
                        this._iv = void 0;
                    } else a = this._prevBlock;
                    n.encryptBlock(a, 0);
                    for (var o = 0; o < i; o++) t[e + o] ^= a[o];
                }
                return e;
            }();
            return t.mode.CFB;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "mode-ctr-gladman": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "13c5f8X3f1FQ4k6NkhQh8pA", "mode-ctr-gladman");
        n = function (t) {
            t.mode.CTRGladman = function () {
                var e = t.lib.BlockCipherMode.extend();
                function i(t) {
                    if (255 == (t >> 24 & 255)) {
                        var e = t >> 16 & 255, i = t >> 8 & 255, n = 255 & t;
                        if (255 === e) {
                            e = 0;
                            if (255 === i) {
                                i = 0;
                                255 === n ? n = 0 : ++n;
                            } else ++i;
                        } else ++e;
                        t = 0;
                        t += e << 16;
                        t += i << 8;
                        t += n;
                    } else t += 1 << 24;
                    return t;
                }
                function n(t) {
                    0 === (t[0] = i(t[0])) && (t[1] = i(t[1]));
                    return t;
                }
                var a = e.Encryptor = e.extend({
                    processBlock: function (t, e) {
                        var i = this._cipher, a = i.blockSize, r = this._iv, o = this._counter;
                        if (r) {
                            o = this._counter = r.slice(0);
                            this._iv = void 0;
                        }
                        n(o);
                        var s = o.slice(0);
                        i.encryptBlock(s, 0);
                        for (var c = 0; c < a; c++) t[e + c] ^= s[c];
                    }
                });
                e.Decryptor = a;
                return e;
            }();
            return t.mode.CTRGladman;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "mode-ctr": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "5cf40GalmxHf7LRV9cG25L4", "mode-ctr");
        n = function (t) {
            t.mode.CTR = function () {
                var e = t.lib.BlockCipherMode.extend(), i = e.Encryptor = e.extend({
                    processBlock: function (t, e) {
                        var i = this._cipher, n = i.blockSize, a = this._iv, r = this._counter;
                        if (a) {
                            r = this._counter = a.slice(0);
                            this._iv = void 0;
                        }
                        var o = r.slice(0);
                        i.encryptBlock(o, 0);
                        r[n - 1] = r[n - 1] + 1 | 0;
                        for (var s = 0; s < n; s++) t[e + s] ^= o[s];
                    }
                });
                e.Decryptor = i;
                return e;
            }();
            return t.mode.CTR;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "mode-ecb": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "9b554eIY59IwrpM0In5v8un", "mode-ecb");
        n = function (t) {
            t.mode.ECB = function () {
                var e = t.lib.BlockCipherMode.extend();
                e.Encryptor = e.extend({
                    processBlock: function (t, e) {
                        this._cipher.encryptBlock(t, e);
                    }
                });
                e.Decryptor = e.extend({
                    processBlock: function (t, e) {
                        this._cipher.decryptBlock(t, e);
                    }
                });
                return e;
            }();
            return t.mode.ECB;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "mode-ofb": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "c357cfkgLxLl56WiMKgKah1", "mode-ofb");
        n = function (t) {
            t.mode.OFB = function () {
                var e = t.lib.BlockCipherMode.extend(), i = e.Encryptor = e.extend({
                    processBlock: function (t, e) {
                        var i = this._cipher, n = i.blockSize, a = this._iv, r = this._keystream;
                        if (a) {
                            r = this._keystream = a.slice(0);
                            this._iv = void 0;
                        }
                        i.encryptBlock(r, 0);
                        for (var o = 0; o < n; o++) t[e + o] ^= r[o];
                    }
                });
                e.Decryptor = i;
                return e;
            }();
            return t.mode.OFB;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "pad-ansix923": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "36537OPQy1JYbTl4Mb0G9ei", "pad-ansix923");
        n = function (t) {
            t.pad.AnsiX923 = {
                pad: function (t, e) {
                    var i = t.sigBytes, n = 4 * e, a = n - i % n, r = i + a - 1;
                    t.clamp();
                    t.words[r >>> 2] |= a << 24 - r % 4 * 8;
                    t.sigBytes += a;
                },
                unpad: function (t) {
                    var e = 255 & t.words[t.sigBytes - 1 >>> 2];
                    t.sigBytes -= e;
                }
            };
            return t.pad.Ansix923;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "pad-iso10126": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "38c9c+qCpREQrKxk27HVEwn", "pad-iso10126");
        n = function (t) {
            t.pad.Iso10126 = {
                pad: function (e, i) {
                    var n = 4 * i, a = n - e.sigBytes % n;
                    e.concat(t.lib.WordArray.random(a - 1)).concat(t.lib.WordArray.create([a << 24], 1));
                },
                unpad: function (t) {
                    var e = 255 & t.words[t.sigBytes - 1 >>> 2];
                    t.sigBytes -= e;
                }
            };
            return t.pad.Iso10126;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "pad-iso97971": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "a622aOcJTZAt4X4cHaxeHFY", "pad-iso97971");
        n = function (t) {
            t.pad.Iso97971 = {
                pad: function (e, i) {
                    e.concat(t.lib.WordArray.create([2147483648], 1));
                    t.pad.ZeroPadding.pad(e, i);
                },
                unpad: function (e) {
                    t.pad.ZeroPadding.unpad(e);
                    e.sigBytes--;
                }
            };
            return t.pad.Iso97971;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "pad-nopadding": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b850cqAoDhH8Lqnp33eBc3X", "pad-nopadding");
        n = function (t) {
            t.pad.NoPadding = {
                pad: function () { },
                unpad: function () { }
            };
            return t.pad.NoPadding;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "pad-pkcs7": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "fc406GM36FOpYjdCL1apyBi", "pad-pkcs7");
        n = function (t) {
            return t.pad.Pkcs7;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "pad-zeropaddinga": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "6b46b4RZxlBrphHKlQkgfi6", "pad-zeropaddinga");
        n = function (t) {
            t.pad.ZeroPadding = {
                pad: function (t, e) {
                    var i = 4 * e;
                    t.clamp();
                    t.sigBytes += i - (t.sigBytes % i || i);
                },
                unpad: function (t) {
                    var e = t.words, i = t.sigBytes - 1;
                    for (i = t.sigBytes - 1; i >= 0; i--) if (e[i >>> 2] >>> 24 - i % 4 * 8 & 255) {
                        t.sigBytes = i + 1;
                        break;
                    }
                }
            };
            return t.pad.ZeroPadding;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core"
    }],
    "pad-zeropadding": [function (t, e) {
        "use strict";
        cc._RF.push(e, "b1e72PxpINPPosJLLaOdeud", "pad-zeropadding");
        t("./aes").CryptoJS.pad.ZeroPadding = {
            pad: function (t, e) {
                var i = 4 * e;
                t.clamp();
                t.sigBytes += i - (t.sigBytes % i || i);
            },
            unpad: function (t) {
                for (var e = t.words, i = t.sigBytes - 1; !(e[i >>> 2] >>> 24 - i % 4 * 8 & 255);) i--;
                t.sigBytes = i + 1;
            }
        };
        cc._RF.pop();
    }, {
        "./aes": "aes"
    }],
    pbkdf2: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "608daFrWi1EXYgBHiXAEyiW", "pbkdf2");
        n = function (t) {
            n = (i = (e = t).lib).Base, a = i.WordArray, o = (r = e.algo).SHA1, s = r.HMAC,
                c = r.PBKDF2 = n.extend({
                    cfg: n.extend({
                        keySize: 4,
                        hasher: o,
                        iterations: 1
                    }),
                    init: function (t) {
                        this.cfg = this.cfg.extend(t);
                    },
                    compute: function (t, e) {
                        for (var i = this.cfg, n = s.create(i.hasher, t), r = a.create(), o = a.create([1]), c = r.words, l = o.words, h = i.keySize, u = i.iterations; c.length < h;) {
                            var p = n.update(e).finalize(o);
                            n.reset();
                            for (var d = p.words, f = d.length, m = p, g = 1; g < u; g++) {
                                m = n.finalize(m);
                                n.reset();
                                for (var _ = m.words, y = 0; y < f; y++) d[y] ^= _[y];
                            }
                            r.concat(p);
                            l[0]++;
                        }
                        r.sigBytes = 4 * h;
                        return r;
                    }
                }), e.PBKDF2 = function (t, e, i) {
                    return c.create(i).compute(t, e);
                };
            var e, i, n, a, r, o, s, c;
            return t.PBKDF2;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./sha1"), t("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./sha1", "./hmac"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./hmac": "hmac",
        "./sha1": "sha1"
    }],
    "rabbit-legacy": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "73184WrFZxCI46PcPPHpEqi", "rabbit-legacy");
        n = function (t) {
            (function () {
                var e = t, i = e.lib.StreamCipher, n = e.algo, a = [], r = [], o = [], s = n.RabbitLegacy = i.extend({
                    _doReset: function () {
                        var t = this._key.words, e = this.cfg.iv, i = this._X = [t[0], t[3] << 16 | t[2] >>> 16, t[1], t[0] << 16 | t[3] >>> 16, t[2], t[1] << 16 | t[0] >>> 16, t[3], t[2] << 16 | t[1] >>> 16], n = this._C = [t[2] << 16 | t[2] >>> 16, 4294901760 & t[0] | 65535 & t[1], t[3] << 16 | t[3] >>> 16, 4294901760 & t[1] | 65535 & t[2], t[0] << 16 | t[0] >>> 16, 4294901760 & t[2] | 65535 & t[3], t[1] << 16 | t[1] >>> 16, 4294901760 & t[3] | 65535 & t[0]];
                        this._b = 0;
                        for (var a = 0; a < 4; a++) c.call(this);
                        for (a = 0; a < 8; a++) n[a] ^= i[a + 4 & 7];
                        if (e) {
                            var r = e.words, o = r[0], s = r[1], l = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), h = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), u = l >>> 16 | 4294901760 & h, p = h << 16 | 65535 & l;
                            n[0] ^= l;
                            n[1] ^= u;
                            n[2] ^= h;
                            n[3] ^= p;
                            n[4] ^= l;
                            n[5] ^= u;
                            n[6] ^= h;
                            n[7] ^= p;
                            for (a = 0; a < 4; a++) c.call(this);
                        }
                    },
                    _doProcessBlock: function (t, e) {
                        var i = this._X;
                        c.call(this);
                        a[0] = i[0] ^ i[5] >>> 16 ^ i[3] << 16;
                        a[1] = i[2] ^ i[7] >>> 16 ^ i[5] << 16;
                        a[2] = i[4] ^ i[1] >>> 16 ^ i[7] << 16;
                        a[3] = i[6] ^ i[3] >>> 16 ^ i[1] << 16;
                        for (var n = 0; n < 4; n++) {
                            a[n] = 16711935 & (a[n] << 8 | a[n] >>> 24) | 4278255360 & (a[n] << 24 | a[n] >>> 8);
                            t[e + n] ^= a[n];
                        }
                    },
                    blockSize: 4,
                    ivSize: 2
                });
                function c() {
                    for (var t = this._X, e = this._C, i = 0; i < 8; i++) r[i] = e[i];
                    e[0] = e[0] + 1295307597 + this._b | 0;
                    e[1] = e[1] + 3545052371 + (e[0] >>> 0 < r[0] >>> 0 ? 1 : 0) | 0;
                    e[2] = e[2] + 886263092 + (e[1] >>> 0 < r[1] >>> 0 ? 1 : 0) | 0;
                    e[3] = e[3] + 1295307597 + (e[2] >>> 0 < r[2] >>> 0 ? 1 : 0) | 0;
                    e[4] = e[4] + 3545052371 + (e[3] >>> 0 < r[3] >>> 0 ? 1 : 0) | 0;
                    e[5] = e[5] + 886263092 + (e[4] >>> 0 < r[4] >>> 0 ? 1 : 0) | 0;
                    e[6] = e[6] + 1295307597 + (e[5] >>> 0 < r[5] >>> 0 ? 1 : 0) | 0;
                    e[7] = e[7] + 3545052371 + (e[6] >>> 0 < r[6] >>> 0 ? 1 : 0) | 0;
                    this._b = e[7] >>> 0 < r[7] >>> 0 ? 1 : 0;
                    for (i = 0; i < 8; i++) {
                        var n = t[i] + e[i], a = 65535 & n, s = n >>> 16, c = ((a * a >>> 17) + a * s >>> 15) + s * s, l = ((4294901760 & n) * n | 0) + ((65535 & n) * n | 0);
                        o[i] = c ^ l;
                    }
                    t[0] = o[0] + (o[7] << 16 | o[7] >>> 16) + (o[6] << 16 | o[6] >>> 16) | 0;
                    t[1] = o[1] + (o[0] << 8 | o[0] >>> 24) + o[7] | 0;
                    t[2] = o[2] + (o[1] << 16 | o[1] >>> 16) + (o[0] << 16 | o[0] >>> 16) | 0;
                    t[3] = o[3] + (o[2] << 8 | o[2] >>> 24) + o[1] | 0;
                    t[4] = o[4] + (o[3] << 16 | o[3] >>> 16) + (o[2] << 16 | o[2] >>> 16) | 0;
                    t[5] = o[5] + (o[4] << 8 | o[4] >>> 24) + o[3] | 0;
                    t[6] = o[6] + (o[5] << 16 | o[5] >>> 16) + (o[4] << 16 | o[4] >>> 16) | 0;
                    t[7] = o[7] + (o[6] << 8 | o[6] >>> 24) + o[5] | 0;
                }
                e.RabbitLegacy = i._createHelper(s);
            })();
            return t.RabbitLegacy;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./enc-base64"), t("./md5"), t("./evpkdf"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core",
        "./enc-base64": "enc-base64",
        "./evpkdf": "evpkdf",
        "./md5": "md5"
    }],
    rabbit: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "1fe89vfAaJKI4UCuRpO8YQy", "rabbit");
        n = function (t) {
            (function () {
                var e = t, i = e.lib.StreamCipher, n = e.algo, a = [], r = [], o = [], s = n.Rabbit = i.extend({
                    _doReset: function () {
                        for (var t = this._key.words, e = this.cfg.iv, i = 0; i < 4; i++) t[i] = 16711935 & (t[i] << 8 | t[i] >>> 24) | 4278255360 & (t[i] << 24 | t[i] >>> 8);
                        var n = this._X = [t[0], t[3] << 16 | t[2] >>> 16, t[1], t[0] << 16 | t[3] >>> 16, t[2], t[1] << 16 | t[0] >>> 16, t[3], t[2] << 16 | t[1] >>> 16], a = this._C = [t[2] << 16 | t[2] >>> 16, 4294901760 & t[0] | 65535 & t[1], t[3] << 16 | t[3] >>> 16, 4294901760 & t[1] | 65535 & t[2], t[0] << 16 | t[0] >>> 16, 4294901760 & t[2] | 65535 & t[3], t[1] << 16 | t[1] >>> 16, 4294901760 & t[3] | 65535 & t[0]];
                        this._b = 0;
                        for (i = 0; i < 4; i++) c.call(this);
                        for (i = 0; i < 8; i++) a[i] ^= n[i + 4 & 7];
                        if (e) {
                            var r = e.words, o = r[0], s = r[1], l = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), h = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8), u = l >>> 16 | 4294901760 & h, p = h << 16 | 65535 & l;
                            a[0] ^= l;
                            a[1] ^= u;
                            a[2] ^= h;
                            a[3] ^= p;
                            a[4] ^= l;
                            a[5] ^= u;
                            a[6] ^= h;
                            a[7] ^= p;
                            for (i = 0; i < 4; i++) c.call(this);
                        }
                    },
                    _doProcessBlock: function (t, e) {
                        var i = this._X;
                        c.call(this);
                        a[0] = i[0] ^ i[5] >>> 16 ^ i[3] << 16;
                        a[1] = i[2] ^ i[7] >>> 16 ^ i[5] << 16;
                        a[2] = i[4] ^ i[1] >>> 16 ^ i[7] << 16;
                        a[3] = i[6] ^ i[3] >>> 16 ^ i[1] << 16;
                        for (var n = 0; n < 4; n++) {
                            a[n] = 16711935 & (a[n] << 8 | a[n] >>> 24) | 4278255360 & (a[n] << 24 | a[n] >>> 8);
                            t[e + n] ^= a[n];
                        }
                    },
                    blockSize: 4,
                    ivSize: 2
                });
                function c() {
                    for (var t = this._X, e = this._C, i = 0; i < 8; i++) r[i] = e[i];
                    e[0] = e[0] + 1295307597 + this._b | 0;
                    e[1] = e[1] + 3545052371 + (e[0] >>> 0 < r[0] >>> 0 ? 1 : 0) | 0;
                    e[2] = e[2] + 886263092 + (e[1] >>> 0 < r[1] >>> 0 ? 1 : 0) | 0;
                    e[3] = e[3] + 1295307597 + (e[2] >>> 0 < r[2] >>> 0 ? 1 : 0) | 0;
                    e[4] = e[4] + 3545052371 + (e[3] >>> 0 < r[3] >>> 0 ? 1 : 0) | 0;
                    e[5] = e[5] + 886263092 + (e[4] >>> 0 < r[4] >>> 0 ? 1 : 0) | 0;
                    e[6] = e[6] + 1295307597 + (e[5] >>> 0 < r[5] >>> 0 ? 1 : 0) | 0;
                    e[7] = e[7] + 3545052371 + (e[6] >>> 0 < r[6] >>> 0 ? 1 : 0) | 0;
                    this._b = e[7] >>> 0 < r[7] >>> 0 ? 1 : 0;
                    for (i = 0; i < 8; i++) {
                        var n = t[i] + e[i], a = 65535 & n, s = n >>> 16, c = ((a * a >>> 17) + a * s >>> 15) + s * s, l = ((4294901760 & n) * n | 0) + ((65535 & n) * n | 0);
                        o[i] = c ^ l;
                    }
                    t[0] = o[0] + (o[7] << 16 | o[7] >>> 16) + (o[6] << 16 | o[6] >>> 16) | 0;
                    t[1] = o[1] + (o[0] << 8 | o[0] >>> 24) + o[7] | 0;
                    t[2] = o[2] + (o[1] << 16 | o[1] >>> 16) + (o[0] << 16 | o[0] >>> 16) | 0;
                    t[3] = o[3] + (o[2] << 8 | o[2] >>> 24) + o[1] | 0;
                    t[4] = o[4] + (o[3] << 16 | o[3] >>> 16) + (o[2] << 16 | o[2] >>> 16) | 0;
                    t[5] = o[5] + (o[4] << 8 | o[4] >>> 24) + o[3] | 0;
                    t[6] = o[6] + (o[5] << 16 | o[5] >>> 16) + (o[4] << 16 | o[4] >>> 16) | 0;
                    t[7] = o[7] + (o[6] << 8 | o[6] >>> 24) + o[5] | 0;
                }
                e.Rabbit = i._createHelper(s);
            })();
            return t.Rabbit;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./enc-base64"), t("./md5"), t("./evpkdf"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core",
        "./enc-base64": "enc-base64",
        "./evpkdf": "evpkdf",
        "./md5": "md5"
    }],
    rc4: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "00d5fPLQVxCI6NTOhfh/YdA", "rc4");
        n = function (t) {
            (function () {
                var e = t, i = e.lib.StreamCipher, n = e.algo, a = n.RC4 = i.extend({
                    _doReset: function () {
                        for (var t = this._key, e = t.words, i = t.sigBytes, n = this._S = [], a = 0; a < 256; a++) n[a] = a;
                        a = 0;
                        for (var r = 0; a < 256; a++) {
                            var o = a % i, s = e[o >>> 2] >>> 24 - o % 4 * 8 & 255;
                            r = (r + n[a] + s) % 256;
                            var c = n[a];
                            n[a] = n[r];
                            n[r] = c;
                        }
                        this._i = this._j = 0;
                    },
                    _doProcessBlock: function (t, e) {
                        t[e] ^= r.call(this);
                    },
                    keySize: 8,
                    ivSize: 0
                });
                function r() {
                    for (var t = this._S, e = this._i, i = this._j, n = 0, a = 0; a < 4; a++) {
                        i = (i + t[e = (e + 1) % 256]) % 256;
                        var r = t[e];
                        t[e] = t[i];
                        t[i] = r;
                        n |= t[(t[e] + t[i]) % 256] << 24 - 8 * a;
                    }
                    this._i = e;
                    this._j = i;
                    return n;
                }
                e.RC4 = i._createHelper(a);
                var o = n.RC4Drop = a.extend({
                    cfg: a.cfg.extend({
                        drop: 192
                    }),
                    _doReset: function () {
                        a._doReset.call(this);
                        for (var t = this.cfg.drop; t > 0; t--) r.call(this);
                    }
                });
                e.RC4Drop = i._createHelper(o);
            })();
            return t.RC4;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./enc-base64"), t("./md5"), t("./evpkdf"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core",
        "./enc-base64": "enc-base64",
        "./evpkdf": "evpkdf",
        "./md5": "md5"
    }],
    ripemd160: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "bffd6HXXTpCzZYpGn9UJfQK", "ripemd160");
        n = function (t) {
            (function () {
                var e = t, i = e.lib, n = i.WordArray, a = i.Hasher, r = e.algo, o = n.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), s = n.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), c = n.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), l = n.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), h = n.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), u = n.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), p = r.RIPEMD160 = a.extend({
                    _doReset: function () {
                        this._hash = n.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                    },
                    _doProcessBlock: function (t, e) {
                        for (var i = 0; i < 16; i++) {
                            var n = e + i, a = t[n];
                            t[n] = 16711935 & (a << 8 | a >>> 24) | 4278255360 & (a << 24 | a >>> 8);
                        }
                        var r, p, v, b, M, S, k, C, w, A, T, D = this._hash.words, P = h.words, E = u.words, B = o.words, F = s.words, N = c.words, x = l.words;
                        S = r = D[0];
                        k = p = D[1];
                        C = v = D[2];
                        w = b = D[3];
                        A = M = D[4];
                        for (i = 0; i < 80; i += 1) {
                            T = r + t[e + B[i]] | 0;
                            T += i < 16 ? d(p, v, b) + P[0] : i < 32 ? f(p, v, b) + P[1] : i < 48 ? m(p, v, b) + P[2] : i < 64 ? g(p, v, b) + P[3] : _(p, v, b) + P[4];
                            T = (T = y(T |= 0, N[i])) + M | 0;
                            r = M;
                            M = b;
                            b = y(v, 10);
                            v = p;
                            p = T;
                            T = S + t[e + F[i]] | 0;
                            T += i < 16 ? _(k, C, w) + E[0] : i < 32 ? g(k, C, w) + E[1] : i < 48 ? m(k, C, w) + E[2] : i < 64 ? f(k, C, w) + E[3] : d(k, C, w) + E[4];
                            T = (T = y(T |= 0, x[i])) + A | 0;
                            S = A;
                            A = w;
                            w = y(C, 10);
                            C = k;
                            k = T;
                        }
                        T = D[1] + v + w | 0;
                        D[1] = D[2] + b + A | 0;
                        D[2] = D[3] + M + S | 0;
                        D[3] = D[4] + r + k | 0;
                        D[4] = D[0] + p + C | 0;
                        D[0] = T;
                    },
                    _doFinalize: function () {
                        var t = this._data, e = t.words, i = 8 * this._nDataBytes, n = 8 * t.sigBytes;
                        e[n >>> 5] |= 128 << 24 - n % 32;
                        e[14 + (n + 64 >>> 9 << 4)] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8);
                        t.sigBytes = 4 * (e.length + 1);
                        this._process();
                        for (var a = this._hash, r = a.words, o = 0; o < 5; o++) {
                            var s = r[o];
                            r[o] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8);
                        }
                        return a;
                    },
                    clone: function () {
                        var t = a.clone.call(this);
                        t._hash = this._hash.clone();
                        return t;
                    }
                });
                function d(t, e, i) {
                    return t ^ e ^ i;
                }
                function f(t, e, i) {
                    return t & e | ~t & i;
                }
                function m(t, e, i) {
                    return (t | ~e) ^ i;
                }
                function g(t, e, i) {
                    return t & i | e & ~i;
                }
                function _(t, e, i) {
                    return t ^ (e | ~i);
                }
                function y(t, e) {
                    return t << e | t >>> 32 - e;
                }
                e.RIPEMD160 = a._createHelper(p);
                e.HmacRIPEMD160 = a._createHmacHelper(p);
            })(Math);
            return t.RIPEMD160;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    sha1: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "8122bh/rfxJKKug0hr/KoHN", "sha1");
        n = function (t) {
            (function () {
                var e = t, i = e.lib, n = i.WordArray, a = i.Hasher, r = e.algo, o = [], s = r.SHA1 = a.extend({
                    _doReset: function () {
                        this._hash = new n.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                    },
                    _doProcessBlock: function (t, e) {
                        for (var i = this._hash.words, n = i[0], a = i[1], r = i[2], s = i[3], c = i[4], l = 0; l < 80; l++) {
                            if (l < 16) o[l] = 0 | t[e + l]; else {
                                var h = o[l - 3] ^ o[l - 8] ^ o[l - 14] ^ o[l - 16];
                                o[l] = h << 1 | h >>> 31;
                            }
                            var u = (n << 5 | n >>> 27) + c + o[l];
                            u += l < 20 ? 1518500249 + (a & r | ~a & s) : l < 40 ? 1859775393 + (a ^ r ^ s) : l < 60 ? (a & r | a & s | r & s) - 1894007588 : (a ^ r ^ s) - 899497514;
                            c = s;
                            s = r;
                            r = a << 30 | a >>> 2;
                            a = n;
                            n = u;
                        }
                        i[0] = i[0] + n | 0;
                        i[1] = i[1] + a | 0;
                        i[2] = i[2] + r | 0;
                        i[3] = i[3] + s | 0;
                        i[4] = i[4] + c | 0;
                    },
                    _doFinalize: function () {
                        var t = this._data, e = t.words, i = 8 * this._nDataBytes, n = 8 * t.sigBytes;
                        e[n >>> 5] |= 128 << 24 - n % 32;
                        e[14 + (n + 64 >>> 9 << 4)] = Math.floor(i / 4294967296);
                        e[15 + (n + 64 >>> 9 << 4)] = i;
                        t.sigBytes = 4 * e.length;
                        this._process();
                        return this._hash;
                    },
                    clone: function () {
                        var t = a.clone.call(this);
                        t._hash = this._hash.clone();
                        return t;
                    }
                });
                e.SHA1 = a._createHelper(s);
                e.HmacSHA1 = a._createHmacHelper(s);
            })();
            return t.SHA1;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    sha224: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "2d6c7WiatxPdKNGubxl7kSd", "sha224");
        n = function (t) {
            (function () {
                var e = t, i = e.lib.WordArray, n = e.algo, a = n.SHA256, r = n.SHA224 = a.extend({
                    _doReset: function () {
                        this._hash = new i.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
                    },
                    _doFinalize: function () {
                        var t = a._doFinalize.call(this);
                        t.sigBytes -= 4;
                        return t;
                    }
                });
                e.SHA224 = a._createHelper(r);
                e.HmacSHA224 = a._createHmacHelper(r);
            })();
            return t.SHA224;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./sha256")) : "function" == typeof define && define.amd ? define(["./core", "./sha256"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./sha256": "sha256"
    }],
    sha256: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "8d82dz+W/FLJ4mAWT/9l4qa", "sha256");
        n = function (t) {
            (function (e) {
                var i = t, n = i.lib, a = n.WordArray, r = n.Hasher, o = i.algo, s = [], c = [];
                (function () {
                    function t(t) {
                        for (var i = e.sqrt(t), n = 2; n <= i; n++) if (!(t % n)) return !1;
                        return !0;
                    }
                    function i(t) {
                        return 4294967296 * (t - (0 | t)) | 0;
                    }
                    for (var n = 2, a = 0; a < 64;) {
                        if (t(n)) {
                            a < 8 && (s[a] = i(e.pow(n, .5)));
                            c[a] = i(e.pow(n, 1 / 3));
                            a++;
                        }
                        n++;
                    }
                })();
                var l = [], h = o.SHA256 = r.extend({
                    _doReset: function () {
                        this._hash = new a.init(s.slice(0));
                    },
                    _doProcessBlock: function (t, e) {
                        for (var i = this._hash.words, n = i[0], a = i[1], r = i[2], o = i[3], s = i[4], h = i[5], u = i[6], p = i[7], d = 0; d < 64; d++) {
                            if (d < 16) l[d] = 0 | t[e + d]; else {
                                var f = l[d - 15], m = (f << 25 | f >>> 7) ^ (f << 14 | f >>> 18) ^ f >>> 3, g = l[d - 2], _ = (g << 15 | g >>> 17) ^ (g << 13 | g >>> 19) ^ g >>> 10;
                                l[d] = m + l[d - 7] + _ + l[d - 16];
                            }
                            var y = n & a ^ n & r ^ a & r, v = (n << 30 | n >>> 2) ^ (n << 19 | n >>> 13) ^ (n << 10 | n >>> 22), b = p + ((s << 26 | s >>> 6) ^ (s << 21 | s >>> 11) ^ (s << 7 | s >>> 25)) + (s & h ^ ~s & u) + c[d] + l[d];
                            p = u;
                            u = h;
                            h = s;
                            s = o + b | 0;
                            o = r;
                            r = a;
                            a = n;
                            n = b + (v + y) | 0;
                        }
                        i[0] = i[0] + n | 0;
                        i[1] = i[1] + a | 0;
                        i[2] = i[2] + r | 0;
                        i[3] = i[3] + o | 0;
                        i[4] = i[4] + s | 0;
                        i[5] = i[5] + h | 0;
                        i[6] = i[6] + u | 0;
                        i[7] = i[7] + p | 0;
                    },
                    _doFinalize: function () {
                        var t = this._data, i = t.words, n = 8 * this._nDataBytes, a = 8 * t.sigBytes;
                        i[a >>> 5] |= 128 << 24 - a % 32;
                        i[14 + (a + 64 >>> 9 << 4)] = e.floor(n / 4294967296);
                        i[15 + (a + 64 >>> 9 << 4)] = n;
                        t.sigBytes = 4 * i.length;
                        this._process();
                        return this._hash;
                    },
                    clone: function () {
                        var t = r.clone.call(this);
                        t._hash = this._hash.clone();
                        return t;
                    }
                });
                i.SHA256 = r._createHelper(h);
                i.HmacSHA256 = r._createHmacHelper(h);
            })(Math);
            return t.SHA256;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }],
    sha384: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "d67829N3XBP7YDQi74tg2ks", "sha384");
        n = function (t) {
            (function () {
                var e = t, i = e.x64, n = i.Word, a = i.WordArray, r = e.algo, o = r.SHA512, s = r.SHA384 = o.extend({
                    _doReset: function () {
                        this._hash = new a.init([new n.init(3418070365, 3238371032), new n.init(1654270250, 914150663), new n.init(2438529370, 812702999), new n.init(355462360, 4144912697), new n.init(1731405415, 4290775857), new n.init(2394180231, 1750603025), new n.init(3675008525, 1694076839), new n.init(1203062813, 3204075428)]);
                    },
                    _doFinalize: function () {
                        var t = o._doFinalize.call(this);
                        t.sigBytes -= 16;
                        return t;
                    }
                });
                e.SHA384 = o._createHelper(s);
                e.HmacSHA384 = o._createHmacHelper(s);
            })();
            return t.SHA384;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./x64-core"), t("./sha512")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core", "./sha512"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./sha512": "sha512",
        "./x64-core": "x64-core"
    }],
    sha3: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "0e9bfqTJEtA/7P3kyk5SxJJ", "sha3");
        n = function (t) {
            (function (e) {
                var i = t, n = i.lib, a = n.WordArray, r = n.Hasher, o = i.x64.Word, s = i.algo, c = [], l = [], h = [];
                (function () {
                    for (var t = 1, e = 0, i = 0; i < 24; i++) {
                        c[t + 5 * e] = (i + 1) * (i + 2) / 2 % 64;
                        var n = (2 * t + 3 * e) % 5;
                        t = e % 5;
                        e = n;
                    }
                    for (t = 0; t < 5; t++) for (e = 0; e < 5; e++) l[t + 5 * e] = e + (2 * t + 3 * e) % 5 * 5;
                    for (var a = 1, r = 0; r < 24; r++) {
                        for (var s = 0, u = 0, p = 0; p < 7; p++) {
                            if (1 & a) {
                                var d = (1 << p) - 1;
                                d < 32 ? u ^= 1 << d : s ^= 1 << d - 32;
                            }
                            128 & a ? a = a << 1 ^ 113 : a <<= 1;
                        }
                        h[r] = o.create(s, u);
                    }
                })();
                var u = [];
                (function () {
                    for (var t = 0; t < 25; t++) u[t] = o.create();
                })();
                var p = s.SHA3 = r.extend({
                    cfg: r.cfg.extend({
                        outputLength: 512
                    }),
                    _doReset: function () {
                        for (var t = this._state = [], e = 0; e < 25; e++) t[e] = new o.init();
                        this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
                    },
                    _doProcessBlock: function (t, e) {
                        for (var i = this._state, n = this.blockSize / 2, a = 0; a < n; a++) {
                            var r = t[e + 2 * a], o = t[e + 2 * a + 1];
                            r = 16711935 & (r << 8 | r >>> 24) | 4278255360 & (r << 24 | r >>> 8);
                            o = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8);
                            (D = i[a]).high ^= o;
                            D.low ^= r;
                        }
                        for (var s = 0; s < 24; s++) {
                            for (var p = 0; p < 5; p++) {
                                for (var d = 0, f = 0, m = 0; m < 5; m++) {
                                    d ^= (D = i[p + 5 * m]).high;
                                    f ^= D.low;
                                }
                                var g = u[p];
                                g.high = d;
                                g.low = f;
                            }
                            for (p = 0; p < 5; p++) {
                                var _ = u[(p + 4) % 5], y = u[(p + 1) % 5], v = y.high, b = y.low;
                                for (d = _.high ^ (v << 1 | b >>> 31), f = _.low ^ (b << 1 | v >>> 31), m = 0; m < 5; m++) {
                                    (D = i[p + 5 * m]).high ^= d;
                                    D.low ^= f;
                                }
                            }
                            for (var M = 1; M < 25; M++) {
                                var S = (D = i[M]).high, k = D.low, C = c[M];
                                if (C < 32) {
                                    d = S << C | k >>> 32 - C;
                                    f = k << C | S >>> 32 - C;
                                } else {
                                    d = k << C - 32 | S >>> 64 - C;
                                    f = S << C - 32 | k >>> 64 - C;
                                }
                                var w = u[l[M]];
                                w.high = d;
                                w.low = f;
                            }
                            var A = u[0], T = i[0];
                            A.high = T.high;
                            A.low = T.low;
                            for (p = 0; p < 5; p++) for (m = 0; m < 5; m++) {
                                var D = i[M = p + 5 * m], P = u[M], E = u[(p + 1) % 5 + 5 * m], B = u[(p + 2) % 5 + 5 * m];
                                D.high = P.high ^ ~E.high & B.high;
                                D.low = P.low ^ ~E.low & B.low;
                            }
                            D = i[0];
                            var F = h[s];
                            D.high ^= F.high;
                            D.low ^= F.low;
                        }
                    },
                    _doFinalize: function () {
                        var t = this._data, i = t.words, n = (this._nDataBytes, 8 * t.sigBytes), r = 32 * this.blockSize;
                        i[n >>> 5] |= 1 << 24 - n % 32;
                        i[(e.ceil((n + 1) / r) * r >>> 5) - 1] |= 128;
                        t.sigBytes = 4 * i.length;
                        this._process();
                        for (var o = this._state, s = this.cfg.outputLength / 8, c = s / 8, l = [], h = 0; h < c; h++) {
                            var u = o[h], p = u.high, d = u.low;
                            p = 16711935 & (p << 8 | p >>> 24) | 4278255360 & (p << 24 | p >>> 8);
                            d = 16711935 & (d << 8 | d >>> 24) | 4278255360 & (d << 24 | d >>> 8);
                            l.push(d);
                            l.push(p);
                        }
                        return new a.init(l, s);
                    },
                    clone: function () {
                        for (var t = r.clone.call(this), e = t._state = this._state.slice(0), i = 0; i < 25; i++) e[i] = e[i].clone();
                        return t;
                    }
                });
                i.SHA3 = r._createHelper(p);
                i.HmacSHA3 = r._createHmacHelper(p);
            })(Math);
            return t.SHA3;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./x64-core")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./x64-core": "x64-core"
    }],
    sha512: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "b21dc2MCU9GOoArEtyMjKgs", "sha512");
        n = function (t) {
            (function () {
                var e = t, i = e.lib.Hasher, n = e.x64, a = n.Word, r = n.WordArray, o = e.algo;
                function s() {
                    return a.create.apply(a, arguments);
                }
                var c = [s(1116352408, 3609767458), s(1899447441, 602891725), s(3049323471, 3964484399), s(3921009573, 2173295548), s(961987163, 4081628472), s(1508970993, 3053834265), s(2453635748, 2937671579), s(2870763221, 3664609560), s(3624381080, 2734883394), s(310598401, 1164996542), s(607225278, 1323610764), s(1426881987, 3590304994), s(1925078388, 4068182383), s(2162078206, 991336113), s(2614888103, 633803317), s(3248222580, 3479774868), s(3835390401, 2666613458), s(4022224774, 944711139), s(264347078, 2341262773), s(604807628, 2007800933), s(770255983, 1495990901), s(1249150122, 1856431235), s(1555081692, 3175218132), s(1996064986, 2198950837), s(2554220882, 3999719339), s(2821834349, 766784016), s(2952996808, 2566594879), s(3210313671, 3203337956), s(3336571891, 1034457026), s(3584528711, 2466948901), s(113926993, 3758326383), s(338241895, 168717936), s(666307205, 1188179964), s(773529912, 1546045734), s(1294757372, 1522805485), s(1396182291, 2643833823), s(1695183700, 2343527390), s(1986661051, 1014477480), s(2177026350, 1206759142), s(2456956037, 344077627), s(2730485921, 1290863460), s(2820302411, 3158454273), s(3259730800, 3505952657), s(3345764771, 106217008), s(3516065817, 3606008344), s(3600352804, 1432725776), s(4094571909, 1467031594), s(275423344, 851169720), s(430227734, 3100823752), s(506948616, 1363258195), s(659060556, 3750685593), s(883997877, 3785050280), s(958139571, 3318307427), s(1322822218, 3812723403), s(1537002063, 2003034995), s(1747873779, 3602036899), s(1955562222, 1575990012), s(2024104815, 1125592928), s(2227730452, 2716904306), s(2361852424, 442776044), s(2428436474, 593698344), s(2756734187, 3733110249), s(3204031479, 2999351573), s(3329325298, 3815920427), s(3391569614, 3928383900), s(3515267271, 566280711), s(3940187606, 3454069534), s(4118630271, 4000239992), s(116418474, 1914138554), s(174292421, 2731055270), s(289380356, 3203993006), s(460393269, 320620315), s(685471733, 587496836), s(852142971, 1086792851), s(1017036298, 365543100), s(1126000580, 2618297676), s(1288033470, 3409855158), s(1501505948, 4234509866), s(1607167915, 987167468), s(1816402316, 1246189591)], l = [];
                (function () {
                    for (var t = 0; t < 80; t++) l[t] = s();
                })();
                var h = o.SHA512 = i.extend({
                    _doReset: function () {
                        this._hash = new r.init([new a.init(1779033703, 4089235720), new a.init(3144134277, 2227873595), new a.init(1013904242, 4271175723), new a.init(2773480762, 1595750129), new a.init(1359893119, 2917565137), new a.init(2600822924, 725511199), new a.init(528734635, 4215389547), new a.init(1541459225, 327033209)]);
                    },
                    _doProcessBlock: function (t, e) {
                        for (var i = this._hash.words, n = i[0], a = i[1], r = i[2], o = i[3], s = i[4], h = i[5], u = i[6], p = i[7], d = n.high, f = n.low, m = a.high, g = a.low, _ = r.high, y = r.low, v = o.high, b = o.low, M = s.high, S = s.low, k = h.high, C = h.low, w = u.high, A = u.low, T = p.high, D = p.low, P = d, E = f, B = m, F = g, N = _, x = y, R = v, I = b, G = M, O = S, L = k, j = C, U = w, Y = A, H = T, W = D, V = 0; V < 80; V++) {
                            var z, J, X = l[V];
                            if (V < 16) {
                                J = X.high = 0 | t[e + 2 * V];
                                z = X.low = 0 | t[e + 2 * V + 1];
                            } else {
                                var q = l[V - 15], K = q.high, Z = q.low, Q = (K >>> 1 | Z << 31) ^ (K >>> 8 | Z << 24) ^ K >>> 7, $ = (Z >>> 1 | K << 31) ^ (Z >>> 8 | K << 24) ^ (Z >>> 7 | K << 25), tt = l[V - 2], et = tt.high, it = tt.low, nt = (et >>> 19 | it << 13) ^ (et << 3 | it >>> 29) ^ et >>> 6, at = (it >>> 19 | et << 13) ^ (it << 3 | et >>> 29) ^ (it >>> 6 | et << 26), rt = l[V - 7], ot = rt.high, st = rt.low, ct = l[V - 16], lt = ct.high, ht = ct.low;
                                J = (J = (J = Q + ot + ((z = $ + st) >>> 0 < $ >>> 0 ? 1 : 0)) + nt + ((z += at) >>> 0 < at >>> 0 ? 1 : 0)) + lt + ((z += ht) >>> 0 < ht >>> 0 ? 1 : 0);
                                X.high = J;
                                X.low = z;
                            }
                            var ut, pt = G & L ^ ~G & U, dt = O & j ^ ~O & Y, ft = P & B ^ P & N ^ B & N, mt = E & F ^ E & x ^ F & x, gt = (P >>> 28 | E << 4) ^ (P << 30 | E >>> 2) ^ (P << 25 | E >>> 7), _t = (E >>> 28 | P << 4) ^ (E << 30 | P >>> 2) ^ (E << 25 | P >>> 7), yt = (G >>> 14 | O << 18) ^ (G >>> 18 | O << 14) ^ (G << 23 | O >>> 9), vt = (O >>> 14 | G << 18) ^ (O >>> 18 | G << 14) ^ (O << 23 | G >>> 9), bt = c[V], Mt = bt.high, St = bt.low, kt = H + yt + ((ut = W + vt) >>> 0 < W >>> 0 ? 1 : 0), Ct = _t + mt;
                            H = U;
                            W = Y;
                            U = L;
                            Y = j;
                            L = G;
                            j = O;
                            G = R + (kt = (kt = (kt = kt + pt + ((ut += dt) >>> 0 < dt >>> 0 ? 1 : 0)) + Mt + ((ut += St) >>> 0 < St >>> 0 ? 1 : 0)) + J + ((ut += z) >>> 0 < z >>> 0 ? 1 : 0)) + ((O = I + ut | 0) >>> 0 < I >>> 0 ? 1 : 0) | 0;
                            R = N;
                            I = x;
                            N = B;
                            x = F;
                            B = P;
                            F = E;
                            P = kt + (gt + ft + (Ct >>> 0 < _t >>> 0 ? 1 : 0)) + ((E = ut + Ct | 0) >>> 0 < ut >>> 0 ? 1 : 0) | 0;
                        }
                        f = n.low = f + E;
                        n.high = d + P + (f >>> 0 < E >>> 0 ? 1 : 0);
                        g = a.low = g + F;
                        a.high = m + B + (g >>> 0 < F >>> 0 ? 1 : 0);
                        y = r.low = y + x;
                        r.high = _ + N + (y >>> 0 < x >>> 0 ? 1 : 0);
                        b = o.low = b + I;
                        o.high = v + R + (b >>> 0 < I >>> 0 ? 1 : 0);
                        S = s.low = S + O;
                        s.high = M + G + (S >>> 0 < O >>> 0 ? 1 : 0);
                        C = h.low = C + j;
                        h.high = k + L + (C >>> 0 < j >>> 0 ? 1 : 0);
                        A = u.low = A + Y;
                        u.high = w + U + (A >>> 0 < Y >>> 0 ? 1 : 0);
                        D = p.low = D + W;
                        p.high = T + H + (D >>> 0 < W >>> 0 ? 1 : 0);
                    },
                    _doFinalize: function () {
                        var t = this._data, e = t.words, i = 8 * this._nDataBytes, n = 8 * t.sigBytes;
                        e[n >>> 5] |= 128 << 24 - n % 32;
                        e[30 + (n + 128 >>> 10 << 5)] = Math.floor(i / 4294967296);
                        e[31 + (n + 128 >>> 10 << 5)] = i;
                        t.sigBytes = 4 * e.length;
                        this._process();
                        return this._hash.toX32();
                    },
                    clone: function () {
                        var t = i.clone.call(this);
                        t._hash = this._hash.clone();
                        return t;
                    },
                    blockSize: 32
                });
                e.SHA512 = i._createHelper(h);
                e.HmacSHA512 = i._createHmacHelper(h);
            })();
            return t.SHA512;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./x64-core")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core",
        "./x64-core": "x64-core"
    }],
    tripledes: [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "531663ir5JLhLoGiVgMYSAk", "tripledes");
        n = function (t) {
            (function () {
                var e = t, i = e.lib, n = i.WordArray, a = i.BlockCipher, r = e.algo, o = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], s = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], c = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], l = [{
                    0: 8421888,
                    268435456: 32768,
                    536870912: 8421378,
                    805306368: 2,
                    1073741824: 512,
                    1342177280: 8421890,
                    1610612736: 8389122,
                    1879048192: 8388608,
                    2147483648: 514,
                    2415919104: 8389120,
                    2684354560: 33280,
                    2952790016: 8421376,
                    3221225472: 32770,
                    3489660928: 8388610,
                    3758096384: 0,
                    4026531840: 33282,
                    134217728: 0,
                    402653184: 8421890,
                    671088640: 33282,
                    939524096: 32768,
                    1207959552: 8421888,
                    1476395008: 512,
                    1744830464: 8421378,
                    2013265920: 2,
                    2281701376: 8389120,
                    2550136832: 33280,
                    2818572288: 8421376,
                    3087007744: 8389122,
                    3355443200: 8388610,
                    3623878656: 32770,
                    3892314112: 514,
                    4160749568: 8388608,
                    1: 32768,
                    268435457: 2,
                    536870913: 8421888,
                    805306369: 8388608,
                    1073741825: 8421378,
                    1342177281: 33280,
                    1610612737: 512,
                    1879048193: 8389122,
                    2147483649: 8421890,
                    2415919105: 8421376,
                    2684354561: 8388610,
                    2952790017: 33282,
                    3221225473: 514,
                    3489660929: 8389120,
                    3758096385: 32770,
                    4026531841: 0,
                    134217729: 8421890,
                    402653185: 8421376,
                    671088641: 8388608,
                    939524097: 512,
                    1207959553: 32768,
                    1476395009: 8388610,
                    1744830465: 2,
                    2013265921: 33282,
                    2281701377: 32770,
                    2550136833: 8389122,
                    2818572289: 514,
                    3087007745: 8421888,
                    3355443201: 8389120,
                    3623878657: 0,
                    3892314113: 33280,
                    4160749569: 8421378
                }, {
                    0: 1074282512,
                    16777216: 16384,
                    33554432: 524288,
                    50331648: 1074266128,
                    67108864: 1073741840,
                    83886080: 1074282496,
                    100663296: 1073758208,
                    117440512: 16,
                    134217728: 540672,
                    150994944: 1073758224,
                    167772160: 1073741824,
                    184549376: 540688,
                    201326592: 524304,
                    218103808: 0,
                    234881024: 16400,
                    251658240: 1074266112,
                    8388608: 1073758208,
                    25165824: 540688,
                    41943040: 16,
                    58720256: 1073758224,
                    75497472: 1074282512,
                    92274688: 1073741824,
                    109051904: 524288,
                    125829120: 1074266128,
                    142606336: 524304,
                    159383552: 0,
                    176160768: 16384,
                    192937984: 1074266112,
                    209715200: 1073741840,
                    226492416: 540672,
                    243269632: 1074282496,
                    260046848: 16400,
                    268435456: 0,
                    285212672: 1074266128,
                    301989888: 1073758224,
                    318767104: 1074282496,
                    335544320: 1074266112,
                    352321536: 16,
                    369098752: 540688,
                    385875968: 16384,
                    402653184: 16400,
                    419430400: 524288,
                    436207616: 524304,
                    452984832: 1073741840,
                    469762048: 540672,
                    486539264: 1073758208,
                    503316480: 1073741824,
                    520093696: 1074282512,
                    276824064: 540688,
                    293601280: 524288,
                    310378496: 1074266112,
                    327155712: 16384,
                    343932928: 1073758208,
                    360710144: 1074282512,
                    377487360: 16,
                    394264576: 1073741824,
                    411041792: 1074282496,
                    427819008: 1073741840,
                    444596224: 1073758224,
                    461373440: 524304,
                    478150656: 0,
                    494927872: 16400,
                    511705088: 1074266128,
                    528482304: 540672
                }, {
                    0: 260,
                    1048576: 0,
                    2097152: 67109120,
                    3145728: 65796,
                    4194304: 65540,
                    5242880: 67108868,
                    6291456: 67174660,
                    7340032: 67174400,
                    8388608: 67108864,
                    9437184: 67174656,
                    10485760: 65792,
                    11534336: 67174404,
                    12582912: 67109124,
                    13631488: 65536,
                    14680064: 4,
                    15728640: 256,
                    524288: 67174656,
                    1572864: 67174404,
                    2621440: 0,
                    3670016: 67109120,
                    4718592: 67108868,
                    5767168: 65536,
                    6815744: 65540,
                    7864320: 260,
                    8912896: 4,
                    9961472: 256,
                    11010048: 67174400,
                    12058624: 65796,
                    13107200: 65792,
                    14155776: 67109124,
                    15204352: 67174660,
                    16252928: 67108864,
                    16777216: 67174656,
                    17825792: 65540,
                    18874368: 65536,
                    19922944: 67109120,
                    20971520: 256,
                    22020096: 67174660,
                    23068672: 67108868,
                    24117248: 0,
                    25165824: 67109124,
                    26214400: 67108864,
                    27262976: 4,
                    28311552: 65792,
                    29360128: 67174400,
                    30408704: 260,
                    31457280: 65796,
                    32505856: 67174404,
                    17301504: 67108864,
                    18350080: 260,
                    19398656: 67174656,
                    20447232: 0,
                    21495808: 65540,
                    22544384: 67109120,
                    23592960: 256,
                    24641536: 67174404,
                    25690112: 65536,
                    26738688: 67174660,
                    27787264: 65796,
                    28835840: 67108868,
                    29884416: 67109124,
                    30932992: 67174400,
                    31981568: 4,
                    33030144: 65792
                }, {
                    0: 2151682048,
                    65536: 2147487808,
                    131072: 4198464,
                    196608: 2151677952,
                    262144: 0,
                    327680: 4198400,
                    393216: 2147483712,
                    458752: 4194368,
                    524288: 2147483648,
                    589824: 4194304,
                    655360: 64,
                    720896: 2147487744,
                    786432: 2151678016,
                    851968: 4160,
                    917504: 4096,
                    983040: 2151682112,
                    32768: 2147487808,
                    98304: 64,
                    163840: 2151678016,
                    229376: 2147487744,
                    294912: 4198400,
                    360448: 2151682112,
                    425984: 0,
                    491520: 2151677952,
                    557056: 4096,
                    622592: 2151682048,
                    688128: 4194304,
                    753664: 4160,
                    819200: 2147483648,
                    884736: 4194368,
                    950272: 4198464,
                    1015808: 2147483712,
                    1048576: 4194368,
                    1114112: 4198400,
                    1179648: 2147483712,
                    1245184: 0,
                    1310720: 4160,
                    1376256: 2151678016,
                    1441792: 2151682048,
                    1507328: 2147487808,
                    1572864: 2151682112,
                    1638400: 2147483648,
                    1703936: 2151677952,
                    1769472: 4198464,
                    1835008: 2147487744,
                    1900544: 4194304,
                    1966080: 64,
                    2031616: 4096,
                    1081344: 2151677952,
                    1146880: 2151682112,
                    1212416: 0,
                    1277952: 4198400,
                    1343488: 4194368,
                    1409024: 2147483648,
                    1474560: 2147487808,
                    1540096: 64,
                    1605632: 2147483712,
                    1671168: 4096,
                    1736704: 2147487744,
                    1802240: 2151678016,
                    1867776: 4160,
                    1933312: 2151682048,
                    1998848: 4194304,
                    2064384: 4198464
                }, {
                    0: 128,
                    4096: 17039360,
                    8192: 262144,
                    12288: 536870912,
                    16384: 537133184,
                    20480: 16777344,
                    24576: 553648256,
                    28672: 262272,
                    32768: 16777216,
                    36864: 537133056,
                    40960: 536871040,
                    45056: 553910400,
                    49152: 553910272,
                    53248: 0,
                    57344: 17039488,
                    61440: 553648128,
                    2048: 17039488,
                    6144: 553648256,
                    10240: 128,
                    14336: 17039360,
                    18432: 262144,
                    22528: 537133184,
                    26624: 553910272,
                    30720: 536870912,
                    34816: 537133056,
                    38912: 0,
                    43008: 553910400,
                    47104: 16777344,
                    51200: 536871040,
                    55296: 553648128,
                    59392: 16777216,
                    63488: 262272,
                    65536: 262144,
                    69632: 128,
                    73728: 536870912,
                    77824: 553648256,
                    81920: 16777344,
                    86016: 553910272,
                    90112: 537133184,
                    94208: 16777216,
                    98304: 553910400,
                    102400: 553648128,
                    106496: 17039360,
                    110592: 537133056,
                    114688: 262272,
                    118784: 536871040,
                    122880: 0,
                    126976: 17039488,
                    67584: 553648256,
                    71680: 16777216,
                    75776: 17039360,
                    79872: 537133184,
                    83968: 536870912,
                    88064: 17039488,
                    92160: 128,
                    96256: 553910272,
                    100352: 262272,
                    104448: 553910400,
                    108544: 0,
                    112640: 553648128,
                    116736: 16777344,
                    120832: 262144,
                    124928: 537133056,
                    129024: 536871040
                }, {
                    0: 268435464,
                    256: 8192,
                    512: 270532608,
                    768: 270540808,
                    1024: 268443648,
                    1280: 2097152,
                    1536: 2097160,
                    1792: 268435456,
                    2048: 0,
                    2304: 268443656,
                    2560: 2105344,
                    2816: 8,
                    3072: 270532616,
                    3328: 2105352,
                    3584: 8200,
                    3840: 270540800,
                    128: 270532608,
                    384: 270540808,
                    640: 8,
                    896: 2097152,
                    1152: 2105352,
                    1408: 268435464,
                    1664: 268443648,
                    1920: 8200,
                    2176: 2097160,
                    2432: 8192,
                    2688: 268443656,
                    2944: 270532616,
                    3200: 0,
                    3456: 270540800,
                    3712: 2105344,
                    3968: 268435456,
                    4096: 268443648,
                    4352: 270532616,
                    4608: 270540808,
                    4864: 8200,
                    5120: 2097152,
                    5376: 268435456,
                    5632: 268435464,
                    5888: 2105344,
                    6144: 2105352,
                    6400: 0,
                    6656: 8,
                    6912: 270532608,
                    7168: 8192,
                    7424: 268443656,
                    7680: 270540800,
                    7936: 2097160,
                    4224: 8,
                    4480: 2105344,
                    4736: 2097152,
                    4992: 268435464,
                    5248: 268443648,
                    5504: 8200,
                    5760: 270540808,
                    6016: 270532608,
                    6272: 270540800,
                    6528: 270532616,
                    6784: 8192,
                    7040: 2105352,
                    7296: 2097160,
                    7552: 0,
                    7808: 268435456,
                    8064: 268443656
                }, {
                    0: 1048576,
                    16: 33555457,
                    32: 1024,
                    48: 1049601,
                    64: 34604033,
                    80: 0,
                    96: 1,
                    112: 34603009,
                    128: 33555456,
                    144: 1048577,
                    160: 33554433,
                    176: 34604032,
                    192: 34603008,
                    208: 1025,
                    224: 1049600,
                    240: 33554432,
                    8: 34603009,
                    24: 0,
                    40: 33555457,
                    56: 34604032,
                    72: 1048576,
                    88: 33554433,
                    104: 33554432,
                    120: 1025,
                    136: 1049601,
                    152: 33555456,
                    168: 34603008,
                    184: 1048577,
                    200: 1024,
                    216: 34604033,
                    232: 1,
                    248: 1049600,
                    256: 33554432,
                    272: 1048576,
                    288: 33555457,
                    304: 34603009,
                    320: 1048577,
                    336: 33555456,
                    352: 34604032,
                    368: 1049601,
                    384: 1025,
                    400: 34604033,
                    416: 1049600,
                    432: 1,
                    448: 0,
                    464: 34603008,
                    480: 33554433,
                    496: 1024,
                    264: 1049600,
                    280: 33555457,
                    296: 34603009,
                    312: 1,
                    328: 33554432,
                    344: 1048576,
                    360: 1025,
                    376: 34604032,
                    392: 33554433,
                    408: 34603008,
                    424: 0,
                    440: 34604033,
                    456: 1049601,
                    472: 1024,
                    488: 33555456,
                    504: 1048577
                }, {
                    0: 134219808,
                    1: 131072,
                    2: 134217728,
                    3: 32,
                    4: 131104,
                    5: 134350880,
                    6: 134350848,
                    7: 2048,
                    8: 134348800,
                    9: 134219776,
                    10: 133120,
                    11: 134348832,
                    12: 2080,
                    13: 0,
                    14: 134217760,
                    15: 133152,
                    2147483648: 2048,
                    2147483649: 134350880,
                    2147483650: 134219808,
                    2147483651: 134217728,
                    2147483652: 134348800,
                    2147483653: 133120,
                    2147483654: 133152,
                    2147483655: 32,
                    2147483656: 134217760,
                    2147483657: 2080,
                    2147483658: 131104,
                    2147483659: 134350848,
                    2147483660: 0,
                    2147483661: 134348832,
                    2147483662: 134219776,
                    2147483663: 131072,
                    16: 133152,
                    17: 134350848,
                    18: 32,
                    19: 2048,
                    20: 134219776,
                    21: 134217760,
                    22: 134348832,
                    23: 131072,
                    24: 0,
                    25: 131104,
                    26: 134348800,
                    27: 134219808,
                    28: 134350880,
                    29: 133120,
                    30: 2080,
                    31: 134217728,
                    2147483664: 131072,
                    2147483665: 2048,
                    2147483666: 134348832,
                    2147483667: 133152,
                    2147483668: 32,
                    2147483669: 134348800,
                    2147483670: 134217728,
                    2147483671: 134219808,
                    2147483672: 134350880,
                    2147483673: 134217760,
                    2147483674: 134219776,
                    2147483675: 0,
                    2147483676: 133120,
                    2147483677: 2080,
                    2147483678: 131104,
                    2147483679: 134350848
                }], h = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], u = r.DES = a.extend({
                    _doReset: function () {
                        for (var t = this._key.words, e = [], i = 0; i < 56; i++) {
                            var n = o[i] - 1;
                            e[i] = t[n >>> 5] >>> 31 - n % 32 & 1;
                        }
                        for (var a = this._subKeys = [], r = 0; r < 16; r++) {
                            var l = a[r] = [], h = c[r];
                            for (i = 0; i < 24; i++) {
                                l[i / 6 | 0] |= e[(s[i] - 1 + h) % 28] << 31 - i % 6;
                                l[4 + (i / 6 | 0)] |= e[28 + (s[i + 24] - 1 + h) % 28] << 31 - i % 6;
                            }
                            l[0] = l[0] << 1 | l[0] >>> 31;
                            for (i = 1; i < 7; i++) l[i] = l[i] >>> 4 * (i - 1) + 3;
                            l[7] = l[7] << 5 | l[7] >>> 27;
                        }
                        var u = this._invSubKeys = [];
                        for (i = 0; i < 16; i++) u[i] = a[15 - i];
                    },
                    encryptBlock: function (t, e) {
                        this._doCryptBlock(t, e, this._subKeys);
                    },
                    decryptBlock: function (t, e) {
                        this._doCryptBlock(t, e, this._invSubKeys);
                    },
                    _doCryptBlock: function (t, e, i) {
                        this._lBlock = t[e];
                        this._rBlock = t[e + 1];
                        p.call(this, 4, 252645135);
                        p.call(this, 16, 65535);
                        d.call(this, 2, 858993459);
                        d.call(this, 8, 16711935);
                        p.call(this, 1, 1431655765);
                        for (var n = 0; n < 16; n++) {
                            for (var a = i[n], r = this._lBlock, o = this._rBlock, s = 0, c = 0; c < 8; c++) s |= l[c][((o ^ a[c]) & h[c]) >>> 0];
                            this._lBlock = o;
                            this._rBlock = r ^ s;
                        }
                        var u = this._lBlock;
                        this._lBlock = this._rBlock;
                        this._rBlock = u;
                        p.call(this, 1, 1431655765);
                        d.call(this, 8, 16711935);
                        d.call(this, 2, 858993459);
                        p.call(this, 16, 65535);
                        p.call(this, 4, 252645135);
                        t[e] = this._lBlock;
                        t[e + 1] = this._rBlock;
                    },
                    keySize: 2,
                    ivSize: 2,
                    blockSize: 2
                });
                function p(t, e) {
                    var i = (this._lBlock >>> t ^ this._rBlock) & e;
                    this._rBlock ^= i;
                    this._lBlock ^= i << t;
                }
                function d(t, e) {
                    var i = (this._rBlock >>> t ^ this._lBlock) & e;
                    this._lBlock ^= i;
                    this._rBlock ^= i << t;
                }
                e.DES = a._createHelper(u);
                var f = r.TripleDES = a.extend({
                    _doReset: function () {
                        var t = this._key.words;
                        if (2 !== t.length && 4 !== t.length && t.length < 6) throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
                        var e = t.slice(0, 2), i = t.length < 4 ? t.slice(0, 2) : t.slice(2, 4), a = t.length < 6 ? t.slice(0, 2) : t.slice(4, 6);
                        this._des1 = u.createEncryptor(n.create(e));
                        this._des2 = u.createEncryptor(n.create(i));
                        this._des3 = u.createEncryptor(n.create(a));
                    },
                    encryptBlock: function (t, e) {
                        this._des1.encryptBlock(t, e);
                        this._des2.decryptBlock(t, e);
                        this._des3.encryptBlock(t, e);
                    },
                    decryptBlock: function (t, e) {
                        this._des3.decryptBlock(t, e);
                        this._des2.encryptBlock(t, e);
                        this._des1.decryptBlock(t, e);
                    },
                    keySize: 6,
                    ivSize: 2,
                    blockSize: 2
                });
                e.TripleDES = a._createHelper(f);
            })();
            return t.TripleDES;
        }, "object" == typeof i ? e.exports = i = n(t("./core"), t("./enc-base64"), t("./md5"), t("./evpkdf"), t("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./cipher-core": "cipher-core",
        "./core": "core",
        "./enc-base64": "enc-base64",
        "./evpkdf": "evpkdf",
        "./md5": "md5"
    }],
    "x64-core": [function (t, e, i) {
        "use strict";
        cc._RF.push(e, "38cb6NwI+xN4o70QxPpxXhR", "x64-core");
        n = function (t) {
            i = (e = t).lib, n = i.Base, a = i.WordArray, (r = e.x64 = {}).Word = n.extend({
                init: function (t, e) {
                    this.high = t;
                    this.low = e;
                }
            }), r.WordArray = n.extend({
                init: function (t, e) {
                    t = this.words = t || [];
                    this.sigBytes = null != e ? e : 8 * t.length;
                },
                toX32: function () {
                    for (var t = this.words, e = t.length, i = [], n = 0; n < e; n++) {
                        var r = t[n];
                        i.push(r.high);
                        i.push(r.low);
                    }
                    return a.create(i, this.sigBytes);
                },
                clone: function () {
                    for (var t = n.clone.call(this), e = t.words = this.words.slice(0), i = e.length, a = 0; a < i; a++) e[a] = e[a].clone();
                    return t;
                }
            });
            var e, i, n, a, r;
            return t;
        }, "object" == typeof i ? e.exports = i = n(t("./core")) : "function" == typeof define && define.amd ? define(["./core"], n) : n((void 0).CryptoJS);
        var n;
        cc._RF.pop();
    }, {
        "./core": "core"
    }]
}, {}, ["GameConfig", "GameConst", "GameEnum", "ConfigBaseData", "ConfigBossData", "ConfigBossFuncData", "ConfigBulletData", "ConfigEnemyData", "ConfigEnemyFuncData", "ConfigEnemyMoveData", "ConfigEnemyUIData", "ConfigGlobalData", "ConfigItemData", "ConfigPropData", "ConfigShopData", "ConfigSnakeData", "ConfigSnakeLvupData", "ConfigSnakeSkillData", "ConfigStageCoinData", "ConfigStageData", "ConfigStageInfoData", "ConfigStageWaveData", "ConfigTrapData", "FireBulletData", "PlayerData", "BaseDataContainer", "ConfigDataManager", "FetterDataContainer", "StageDataContainer", "MapData", "GameData", "aes", "pad-zeropadding", "Des", "aesa", "blowfish", "cipher-core", "core", "crypto-js", "enc-base64", "enc-base64url", "enc-hex", "enc-latin1", "enc-utf16", "enc-utf8", "evpkdf", "format-hex", "format-openssl", "hmac-md5", "hmac-ripemd160", "hmac-sha1", "hmac-sha224", "hmac-sha256", "hmac-sha3", "hmac-sha384", "hmac-sha512", "hmac", "index", "lib-typedarrays", "md5", "mode-cfb", "mode-ctr-gladman", "mode-ctr", "mode-ecb", "mode-ofb", "pad-ansix923", "pad-iso10126", "pad-iso97971", "pad-nopadding", "pad-pkcs7", "pad-zeropaddinga", "pbkdf2", "rabbit-legacy", "rabbit", "rc4", "ripemd160", "sha1", "sha224", "sha256", "sha3", "sha384", "sha512", "tripledes", "x64-core", "RegionEffect", "AudioManager", "BattleFlowManager", "CameraManager", "FrameManager", "LanguageManager", "LoadManager", "NoticeManager", "PoolManager", "PopupManager", "ReportManager", "UIManager", "AdjustScreen", "FrameAnim", "FullScreen", "PopupBase", "UIBtn", "UIComponent", "UINum", "BossBase", "BossEntityNormal", "BossLaser", "BossMoveBase", "BossUnitBase", "BossDesertHandOneSunFinger", "BossEntityDesertHand", "BossEntityFire", "BossFireMeteor", "BossEntityIce", "BossIcePillar", "BossEntitySpider", "BossEntityTree", "BossTreeFist", "BossTreeSunkens", "BulletBase", "BulletEnemy", "BulletJumpTarget", "BulletSnake", "FirePointBase", "FirePointEnemy", "FirePointSnake", "BulletBaseComp", "BulletStraightComp", "HurtAnim", "CameraAuto", "CameraBase", "CircleColliderComp", "CollideArea", "ColliderComp", "Contact", "LineColliderComp", "PolyColliderComp", "RectColliderComp", "AttrBase", "CompBase", "EntityBase", "EffectCircle", "EnemyAnimComp", "EnemyBase", "EnemyEntity", "EnemyLockMask", "EnemyModelComp", "EnemyAddBloodAttr", "EnemyAttrBase", "EnemyBandageAttr", "EnemyBulletAttr", "EnemyBurrowAttr", "EnemyDashAtkAttr", "EnemyDashAttr", "EnemyDieBulletAttr", "EnemyExplosionAttr", "EnemyFallToGroundAttr", "EnemyFuncController", "EnemyJumpAttr", "EnemyReviveAttr", "EnemySplitAttr", "EnemySprintAttr", "EnemySummonAttr", "EnemyCoinComp", "EnemyCompBase", "EnemyRoleComp", "EnemyEnterComp", "EnemyAreaMoveComp", "EnemyAreaPatrolMoveComp", "EnemyCircleMoveComp", "EnemyColWallComp", "EnemyFollowPAreaPatrolComp", "EnemyMoveBaseComp", "EnemyMoveController", "EnemyPathMoveComp", "EnemyPursuitComp", "EnemyRandomMoveComp", "LootBase", "LootCrazy", "LootItem", "LootLight", "LootMoveFixComp", "BattleManager", "BossManager", "BulletManager", "CollideManager", "EffectManager", "EnemyManager", "EntityManager", "GameRuleManager", "LootManager", "MapManager", "PropManager", "ShadowManager", "SkillManager", "SnakeManager", "VeinManager", "WarnLineManager", "CoinWaveManager", "NormalWaveManager", "WaveManager", "GuideManager", "EntityWall", "MapEntityBase", "MapEntityFence", "VeinCell", "VeinEntity", "MapLift", "TrapQuicksandEntity", "TrapSnowBall", "TrapSnowBallUnit", "TrapSunkensComp", "TrapSunkensEntity", "TrapThorns", "TrapBallBase", "TrapBase", "SnakeBuffComp", "SnakeCrazyComp", "SnakeHeadParticle", "SnakeUnitCrazyComp", "SnakeEntity", "SnakeMoveBaseComp", "SnakeMoveBodyComp", "SnakeMoveDirComp", "SnakeMoveFollowComp", "SnakeMoveTargetComp", "SnakeSkillBase", "SnakeSkillFireBall", "SnakeForstEntity", "SnakeForstEntityNew", "SnakeSkillForst", "SnakeSkillMeteor", "SnakeSkillMeteorEntity", "SnakeSkillThorns", "SnakeThornsEntity", "SnakeBody", "SnakeHead", "SnakeLine", "SnakeTail", "SnakeUnit", "PoolBase", "PropItemBase", "PropLootSnakeItem", "ShadowComp", "WarnLineBase", "PopupGuide", "FloatTip", "PopupReward", "BattleScene", "Log", "BattleUI", "FollowMove", "PauseNode", "PopupNewEnemy", "PopupRelive", "PopupSettle", "TouchNode", "WarnUI", "LaunchScene", "LoadingScene", "MainScene", "PopupCheat", "PopupPower", "PopupSetting", "HomeUI", "MainUI", "ShopBoxResult", "ShopUI", "SnakeUI", "WeaponUI", "FetterItem", "FetterSnakeItem", "FetterUI", "PopupFetterInfo", "PopupSnakeInfo", "SnakeItem", "SnakeShowUI", "SnakeSkillEvent", "StageItem", "StageUI", "SelectLightRing", "TurretLvItem", "TurretProgressBgItem", "TurretProgressItem", "NetData", "NetManager", "Hawkeye", "AndroidPlatform", "IosPlatform", "PlatformBase", "PlatformManager", "WXPlatform", "GameFunc", "RotateForever", "Tools"]);