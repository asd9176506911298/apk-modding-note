---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zckk.
--- DateTime: 2021/5/31 14:44
---
------------任务VM------------
require("LocalData/HideLocalData")
require("LocalData/TeamdexLocalData")
require("LocalData/SkillLocalData")
require("LocalData/TxtLocalData")
require("LocalData/MonsterLocalData")
require("LocalData/CgdexLocalData")
require("LocalData/MusicdexLocalData")
require("LocalData/AnimationdexLocalData")
require("LocalData/MonsterdexLocalData")
---待优化及业务逻辑整合
IllustrationViewModel = {}
---@type RoleData[] 所有角色
IllustrationViewModel.AllHeroCacheData = {}
---@type RoleData[] 已有角色
IllustrationViewModel.HasHeroCacheData = {}
---@type HideLocalData[] 所有勋章
IllustrationViewModel.AllMedalCacheData = {}
---@type StormScrollData[] 卷数据
IllustrationViewModel.StormScrollData = {}
---@type StormPointData[] 关卡数据
IllustrationViewModel.StormPointData = {}
---@type StormScrollData 当前选择卷
IllustrationViewModel.CurScrollData = nil
---@type StormPointData[] 当前选择卷关卡数据
IllustrationViewModel.CurPointDataList = nil
---所有音乐
IllustrationViewModel.MusicData = {}
---所有插画
IllustrationViewModel.IllustrationData = {}
---所有动画
IllustrationViewModel.AnimationData = {}
--- 所有核心技能
IllustrationViewModel.CoreSkillCacheData = {}
--- 所有额外伤害技能
IllustrationViewModel.AdditionalSkillCacheData = {}
--- 所有增益技能
IllustrationViewModel.GrinSkillCacheData = {}
--- 所有减益技能
IllustrationViewModel.DebuffSkillCacheData = {}
--- 所有技能
IllustrationViewModel.AllSkillCacheData = {}
---所有怪物
IllustrationViewModel.AllMonstersCacheData = {}
--- 已领取奖励的图鉴ID
IllustrationViewModel.RewardList = {}
--- 筛选类型
IllustrationViewModel.FilterList = {}

IllustrationViewModel.CurTouchID = 1

IllustrationViewModel.curPlotType = nil
IllustrationViewModel.plotType = {
    Main = 1,
    Plot = 2,
}
---------------------初始化-----------------------
function IllustrationViewModel.Init(callback)
    IllustrationViewModel.ReloadCacheData()
    IllustrationViewModel.OpenUI(callback)
end

function IllustrationViewModel.Close()
    MgrUI.GoBack()
end
---获取缓存
function IllustrationViewModel.ReloadCacheData()
    IllustrationViewModel.GetManual()
    IllustrationViewModel.AllMedalCacheData = ItemControl.GetHideDataList()
    IllustrationViewModel.FilterList = IllustrationViewModel.GetFilterList()
    IllustrationViewModel.StormScrollData = IllustrationViewModel.NoviceStormScrollData()
    IllustrationViewModel.StormPointData = StormControl.GetStormPointData()
    IllustrationViewModel.AllHeroCacheData = HeroControl.GetAllHero()
    IllustrationViewModel.HasHeroCacheData = HeroControl.GetHaveHero()
    IllustrationViewModel.AllSkillCacheData = IllustrationViewModel.GetAllSkill()
    IllustrationViewModel.CoreSkillCacheData = IllustrationViewModel.GetAllCoreSkill()
    IllustrationViewModel.AdditionalSkillCacheData = IllustrationViewModel.GetAllTypeSkill(3)
    IllustrationViewModel.GrinSkillCacheData = IllustrationViewModel.GetAllTypeSkill(1)
    IllustrationViewModel.DebuffSkillCacheData = IllustrationViewModel.GetAllTypeSkill(2)
    IllustrationViewModel.AllMonstersCacheData = IllustrationViewModel.GetAllMonster()
    IllustrationViewModel.MusicData = IllustrationViewModel.GetAllMusicData()
    IllustrationViewModel.IllustrationData = IllustrationViewModel.GetAllIllustrationData()
    IllustrationViewModel.AnimationData = IllustrationViewModel.GetAllAnimationData()
end

function IllustrationViewModel.GetAllMonster()
    local tab = {}
    for i,v in ipairs(MonsterdexLocalData.tab) do
        tab[i] = v
    end
    return tab
end

function IllustrationViewModel.GetAllMusicData()
    local tab = {}
    for i,v in ipairs(MusicdexLocalData.tab) do
        tab[i] = v
    end
    return tab
end

function IllustrationViewModel.GetAllIllustrationData()
    local tab = {}
    for i,v in ipairs(CgdexLocalData.tab) do
        tab[i] = v
    end
    return tab
end

function IllustrationViewModel.GetAllAnimationData()
    local tab = {}
    for i,v in ipairs(AnimationdexLocalData.tab) do
        tab[i] = v
    end
    return tab
end

function IllustrationViewModel.NoviceStormScrollData()
    local array =
    {
        ---新手指导
        [1] =  StormControl.GetStormScrollData(999)[1]
    }
    for id, data in pairs(StormControl.GetStormScrollData(0)) do
        array[data.index+1] = data
    end
    return array
end

function IllustrationViewModel.GetHasMedalCount()
    return ItemControl.GetHasMedalNum()
end

---根据类型获取对应卷数据
function IllustrationViewModel.GetStormScrollData(uiType)
    if uiType == 1 then
        return IllustrationViewModel.StormScrollData
    elseif uiType == 2 then
        return IllustrationViewModel.StormPointData
    else
        return {}
    end
end
---@return StormPointData[] 根据当前卷获取对应关卡数据
function IllustrationViewModel.GetStormPointData()
    if not IllustrationViewModel.CurScrollData then
        Log.Error("当前卷为空,请检查卷数据")
    end
    IllustrationViewModel.CurPointDataList = {}
    ---如果是新手卷
    if IllustrationViewModel.CurScrollData.type == 999 then
        IllustrationViewModel.CurPointDataList = IllustrationViewModel.GetNovicePointData()
    end
    for i, v in pairs(IllustrationViewModel.CurScrollData.points) do
        if IllustrationViewModel.CurScrollData.type == 999 then
            --table.insert(IllustrationViewModel.CurPointDataList,StormPointData.New(v))
            --IllustrationViewModel.CurPointDataList = IllustrationViewModel.CurScrollData.points
        else
            if IllustrationViewModel.StormPointData[v].plot_f ~= "0" or IllustrationViewModel.StormPointData[v].plot_l ~= "0" then
                table.insert(IllustrationViewModel.CurPointDataList,IllustrationViewModel.StormPointData[v])
            end
        end
    end
end
---获取下一卷数据
function IllustrationViewModel.GetNextStormData(isLeft)
    local data = nil
    if isLeft then
        data =  IllustrationViewModel.GetStormDataByScrollId(IllustrationViewModel.CurScrollData.index-1)
    else
        data =  IllustrationViewModel.GetStormDataByScrollId(IllustrationViewModel.CurScrollData.index+1)
    end
    return data
end
---通过卷序获取卷数据
function IllustrationViewModel.GetStormDataByScrollId(scrollId)
    local stormdata = nil
    ---活动剧情
    if IllustrationViewModel.CurScrollData.raidType == 100 then
        for i, v in pairs(SummerMapControl.GetPlotData()) do
            if v.index == scrollId and v.raidType == IllustrationViewModel.CurScrollData.raidType then
                stormdata = v
                break
            end
        end
    else
        ---普通剧情
        for i, v in pairs(IllustrationViewModel.StormScrollData) do
            if v.index == scrollId and v.type ~= 999 then
                stormdata = v
                break
            end
        end
    end


    return stormdata
end
---获取当前卷关卡数据
function IllustrationViewModel.GetCurPointDataList()
    return  IllustrationViewModel.CurPointDataList
end

---获取阵营
function IllustrationViewModel.GetCamp()
    local array = {}
    for i, v in pairs(TeamdexLocalData.tab) do
        if v[8]~= nil and v[8]~= "0" then
            table.insert(array,v)
        end
    end
    return array
end

function IllustrationViewModel.CheckRot()
    RedDotControl.GetDotData("TeamDex"):SetState(false)
    if not SysLockControl.CheckSysLock(2003) then
        return
    end
    for i, v in pairs(TeamdexLocalData.tab) do
        if not IllustrationViewModel.CheckReward(v[1]) then
            local count = 0
            local heroidlist = JNStrTool.strSplit(",",v[4])
            ---当阵营人数小于3时,状态为不开放
            if #heroidlist >= 3 then
                for m, n in pairs(heroidlist) do
                    if n ~= "10004" then
                        if HeroControl.GetRoleDataByID(tonumber(n)).lockState then
                            count = count + 1
                        end
                    end
                end
                if count == v[6] and v[11] == 1 then
                    RedDotControl.GetDotData("TeamDex"):SetState(true)
                    break
                end
            end
        end
    end
end

---通过id获取勋章
function IllustrationViewModel.GetMedalById(ID)
    for i, v in pairs(IllustrationViewModel.AllMedalCacheData) do
        if v.id == ID then
            return v
        end
    end
end

---获取核心技能
function IllustrationViewModel.GetAllCoreSkill()
    local array = {}
    for i, v in pairs(SkillLocalData.tab) do
        if v[36] == 4 then
            table.insert(array,v)
        end
    end
    table.sort(array, function (a,b)
        if a ~= b then
            return a[1]< b[1]
        end
        return false
    end)
    return array
end
---通过类型获取技能
function IllustrationViewModel.GetAllTypeSkill(type)
    local array = {}
    local t = {}
    for i, v in pairs(IllustrationViewModel.AllSkillCacheData) do
        if v[10] == type  then
            if array[v[37]] then
                if not array[v[37]].HaveRole[v[40]] then
                    array[v[37]].HaveRole[v[40]] = v[40]
                end
            else
                array[v[37]] = v
                if not array[v[37]].HaveRole then
                    array[v[37]].HaveRole = {}
                end
                array[v[37]].HaveRole[v[40]] = v[40]
            end
        end
    end
    for i, v in pairs(array) do
            table.insert(t,v)
    end
    return t
end
---筛选获取核心技能
function IllustrationViewModel.GetCoreSkill(filter)
    local array = {}
    if filter == -1 then
        array = IllustrationViewModel.CoreSkillCacheData
    else
        for i, v in pairs(IllustrationViewModel.CoreSkillCacheData) do
            if v[11] == filter then
                table.insert(array,v)
            end
        end
    end
    return array
end
---筛选获取角色技能
function IllustrationViewModel.GetRoleSkill(filter,type)
    local array = {}
    local t = {}
    if type == 3 then
        t = IllustrationViewModel.AdditionalSkillCacheData
    elseif type == 2 then
        t = IllustrationViewModel.DebuffSkillCacheData
    elseif type == 1 then
        t = IllustrationViewModel.GrinSkillCacheData
    end
    if filter == -1 then
        array = t
    else
        for i, v in pairs(t) do
            --if v[40] == 1004 then
                --return
            --end
            if v[11] == filter then
                table.insert(array,v)
            end
        end
    end
    table.sort(array, function (a,b)
        if a ~= b then
                return a[37] < b[37]
        end
        return false
    end)
    return array
end
---获取技能
function IllustrationViewModel.GetAllSkill()
    local array = {}
    local t = {}
    for i, v in pairs(SkillLocalData.tab) do
        if v[36] and v[36] ~= 4 and v[36] ~=0 and v[40] ~= 10004 then   --暂不显示10004角色的技能
            table.insert(array,v)
        end
    end
    t = IllustrationViewModel.clone(array)
    return t
end

function IllustrationViewModel.clone(org)
    local function copy(org, res)
        for k,v in pairs(org) do
            if type(v) ~= "table" then
                res[k] = v;
            else
                res[k] = {};
                copy(v, res[k])
            end
        end
    end

    local res = {}
    copy(org, res)
    return res
end

function IllustrationViewModel.ReceiveGetManualACK(buffer, tag)
    local tab = assert(pb.decode('PBClient.ClientGetManualACK',buffer))
    print(tab.errNo)
end

function IllustrationViewModel.ReceiveGetManualNTF(buffer, tag)
    local tab = assert(pb.decode('PBClient.ClientGetManualNTF',buffer))
    if tab.manualID then
        for i, v in pairs(tab.manualID) do
            IllustrationViewModel.RewardList[v] = v
        end
    end
    ---图鉴红点监听
    IllustrationViewModel.CheckRot()
end

function IllustrationViewModel.GetManual()
    local GetManualREQ =
    {
        rev = "1"
    }
    ---序列化
    local bytes = assert(pb.encode('PBClient.ClientGetManualREQ',GetManualREQ))
    ---发送数据
    MgrNet.SendReq(MID.CLIENT_GET_MANUAL_REQ,bytes,0,nil,IllustrationViewModel.ReceiveGetManualACK,IllustrationViewModel.ReceiveGetManualNTF)
end

---检查图鉴id是否领取奖励
function IllustrationViewModel.CheckReward(id)
    if IllustrationViewModel.RewardList then
        if IllustrationViewModel.RewardList[id] then
            return true
        else
            return false
        end
    else
        return false
    end
end

--获取小队奖励:参数(阵营分组)
function IllustrationViewModel.GetCampReward(type)
    local array = {}
    local t = {}
    for i, v in ipairs(TeamdexLocalData.tab) do
        if v[2] == type then    --找到对应小组
            if v[11] == 1 then
                if not IllustrationViewModel.CheckReward(v[1]) then
                    table.insert(array,v)   --未获取奖励
                end
                table.insert(t,v)   --所有奖励
            end
        end
    end
    return array,t  --返回
end

function IllustrationViewModel.GetFilterList()
    local array =
    {
        [1] = "-1_全部"
    }
    for i, v in pairs(TxtLocalData.tab[180000]) do
        if i ~= 1 and i ~= 2 and i ~= 3 then
            if v~="0" and v~=0 then
                table.insert(array,v)
            end
        end
    end
    return array
end

---------------------UI跳转------------------------
function IllustrationViewModel.OpenUI(callback)
    --播放usm
    MgrUI.Pop(UID.UsmPlay,{"TujianVedio",function()
        MgrUI.GoHide(UID.Illustration_UI)
        if callback then
            callback()
        end
    end })
end

---UI跳转加过场动画
function IllustrationViewModel:PlayCriMovieBeforeOpenNewPanel(func,uid,panel,callback)
    if panel then
        panel:SetActive(true)
        --播放视频
        local criUI = panel.transform:GetComponent("CriManaMovieControllerForUI")   --加载movie组件
        criUI.player:SetFile(nil,MgrRes.GetABPath("USM/Common/Common/TujianVedio.usm"))               --给组件的player设置usm视频文件
        criUI.player.statusChangeCallback = function(state)
            if tostring(state) == "PlayEnd: 6" then    --播放完
                --UnityEngine.Debug.LogError("PlayEnd")
                func(uid, function ()
                    if callback then
                        callback()
                    end
                end)
                MgrSound.PlayBGM(SteamLocalData.tab[113023][2],0.2)
                --NormalCardDrawViewModel.OpenCardDrawResultUI()
                criUI.player.statusChangeCallback = nil     --置空
                panel:SetActive(false)
            end
            --func(uid)
        end
        criUI:Play()            --播放视频
        MgrSound.PlayEffect("yx_ui_tujiantiaozhuan_01",1,nil,false)
    else
        func(uid, function ()
            if callback then
                callback()
            end
        end)
    end
end

---打开剧情回放
function IllustrationViewModel.OpenPlotReplayUI()
    MgrUI.GoHide(UID.PlotReplay_UI)
end

---获取新手引导剧情
function IllustrationViewModel.GetNovicePointData()
    local arr = {}
    for k,v in pairs(SteamLocalData.tab) do
        local data = string.split(v[2],",")
        if data[1] == "NovicePlot" then
            v.id = v[1]
            table.insert(arr,v)
        end
    end
    local group = {"id"}
    Global.Sort(arr,group)
    return arr
end

function IllustrationViewModel.OpenRoleXiangqing(id,ids)
    IllustrationViewModel.AllHeroCacheData = HeroControl.GetAllHero()
    local role
    local roles = {}
    for i,v in pairs(IllustrationViewModel.AllHeroCacheData) do
        if v.id == id then
            role = v
        end
    end
    if ids then
        for i = 1, #ids do
            for j,v in pairs(IllustrationViewModel.AllHeroCacheData) do
                if v.id == ids[i] then
                    table.insert(roles,v)
                end
            end
        end
    end
    local role2 = clone(role)
    local roles2 = clone(roles)
    MgrUI.Pop(UID.RoleXiangqing_UI,{role2,"CardRole",roles2},true)
end

---获取原罪拥有和总数
function IllustrationViewModel.GetOriginalRatio()
    local has = 0
    local all  = 0
    for i, v in pairs(MonsterdexLocalData.tab) do
        all = all + 1
        if v[12] ~= 0 and v[12] then
            if StormControl.CheckPointPass(v[12]) then --修改为判断当前管卡是否完成
                has = has + 1
            end
        end
    end
    return has,all
end

---获取勋章拥有和总数
function IllustrationViewModel.GetMetalRatio()
    local all = #ItemControl.GetHideDataList()
    local has = ItemControl.GetHasMedalNum()
    return has,all
end

---获取成就拥有和总数
function IllustrationViewModel.GetAchievementRatio()
    TaskControl.GetAchievementData(0) --获取所有成就任务
    local max = TaskControl.maxAchievement
    local curValue = TaskControl.completeAchievement
    return curValue,max
end



function IllustrationViewModel.Clear()
    IllustrationViewModel.AllHeroCacheData = {}
    IllustrationViewModel.HasHeroCacheData = {}
    IllustrationViewModel.AllMedalCacheData = {}
    IllustrationViewModel.StormScrollData = {}
    IllustrationViewModel.StormPointData = {}
    IllustrationViewModel.CurScrollData = nil
    IllustrationViewModel.CurPointDataList = nil
    IllustrationViewModel.MusicData = {}
    IllustrationViewModel.IllustrationData = {}
    IllustrationViewModel.AnimationData = {}
    IllustrationViewModel.CoreSkillCacheData = {}
    IllustrationViewModel.AdditionalSkillCacheData = {}
    IllustrationViewModel.GrinSkillCacheData = {}
    IllustrationViewModel.DebuffSkillCacheData = {}
    IllustrationViewModel.AllSkillCacheData = {}
    IllustrationViewModel.AllMonstersCacheData = {}
    IllustrationViewModel.RewardList = {}
    IllustrationViewModel.FilterList = {}
    IllustrationViewModel.CurTouchID = 1
    IllustrationViewModel.curPlotType = nil
end

return IllustrationViewModel